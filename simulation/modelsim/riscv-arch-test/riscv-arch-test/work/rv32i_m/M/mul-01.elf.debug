
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/M/mul-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed63a9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f768452>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6ecb>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd5cd1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00005317          	auipc	t1,0x5
9000002c:	fd830313          	addi	t1,t1,-40 # 90005000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb5bf6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfdda9d>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfe92ba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff75ff>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f606b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bf82b3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adf93d7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656f9c69>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7a0b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfcfb>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eada3e9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56a472>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7edb>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d564d9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4bea84ea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56f17>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa5cf7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d00f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe52fa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df561f>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f507b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db77abb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edb8fdb>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676d9a6b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb69fb3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*M.*);def TEST_CASE_1=True;",mul)

RVTEST_SIGBASE( x4,signature_x4_1)
900000f8:	00005217          	auipc	tp,0x5
900000fc:	f1820213          	addi	tp,tp,-232 # 90005010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rs1 == rd != rs2, rs1==x31, rs2==x5, rd==x31, rs1_val > 0 and rs2_val > 0, rs2_val == 65536, rs1_val != rs2_val
// opcode: mul ; op1:x31; op2:x5; dest:x31; op1val:0x9;  op2val:0x10000
TEST_RR_OP(mul, x31, x31, x5, 0x90000, 0x9, 0x10000, x4, 0, x18)
90000100:	00900f93          	li	t6,9
90000104:	000102b7          	lui	t0,0x10
90000108:	025f8fb3          	mul	t6,t6,t0
9000010c:	01f22023          	sw	t6,0(tp) # 0 <offset-0xe0>

90000110 <inst_1>:

inst_1:
// rs1 == rs2 != rd, rs1==x21, rs2==x21, rd==x8, rs1_val > 0 and rs2_val < 0, rs1_val == 32, rs2_val == -16385
// opcode: mul ; op1:x21; op2:x21; dest:x8; op1val:0x20;  op2val:0x20
TEST_RR_OP(mul, x8, x21, x21, 0x400, 0x20, 0x20, x4, 4, x18)
90000110:	02000a93          	li	s5,32
90000114:	02000a93          	li	s5,32
90000118:	035a8433          	mul	s0,s5,s5
9000011c:	00822223          	sw	s0,4(tp) # 4 <offset-0xdc>

90000120 <inst_2>:

inst_2:
// rs2 == rd != rs1, rs1==x11, rs2==x23, rd==x23, rs1_val < 0 and rs2_val < 0, rs2_val == -134217729
// opcode: mul ; op1:x11; op2:x23; dest:x23; op1val:-0x55555555;  op2val:-0x8000001
TEST_RR_OP(mul, x23, x11, x23, 0xfd555555, -0x55555555, -0x8000001, x4, 8, x18)
90000120:	aaaab5b7          	lui	a1,0xaaaab
90000124:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90000128:	f8000bb7          	lui	s7,0xf8000
9000012c:	fffb8b93          	addi	s7,s7,-1 # f7ffffff <_end+0x67ffa4fb>
90000130:	03758bb3          	mul	s7,a1,s7
90000134:	01722423          	sw	s7,8(tp) # 8 <offset-0xd8>

90000138 <inst_3>:

inst_3:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x14, rs2==x20, rd==x7, rs1_val < 0 and rs2_val > 0, rs1_val == -513
// opcode: mul ; op1:x14; op2:x20; dest:x7; op1val:-0x201;  op2val:0x3
TEST_RR_OP(mul, x7, x14, x20, 0xfffff9fd, -0x201, 0x3, x4, 12, x18)
90000138:	dff00713          	li	a4,-513
9000013c:	00300a13          	li	s4,3
90000140:	034703b3          	mul	t2,a4,s4
90000144:	00722623          	sw	t2,12(tp) # c <offset-0xd4>

90000148 <inst_4>:

inst_4:
// rs1 == rs2 == rd, rs1==x15, rs2==x15, rd==x15, rs1_val == rs2_val, 
// opcode: mul ; op1:x15; op2:x15; dest:x15; op1val:-0x1;  op2val:-0x1
TEST_RR_OP(mul, x15, x15, x15, 0x1, -0x1, -0x1, x4, 16, x18)
90000148:	fff00793          	li	a5,-1
9000014c:	fff00793          	li	a5,-1
90000150:	02f787b3          	mul	a5,a5,a5
90000154:	00f22823          	sw	a5,16(tp) # 10 <offset-0xd0>

90000158 <inst_5>:

inst_5:
// rs1==x25, rs2==x29, rd==x16, rs2_val == (-2**(xlen-1)), rs1_val == -262145, rs2_val == -2147483648
// opcode: mul ; op1:x25; op2:x29; dest:x16; op1val:-0x40001;  op2val:-0x80000000
TEST_RR_OP(mul, x16, x25, x29, 0x80000000, -0x40001, -0x80000000, x4, 20, x18)
90000158:	fffc0cb7          	lui	s9,0xfffc0
9000015c:	fffc8c93          	addi	s9,s9,-1 # fffbffff <_end+0x6ffba4fb>
90000160:	80000eb7          	lui	t4,0x80000
90000164:	03dc8833          	mul	a6,s9,t4
90000168:	01022a23          	sw	a6,20(tp) # 14 <offset-0xcc>

9000016c <inst_6>:

inst_6:
// rs1==x29, rs2==x25, rd==x3, rs2_val == 0, rs1_val==1717986917 and rs2_val==0
// opcode: mul ; op1:x29; op2:x25; dest:x3; op1val:0x66666665;  op2val:0x0
TEST_RR_OP(mul, x3, x29, x25, 0x0, 0x66666665, 0x0, x4, 24, x18)
9000016c:	66666eb7          	lui	t4,0x66666
90000170:	665e8e93          	addi	t4,t4,1637 # 66666665 <offset+0x66666585>
90000174:	00000c93          	li	s9,0
90000178:	039e81b3          	mul	gp,t4,s9
9000017c:	00322c23          	sw	gp,24(tp) # 18 <offset-0xc8>

90000180 <inst_7>:

inst_7:
// rs1==x23, rs2==x28, rd==x17, rs2_val == (2**(xlen-1)-1), rs2_val == 2147483647
// opcode: mul ; op1:x23; op2:x28; dest:x17; op1val:0xb504;  op2val:0x7fffffff
TEST_RR_OP(mul, x17, x23, x28, 0xffff4afc, 0xb504, 0x7fffffff, x4, 28, x18)
90000180:	0000bbb7          	lui	s7,0xb
90000184:	504b8b93          	addi	s7,s7,1284 # b504 <offset+0xb424>
90000188:	80000e37          	lui	t3,0x80000
9000018c:	fffe0e13          	addi	t3,t3,-1 # 7fffffff <_end+0xefffa4fb>
90000190:	03cb88b3          	mul	a7,s7,t3
90000194:	01122e23          	sw	a7,28(tp) # 1c <offset-0xc4>

90000198 <inst_8>:

inst_8:
// rs1==x2, rs2==x19, rd==x22, rs2_val == 1, rs1_val == 2
// opcode: mul ; op1:x2; op2:x19; dest:x22; op1val:0x2;  op2val:0x1
TEST_RR_OP(mul, x22, x2, x19, 0x2, 0x2, 0x1, x4, 32, x18)
90000198:	00200113          	li	sp,2
9000019c:	00100993          	li	s3,1
900001a0:	03310b33          	mul	s6,sp,s3
900001a4:	03622023          	sw	s6,32(tp) # 20 <offset-0xc0>

900001a8 <inst_9>:

inst_9:
// rs1==x20, rs2==x22, rd==x28, rs1_val == (-2**(xlen-1)), rs2_val == -65, rs1_val == -2147483648
// opcode: mul ; op1:x20; op2:x22; dest:x28; op1val:-0x80000000;  op2val:-0x41
TEST_RR_OP(mul, x28, x20, x22, 0x80000000, -0x80000000, -0x41, x4, 36, x18)
900001a8:	80000a37          	lui	s4,0x80000
900001ac:	fbf00b13          	li	s6,-65
900001b0:	036a0e33          	mul	t3,s4,s6
900001b4:	03c22223          	sw	t3,36(tp) # 24 <offset-0xbc>

900001b8 <inst_10>:

inst_10:
// rs1==x3, rs2==x6, rd==x2, rs1_val == 0, rs1_val==0 and rs2_val==0
// opcode: mul ; op1:x3; op2:x6; dest:x2; op1val:0x0;  op2val:0x0
TEST_RR_OP(mul, x2, x3, x6, 0x0, 0x0, 0x0, x4, 40, x18)
900001b8:	00000193          	li	gp,0
900001bc:	00000313          	li	t1,0
900001c0:	02618133          	mul	sp,gp,t1
900001c4:	02222423          	sw	sp,40(tp) # 28 <offset-0xb8>

900001c8 <inst_11>:

inst_11:
// rs1==x22, rs2==x11, rd==x5, rs1_val == (2**(xlen-1)-1), rs2_val == -129, rs1_val == 2147483647
// opcode: mul ; op1:x22; op2:x11; dest:x5; op1val:0x7fffffff;  op2val:-0x81
TEST_RR_OP(mul, x5, x22, x11, 0x80000081, 0x7fffffff, -0x81, x4, 44, x18)
900001c8:	80000b37          	lui	s6,0x80000
900001cc:	fffb0b13          	addi	s6,s6,-1 # 7fffffff <_end+0xefffa4fb>
900001d0:	f7f00593          	li	a1,-129
900001d4:	02bb02b3          	mul	t0,s6,a1
900001d8:	02522623          	sw	t0,44(tp) # 2c <offset-0xb4>

900001dc <inst_12>:

inst_12:
// rs1==x7, rs2==x9, rd==x13, rs1_val == 1, rs2_val == -268435457
// opcode: mul ; op1:x7; op2:x9; dest:x13; op1val:0x1;  op2val:-0x10000001
TEST_RR_OP(mul, x13, x7, x9, 0xefffffff, 0x1, -0x10000001, x4, 48, x18)
900001dc:	00100393          	li	t2,1
900001e0:	f00004b7          	lui	s1,0xf0000
900001e4:	fff48493          	addi	s1,s1,-1 # efffffff <_end+0x5fffa4fb>
900001e8:	029386b3          	mul	a3,t2,s1
900001ec:	02d22823          	sw	a3,48(tp) # 30 <offset-0xb0>

900001f0 <inst_13>:

inst_13:
// rs1==x10, rs2==x17, rd==x6, rs2_val == 2, rs1_val == 128
// opcode: mul ; op1:x10; op2:x17; dest:x6; op1val:0x80;  op2val:0x2
TEST_RR_OP(mul, x6, x10, x17, 0x100, 0x80, 0x2, x4, 52, x18)
900001f0:	08000513          	li	a0,128
900001f4:	00200893          	li	a7,2
900001f8:	03150333          	mul	t1,a0,a7
900001fc:	02622a23          	sw	t1,52(tp) # 34 <offset-0xac>

90000200 <inst_14>:

inst_14:
// rs1==x1, rs2==x2, rd==x30, rs2_val == 4, rs1_val==-46339 and rs2_val==4
// opcode: mul ; op1:x1; op2:x2; dest:x30; op1val:-0xb503;  op2val:0x4
TEST_RR_OP(mul, x30, x1, x2, 0xfffd2bf4, -0xb503, 0x4, x4, 56, x18)
90000200:	ffff50b7          	lui	ra,0xffff5
90000204:	afd08093          	addi	ra,ra,-1283 # ffff4afd <_end+0x6ffeeff9>
90000208:	00400113          	li	sp,4
9000020c:	02208f33          	mul	t5,ra,sp
90000210:	03e22c23          	sw	t5,56(tp) # 38 <offset-0xa8>

90000214 <inst_15>:

inst_15:
// rs1==x13, rs2==x1, rd==x25, rs2_val == 8, rs1_val == -536870913
// opcode: mul ; op1:x13; op2:x1; dest:x25; op1val:-0x20000001;  op2val:0x8
TEST_RR_OP(mul, x25, x13, x1, 0xfffffff8, -0x20000001, 0x8, x4, 60, x18)
90000214:	e00006b7          	lui	a3,0xe0000
90000218:	fff68693          	addi	a3,a3,-1 # dfffffff <_end+0x4fffa4fb>
9000021c:	00800093          	li	ra,8
90000220:	02168cb3          	mul	s9,a3,ra
90000224:	03922e23          	sw	s9,60(tp) # 3c <offset-0xa4>

90000228 <inst_16>:

inst_16:
// rs1==x16, rs2==x12, rd==x29, rs2_val == 16, rs1_val == -2049
// opcode: mul ; op1:x16; op2:x12; dest:x29; op1val:-0x801;  op2val:0x10
TEST_RR_OP(mul, x29, x16, x12, 0xffff7ff0, -0x801, 0x10, x4, 64, x18)
90000228:	fffff837          	lui	a6,0xfffff
9000022c:	7ff80813          	addi	a6,a6,2047 # fffff7ff <_end+0x6fff9cfb>
90000230:	01000613          	li	a2,16
90000234:	02c80eb3          	mul	t4,a6,a2
90000238:	05d22023          	sw	t4,64(tp) # 40 <offset-0xa0>

9000023c <inst_17>:

inst_17:
// rs1==x27, rs2==x24, rd==x21, rs2_val == 32, rs1_val == 16384
// opcode: mul ; op1:x27; op2:x24; dest:x21; op1val:0x4000;  op2val:0x20
TEST_RR_OP(mul, x21, x27, x24, 0x80000, 0x4000, 0x20, x4, 68, x18)
9000023c:	00004db7          	lui	s11,0x4
90000240:	02000c13          	li	s8,32
90000244:	038d8ab3          	mul	s5,s11,s8
90000248:	05522223          	sw	s5,68(tp) # 44 <offset-0x9c>
RVTEST_SIGBASE( x2,signature_x2_0)
9000024c:	00005117          	auipc	sp,0x5
90000250:	e0c10113          	addi	sp,sp,-500 # 90005058 <signature_x2_0>

90000254 <inst_18>:

inst_18:
// rs1==x19, rs2==x10, rd==x14, rs2_val == 64, 
// opcode: mul ; op1:x19; op2:x10; dest:x14; op1val:0xb504;  op2val:0x40
TEST_RR_OP(mul, x14, x19, x10, 0x2d4100, 0xb504, 0x40, x2, 0, x15)
90000254:	0000b9b7          	lui	s3,0xb
90000258:	50498993          	addi	s3,s3,1284 # b504 <offset+0xb424>
9000025c:	04000513          	li	a0,64
90000260:	02a98733          	mul	a4,s3,a0
90000264:	00e12023          	sw	a4,0(sp)

90000268 <inst_19>:

inst_19:
// rs1==x6, rs2==x14, rd==x26, rs2_val == 128, rs1_val == -5
// opcode: mul ; op1:x6; op2:x14; dest:x26; op1val:-0x5;  op2val:0x80
TEST_RR_OP(mul, x26, x6, x14, 0xfffffd80, -0x5, 0x80, x2, 4, x15)
90000268:	ffb00313          	li	t1,-5
9000026c:	08000713          	li	a4,128
90000270:	02e30d33          	mul	s10,t1,a4
90000274:	01a12223          	sw	s10,4(sp)

90000278 <inst_20>:

inst_20:
// rs1==x8, rs2==x18, rd==x12, rs2_val == 256, 
// opcode: mul ; op1:x8; op2:x18; dest:x12; op1val:0x5;  op2val:0x100
TEST_RR_OP(mul, x12, x8, x18, 0x500, 0x5, 0x100, x2, 8, x15)
90000278:	00500413          	li	s0,5
9000027c:	10000913          	li	s2,256
90000280:	03240633          	mul	a2,s0,s2
90000284:	00c12423          	sw	a2,8(sp)

90000288 <inst_21>:

inst_21:
// rs1==x30, rs2==x4, rd==x9, rs2_val == 512, rs1_val == -67108865
// opcode: mul ; op1:x30; op2:x4; dest:x9; op1val:-0x4000001;  op2val:0x200
TEST_RR_OP(mul, x9, x30, x4, 0xfffffe00, -0x4000001, 0x200, x2, 12, x15)
90000288:	fc000f37          	lui	t5,0xfc000
9000028c:	ffff0f13          	addi	t5,t5,-1 # fbffffff <_end+0x6bffa4fb>
90000290:	20000213          	li	tp,512
90000294:	024f04b3          	mul	s1,t5,tp
90000298:	00912623          	sw	s1,12(sp)

9000029c <inst_22>:

inst_22:
// rs1==x5, rs2==x26, rd==x19, rs2_val == 1024, rs1_val == 8388608
// opcode: mul ; op1:x5; op2:x26; dest:x19; op1val:0x800000;  op2val:0x400
TEST_RR_OP(mul, x19, x5, x26, 0x0, 0x800000, 0x400, x2, 16, x15)
9000029c:	008002b7          	lui	t0,0x800
900002a0:	40000d13          	li	s10,1024
900002a4:	03a289b3          	mul	s3,t0,s10
900002a8:	01312823          	sw	s3,16(sp)

900002ac <inst_23>:

inst_23:
// rs1==x12, rs2==x13, rd==x18, rs2_val == 2048, rs1_val == -17
// opcode: mul ; op1:x12; op2:x13; dest:x18; op1val:-0x11;  op2val:0x800
TEST_RR_OP(mul, x18, x12, x13, 0xffff7800, -0x11, 0x800, x2, 20, x15)
900002ac:	fef00613          	li	a2,-17
900002b0:	000016b7          	lui	a3,0x1
900002b4:	80068693          	addi	a3,a3,-2048 # 800 <offset+0x720>
900002b8:	02d60933          	mul	s2,a2,a3
900002bc:	01212a23          	sw	s2,20(sp)

900002c0 <inst_24>:

inst_24:
// rs1==x18, rs2==x31, rd==x24, rs2_val == 4096, 
// opcode: mul ; op1:x18; op2:x31; dest:x24; op1val:0x33333332;  op2val:0x1000
TEST_RR_OP(mul, x24, x18, x31, 0x33332000, 0x33333332, 0x1000, x2, 24, x15)
900002c0:	33333937          	lui	s2,0x33333
900002c4:	33290913          	addi	s2,s2,818 # 33333332 <offset+0x33333252>
900002c8:	00001fb7          	lui	t6,0x1
900002cc:	03f90c33          	mul	s8,s2,t6
900002d0:	01812c23          	sw	s8,24(sp)

900002d4 <inst_25>:

inst_25:
// rs1==x9, rs2==x27, rd==x0, rs2_val == 8192, 
// opcode: mul ; op1:x9; op2:x27; dest:x0; op1val:0x9;  op2val:0x2000
TEST_RR_OP(mul, x0, x9, x27, 0, 0x9, 0x2000, x2, 28, x15)
900002d4:	00900493          	li	s1,9
900002d8:	00002db7          	lui	s11,0x2
900002dc:	03b48033          	mul	zero,s1,s11
900002e0:	00012e23          	sw	zero,28(sp)

900002e4 <inst_26>:

inst_26:
// rs1==x17, rs2==x8, rd==x11, rs2_val == 16384, rs1_val == -2
// opcode: mul ; op1:x17; op2:x8; dest:x11; op1val:-0x2;  op2val:0x4000
TEST_RR_OP(mul, x11, x17, x8, 0xffff8000, -0x2, 0x4000, x2, 32, x15)
900002e4:	ffe00893          	li	a7,-2
900002e8:	00004437          	lui	s0,0x4
900002ec:	028885b3          	mul	a1,a7,s0
900002f0:	02b12023          	sw	a1,32(sp)

900002f4 <inst_27>:

inst_27:
// rs1==x0, rs2==x16, rd==x10, rs2_val == 32768, 
// opcode: mul ; op1:x0; op2:x16; dest:x10; op1val:0x0;  op2val:0x8000
TEST_RR_OP(mul, x10, x0, x16, 0x0, 0x0, 0x8000, x2, 36, x15)
900002f4:	00000013          	nop
900002f8:	00008837          	lui	a6,0x8
900002fc:	03000533          	mul	a0,zero,a6
90000300:	02a12223          	sw	a0,36(sp)

90000304 <inst_28>:

inst_28:
// rs1==x26, rs2==x30, rd==x1, rs2_val == 131072, rs1_val == -1431655766
// opcode: mul ; op1:x26; op2:x30; dest:x1; op1val:-0x55555556;  op2val:0x20000
TEST_RR_OP(mul, x1, x26, x30, 0x55540000, -0x55555556, 0x20000, x2, 40, x15)
90000304:	aaaabd37          	lui	s10,0xaaaab
90000308:	aaad0d13          	addi	s10,s10,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
9000030c:	00020f37          	lui	t5,0x20
90000310:	03ed00b3          	mul	ra,s10,t5
90000314:	02112423          	sw	ra,40(sp)

90000318 <inst_29>:

inst_29:
// rs1==x4, rs2==x0, rd==x27, rs2_val == 262144, 
// opcode: mul ; op1:x4; op2:x0; dest:x27; op1val:0x33333334;  op2val:0x0
TEST_RR_OP(mul, x27, x4, x0, 0x0, 0x33333334, 0x0, x2, 44, x15)
90000318:	33333237          	lui	tp,0x33333
9000031c:	33420213          	addi	tp,tp,820 # 33333334 <offset+0x33333254>
90000320:	00000013          	nop
90000324:	02020db3          	mul	s11,tp,zero
90000328:	03b12623          	sw	s11,44(sp)

9000032c <inst_30>:

inst_30:
// rs1==x24, rs2==x7, rd==x20, rs2_val == 524288, 
// opcode: mul ; op1:x24; op2:x7; dest:x20; op1val:-0x1;  op2val:0x80000
TEST_RR_OP(mul, x20, x24, x7, 0xfff80000, -0x1, 0x80000, x2, 48, x15)
9000032c:	fff00c13          	li	s8,-1
90000330:	000803b7          	lui	t2,0x80
90000334:	027c0a33          	mul	s4,s8,t2
90000338:	03412823          	sw	s4,48(sp)

9000033c <inst_31>:

inst_31:
// rs1==x28, rs2==x3, rd==x4, rs2_val == 1048576, rs1_val == -4194305
// opcode: mul ; op1:x28; op2:x3; dest:x4; op1val:-0x400001;  op2val:0x100000
TEST_RR_OP(mul, x4, x28, x3, 0xfff00000, -0x400001, 0x100000, x2, 52, x15)
9000033c:	ffc00e37          	lui	t3,0xffc00
90000340:	fffe0e13          	addi	t3,t3,-1 # ffbfffff <_end+0x6fbfa4fb>
90000344:	001001b7          	lui	gp,0x100
90000348:	023e0233          	mul	tp,t3,gp
9000034c:	02412a23          	sw	tp,52(sp)

90000350 <inst_32>:

inst_32:
// rs2_val == 2097152, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x4;  op2val:0x200000
TEST_RR_OP(mul, x12, x10, x11, 0xff800000, -0x4, 0x200000, x2, 56, x15)
90000350:	ffc00513          	li	a0,-4
90000354:	002005b7          	lui	a1,0x200
90000358:	02b50633          	mul	a2,a0,a1
9000035c:	02c12c23          	sw	a2,56(sp)

90000360 <inst_33>:

inst_33:
// rs2_val == 4194304, rs1_val == -2097153
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x200001;  op2val:0x400000
TEST_RR_OP(mul, x12, x10, x11, 0xffc00000, -0x200001, 0x400000, x2, 60, x15)
90000360:	ffe00537          	lui	a0,0xffe00
90000364:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0x6fdfa4fb>
90000368:	004005b7          	lui	a1,0x400
9000036c:	02b50633          	mul	a2,a0,a1
90000370:	02c12e23          	sw	a2,60(sp)

90000374 <inst_34>:

inst_34:
// rs2_val == 8388608, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x800000
TEST_RR_OP(mul, x12, x10, x11, 0x1800000, 0x3, 0x800000, x2, 64, x15)
90000374:	00300513          	li	a0,3
90000378:	008005b7          	lui	a1,0x800
9000037c:	02b50633          	mul	a2,a0,a1
90000380:	04c12023          	sw	a2,64(sp)

90000384 <inst_35>:

inst_35:
// rs2_val == 16777216, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x8;  op2val:0x1000000
TEST_RR_OP(mul, x12, x10, x11, 0xf8000000, -0x8, 0x1000000, x2, 68, x15)
90000384:	ff800513          	li	a0,-8
90000388:	010005b7          	lui	a1,0x1000
9000038c:	02b50633          	mul	a2,a0,a1
90000390:	04c12223          	sw	a2,68(sp)

90000394 <inst_36>:

inst_36:
// rs2_val == 33554432, rs1_val == -9
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x9;  op2val:0x2000000
TEST_RR_OP(mul, x12, x10, x11, 0xee000000, -0x9, 0x2000000, x2, 72, x15)
90000394:	ff700513          	li	a0,-9
90000398:	020005b7          	lui	a1,0x2000
9000039c:	02b50633          	mul	a2,a0,a1
900003a0:	04c12423          	sw	a2,72(sp)

900003a4 <inst_37>:

inst_37:
// rs2_val == 67108864, rs1_val == 1048576
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x100000;  op2val:0x4000000
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x100000, 0x4000000, x2, 76, x15)
900003a4:	00100537          	lui	a0,0x100
900003a8:	040005b7          	lui	a1,0x4000
900003ac:	02b50633          	mul	a2,a0,a1
900003b0:	04c12623          	sw	a2,76(sp)

900003b4 <inst_38>:

inst_38:
// rs2_val == 134217728, rs1_val == -524289
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x80001;  op2val:0x8000000
TEST_RR_OP(mul, x12, x10, x11, 0xf8000000, -0x80001, 0x8000000, x2, 80, x15)
900003b4:	fff80537          	lui	a0,0xfff80
900003b8:	fff50513          	addi	a0,a0,-1 # fff7ffff <_end+0x6ff7a4fb>
900003bc:	080005b7          	lui	a1,0x8000
900003c0:	02b50633          	mul	a2,a0,a1
900003c4:	04c12823          	sw	a2,80(sp)

900003c8 <inst_39>:

inst_39:
// rs2_val == 268435456, rs1_val == -8193
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x2001;  op2val:0x10000000
TEST_RR_OP(mul, x12, x10, x11, 0xf0000000, -0x2001, 0x10000000, x2, 84, x15)
900003c8:	ffffe537          	lui	a0,0xffffe
900003cc:	fff50513          	addi	a0,a0,-1 # ffffdfff <_end+0x6fff84fb>
900003d0:	100005b7          	lui	a1,0x10000
900003d4:	02b50633          	mul	a2,a0,a1
900003d8:	04c12a23          	sw	a2,84(sp)

900003dc <inst_40>:

inst_40:
// rs2_val == 536870912, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x20000000
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x20000000, x2, 88, x15)
900003dc:	00000513          	li	a0,0
900003e0:	200005b7          	lui	a1,0x20000
900003e4:	02b50633          	mul	a2,a0,a1
900003e8:	04c12c23          	sw	a2,88(sp)

900003ec <inst_41>:

inst_41:
// rs2_val == 1073741824, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x800000;  op2val:0x40000000
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x800000, 0x40000000, x2, 92, x15)
900003ec:	00800537          	lui	a0,0x800
900003f0:	400005b7          	lui	a1,0x40000
900003f4:	02b50633          	mul	a2,a0,a1
900003f8:	04c12e23          	sw	a2,92(sp)

900003fc <inst_42>:

inst_42:
// rs2_val == -2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x20;  op2val:-0x2
TEST_RR_OP(mul, x12, x10, x11, 0xffffffc0, 0x20, -0x2, x2, 96, x15)
900003fc:	02000513          	li	a0,32
90000400:	ffe00593          	li	a1,-2
90000404:	02b50633          	mul	a2,a0,a1
90000408:	06c12023          	sw	a2,96(sp)

9000040c <inst_43>:

inst_43:
// rs2_val == -3, rs1_val == 256
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x100;  op2val:-0x3
TEST_RR_OP(mul, x12, x10, x11, 0xfffffd00, 0x100, -0x3, x2, 100, x15)
9000040c:	10000513          	li	a0,256
90000410:	ffd00593          	li	a1,-3
90000414:	02b50633          	mul	a2,a0,a1
90000418:	06c12223          	sw	a2,100(sp)

9000041c <inst_44>:

inst_44:
// rs2_val == -5, rs1_val == 524288
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x80000;  op2val:-0x5
TEST_RR_OP(mul, x12, x10, x11, 0xffd80000, 0x80000, -0x5, x2, 104, x15)
9000041c:	00080537          	lui	a0,0x80
90000420:	ffb00593          	li	a1,-5
90000424:	02b50633          	mul	a2,a0,a1
90000428:	06c12423          	sw	a2,104(sp)

9000042c <inst_45>:

inst_45:
// rs2_val == -9, rs1_val == 8
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x8;  op2val:-0x9
TEST_RR_OP(mul, x12, x10, x11, 0xffffffb8, 0x8, -0x9, x2, 108, x15)
9000042c:	00800513          	li	a0,8
90000430:	ff700593          	li	a1,-9
90000434:	02b50633          	mul	a2,a0,a1
90000438:	06c12623          	sw	a2,108(sp)

9000043c <inst_46>:

inst_46:
// rs2_val == -17, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x80000;  op2val:-0x11
TEST_RR_OP(mul, x12, x10, x11, 0xff780000, 0x80000, -0x11, x2, 112, x15)
9000043c:	00080537          	lui	a0,0x80
90000440:	fef00593          	li	a1,-17
90000444:	02b50633          	mul	a2,a0,a1
90000448:	06c12823          	sw	a2,112(sp)

9000044c <inst_47>:

inst_47:
// rs2_val == -33, rs1_val == -3
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x3;  op2val:-0x21
TEST_RR_OP(mul, x12, x10, x11, 0x63, -0x3, -0x21, x2, 116, x15)
9000044c:	ffd00513          	li	a0,-3
90000450:	fdf00593          	li	a1,-33
90000454:	02b50633          	mul	a2,a0,a1
90000458:	06c12a23          	sw	a2,116(sp)

9000045c <inst_48>:

inst_48:
// rs2_val == -257, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x101
TEST_RR_OP(mul, x12, x10, x11, 0xfffffcfd, 0x3, -0x101, x2, 120, x15)
9000045c:	00300513          	li	a0,3
90000460:	eff00593          	li	a1,-257
90000464:	02b50633          	mul	a2,a0,a1
90000468:	06c12c23          	sw	a2,120(sp)

9000046c <inst_49>:

inst_49:
// rs2_val == -513, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0x201
TEST_RR_OP(mul, x12, x10, x11, 0x156, -0x55555556, -0x201, x2, 124, x15)
9000046c:	aaaab537          	lui	a0,0xaaaab
90000470:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000474:	dff00593          	li	a1,-513
90000478:	02b50633          	mul	a2,a0,a1
9000047c:	06c12e23          	sw	a2,124(sp)

90000480 <inst_50>:

inst_50:
// rs2_val == -1025, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x401
TEST_RR_OP(mul, x12, x10, x11, 0xffffebfb, 0x5, -0x401, x2, 128, x15)
90000480:	00500513          	li	a0,5
90000484:	bff00593          	li	a1,-1025
90000488:	02b50633          	mul	a2,a0,a1
9000048c:	08c12023          	sw	a2,128(sp)

90000490 <inst_51>:

inst_51:
// rs2_val == -2049, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x2;  op2val:-0x801
TEST_RR_OP(mul, x12, x10, x11, 0x1002, -0x2, -0x801, x2, 132, x15)
90000490:	ffe00513          	li	a0,-2
90000494:	fffff5b7          	lui	a1,0xfffff
90000498:	7ff58593          	addi	a1,a1,2047 # fffff7ff <_end+0x6fff9cfb>
9000049c:	02b50633          	mul	a2,a0,a1
900004a0:	08c12223          	sw	a2,132(sp)

900004a4 <inst_52>:

inst_52:
// rs2_val == -4097, rs1_val == -134217729
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x8000001;  op2val:-0x1001
TEST_RR_OP(mul, x12, x10, x11, 0x8001001, -0x8000001, -0x1001, x2, 136, x15)
900004a4:	f8000537          	lui	a0,0xf8000
900004a8:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0x67ffa4fb>
900004ac:	fffff5b7          	lui	a1,0xfffff
900004b0:	fff58593          	addi	a1,a1,-1 # ffffefff <_end+0x6fff94fb>
900004b4:	02b50633          	mul	a2,a0,a1
900004b8:	08c12423          	sw	a2,136(sp)

900004bc <inst_53>:

inst_53:
// rs2_val == -8193, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0x2001
TEST_RR_OP(mul, x12, x10, x11, 0x66668cce, 0x33333332, -0x2001, x2, 140, x15)
900004bc:	33333537          	lui	a0,0x33333
900004c0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900004c4:	ffffe5b7          	lui	a1,0xffffe
900004c8:	fff58593          	addi	a1,a1,-1 # ffffdfff <_end+0x6fff84fb>
900004cc:	02b50633          	mul	a2,a0,a1
900004d0:	08c12623          	sw	a2,140(sp)

900004d4 <inst_54>:

inst_54:
// rs2_val == -32769, rs1_val == 512
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x200;  op2val:-0x8001
TEST_RR_OP(mul, x12, x10, x11, 0xfefffe00, 0x200, -0x8001, x2, 144, x15)
900004d4:	20000513          	li	a0,512
900004d8:	ffff85b7          	lui	a1,0xffff8
900004dc:	fff58593          	addi	a1,a1,-1 # ffff7fff <_end+0x6fff24fb>
900004e0:	02b50633          	mul	a2,a0,a1
900004e4:	08c12823          	sw	a2,144(sp)

900004e8 <inst_55>:

inst_55:
// rs2_val == -65537, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0x10001
TEST_RR_OP(mul, x12, x10, x11, 0xb503b503, -0xb503, -0x10001, x2, 148, x15)
900004e8:	ffff5537          	lui	a0,0xffff5
900004ec:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900004f0:	ffff05b7          	lui	a1,0xffff0
900004f4:	fff58593          	addi	a1,a1,-1 # fffeffff <_end+0x6ffea4fb>
900004f8:	02b50633          	mul	a2,a0,a1
900004fc:	08c12a23          	sw	a2,148(sp)

90000500 <inst_56>:

inst_56:
// rs2_val == -131073, rs1_val == 1431655765
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x20001
TEST_RR_OP(mul, x12, x10, x11, 0xaaab, 0x55555555, -0x20001, x2, 152, x15)
90000500:	55555537          	lui	a0,0x55555
90000504:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000508:	fffe05b7          	lui	a1,0xfffe0
9000050c:	fff58593          	addi	a1,a1,-1 # fffdffff <_end+0x6ffda4fb>
90000510:	02b50633          	mul	a2,a0,a1
90000514:	08c12c23          	sw	a2,152(sp)

90000518 <inst_57>:

inst_57:
// rs2_val == -262145, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x3;  op2val:-0x40001
TEST_RR_OP(mul, x12, x10, x11, 0xc0003, -0x3, -0x40001, x2, 156, x15)
90000518:	ffd00513          	li	a0,-3
9000051c:	fffc05b7          	lui	a1,0xfffc0
90000520:	fff58593          	addi	a1,a1,-1 # fffbffff <_end+0x6ffba4fb>
90000524:	02b50633          	mul	a2,a0,a1
90000528:	08c12e23          	sw	a2,156(sp)

9000052c <inst_58>:

inst_58:
// rs2_val == -524289, rs1_val == -16385
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x4001;  op2val:-0x80001
TEST_RR_OP(mul, x12, x10, x11, 0x84001, -0x4001, -0x80001, x2, 160, x15)
9000052c:	ffffc537          	lui	a0,0xffffc
90000530:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0x6fff64fb>
90000534:	fff805b7          	lui	a1,0xfff80
90000538:	fff58593          	addi	a1,a1,-1 # fff7ffff <_end+0x6ff7a4fb>
9000053c:	02b50633          	mul	a2,a0,a1
90000540:	0ac12023          	sw	a2,160(sp)

90000544 <inst_59>:

inst_59:
// rs2_val == -1048577, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x200001;  op2val:-0x100001
TEST_RR_OP(mul, x12, x10, x11, 0x300001, -0x200001, -0x100001, x2, 164, x15)
90000544:	ffe00537          	lui	a0,0xffe00
90000548:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0x6fdfa4fb>
9000054c:	fff005b7          	lui	a1,0xfff00
90000550:	fff58593          	addi	a1,a1,-1 # ffefffff <_end+0x6fefa4fb>
90000554:	02b50633          	mul	a2,a0,a1
90000558:	0ac12223          	sw	a2,164(sp)

9000055c <inst_60>:

inst_60:
// rs2_val == -2097153, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4000;  op2val:-0x200001
TEST_RR_OP(mul, x12, x10, x11, 0xffffc000, 0x4000, -0x200001, x2, 168, x15)
9000055c:	00004537          	lui	a0,0x4
90000560:	ffe005b7          	lui	a1,0xffe00
90000564:	fff58593          	addi	a1,a1,-1 # ffdfffff <_end+0x6fdfa4fb>
90000568:	02b50633          	mul	a2,a0,a1
9000056c:	0ac12423          	sw	a2,168(sp)

90000570 <inst_61>:

inst_61:
// rs2_val == -4194305, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0x400001
TEST_RR_OP(mul, x12, x10, x11, 0xbebf4afb, 0xb505, -0x400001, x2, 172, x15)
90000570:	0000b537          	lui	a0,0xb
90000574:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90000578:	ffc005b7          	lui	a1,0xffc00
9000057c:	fff58593          	addi	a1,a1,-1 # ffbfffff <_end+0x6fbfa4fb>
90000580:	02b50633          	mul	a2,a0,a1
90000584:	0ac12623          	sw	a2,172(sp)

90000588 <inst_62>:

inst_62:
// rs2_val == -8388609, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x800001
TEST_RR_OP(mul, x12, x10, x11, 0x8200b504, -0xb504, -0x800001, x2, 176, x15)
90000588:	ffff5537          	lui	a0,0xffff5
9000058c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90000590:	ff8005b7          	lui	a1,0xff800
90000594:	fff58593          	addi	a1,a1,-1 # ff7fffff <_end+0x6f7fa4fb>
90000598:	02b50633          	mul	a2,a0,a1
9000059c:	0ac12823          	sw	a2,176(sp)

900005a0 <inst_63>:

inst_63:
// rs2_val == -16777217, rs1_val == -4097
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x1001;  op2val:-0x1000001
TEST_RR_OP(mul, x12, x10, x11, 0x1001001, -0x1001, -0x1000001, x2, 180, x15)
900005a0:	fffff537          	lui	a0,0xfffff
900005a4:	fff50513          	addi	a0,a0,-1 # ffffefff <_end+0x6fff94fb>
900005a8:	ff0005b7          	lui	a1,0xff000
900005ac:	fff58593          	addi	a1,a1,-1 # feffffff <_end+0x6effa4fb>
900005b0:	02b50633          	mul	a2,a0,a1
900005b4:	0ac12a23          	sw	a2,180(sp)

900005b8 <inst_64>:

inst_64:
// rs2_val == -33554433, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x2000001
TEST_RR_OP(mul, x12, x10, x11, 0xf5fffffb, 0x5, -0x2000001, x2, 184, x15)
900005b8:	00500513          	li	a0,5
900005bc:	fe0005b7          	lui	a1,0xfe000
900005c0:	fff58593          	addi	a1,a1,-1 # fdffffff <_end+0x6dffa4fb>
900005c4:	02b50633          	mul	a2,a0,a1
900005c8:	0ac12c23          	sw	a2,184(sp)

900005cc <inst_65>:

inst_65:
// rs2_val == -67108865, rs1_val == -33
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x21;  op2val:-0x4000001
TEST_RR_OP(mul, x12, x10, x11, 0x84000021, -0x21, -0x4000001, x2, 188, x15)
900005cc:	fdf00513          	li	a0,-33
900005d0:	fc0005b7          	lui	a1,0xfc000
900005d4:	fff58593          	addi	a1,a1,-1 # fbffffff <_end+0x6bffa4fb>
900005d8:	02b50633          	mul	a2,a0,a1
900005dc:	0ac12e23          	sw	a2,188(sp)

900005e0 <inst_66>:

inst_66:
// rs2_val == -536870913, rs1_val == -131073
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x20001;  op2val:-0x20000001
TEST_RR_OP(mul, x12, x10, x11, 0x20020001, -0x20001, -0x20000001, x2, 192, x15)
900005e0:	fffe0537          	lui	a0,0xfffe0
900005e4:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0x6ffda4fb>
900005e8:	e00005b7          	lui	a1,0xe0000
900005ec:	fff58593          	addi	a1,a1,-1 # dfffffff <_end+0x4fffa4fb>
900005f0:	02b50633          	mul	a2,a0,a1
900005f4:	0cc12023          	sw	a2,192(sp)

900005f8 <inst_67>:

inst_67:
// rs2_val == -1073741825, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x40000001
TEST_RR_OP(mul, x12, x10, x11, 0xb504, -0xb504, -0x40000001, x2, 196, x15)
900005f8:	ffff5537          	lui	a0,0xffff5
900005fc:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90000600:	c00005b7          	lui	a1,0xc0000
90000604:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0x2fffa4fb>
90000608:	02b50633          	mul	a2,a0,a1
9000060c:	0cc12223          	sw	a2,196(sp)

90000610 <inst_68>:

inst_68:
// rs2_val == 1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x8000001;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x2aaaaab, -0x8000001, 0x55555555, x2, 200, x15)
90000610:	f8000537          	lui	a0,0xf8000
90000614:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0x67ffa4fb>
90000618:	555555b7          	lui	a1,0x55555
9000061c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90000620:	02b50633          	mul	a2,a0,a1
90000624:	0cc12423          	sw	a2,200(sp)

90000628 <inst_69>:

inst_69:
// rs2_val == -1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x800000;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x55000000, 0x800000, -0x55555556, x2, 204, x15)
90000628:	00800537          	lui	a0,0x800
9000062c:	aaaab5b7          	lui	a1,0xaaaab
90000630:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000634:	02b50633          	mul	a2,a0,a1
90000638:	0cc12623          	sw	a2,204(sp)

9000063c <inst_70>:

inst_70:
// rs1_val == 4, rs1_val==4 and rs2_val==1431655764
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0x55555550, 0x4, 0x55555554, x2, 208, x15)
9000063c:	00400513          	li	a0,4
90000640:	555555b7          	lui	a1,0x55555
90000644:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90000648:	02b50633          	mul	a2,a0,a1
9000064c:	0cc12823          	sw	a2,208(sp)

90000650 <inst_71>:

inst_71:
// rs1_val == 16, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x10;  op2val:0x9
TEST_RR_OP(mul, x12, x10, x11, 0x90, 0x10, 0x9, x2, 212, x15)
90000650:	01000513          	li	a0,16
90000654:	00900593          	li	a1,9
90000658:	02b50633          	mul	a2,a0,a1
9000065c:	0cc12a23          	sw	a2,212(sp)

90000660 <inst_72>:

inst_72:
// rs1_val == 64, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x40;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x40, 0x0, x2, 216, x15)
90000660:	04000513          	li	a0,64
90000664:	00000593          	li	a1,0
90000668:	02b50633          	mul	a2,a0,a1
9000066c:	0cc12c23          	sw	a2,216(sp)

90000670 <inst_73>:

inst_73:
// rs1_val == 1024, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x400;  op2val:-0x101
TEST_RR_OP(mul, x12, x10, x11, 0xfffbfc00, 0x400, -0x101, x2, 220, x15)
90000670:	40000513          	li	a0,1024
90000674:	eff00593          	li	a1,-257
90000678:	02b50633          	mul	a2,a0,a1
9000067c:	0cc12e23          	sw	a2,220(sp)

90000680 <inst_74>:

inst_74:
// rs1_val == 2048, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x800;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x5a82000, 0x800, 0xb504, x2, 224, x15)
90000680:	00001537          	lui	a0,0x1
90000684:	80050513          	addi	a0,a0,-2048 # 800 <offset+0x720>
90000688:	0000b5b7          	lui	a1,0xb
9000068c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90000690:	02b50633          	mul	a2,a0,a1
90000694:	0ec12023          	sw	a2,224(sp)

90000698 <inst_75>:

inst_75:
// rs1_val == 4096, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x1000;  op2val:-0x801
TEST_RR_OP(mul, x12, x10, x11, 0xff7ff000, 0x1000, -0x801, x2, 228, x15)
90000698:	00001537          	lui	a0,0x1
9000069c:	fffff5b7          	lui	a1,0xfffff
900006a0:	7ff58593          	addi	a1,a1,2047 # fffff7ff <_end+0x6fff9cfb>
900006a4:	02b50633          	mul	a2,a0,a1
900006a8:	0ec12223          	sw	a2,228(sp)

900006ac <inst_76>:

inst_76:
// rs1_val == 8192, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2000;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x6000, 0x2000, 0x3, x2, 232, x15)
900006ac:	00002537          	lui	a0,0x2
900006b0:	00300593          	li	a1,3
900006b4:	02b50633          	mul	a2,a0,a1
900006b8:	0ec12423          	sw	a2,232(sp)

900006bc <inst_77>:

inst_77:
// rs1_val == 32768, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x8000;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x28000, 0x8000, 0x5, x2, 236, x15)
900006bc:	00008537          	lui	a0,0x8
900006c0:	00500593          	li	a1,5
900006c4:	02b50633          	mul	a2,a0,a1
900006c8:	0ec12623          	sw	a2,236(sp)

900006cc <inst_78>:

inst_78:
// rs1_val == 65536, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:-0xa
TEST_RR_OP(mul, x12, x10, x11, 0xfff60000, 0x10000, -0xa, x2, 240, x15)
900006cc:	00010537          	lui	a0,0x10
900006d0:	ff600593          	li	a1,-10
900006d4:	02b50633          	mul	a2,a0,a1
900006d8:	0ec12823          	sw	a2,240(sp)

900006dc <inst_79>:

inst_79:
// rs1_val == 131072, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x20000;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x6a060000, 0x20000, 0xb503, x2, 244, x15)
900006dc:	00020537          	lui	a0,0x20
900006e0:	0000b5b7          	lui	a1,0xb
900006e4:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900006e8:	02b50633          	mul	a2,a0,a1
900006ec:	0ec12a23          	sw	a2,244(sp)

900006f0 <inst_80>:

inst_80:
// rs1_val == 262144, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x40000;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x180000, 0x40000, 0x6, x2, 248, x15)
900006f0:	00040537          	lui	a0,0x40
900006f4:	00600593          	li	a1,6
900006f8:	02b50633          	mul	a2,a0,a1
900006fc:	0ec12c23          	sw	a2,248(sp)

90000700 <inst_81>:

inst_81:
// rs1_val == 2097152, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x200000;  op2val:0x4000
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x200000, 0x4000, x2, 252, x15)
90000700:	00200537          	lui	a0,0x200
90000704:	000045b7          	lui	a1,0x4
90000708:	02b50633          	mul	a2,a0,a1
9000070c:	0ec12e23          	sw	a2,252(sp)

90000710 <inst_82>:

inst_82:
// rs1_val == 4194304, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x400000;  op2val:-0x800001
TEST_RR_OP(mul, x12, x10, x11, 0xffc00000, 0x400000, -0x800001, x2, 256, x15)
90000710:	00400537          	lui	a0,0x400
90000714:	ff8005b7          	lui	a1,0xff800
90000718:	fff58593          	addi	a1,a1,-1 # ff7fffff <_end+0x6f7fa4fb>
9000071c:	02b50633          	mul	a2,a0,a1
90000720:	10c12023          	sw	a2,256(sp)

90000724 <inst_83>:

inst_83:
// rs1_val == 16777216, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x1000000;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x32000000, 0x1000000, 0x33333332, x2, 260, x15)
90000724:	01000537          	lui	a0,0x1000
90000728:	333335b7          	lui	a1,0x33333
9000072c:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90000730:	02b50633          	mul	a2,a0,a1
90000734:	10c12223          	sw	a2,260(sp)

90000738 <inst_84>:

inst_84:
// rs1_val == 33554432, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2000000;  op2val:0x40
TEST_RR_OP(mul, x12, x10, x11, 0x80000000, 0x2000000, 0x40, x2, 264, x15)
90000738:	02000537          	lui	a0,0x2000
9000073c:	04000593          	li	a1,64
90000740:	02b50633          	mul	a2,a0,a1
90000744:	10c12423          	sw	a2,264(sp)

90000748 <inst_85>:

inst_85:
// rs1_val == 67108864, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4000000;  op2val:-0x20001
TEST_RR_OP(mul, x12, x10, x11, 0xfc000000, 0x4000000, -0x20001, x2, 268, x15)
90000748:	04000537          	lui	a0,0x4000
9000074c:	fffe05b7          	lui	a1,0xfffe0
90000750:	fff58593          	addi	a1,a1,-1 # fffdffff <_end+0x6ffda4fb>
90000754:	02b50633          	mul	a2,a0,a1
90000758:	10c12623          	sw	a2,268(sp)

9000075c <inst_86>:

inst_86:
// rs1_val == 134217728, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x8000000;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xa8000000, 0x8000000, 0x55555555, x2, 272, x15)
9000075c:	08000537          	lui	a0,0x8000
90000760:	555555b7          	lui	a1,0x55555
90000764:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90000768:	02b50633          	mul	a2,a0,a1
9000076c:	10c12823          	sw	a2,272(sp)

90000770 <inst_87>:

inst_87:
// rs1_val == 268435456, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x10000000;  op2val:0x40000000
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x10000000, 0x40000000, x2, 276, x15)
90000770:	10000537          	lui	a0,0x10000
90000774:	400005b7          	lui	a1,0x40000
90000778:	02b50633          	mul	a2,a0,a1
9000077c:	10c12a23          	sw	a2,276(sp)

90000780 <inst_88>:

inst_88:
// rs1_val == 536870912, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x20000000;  op2val:0x40
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x20000000, 0x40, x2, 280, x15)
90000780:	20000537          	lui	a0,0x20000
90000784:	04000593          	li	a1,64
90000788:	02b50633          	mul	a2,a0,a1
9000078c:	10c12c23          	sw	a2,280(sp)

90000790 <inst_89>:

inst_89:
// rs1_val == 1073741824, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:0x40
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x40000000, 0x40, x2, 284, x15)
90000790:	40000537          	lui	a0,0x40000
90000794:	04000593          	li	a1,64
90000798:	02b50633          	mul	a2,a0,a1
9000079c:	10c12e23          	sw	a2,284(sp)

900007a0 <inst_90>:

inst_90:
// rs1_val == -65, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x41;  op2val:-0x8001
TEST_RR_OP(mul, x12, x10, x11, 0x208041, -0x41, -0x8001, x2, 288, x15)
900007a0:	fbf00513          	li	a0,-65
900007a4:	ffff85b7          	lui	a1,0xffff8
900007a8:	fff58593          	addi	a1,a1,-1 # ffff7fff <_end+0x6fff24fb>
900007ac:	02b50633          	mul	a2,a0,a1
900007b0:	12c12023          	sw	a2,288(sp)

900007b4 <inst_91>:

inst_91:
// rs1_val == -129, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x81;  op2val:-0x4
TEST_RR_OP(mul, x12, x10, x11, 0x204, -0x81, -0x4, x2, 292, x15)
900007b4:	f7f00513          	li	a0,-129
900007b8:	ffc00593          	li	a1,-4
900007bc:	02b50633          	mul	a2,a0,a1
900007c0:	12c12223          	sw	a2,292(sp)

900007c4 <inst_92>:

inst_92:
// rs1_val == -257, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x101;  op2val:-0x100001
TEST_RR_OP(mul, x12, x10, x11, 0x10100101, -0x101, -0x100001, x2, 296, x15)
900007c4:	eff00513          	li	a0,-257
900007c8:	fff005b7          	lui	a1,0xfff00
900007cc:	fff58593          	addi	a1,a1,-1 # ffefffff <_end+0x6fefa4fb>
900007d0:	02b50633          	mul	a2,a0,a1
900007d4:	12c12423          	sw	a2,296(sp)

900007d8 <inst_93>:

inst_93:
// rs1_val == -1025, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x401;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, -0x401, 0x0, x2, 300, x15)
900007d8:	bff00513          	li	a0,-1025
900007dc:	00000593          	li	a1,0
900007e0:	02b50633          	mul	a2,a0,a1
900007e4:	12c12623          	sw	a2,300(sp)

900007e8 <inst_94>:

inst_94:
// rs1_val == -32769, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x8001;  op2val:-0x9
TEST_RR_OP(mul, x12, x10, x11, 0x48009, -0x8001, -0x9, x2, 304, x15)
900007e8:	ffff8537          	lui	a0,0xffff8
900007ec:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0x6fff24fb>
900007f0:	ff700593          	li	a1,-9
900007f4:	02b50633          	mul	a2,a0,a1
900007f8:	12c12823          	sw	a2,304(sp)

900007fc <inst_95>:

inst_95:
// rs1_val == -65537, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x10001;  op2val:0x4000
TEST_RR_OP(mul, x12, x10, x11, 0xbfffc000, -0x10001, 0x4000, x2, 308, x15)
900007fc:	ffff0537          	lui	a0,0xffff0
90000800:	fff50513          	addi	a0,a0,-1 # fffeffff <_end+0x6ffea4fb>
90000804:	000045b7          	lui	a1,0x4
90000808:	02b50633          	mul	a2,a0,a1
9000080c:	12c12a23          	sw	a2,308(sp)

90000810 <inst_96>:

inst_96:
// rs1_val == -1048577, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x100001;  op2val:-0x200001
TEST_RR_OP(mul, x12, x10, x11, 0x300001, -0x100001, -0x200001, x2, 312, x15)
90000810:	fff00537          	lui	a0,0xfff00
90000814:	fff50513          	addi	a0,a0,-1 # ffefffff <_end+0x6fefa4fb>
90000818:	ffe005b7          	lui	a1,0xffe00
9000081c:	fff58593          	addi	a1,a1,-1 # ffdfffff <_end+0x6fdfa4fb>
90000820:	02b50633          	mul	a2,a0,a1
90000824:	12c12c23          	sw	a2,312(sp)

90000828 <inst_97>:

inst_97:
// rs1_val == -8388609, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x800001;  op2val:-0x3
TEST_RR_OP(mul, x12, x10, x11, 0x1800003, -0x800001, -0x3, x2, 316, x15)
90000828:	ff800537          	lui	a0,0xff800
9000082c:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0x6f7fa4fb>
90000830:	ffd00593          	li	a1,-3
90000834:	02b50633          	mul	a2,a0,a1
90000838:	12c12e23          	sw	a2,316(sp)

9000083c <inst_98>:

inst_98:
// rs1_val == -16777217, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x1000001;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, -0x1000001, 0x0, x2, 320, x15)
9000083c:	ff000537          	lui	a0,0xff000
90000840:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0x6effa4fb>
90000844:	00000593          	li	a1,0
90000848:	02b50633          	mul	a2,a0,a1
9000084c:	14c12023          	sw	a2,320(sp)

90000850 <inst_99>:

inst_99:
// rs1_val == -33554433, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x2000001;  op2val:-0x801
TEST_RR_OP(mul, x12, x10, x11, 0x2000801, -0x2000001, -0x801, x2, 324, x15)
90000850:	fe000537          	lui	a0,0xfe000
90000854:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0x6dffa4fb>
90000858:	fffff5b7          	lui	a1,0xfffff
9000085c:	7ff58593          	addi	a1,a1,2047 # fffff7ff <_end+0x6fff9cfb>
90000860:	02b50633          	mul	a2,a0,a1
90000864:	14c12223          	sw	a2,324(sp)

90000868 <inst_100>:

inst_100:
// rs1_val == -268435457, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x10000001;  op2val:-0x3
TEST_RR_OP(mul, x12, x10, x11, 0x30000003, -0x10000001, -0x3, x2, 328, x15)
90000868:	f0000537          	lui	a0,0xf0000
9000086c:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0x5fffa4fb>
90000870:	ffd00593          	li	a1,-3
90000874:	02b50633          	mul	a2,a0,a1
90000878:	14c12423          	sw	a2,328(sp)

9000087c <inst_101>:

inst_101:
// rs1_val == -1073741825, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x40000001;  op2val:0x2000000
TEST_RR_OP(mul, x12, x10, x11, 0xfe000000, -0x40000001, 0x2000000, x2, 332, x15)
9000087c:	c0000537          	lui	a0,0xc0000
90000880:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0x2fffa4fb>
90000884:	020005b7          	lui	a1,0x2000
90000888:	02b50633          	mul	a2,a0,a1
9000088c:	14c12623          	sw	a2,332(sp)

90000890 <inst_102>:

inst_102:
// rs1_val==3 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x9, 0x3, 0x3, x2, 336, x15)
90000890:	00300513          	li	a0,3
90000894:	00300593          	li	a1,3
90000898:	02b50633          	mul	a2,a0,a1
9000089c:	14c12823          	sw	a2,336(sp)

900008a0 <inst_103>:

inst_103:
// rs1_val==3 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xffffffff, 0x3, 0x55555555, x2, 340, x15)
900008a0:	00300513          	li	a0,3
900008a4:	555555b7          	lui	a1,0x55555
900008a8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900008ac:	02b50633          	mul	a2,a0,a1
900008b0:	14c12a23          	sw	a2,340(sp)

900008b4 <inst_104>:

inst_104:
// rs1_val==3 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffe, 0x3, -0x55555556, x2, 344, x15)
900008b4:	00300513          	li	a0,3
900008b8:	aaaab5b7          	lui	a1,0xaaaab
900008bc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900008c0:	02b50633          	mul	a2,a0,a1
900008c4:	14c12c23          	sw	a2,344(sp)

900008c8 <inst_105>:

inst_105:
// rs1_val==3 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0xf, 0x3, 0x5, x2, 348, x15)
900008c8:	00300513          	li	a0,3
900008cc:	00500593          	li	a1,5
900008d0:	02b50633          	mul	a2,a0,a1
900008d4:	14c12e23          	sw	a2,348(sp)

900008d8 <inst_106>:

inst_106:
// rs1_val==3 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x99999999, 0x3, 0x33333333, x2, 352, x15)
900008d8:	00300513          	li	a0,3
900008dc:	333335b7          	lui	a1,0x33333
900008e0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
900008e4:	02b50633          	mul	a2,a0,a1
900008e8:	16c12023          	sw	a2,352(sp)

900008ec <inst_107>:

inst_107:
// rs1_val==3 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x33333332, 0x3, 0x66666666, x2, 356, x15)
900008ec:	00300513          	li	a0,3
900008f0:	666665b7          	lui	a1,0x66666
900008f4:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
900008f8:	02b50633          	mul	a2,a0,a1
900008fc:	16c12223          	sw	a2,356(sp)

90000900 <inst_108>:

inst_108:
// rs1_val==3 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xfffde0f4, 0x3, -0xb504, x2, 360, x15)
90000900:	00300513          	li	a0,3
90000904:	ffff55b7          	lui	a1,0xffff5
90000908:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000090c:	02b50633          	mul	a2,a0,a1
90000910:	16c12423          	sw	a2,360(sp)

90000914 <inst_109>:

inst_109:
// rs1_val==3 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x21f0c, 0x3, 0xb504, x2, 364, x15)
90000914:	00300513          	li	a0,3
90000918:	0000b5b7          	lui	a1,0xb
9000091c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90000920:	02b50633          	mul	a2,a0,a1
90000924:	16c12623          	sw	a2,364(sp)

90000928 <inst_110>:

inst_110:
// rs1_val==3 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x6, 0x3, 0x2, x2, 368, x15)
90000928:	00300513          	li	a0,3
9000092c:	00200593          	li	a1,2
90000930:	02b50633          	mul	a2,a0,a1
90000934:	16c12823          	sw	a2,368(sp)

90000938 <inst_111>:

inst_111:
// rs1_val==3 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffc, 0x3, 0x55555554, x2, 372, x15)
90000938:	00300513          	li	a0,3
9000093c:	555555b7          	lui	a1,0x55555
90000940:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90000944:	02b50633          	mul	a2,a0,a1
90000948:	16c12a23          	sw	a2,372(sp)

9000094c <inst_112>:

inst_112:
// rs1_val==3 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x3, 0x0, x2, 376, x15)
9000094c:	00300513          	li	a0,3
90000950:	00000593          	li	a1,0
90000954:	02b50633          	mul	a2,a0,a1
90000958:	16c12c23          	sw	a2,376(sp)

9000095c <inst_113>:

inst_113:
// rs1_val==3 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0xc, 0x3, 0x4, x2, 380, x15)
9000095c:	00300513          	li	a0,3
90000960:	00400593          	li	a1,4
90000964:	02b50633          	mul	a2,a0,a1
90000968:	16c12e23          	sw	a2,380(sp)

9000096c <inst_114>:

inst_114:
// rs1_val==3 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x99999996, 0x3, 0x33333332, x2, 384, x15)
9000096c:	00300513          	li	a0,3
90000970:	333335b7          	lui	a1,0x33333
90000974:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90000978:	02b50633          	mul	a2,a0,a1
9000097c:	18c12023          	sw	a2,384(sp)

90000980 <inst_115>:

inst_115:
// rs1_val==3 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x3333332f, 0x3, 0x66666665, x2, 388, x15)
90000980:	00300513          	li	a0,3
90000984:	666665b7          	lui	a1,0x66666
90000988:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
9000098c:	02b50633          	mul	a2,a0,a1
90000990:	18c12223          	sw	a2,388(sp)

90000994 <inst_116>:

inst_116:
// rs1_val==3 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x21f09, 0x3, 0xb503, x2, 392, x15)
90000994:	00300513          	li	a0,3
90000998:	0000b5b7          	lui	a1,0xb
9000099c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900009a0:	02b50633          	mul	a2,a0,a1
900009a4:	18c12423          	sw	a2,392(sp)

900009a8 <inst_117>:

inst_117:
// rs1_val==3 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x2, 0x3, 0x55555556, x2, 396, x15)
900009a8:	00300513          	li	a0,3
900009ac:	555555b7          	lui	a1,0x55555
900009b0:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
900009b4:	02b50633          	mul	a2,a0,a1
900009b8:	18c12623          	sw	a2,396(sp)

900009bc <inst_118>:

inst_118:
// rs1_val==3 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x1, 0x3, -0x55555555, x2, 400, x15)
900009bc:	00300513          	li	a0,3
900009c0:	aaaab5b7          	lui	a1,0xaaaab
900009c4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900009c8:	02b50633          	mul	a2,a0,a1
900009cc:	18c12823          	sw	a2,400(sp)

900009d0 <inst_119>:

inst_119:
// rs1_val==3 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x12, 0x3, 0x6, x2, 404, x15)
900009d0:	00300513          	li	a0,3
900009d4:	00600593          	li	a1,6
900009d8:	02b50633          	mul	a2,a0,a1
900009dc:	18c12a23          	sw	a2,404(sp)

900009e0 <inst_120>:

inst_120:
// rs1_val==3 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x9999999c, 0x3, 0x33333334, x2, 408, x15)
900009e0:	00300513          	li	a0,3
900009e4:	333335b7          	lui	a1,0x33333
900009e8:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
900009ec:	02b50633          	mul	a2,a0,a1
900009f0:	18c12c23          	sw	a2,408(sp)

900009f4 <inst_121>:

inst_121:
// rs1_val==3 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x33333335, 0x3, 0x66666667, x2, 412, x15)
900009f4:	00300513          	li	a0,3
900009f8:	666665b7          	lui	a1,0x66666
900009fc:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90000a00:	02b50633          	mul	a2,a0,a1
90000a04:	18c12e23          	sw	a2,412(sp)

90000a08 <inst_122>:

inst_122:
// rs1_val==3 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xfffde0f7, 0x3, -0xb503, x2, 416, x15)
90000a08:	00300513          	li	a0,3
90000a0c:	ffff55b7          	lui	a1,0xffff5
90000a10:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000a14:	02b50633          	mul	a2,a0,a1
90000a18:	1ac12023          	sw	a2,416(sp)

90000a1c <inst_123>:

inst_123:
// rs1_val==3 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x21f0f, 0x3, 0xb505, x2, 420, x15)
90000a1c:	00300513          	li	a0,3
90000a20:	0000b5b7          	lui	a1,0xb
90000a24:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90000a28:	02b50633          	mul	a2,a0,a1
90000a2c:	1ac12223          	sw	a2,420(sp)

90000a30 <inst_124>:

inst_124:
// rs1_val==1431655765 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0xffffffff, 0x55555555, 0x3, x2, 424, x15)
90000a30:	55555537          	lui	a0,0x55555
90000a34:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000a38:	00300593          	li	a1,3
90000a3c:	02b50633          	mul	a2,a0,a1
90000a40:	1ac12423          	sw	a2,424(sp)

90000a44 <inst_125>:

inst_125:
// rs1_val==1431655765 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x38e38e39, 0x55555555, 0x55555555, x2, 428, x15)
90000a44:	55555537          	lui	a0,0x55555
90000a48:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000a4c:	555555b7          	lui	a1,0x55555
90000a50:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90000a54:	02b50633          	mul	a2,a0,a1
90000a58:	1ac12623          	sw	a2,428(sp)

90000a5c <inst_126>:

inst_126:
// rs1_val==1431655765 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x71c71c72, 0x55555555, -0x55555556, x2, 432, x15)
90000a5c:	55555537          	lui	a0,0x55555
90000a60:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000a64:	aaaab5b7          	lui	a1,0xaaaab
90000a68:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000a6c:	02b50633          	mul	a2,a0,a1
90000a70:	1ac12823          	sw	a2,432(sp)

90000a74 <inst_127>:

inst_127:
// rs1_val==1431655765 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaa9, 0x55555555, 0x5, x2, 436, x15)
90000a74:	55555537          	lui	a0,0x55555
90000a78:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000a7c:	00500593          	li	a1,5
90000a80:	02b50633          	mul	a2,a0,a1
90000a84:	1ac12a23          	sw	a2,436(sp)

90000a88 <inst_128>:

inst_128:
// rs1_val==1431655765 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0xeeeeeeef, 0x55555555, 0x33333333, x2, 440, x15)
90000a88:	55555537          	lui	a0,0x55555
90000a8c:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000a90:	333335b7          	lui	a1,0x33333
90000a94:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90000a98:	02b50633          	mul	a2,a0,a1
90000a9c:	1ac12c23          	sw	a2,440(sp)

90000aa0 <inst_129>:

inst_129:
// rs1_val==1431655765 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0xddddddde, 0x55555555, 0x66666666, x2, 444, x15)
90000aa0:	55555537          	lui	a0,0x55555
90000aa4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000aa8:	666665b7          	lui	a1,0x66666
90000aac:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90000ab0:	02b50633          	mul	a2,a0,a1
90000ab4:	1ac12e23          	sw	a2,444(sp)

90000ab8 <inst_130>:

inst_130:
// rs1_val==1431655765 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x555591ac, 0x55555555, -0xb504, x2, 448, x15)
90000ab8:	55555537          	lui	a0,0x55555
90000abc:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000ac0:	ffff55b7          	lui	a1,0xffff5
90000ac4:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90000ac8:	02b50633          	mul	a2,a0,a1
90000acc:	1cc12023          	sw	a2,448(sp)

90000ad0 <inst_131>:

inst_131:
// rs1_val==1431655765 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xaaaa6e54, 0x55555555, 0xb504, x2, 452, x15)
90000ad0:	55555537          	lui	a0,0x55555
90000ad4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000ad8:	0000b5b7          	lui	a1,0xb
90000adc:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90000ae0:	02b50633          	mul	a2,a0,a1
90000ae4:	1cc12223          	sw	a2,452(sp)

90000ae8 <inst_132>:

inst_132:
// rs1_val==1431655765 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaaa, 0x55555555, 0x2, x2, 456, x15)
90000ae8:	55555537          	lui	a0,0x55555
90000aec:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000af0:	00200593          	li	a1,2
90000af4:	02b50633          	mul	a2,a0,a1
90000af8:	1cc12423          	sw	a2,456(sp)

90000afc <inst_133>:

inst_133:
// rs1_val==1431655765 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0xe38e38e4, 0x55555555, 0x55555554, x2, 460, x15)
90000afc:	55555537          	lui	a0,0x55555
90000b00:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b04:	555555b7          	lui	a1,0x55555
90000b08:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90000b0c:	02b50633          	mul	a2,a0,a1
90000b10:	1cc12623          	sw	a2,460(sp)

90000b14 <inst_134>:

inst_134:
// rs1_val==1431655765 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x55555555, 0x0, x2, 464, x15)
90000b14:	55555537          	lui	a0,0x55555
90000b18:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b1c:	00000593          	li	a1,0
90000b20:	02b50633          	mul	a2,a0,a1
90000b24:	1cc12823          	sw	a2,464(sp)

90000b28 <inst_135>:

inst_135:
// rs1_val==1431655765 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x55555554, 0x55555555, 0x4, x2, 468, x15)
90000b28:	55555537          	lui	a0,0x55555
90000b2c:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b30:	00400593          	li	a1,4
90000b34:	02b50633          	mul	a2,a0,a1
90000b38:	1cc12a23          	sw	a2,468(sp)

90000b3c <inst_136>:

inst_136:
// rs1_val==1431655765 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x9999999a, 0x55555555, 0x33333332, x2, 472, x15)
90000b3c:	55555537          	lui	a0,0x55555
90000b40:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b44:	333335b7          	lui	a1,0x33333
90000b48:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90000b4c:	02b50633          	mul	a2,a0,a1
90000b50:	1cc12c23          	sw	a2,472(sp)

90000b54 <inst_137>:

inst_137:
// rs1_val==1431655765 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x88888889, 0x55555555, 0x66666665, x2, 476, x15)
90000b54:	55555537          	lui	a0,0x55555
90000b58:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b5c:	666665b7          	lui	a1,0x66666
90000b60:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90000b64:	02b50633          	mul	a2,a0,a1
90000b68:	1cc12e23          	sw	a2,476(sp)

90000b6c <inst_138>:

inst_138:
// rs1_val==1431655765 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x555518ff, 0x55555555, 0xb503, x2, 480, x15)
90000b6c:	55555537          	lui	a0,0x55555
90000b70:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b74:	0000b5b7          	lui	a1,0xb
90000b78:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90000b7c:	02b50633          	mul	a2,a0,a1
90000b80:	1ec12023          	sw	a2,480(sp)

90000b84 <inst_139>:

inst_139:
// rs1_val==1431655765 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x8e38e38e, 0x55555555, 0x55555556, x2, 484, x15)
90000b84:	55555537          	lui	a0,0x55555
90000b88:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b8c:	555555b7          	lui	a1,0x55555
90000b90:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90000b94:	02b50633          	mul	a2,a0,a1
90000b98:	1ec12223          	sw	a2,484(sp)

90000b9c <inst_140>:

inst_140:
// rs1_val==1431655765 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xc71c71c7, 0x55555555, -0x55555555, x2, 488, x15)
90000b9c:	55555537          	lui	a0,0x55555
90000ba0:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000ba4:	aaaab5b7          	lui	a1,0xaaaab
90000ba8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90000bac:	02b50633          	mul	a2,a0,a1
90000bb0:	1ec12423          	sw	a2,488(sp)

90000bb4 <inst_141>:

inst_141:
// rs1_val==1431655765 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffe, 0x55555555, 0x6, x2, 492, x15)
90000bb4:	55555537          	lui	a0,0x55555
90000bb8:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000bbc:	00600593          	li	a1,6
90000bc0:	02b50633          	mul	a2,a0,a1
90000bc4:	1ec12623          	sw	a2,492(sp)

90000bc8 <inst_142>:

inst_142:
// rs1_val==1431655765 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x44444444, 0x55555555, 0x33333334, x2, 496, x15)
90000bc8:	55555537          	lui	a0,0x55555
90000bcc:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000bd0:	333335b7          	lui	a1,0x33333
90000bd4:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90000bd8:	02b50633          	mul	a2,a0,a1
90000bdc:	1ec12823          	sw	a2,496(sp)

90000be0 <inst_143>:

inst_143:
// rs1_val==1431655765 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x33333333, 0x55555555, 0x66666667, x2, 500, x15)
90000be0:	55555537          	lui	a0,0x55555
90000be4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000be8:	666665b7          	lui	a1,0x66666
90000bec:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90000bf0:	02b50633          	mul	a2,a0,a1
90000bf4:	1ec12a23          	sw	a2,500(sp)

90000bf8 <inst_144>:

inst_144:
// rs1_val==1431655765 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xaaaae701, 0x55555555, -0xb503, x2, 504, x15)
90000bf8:	55555537          	lui	a0,0x55555
90000bfc:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000c00:	ffff55b7          	lui	a1,0xffff5
90000c04:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000c08:	02b50633          	mul	a2,a0,a1
90000c0c:	1ec12c23          	sw	a2,504(sp)

90000c10 <inst_145>:

inst_145:
// rs1_val==1431655765 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0xffffc3a9, 0x55555555, 0xb505, x2, 508, x15)
90000c10:	55555537          	lui	a0,0x55555
90000c14:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000c18:	0000b5b7          	lui	a1,0xb
90000c1c:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90000c20:	02b50633          	mul	a2,a0,a1
90000c24:	1ec12e23          	sw	a2,508(sp)

90000c28 <inst_146>:

inst_146:
// rs1_val==-1431655766 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffe, -0x55555556, 0x3, x2, 512, x15)
90000c28:	aaaab537          	lui	a0,0xaaaab
90000c2c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c30:	00300593          	li	a1,3
90000c34:	02b50633          	mul	a2,a0,a1
90000c38:	20c12023          	sw	a2,512(sp)

90000c3c <inst_147>:

inst_147:
// rs1_val==-1431655766 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x71c71c72, -0x55555556, 0x55555555, x2, 516, x15)
90000c3c:	aaaab537          	lui	a0,0xaaaab
90000c40:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c44:	555555b7          	lui	a1,0x55555
90000c48:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90000c4c:	02b50633          	mul	a2,a0,a1
90000c50:	20c12223          	sw	a2,516(sp)

90000c54 <inst_148>:

inst_148:
// rs1_val==-1431655766 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xe38e38e4, -0x55555556, -0x55555556, x2, 520, x15)
90000c54:	aaaab537          	lui	a0,0xaaaab
90000c58:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c5c:	aaaab5b7          	lui	a1,0xaaaab
90000c60:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c64:	02b50633          	mul	a2,a0,a1
90000c68:	20c12423          	sw	a2,520(sp)

90000c6c <inst_149>:

inst_149:
// rs1_val==-1431655766 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x55555552, -0x55555556, 0x5, x2, 524, x15)
90000c6c:	aaaab537          	lui	a0,0xaaaab
90000c70:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c74:	00500593          	li	a1,5
90000c78:	02b50633          	mul	a2,a0,a1
90000c7c:	20c12623          	sw	a2,524(sp)

90000c80 <inst_150>:

inst_150:
// rs1_val==-1431655766 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0xddddddde, -0x55555556, 0x33333333, x2, 528, x15)
90000c80:	aaaab537          	lui	a0,0xaaaab
90000c84:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c88:	333335b7          	lui	a1,0x33333
90000c8c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90000c90:	02b50633          	mul	a2,a0,a1
90000c94:	20c12823          	sw	a2,528(sp)

90000c98 <inst_151>:

inst_151:
// rs1_val==-1431655766 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0xbbbbbbbc, -0x55555556, 0x66666666, x2, 532, x15)
90000c98:	aaaab537          	lui	a0,0xaaaab
90000c9c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000ca0:	666665b7          	lui	a1,0x66666
90000ca4:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90000ca8:	02b50633          	mul	a2,a0,a1
90000cac:	20c12a23          	sw	a2,532(sp)

90000cb0 <inst_152>:

inst_152:
// rs1_val==-1431655766 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xaaab2358, -0x55555556, -0xb504, x2, 536, x15)
90000cb0:	aaaab537          	lui	a0,0xaaaab
90000cb4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000cb8:	ffff55b7          	lui	a1,0xffff5
90000cbc:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90000cc0:	02b50633          	mul	a2,a0,a1
90000cc4:	20c12c23          	sw	a2,536(sp)

90000cc8 <inst_153>:

inst_153:
// rs1_val==-1431655766 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x5554dca8, -0x55555556, 0xb504, x2, 540, x15)
90000cc8:	aaaab537          	lui	a0,0xaaaab
90000ccc:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000cd0:	0000b5b7          	lui	a1,0xb
90000cd4:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90000cd8:	02b50633          	mul	a2,a0,a1
90000cdc:	20c12e23          	sw	a2,540(sp)

90000ce0 <inst_154>:

inst_154:
// rs1_val==-1431655766 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x55555554, -0x55555556, 0x2, x2, 544, x15)
90000ce0:	aaaab537          	lui	a0,0xaaaab
90000ce4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000ce8:	00200593          	li	a1,2
90000cec:	02b50633          	mul	a2,a0,a1
90000cf0:	22c12023          	sw	a2,544(sp)

90000cf4 <inst_155>:

inst_155:
// rs1_val==-1431655766 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0xc71c71c8, -0x55555556, 0x55555554, x2, 548, x15)
90000cf4:	aaaab537          	lui	a0,0xaaaab
90000cf8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000cfc:	555555b7          	lui	a1,0x55555
90000d00:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90000d04:	02b50633          	mul	a2,a0,a1
90000d08:	22c12223          	sw	a2,548(sp)

90000d0c <inst_156>:

inst_156:
// rs1_val==-1431655766 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, -0x55555556, 0x0, x2, 552, x15)
90000d0c:	aaaab537          	lui	a0,0xaaaab
90000d10:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d14:	00000593          	li	a1,0
90000d18:	02b50633          	mul	a2,a0,a1
90000d1c:	22c12423          	sw	a2,552(sp)

90000d20 <inst_157>:

inst_157:
// rs1_val==-1431655766 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaa8, -0x55555556, 0x4, x2, 556, x15)
90000d20:	aaaab537          	lui	a0,0xaaaab
90000d24:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d28:	00400593          	li	a1,4
90000d2c:	02b50633          	mul	a2,a0,a1
90000d30:	22c12623          	sw	a2,556(sp)

90000d34 <inst_158>:

inst_158:
// rs1_val==-1431655766 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x33333334, -0x55555556, 0x33333332, x2, 560, x15)
90000d34:	aaaab537          	lui	a0,0xaaaab
90000d38:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d3c:	333335b7          	lui	a1,0x33333
90000d40:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90000d44:	02b50633          	mul	a2,a0,a1
90000d48:	22c12823          	sw	a2,560(sp)

90000d4c <inst_159>:

inst_159:
// rs1_val==-1431655766 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x11111112, -0x55555556, 0x66666665, x2, 564, x15)
90000d4c:	aaaab537          	lui	a0,0xaaaab
90000d50:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d54:	666665b7          	lui	a1,0x66666
90000d58:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90000d5c:	02b50633          	mul	a2,a0,a1
90000d60:	22c12a23          	sw	a2,564(sp)

90000d64 <inst_160>:

inst_160:
// rs1_val==-1431655766 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xaaaa31fe, -0x55555556, 0xb503, x2, 568, x15)
90000d64:	aaaab537          	lui	a0,0xaaaab
90000d68:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d6c:	0000b5b7          	lui	a1,0xb
90000d70:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90000d74:	02b50633          	mul	a2,a0,a1
90000d78:	22c12c23          	sw	a2,568(sp)

90000d7c <inst_161>:

inst_161:
// rs1_val==-1431655766 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x1c71c71c, -0x55555556, 0x55555556, x2, 572, x15)
90000d7c:	aaaab537          	lui	a0,0xaaaab
90000d80:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d84:	555555b7          	lui	a1,0x55555
90000d88:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90000d8c:	02b50633          	mul	a2,a0,a1
90000d90:	22c12e23          	sw	a2,572(sp)

90000d94 <inst_162>:

inst_162:
// rs1_val==-1431655766 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x8e38e38e, -0x55555556, -0x55555555, x2, 576, x15)
90000d94:	aaaab537          	lui	a0,0xaaaab
90000d98:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d9c:	aaaab5b7          	lui	a1,0xaaaab
90000da0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90000da4:	02b50633          	mul	a2,a0,a1
90000da8:	24c12023          	sw	a2,576(sp)

90000dac <inst_163>:

inst_163:
// rs1_val==-1431655766 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffc, -0x55555556, 0x6, x2, 580, x15)
90000dac:	aaaab537          	lui	a0,0xaaaab
90000db0:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000db4:	00600593          	li	a1,6
90000db8:	02b50633          	mul	a2,a0,a1
90000dbc:	24c12223          	sw	a2,580(sp)

90000dc0 <inst_164>:

inst_164:
// rs1_val==-1431655766 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x88888888, -0x55555556, 0x33333334, x2, 584, x15)
90000dc0:	aaaab537          	lui	a0,0xaaaab
90000dc4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000dc8:	333335b7          	lui	a1,0x33333
90000dcc:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90000dd0:	02b50633          	mul	a2,a0,a1
90000dd4:	24c12423          	sw	a2,584(sp)

90000dd8 <inst_165>:

inst_165:
// rs1_val==-1431655766 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x66666666, -0x55555556, 0x66666667, x2, 588, x15)
90000dd8:	aaaab537          	lui	a0,0xaaaab
90000ddc:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000de0:	666665b7          	lui	a1,0x66666
90000de4:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90000de8:	02b50633          	mul	a2,a0,a1
90000dec:	24c12623          	sw	a2,588(sp)

90000df0 <inst_166>:

inst_166:
// rs1_val==-1431655766 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x5555ce02, -0x55555556, -0xb503, x2, 592, x15)
90000df0:	aaaab537          	lui	a0,0xaaaab
90000df4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000df8:	ffff55b7          	lui	a1,0xffff5
90000dfc:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000e00:	02b50633          	mul	a2,a0,a1
90000e04:	24c12823          	sw	a2,592(sp)

90000e08 <inst_167>:

inst_167:
// rs1_val==-1431655766 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0xffff8752, -0x55555556, 0xb505, x2, 596, x15)
90000e08:	aaaab537          	lui	a0,0xaaaab
90000e0c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000e10:	0000b5b7          	lui	a1,0xb
90000e14:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90000e18:	02b50633          	mul	a2,a0,a1
90000e1c:	24c12a23          	sw	a2,596(sp)

90000e20 <inst_168>:

inst_168:
// rs1_val==5 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0xf, 0x5, 0x3, x2, 600, x15)
90000e20:	00500513          	li	a0,5
90000e24:	00300593          	li	a1,3
90000e28:	02b50633          	mul	a2,a0,a1
90000e2c:	24c12c23          	sw	a2,600(sp)

90000e30 <inst_169>:

inst_169:
// rs1_val==5 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaa9, 0x5, 0x55555555, x2, 604, x15)
90000e30:	00500513          	li	a0,5
90000e34:	555555b7          	lui	a1,0x55555
90000e38:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90000e3c:	02b50633          	mul	a2,a0,a1
90000e40:	24c12e23          	sw	a2,604(sp)

90000e44 <inst_170>:

inst_170:
// rs1_val==5 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x55555552, 0x5, -0x55555556, x2, 608, x15)
90000e44:	00500513          	li	a0,5
90000e48:	aaaab5b7          	lui	a1,0xaaaab
90000e4c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000e50:	02b50633          	mul	a2,a0,a1
90000e54:	26c12023          	sw	a2,608(sp)

90000e58 <inst_171>:

inst_171:
// rs1_val==5 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x19, 0x5, 0x5, x2, 612, x15)
90000e58:	00500513          	li	a0,5
90000e5c:	00500593          	li	a1,5
90000e60:	02b50633          	mul	a2,a0,a1
90000e64:	26c12223          	sw	a2,612(sp)

90000e68 <inst_172>:

inst_172:
// rs1_val==5 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0xffffffff, 0x5, 0x33333333, x2, 616, x15)
90000e68:	00500513          	li	a0,5
90000e6c:	333335b7          	lui	a1,0x33333
90000e70:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90000e74:	02b50633          	mul	a2,a0,a1
90000e78:	26c12423          	sw	a2,616(sp)

90000e7c <inst_173>:

inst_173:
// rs1_val==5 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffe, 0x5, 0x66666666, x2, 620, x15)
90000e7c:	00500513          	li	a0,5
90000e80:	666665b7          	lui	a1,0x66666
90000e84:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90000e88:	02b50633          	mul	a2,a0,a1
90000e8c:	26c12623          	sw	a2,620(sp)

90000e90 <inst_174>:

inst_174:
// rs1_val==5 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xfffc76ec, 0x5, -0xb504, x2, 624, x15)
90000e90:	00500513          	li	a0,5
90000e94:	ffff55b7          	lui	a1,0xffff5
90000e98:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90000e9c:	02b50633          	mul	a2,a0,a1
90000ea0:	26c12823          	sw	a2,624(sp)

90000ea4 <inst_175>:

inst_175:
// rs1_val==5 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x38914, 0x5, 0xb504, x2, 628, x15)
90000ea4:	00500513          	li	a0,5
90000ea8:	0000b5b7          	lui	a1,0xb
90000eac:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90000eb0:	02b50633          	mul	a2,a0,a1
90000eb4:	26c12a23          	sw	a2,628(sp)

90000eb8 <inst_176>:

inst_176:
// rs1_val==5 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0xa, 0x5, 0x2, x2, 632, x15)
90000eb8:	00500513          	li	a0,5
90000ebc:	00200593          	li	a1,2
90000ec0:	02b50633          	mul	a2,a0,a1
90000ec4:	26c12c23          	sw	a2,632(sp)

90000ec8 <inst_177>:

inst_177:
// rs1_val==5 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaa4, 0x5, 0x55555554, x2, 636, x15)
90000ec8:	00500513          	li	a0,5
90000ecc:	555555b7          	lui	a1,0x55555
90000ed0:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90000ed4:	02b50633          	mul	a2,a0,a1
90000ed8:	26c12e23          	sw	a2,636(sp)

90000edc <inst_178>:

inst_178:
// rs1_val==5 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x5, 0x0, x2, 640, x15)
90000edc:	00500513          	li	a0,5
90000ee0:	00000593          	li	a1,0
90000ee4:	02b50633          	mul	a2,a0,a1
90000ee8:	28c12023          	sw	a2,640(sp)

90000eec <inst_179>:

inst_179:
// rs1_val==5 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x14, 0x5, 0x4, x2, 644, x15)
90000eec:	00500513          	li	a0,5
90000ef0:	00400593          	li	a1,4
90000ef4:	02b50633          	mul	a2,a0,a1
90000ef8:	28c12223          	sw	a2,644(sp)

90000efc <inst_180>:

inst_180:
// rs1_val==5 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffa, 0x5, 0x33333332, x2, 648, x15)
90000efc:	00500513          	li	a0,5
90000f00:	333335b7          	lui	a1,0x33333
90000f04:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90000f08:	02b50633          	mul	a2,a0,a1
90000f0c:	28c12423          	sw	a2,648(sp)

90000f10 <inst_181>:

inst_181:
// rs1_val==5 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0xfffffff9, 0x5, 0x66666665, x2, 652, x15)
90000f10:	00500513          	li	a0,5
90000f14:	666665b7          	lui	a1,0x66666
90000f18:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90000f1c:	02b50633          	mul	a2,a0,a1
90000f20:	28c12623          	sw	a2,652(sp)

90000f24 <inst_182>:

inst_182:
// rs1_val==5 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x3890f, 0x5, 0xb503, x2, 656, x15)
90000f24:	00500513          	li	a0,5
90000f28:	0000b5b7          	lui	a1,0xb
90000f2c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90000f30:	02b50633          	mul	a2,a0,a1
90000f34:	28c12823          	sw	a2,656(sp)

90000f38 <inst_183>:

inst_183:
// rs1_val==5 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaae, 0x5, 0x55555556, x2, 660, x15)
90000f38:	00500513          	li	a0,5
90000f3c:	555555b7          	lui	a1,0x55555
90000f40:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90000f44:	02b50633          	mul	a2,a0,a1
90000f48:	28c12a23          	sw	a2,660(sp)

90000f4c <inst_184>:

inst_184:
// rs1_val==5 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x55555557, 0x5, -0x55555555, x2, 664, x15)
90000f4c:	00500513          	li	a0,5
90000f50:	aaaab5b7          	lui	a1,0xaaaab
90000f54:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90000f58:	02b50633          	mul	a2,a0,a1
90000f5c:	28c12c23          	sw	a2,664(sp)

90000f60 <inst_185>:

inst_185:
// rs1_val==5 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x1e, 0x5, 0x6, x2, 668, x15)
90000f60:	00500513          	li	a0,5
90000f64:	00600593          	li	a1,6
90000f68:	02b50633          	mul	a2,a0,a1
90000f6c:	28c12e23          	sw	a2,668(sp)

90000f70 <inst_186>:

inst_186:
// rs1_val==5 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x4, 0x5, 0x33333334, x2, 672, x15)
90000f70:	00500513          	li	a0,5
90000f74:	333335b7          	lui	a1,0x33333
90000f78:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90000f7c:	02b50633          	mul	a2,a0,a1
90000f80:	2ac12023          	sw	a2,672(sp)

90000f84 <inst_187>:

inst_187:
// rs1_val==5 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x3, 0x5, 0x66666667, x2, 676, x15)
90000f84:	00500513          	li	a0,5
90000f88:	666665b7          	lui	a1,0x66666
90000f8c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90000f90:	02b50633          	mul	a2,a0,a1
90000f94:	2ac12223          	sw	a2,676(sp)

90000f98 <inst_188>:

inst_188:
// rs1_val==5 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xfffc76f1, 0x5, -0xb503, x2, 680, x15)
90000f98:	00500513          	li	a0,5
90000f9c:	ffff55b7          	lui	a1,0xffff5
90000fa0:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000fa4:	02b50633          	mul	a2,a0,a1
90000fa8:	2ac12423          	sw	a2,680(sp)

90000fac <inst_189>:

inst_189:
// rs1_val==5 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x38919, 0x5, 0xb505, x2, 684, x15)
90000fac:	00500513          	li	a0,5
90000fb0:	0000b5b7          	lui	a1,0xb
90000fb4:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90000fb8:	02b50633          	mul	a2,a0,a1
90000fbc:	2ac12623          	sw	a2,684(sp)

90000fc0 <inst_190>:

inst_190:
// rs1_val==858993459 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x99999999, 0x33333333, 0x3, x2, 688, x15)
90000fc0:	33333537          	lui	a0,0x33333
90000fc4:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90000fc8:	00300593          	li	a1,3
90000fcc:	02b50633          	mul	a2,a0,a1
90000fd0:	2ac12823          	sw	a2,688(sp)

90000fd4 <inst_191>:

inst_191:
// rs1_val==858993459 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xeeeeeeef, 0x33333333, 0x55555555, x2, 692, x15)
90000fd4:	33333537          	lui	a0,0x33333
90000fd8:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90000fdc:	555555b7          	lui	a1,0x55555
90000fe0:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90000fe4:	02b50633          	mul	a2,a0,a1
90000fe8:	2ac12a23          	sw	a2,692(sp)

90000fec <inst_192>:

inst_192:
// rs1_val==858993459 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xddddddde, 0x33333333, -0x55555556, x2, 696, x15)
90000fec:	33333537          	lui	a0,0x33333
90000ff0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90000ff4:	aaaab5b7          	lui	a1,0xaaaab
90000ff8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000ffc:	02b50633          	mul	a2,a0,a1
90001000:	2ac12c23          	sw	a2,696(sp)

90001004 <inst_193>:

inst_193:
// rs1_val==858993459 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0xffffffff, 0x33333333, 0x5, x2, 700, x15)
90001004:	33333537          	lui	a0,0x33333
90001008:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
9000100c:	00500593          	li	a1,5
90001010:	02b50633          	mul	a2,a0,a1
90001014:	2ac12e23          	sw	a2,700(sp)

90001018 <inst_194>:

inst_194:
// rs1_val==858993459 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0xc28f5c29, 0x33333333, 0x33333333, x2, 704, x15)
90001018:	33333537          	lui	a0,0x33333
9000101c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001020:	333335b7          	lui	a1,0x33333
90001024:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001028:	02b50633          	mul	a2,a0,a1
9000102c:	2cc12023          	sw	a2,704(sp)

90001030 <inst_195>:

inst_195:
// rs1_val==858993459 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x851eb852, 0x33333333, 0x66666666, x2, 708, x15)
90001030:	33333537          	lui	a0,0x33333
90001034:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001038:	666665b7          	lui	a1,0x66666
9000103c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001040:	02b50633          	mul	a2,a0,a1
90001044:	2cc12223          	sw	a2,708(sp)

90001048 <inst_196>:

inst_196:
// rs1_val==858993459 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x2434, 0x33333333, -0xb504, x2, 712, x15)
90001048:	33333537          	lui	a0,0x33333
9000104c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001050:	ffff55b7          	lui	a1,0xffff5
90001054:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001058:	02b50633          	mul	a2,a0,a1
9000105c:	2cc12423          	sw	a2,712(sp)

90001060 <inst_197>:

inst_197:
// rs1_val==858993459 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xffffdbcc, 0x33333333, 0xb504, x2, 716, x15)
90001060:	33333537          	lui	a0,0x33333
90001064:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001068:	0000b5b7          	lui	a1,0xb
9000106c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001070:	02b50633          	mul	a2,a0,a1
90001074:	2cc12623          	sw	a2,716(sp)

90001078 <inst_198>:

inst_198:
// rs1_val==858993459 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x66666666, 0x33333333, 0x2, x2, 720, x15)
90001078:	33333537          	lui	a0,0x33333
9000107c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001080:	00200593          	li	a1,2
90001084:	02b50633          	mul	a2,a0,a1
90001088:	2cc12823          	sw	a2,720(sp)

9000108c <inst_199>:

inst_199:
// rs1_val==858993459 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0xbbbbbbbc, 0x33333333, 0x55555554, x2, 724, x15)
9000108c:	33333537          	lui	a0,0x33333
90001090:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001094:	555555b7          	lui	a1,0x55555
90001098:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
9000109c:	02b50633          	mul	a2,a0,a1
900010a0:	2cc12a23          	sw	a2,724(sp)

900010a4 <inst_200>:

inst_200:
// rs1_val==858993459 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x33333333, 0x0, x2, 728, x15)
900010a4:	33333537          	lui	a0,0x33333
900010a8:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
900010ac:	00000593          	li	a1,0
900010b0:	02b50633          	mul	a2,a0,a1
900010b4:	2cc12c23          	sw	a2,728(sp)

900010b8 <inst_201>:

inst_201:
// rs1_val==858993459 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0xcccccccc, 0x33333333, 0x4, x2, 732, x15)
900010b8:	33333537          	lui	a0,0x33333
900010bc:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
900010c0:	00400593          	li	a1,4
900010c4:	02b50633          	mul	a2,a0,a1
900010c8:	2cc12e23          	sw	a2,732(sp)

900010cc <inst_202>:

inst_202:
// rs1_val==858993459 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x8f5c28f6, 0x33333333, 0x33333332, x2, 736, x15)
900010cc:	33333537          	lui	a0,0x33333
900010d0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
900010d4:	333335b7          	lui	a1,0x33333
900010d8:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900010dc:	02b50633          	mul	a2,a0,a1
900010e0:	2ec12023          	sw	a2,736(sp)

900010e4 <inst_203>:

inst_203:
// rs1_val==858993459 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x51eb851f, 0x33333333, 0x66666665, x2, 740, x15)
900010e4:	33333537          	lui	a0,0x33333
900010e8:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
900010ec:	666665b7          	lui	a1,0x66666
900010f0:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900010f4:	02b50633          	mul	a2,a0,a1
900010f8:	2ec12223          	sw	a2,740(sp)

900010fc <inst_204>:

inst_204:
// rs1_val==858993459 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xcccca899, 0x33333333, 0xb503, x2, 744, x15)
900010fc:	33333537          	lui	a0,0x33333
90001100:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001104:	0000b5b7          	lui	a1,0xb
90001108:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
9000110c:	02b50633          	mul	a2,a0,a1
90001110:	2ec12423          	sw	a2,744(sp)

90001114 <inst_205>:

inst_205:
// rs1_val==858993459 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x22222222, 0x33333333, 0x55555556, x2, 748, x15)
90001114:	33333537          	lui	a0,0x33333
90001118:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
9000111c:	555555b7          	lui	a1,0x55555
90001120:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90001124:	02b50633          	mul	a2,a0,a1
90001128:	2ec12623          	sw	a2,748(sp)

9000112c <inst_206>:

inst_206:
// rs1_val==858993459 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x11111111, 0x33333333, -0x55555555, x2, 752, x15)
9000112c:	33333537          	lui	a0,0x33333
90001130:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001134:	aaaab5b7          	lui	a1,0xaaaab
90001138:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000113c:	02b50633          	mul	a2,a0,a1
90001140:	2ec12823          	sw	a2,752(sp)

90001144 <inst_207>:

inst_207:
// rs1_val==858993459 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x33333332, 0x33333333, 0x6, x2, 756, x15)
90001144:	33333537          	lui	a0,0x33333
90001148:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
9000114c:	00600593          	li	a1,6
90001150:	02b50633          	mul	a2,a0,a1
90001154:	2ec12a23          	sw	a2,756(sp)

90001158 <inst_208>:

inst_208:
// rs1_val==858993459 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0xf5c28f5c, 0x33333333, 0x33333334, x2, 760, x15)
90001158:	33333537          	lui	a0,0x33333
9000115c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001160:	333335b7          	lui	a1,0x33333
90001164:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001168:	02b50633          	mul	a2,a0,a1
9000116c:	2ec12c23          	sw	a2,760(sp)

90001170 <inst_209>:

inst_209:
// rs1_val==858993459 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0xb851eb85, 0x33333333, 0x66666667, x2, 764, x15)
90001170:	33333537          	lui	a0,0x33333
90001174:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001178:	666665b7          	lui	a1,0x66666
9000117c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001180:	02b50633          	mul	a2,a0,a1
90001184:	2ec12e23          	sw	a2,764(sp)

90001188 <inst_210>:

inst_210:
// rs1_val==858993459 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x33335767, 0x33333333, -0xb503, x2, 768, x15)
90001188:	33333537          	lui	a0,0x33333
9000118c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001190:	ffff55b7          	lui	a1,0xffff5
90001194:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001198:	02b50633          	mul	a2,a0,a1
9000119c:	30c12023          	sw	a2,768(sp)

900011a0 <inst_211>:

inst_211:
// rs1_val==858993459 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x33330eff, 0x33333333, 0xb505, x2, 772, x15)
900011a0:	33333537          	lui	a0,0x33333
900011a4:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
900011a8:	0000b5b7          	lui	a1,0xb
900011ac:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900011b0:	02b50633          	mul	a2,a0,a1
900011b4:	30c12223          	sw	a2,772(sp)

900011b8 <inst_212>:

inst_212:
// rs1_val==1717986918 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x33333332, 0x66666666, 0x3, x2, 776, x15)
900011b8:	66666537          	lui	a0,0x66666
900011bc:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900011c0:	00300593          	li	a1,3
900011c4:	02b50633          	mul	a2,a0,a1
900011c8:	30c12423          	sw	a2,776(sp)

900011cc <inst_213>:

inst_213:
// rs1_val==1717986918 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xddddddde, 0x66666666, 0x55555555, x2, 780, x15)
900011cc:	66666537          	lui	a0,0x66666
900011d0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900011d4:	555555b7          	lui	a1,0x55555
900011d8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900011dc:	02b50633          	mul	a2,a0,a1
900011e0:	30c12623          	sw	a2,780(sp)

900011e4 <inst_214>:

inst_214:
// rs1_val==1717986918 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xbbbbbbbc, 0x66666666, -0x55555556, x2, 784, x15)
900011e4:	66666537          	lui	a0,0x66666
900011e8:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900011ec:	aaaab5b7          	lui	a1,0xaaaab
900011f0:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900011f4:	02b50633          	mul	a2,a0,a1
900011f8:	30c12823          	sw	a2,784(sp)

900011fc <inst_215>:

inst_215:
// rs1_val==1717986918 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffe, 0x66666666, 0x5, x2, 788, x15)
900011fc:	66666537          	lui	a0,0x66666
90001200:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001204:	00500593          	li	a1,5
90001208:	02b50633          	mul	a2,a0,a1
9000120c:	30c12a23          	sw	a2,788(sp)

90001210 <inst_216>:

inst_216:
// rs1_val==1717986918 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x851eb852, 0x66666666, 0x33333333, x2, 792, x15)
90001210:	66666537          	lui	a0,0x66666
90001214:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001218:	333335b7          	lui	a1,0x33333
9000121c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001220:	02b50633          	mul	a2,a0,a1
90001224:	30c12c23          	sw	a2,792(sp)

90001228 <inst_217>:

inst_217:
// rs1_val==1717986918 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0xa3d70a4, 0x66666666, 0x66666666, x2, 796, x15)
90001228:	66666537          	lui	a0,0x66666
9000122c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001230:	666665b7          	lui	a1,0x66666
90001234:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001238:	02b50633          	mul	a2,a0,a1
9000123c:	30c12e23          	sw	a2,796(sp)

90001240 <inst_218>:

inst_218:
// rs1_val==1717986918 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x4868, 0x66666666, -0xb504, x2, 800, x15)
90001240:	66666537          	lui	a0,0x66666
90001244:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001248:	ffff55b7          	lui	a1,0xffff5
9000124c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001250:	02b50633          	mul	a2,a0,a1
90001254:	32c12023          	sw	a2,800(sp)

90001258 <inst_219>:

inst_219:
// rs1_val==1717986918 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xffffb798, 0x66666666, 0xb504, x2, 804, x15)
90001258:	66666537          	lui	a0,0x66666
9000125c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001260:	0000b5b7          	lui	a1,0xb
90001264:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001268:	02b50633          	mul	a2,a0,a1
9000126c:	32c12223          	sw	a2,804(sp)

90001270 <inst_220>:

inst_220:
// rs1_val==1717986918 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0xcccccccc, 0x66666666, 0x2, x2, 808, x15)
90001270:	66666537          	lui	a0,0x66666
90001274:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001278:	00200593          	li	a1,2
9000127c:	02b50633          	mul	a2,a0,a1
90001280:	32c12423          	sw	a2,808(sp)

90001284 <inst_221>:

inst_221:
// rs1_val==1717986918 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0x77777778, 0x66666666, 0x55555554, x2, 812, x15)
90001284:	66666537          	lui	a0,0x66666
90001288:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
9000128c:	555555b7          	lui	a1,0x55555
90001290:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001294:	02b50633          	mul	a2,a0,a1
90001298:	32c12623          	sw	a2,812(sp)

9000129c <inst_222>:

inst_222:
// rs1_val==1717986918 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x66666666, 0x0, x2, 816, x15)
9000129c:	66666537          	lui	a0,0x66666
900012a0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900012a4:	00000593          	li	a1,0
900012a8:	02b50633          	mul	a2,a0,a1
900012ac:	32c12823          	sw	a2,816(sp)

900012b0 <inst_223>:

inst_223:
// rs1_val==1717986918 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x99999998, 0x66666666, 0x4, x2, 820, x15)
900012b0:	66666537          	lui	a0,0x66666
900012b4:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900012b8:	00400593          	li	a1,4
900012bc:	02b50633          	mul	a2,a0,a1
900012c0:	32c12a23          	sw	a2,820(sp)

900012c4 <inst_224>:

inst_224:
// rs1_val==1717986918 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x1eb851ec, 0x66666666, 0x33333332, x2, 824, x15)
900012c4:	66666537          	lui	a0,0x66666
900012c8:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900012cc:	333335b7          	lui	a1,0x33333
900012d0:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900012d4:	02b50633          	mul	a2,a0,a1
900012d8:	32c12c23          	sw	a2,824(sp)

900012dc <inst_225>:

inst_225:
// rs1_val==1717986918 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0xa3d70a3e, 0x66666666, 0x66666665, x2, 828, x15)
900012dc:	66666537          	lui	a0,0x66666
900012e0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900012e4:	666665b7          	lui	a1,0x66666
900012e8:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900012ec:	02b50633          	mul	a2,a0,a1
900012f0:	32c12e23          	sw	a2,828(sp)

900012f4 <inst_226>:

inst_226:
// rs1_val==1717986918 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x99995132, 0x66666666, 0xb503, x2, 832, x15)
900012f4:	66666537          	lui	a0,0x66666
900012f8:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900012fc:	0000b5b7          	lui	a1,0xb
90001300:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90001304:	02b50633          	mul	a2,a0,a1
90001308:	34c12023          	sw	a2,832(sp)

9000130c <inst_227>:

inst_227:
// rs1_val==1717986918 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x44444444, 0x66666666, 0x55555556, x2, 836, x15)
9000130c:	66666537          	lui	a0,0x66666
90001310:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001314:	555555b7          	lui	a1,0x55555
90001318:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
9000131c:	02b50633          	mul	a2,a0,a1
90001320:	34c12223          	sw	a2,836(sp)

90001324 <inst_228>:

inst_228:
// rs1_val==1717986918 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x22222222, 0x66666666, -0x55555555, x2, 840, x15)
90001324:	66666537          	lui	a0,0x66666
90001328:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
9000132c:	aaaab5b7          	lui	a1,0xaaaab
90001330:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001334:	02b50633          	mul	a2,a0,a1
90001338:	34c12423          	sw	a2,840(sp)

9000133c <inst_229>:

inst_229:
// rs1_val==1717986918 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x66666664, 0x66666666, 0x6, x2, 844, x15)
9000133c:	66666537          	lui	a0,0x66666
90001340:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001344:	00600593          	li	a1,6
90001348:	02b50633          	mul	a2,a0,a1
9000134c:	34c12623          	sw	a2,844(sp)

90001350 <inst_230>:

inst_230:
// rs1_val==1717986918 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0xeb851eb8, 0x66666666, 0x33333334, x2, 848, x15)
90001350:	66666537          	lui	a0,0x66666
90001354:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001358:	333335b7          	lui	a1,0x33333
9000135c:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001360:	02b50633          	mul	a2,a0,a1
90001364:	34c12823          	sw	a2,848(sp)

90001368 <inst_231>:

inst_231:
// rs1_val==1717986918 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x70a3d70a, 0x66666666, 0x66666667, x2, 852, x15)
90001368:	66666537          	lui	a0,0x66666
9000136c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001370:	666665b7          	lui	a1,0x66666
90001374:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001378:	02b50633          	mul	a2,a0,a1
9000137c:	34c12a23          	sw	a2,852(sp)

90001380 <inst_232>:

inst_232:
// rs1_val==1717986918 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x6666aece, 0x66666666, -0xb503, x2, 856, x15)
90001380:	66666537          	lui	a0,0x66666
90001384:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001388:	ffff55b7          	lui	a1,0xffff5
9000138c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001390:	02b50633          	mul	a2,a0,a1
90001394:	34c12c23          	sw	a2,856(sp)

90001398 <inst_233>:

inst_233:
// rs1_val==1717986918 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x66661dfe, 0x66666666, 0xb505, x2, 860, x15)
90001398:	66666537          	lui	a0,0x66666
9000139c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900013a0:	0000b5b7          	lui	a1,0xb
900013a4:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900013a8:	02b50633          	mul	a2,a0,a1
900013ac:	34c12e23          	sw	a2,860(sp)

900013b0 <inst_234>:

inst_234:
// rs1_val==-46340 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0xfffde0f4, -0xb504, 0x3, x2, 864, x15)
900013b0:	ffff5537          	lui	a0,0xffff5
900013b4:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013b8:	00300593          	li	a1,3
900013bc:	02b50633          	mul	a2,a0,a1
900013c0:	36c12023          	sw	a2,864(sp)

900013c4 <inst_235>:

inst_235:
// rs1_val==-46340 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x555591ac, -0xb504, 0x55555555, x2, 868, x15)
900013c4:	ffff5537          	lui	a0,0xffff5
900013c8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013cc:	555555b7          	lui	a1,0x55555
900013d0:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900013d4:	02b50633          	mul	a2,a0,a1
900013d8:	36c12223          	sw	a2,868(sp)

900013dc <inst_236>:

inst_236:
// rs1_val==-46340 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xaaab2358, -0xb504, -0x55555556, x2, 872, x15)
900013dc:	ffff5537          	lui	a0,0xffff5
900013e0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013e4:	aaaab5b7          	lui	a1,0xaaaab
900013e8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900013ec:	02b50633          	mul	a2,a0,a1
900013f0:	36c12423          	sw	a2,872(sp)

900013f4 <inst_237>:

inst_237:
// rs1_val==-46340 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0xfffc76ec, -0xb504, 0x5, x2, 876, x15)
900013f4:	ffff5537          	lui	a0,0xffff5
900013f8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013fc:	00500593          	li	a1,5
90001400:	02b50633          	mul	a2,a0,a1
90001404:	36c12623          	sw	a2,876(sp)

90001408 <inst_238>:

inst_238:
// rs1_val==-46340 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x2434, -0xb504, 0x33333333, x2, 880, x15)
90001408:	ffff5537          	lui	a0,0xffff5
9000140c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001410:	333335b7          	lui	a1,0x33333
90001414:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001418:	02b50633          	mul	a2,a0,a1
9000141c:	36c12823          	sw	a2,880(sp)

90001420 <inst_239>:

inst_239:
// rs1_val==-46340 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x4868, -0xb504, 0x66666666, x2, 884, x15)
90001420:	ffff5537          	lui	a0,0xffff5
90001424:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001428:	666665b7          	lui	a1,0x66666
9000142c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001430:	02b50633          	mul	a2,a0,a1
90001434:	36c12a23          	sw	a2,884(sp)

90001438 <inst_240>:

inst_240:
// rs1_val==-46340 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x7ffea810, -0xb504, -0xb504, x2, 888, x15)
90001438:	ffff5537          	lui	a0,0xffff5
9000143c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001440:	ffff55b7          	lui	a1,0xffff5
90001444:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001448:	02b50633          	mul	a2,a0,a1
9000144c:	36c12c23          	sw	a2,888(sp)

90001450 <inst_241>:

inst_241:
// rs1_val==-46340 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x800157f0, -0xb504, 0xb504, x2, 892, x15)
90001450:	ffff5537          	lui	a0,0xffff5
90001454:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001458:	0000b5b7          	lui	a1,0xb
9000145c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001460:	02b50633          	mul	a2,a0,a1
90001464:	36c12e23          	sw	a2,892(sp)

90001468 <inst_242>:

inst_242:
// rs1_val==-46340 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0xfffe95f8, -0xb504, 0x2, x2, 896, x15)
90001468:	ffff5537          	lui	a0,0xffff5
9000146c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001470:	00200593          	li	a1,2
90001474:	02b50633          	mul	a2,a0,a1
90001478:	38c12023          	sw	a2,896(sp)

9000147c <inst_243>:

inst_243:
// rs1_val==-46340 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0x555646b0, -0xb504, 0x55555554, x2, 900, x15)
9000147c:	ffff5537          	lui	a0,0xffff5
90001480:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001484:	555555b7          	lui	a1,0x55555
90001488:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
9000148c:	02b50633          	mul	a2,a0,a1
90001490:	38c12223          	sw	a2,900(sp)

90001494 <inst_244>:

inst_244:
// rs1_val==-46340 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, -0xb504, 0x0, x2, 904, x15)
90001494:	ffff5537          	lui	a0,0xffff5
90001498:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
9000149c:	00000593          	li	a1,0
900014a0:	02b50633          	mul	a2,a0,a1
900014a4:	38c12423          	sw	a2,904(sp)

900014a8 <inst_245>:

inst_245:
// rs1_val==-46340 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0xfffd2bf0, -0xb504, 0x4, x2, 908, x15)
900014a8:	ffff5537          	lui	a0,0xffff5
900014ac:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014b0:	00400593          	li	a1,4
900014b4:	02b50633          	mul	a2,a0,a1
900014b8:	38c12623          	sw	a2,908(sp)

900014bc <inst_246>:

inst_246:
// rs1_val==-46340 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0xd938, -0xb504, 0x33333332, x2, 912, x15)
900014bc:	ffff5537          	lui	a0,0xffff5
900014c0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014c4:	333335b7          	lui	a1,0x33333
900014c8:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900014cc:	02b50633          	mul	a2,a0,a1
900014d0:	38c12823          	sw	a2,912(sp)

900014d4 <inst_247>:

inst_247:
// rs1_val==-46340 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0xfd6c, -0xb504, 0x66666665, x2, 916, x15)
900014d4:	ffff5537          	lui	a0,0xffff5
900014d8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014dc:	666665b7          	lui	a1,0x66666
900014e0:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900014e4:	02b50633          	mul	a2,a0,a1
900014e8:	38c12a23          	sw	a2,916(sp)

900014ec <inst_248>:

inst_248:
// rs1_val==-46340 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x80020cf4, -0xb504, 0xb503, x2, 920, x15)
900014ec:	ffff5537          	lui	a0,0xffff5
900014f0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014f4:	0000b5b7          	lui	a1,0xb
900014f8:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900014fc:	02b50633          	mul	a2,a0,a1
90001500:	38c12c23          	sw	a2,920(sp)

90001504 <inst_249>:

inst_249:
// rs1_val==-46340 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x5554dca8, -0xb504, 0x55555556, x2, 924, x15)
90001504:	ffff5537          	lui	a0,0xffff5
90001508:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
9000150c:	555555b7          	lui	a1,0x55555
90001510:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90001514:	02b50633          	mul	a2,a0,a1
90001518:	38c12e23          	sw	a2,924(sp)

9000151c <inst_250>:

inst_250:
// rs1_val==-46340 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xaaaa6e54, -0xb504, -0x55555555, x2, 928, x15)
9000151c:	ffff5537          	lui	a0,0xffff5
90001520:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001524:	aaaab5b7          	lui	a1,0xaaaab
90001528:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000152c:	02b50633          	mul	a2,a0,a1
90001530:	3ac12023          	sw	a2,928(sp)

90001534 <inst_251>:

inst_251:
// rs1_val==-46340 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0xfffbc1e8, -0xb504, 0x6, x2, 932, x15)
90001534:	ffff5537          	lui	a0,0xffff5
90001538:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
9000153c:	00600593          	li	a1,6
90001540:	02b50633          	mul	a2,a0,a1
90001544:	3ac12223          	sw	a2,932(sp)

90001548 <inst_252>:

inst_252:
// rs1_val==-46340 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0xffff6f30, -0xb504, 0x33333334, x2, 936, x15)
90001548:	ffff5537          	lui	a0,0xffff5
9000154c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001550:	333335b7          	lui	a1,0x33333
90001554:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001558:	02b50633          	mul	a2,a0,a1
9000155c:	3ac12423          	sw	a2,936(sp)

90001560 <inst_253>:

inst_253:
// rs1_val==-46340 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0xffff9364, -0xb504, 0x66666667, x2, 940, x15)
90001560:	ffff5537          	lui	a0,0xffff5
90001564:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001568:	666665b7          	lui	a1,0x66666
9000156c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001570:	02b50633          	mul	a2,a0,a1
90001574:	3ac12623          	sw	a2,940(sp)

90001578 <inst_254>:

inst_254:
// rs1_val==-46340 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x7ffdf30c, -0xb504, -0xb503, x2, 944, x15)
90001578:	ffff5537          	lui	a0,0xffff5
9000157c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001580:	ffff55b7          	lui	a1,0xffff5
90001584:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001588:	02b50633          	mul	a2,a0,a1
9000158c:	3ac12823          	sw	a2,944(sp)

90001590 <inst_255>:

inst_255:
// rs1_val==-46340 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x8000a2ec, -0xb504, 0xb505, x2, 948, x15)
90001590:	ffff5537          	lui	a0,0xffff5
90001594:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001598:	0000b5b7          	lui	a1,0xb
9000159c:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900015a0:	02b50633          	mul	a2,a0,a1
900015a4:	3ac12a23          	sw	a2,948(sp)

900015a8 <inst_256>:

inst_256:
// rs1_val==46340 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x21f0c, 0xb504, 0x3, x2, 952, x15)
900015a8:	0000b537          	lui	a0,0xb
900015ac:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900015b0:	00300593          	li	a1,3
900015b4:	02b50633          	mul	a2,a0,a1
900015b8:	3ac12c23          	sw	a2,952(sp)

900015bc <inst_257>:

inst_257:
// rs1_val==46340 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xaaaa6e54, 0xb504, 0x55555555, x2, 956, x15)
900015bc:	0000b537          	lui	a0,0xb
900015c0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900015c4:	555555b7          	lui	a1,0x55555
900015c8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900015cc:	02b50633          	mul	a2,a0,a1
900015d0:	3ac12e23          	sw	a2,956(sp)

900015d4 <inst_258>:

inst_258:
// rs1_val==46340 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x5554dca8, 0xb504, -0x55555556, x2, 960, x15)
900015d4:	0000b537          	lui	a0,0xb
900015d8:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900015dc:	aaaab5b7          	lui	a1,0xaaaab
900015e0:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900015e4:	02b50633          	mul	a2,a0,a1
900015e8:	3cc12023          	sw	a2,960(sp)

900015ec <inst_259>:

inst_259:
// rs1_val==46340 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x38914, 0xb504, 0x5, x2, 964, x15)
900015ec:	0000b537          	lui	a0,0xb
900015f0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900015f4:	00500593          	li	a1,5
900015f8:	02b50633          	mul	a2,a0,a1
900015fc:	3cc12223          	sw	a2,964(sp)

90001600 <inst_260>:

inst_260:
// rs1_val==46340 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0xffffdbcc, 0xb504, 0x33333333, x2, 968, x15)
90001600:	0000b537          	lui	a0,0xb
90001604:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001608:	333335b7          	lui	a1,0x33333
9000160c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001610:	02b50633          	mul	a2,a0,a1
90001614:	3cc12423          	sw	a2,968(sp)

90001618 <inst_261>:

inst_261:
// rs1_val==46340 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0xffffb798, 0xb504, 0x66666666, x2, 972, x15)
90001618:	0000b537          	lui	a0,0xb
9000161c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001620:	666665b7          	lui	a1,0x66666
90001624:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001628:	02b50633          	mul	a2,a0,a1
9000162c:	3cc12623          	sw	a2,972(sp)

90001630 <inst_262>:

inst_262:
// rs1_val==46340 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x800157f0, 0xb504, -0xb504, x2, 976, x15)
90001630:	0000b537          	lui	a0,0xb
90001634:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001638:	ffff55b7          	lui	a1,0xffff5
9000163c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001640:	02b50633          	mul	a2,a0,a1
90001644:	3cc12823          	sw	a2,976(sp)

90001648 <inst_263>:

inst_263:
// rs1_val==46340 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x7ffea810, 0xb504, 0xb504, x2, 980, x15)
90001648:	0000b537          	lui	a0,0xb
9000164c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001650:	0000b5b7          	lui	a1,0xb
90001654:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001658:	02b50633          	mul	a2,a0,a1
9000165c:	3cc12a23          	sw	a2,980(sp)

90001660 <inst_264>:

inst_264:
// rs1_val==46340 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x16a08, 0xb504, 0x2, x2, 984, x15)
90001660:	0000b537          	lui	a0,0xb
90001664:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001668:	00200593          	li	a1,2
9000166c:	02b50633          	mul	a2,a0,a1
90001670:	3cc12c23          	sw	a2,984(sp)

90001674 <inst_265>:

inst_265:
// rs1_val==46340 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0xaaa9b950, 0xb504, 0x55555554, x2, 988, x15)
90001674:	0000b537          	lui	a0,0xb
90001678:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
9000167c:	555555b7          	lui	a1,0x55555
90001680:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001684:	02b50633          	mul	a2,a0,a1
90001688:	3cc12e23          	sw	a2,988(sp)

9000168c <inst_266>:

inst_266:
// rs1_val==46340 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0xb504, 0x0, x2, 992, x15)
9000168c:	0000b537          	lui	a0,0xb
90001690:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001694:	00000593          	li	a1,0
90001698:	02b50633          	mul	a2,a0,a1
9000169c:	3ec12023          	sw	a2,992(sp)

900016a0 <inst_267>:

inst_267:
// rs1_val==46340 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x2d410, 0xb504, 0x4, x2, 996, x15)
900016a0:	0000b537          	lui	a0,0xb
900016a4:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900016a8:	00400593          	li	a1,4
900016ac:	02b50633          	mul	a2,a0,a1
900016b0:	3ec12223          	sw	a2,996(sp)

900016b4 <inst_268>:

inst_268:
// rs1_val==46340 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0xffff26c8, 0xb504, 0x33333332, x2, 1000, x15)
900016b4:	0000b537          	lui	a0,0xb
900016b8:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900016bc:	333335b7          	lui	a1,0x33333
900016c0:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900016c4:	02b50633          	mul	a2,a0,a1
900016c8:	3ec12423          	sw	a2,1000(sp)

900016cc <inst_269>:

inst_269:
// rs1_val==46340 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0xffff0294, 0xb504, 0x66666665, x2, 1004, x15)
900016cc:	0000b537          	lui	a0,0xb
900016d0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900016d4:	666665b7          	lui	a1,0x66666
900016d8:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900016dc:	02b50633          	mul	a2,a0,a1
900016e0:	3ec12623          	sw	a2,1004(sp)

900016e4 <inst_270>:

inst_270:
// rs1_val==46340 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x7ffdf30c, 0xb504, 0xb503, x2, 1008, x15)
900016e4:	0000b537          	lui	a0,0xb
900016e8:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900016ec:	0000b5b7          	lui	a1,0xb
900016f0:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900016f4:	02b50633          	mul	a2,a0,a1
900016f8:	3ec12823          	sw	a2,1008(sp)

900016fc <inst_271>:

inst_271:
// rs1_val==46340 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xaaab2358, 0xb504, 0x55555556, x2, 1012, x15)
900016fc:	0000b537          	lui	a0,0xb
90001700:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001704:	555555b7          	lui	a1,0x55555
90001708:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
9000170c:	02b50633          	mul	a2,a0,a1
90001710:	3ec12a23          	sw	a2,1012(sp)

90001714 <inst_272>:

inst_272:
// rs1_val==46340 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x555591ac, 0xb504, -0x55555555, x2, 1016, x15)
90001714:	0000b537          	lui	a0,0xb
90001718:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
9000171c:	aaaab5b7          	lui	a1,0xaaaab
90001720:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001724:	02b50633          	mul	a2,a0,a1
90001728:	3ec12c23          	sw	a2,1016(sp)

9000172c <inst_273>:

inst_273:
// rs1_val==46340 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x43e18, 0xb504, 0x6, x2, 1020, x15)
9000172c:	0000b537          	lui	a0,0xb
90001730:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001734:	00600593          	li	a1,6
90001738:	02b50633          	mul	a2,a0,a1
9000173c:	3ec12e23          	sw	a2,1020(sp)

90001740 <inst_274>:

inst_274:
// rs1_val==46340 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x90d0, 0xb504, 0x33333334, x2, 1024, x15)
90001740:	0000b537          	lui	a0,0xb
90001744:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001748:	333335b7          	lui	a1,0x33333
9000174c:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001750:	02b50633          	mul	a2,a0,a1
90001754:	40c12023          	sw	a2,1024(sp)

90001758 <inst_275>:

inst_275:
// rs1_val==46340 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x6c9c, 0xb504, 0x66666667, x2, 1028, x15)
90001758:	0000b537          	lui	a0,0xb
9000175c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001760:	666665b7          	lui	a1,0x66666
90001764:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001768:	02b50633          	mul	a2,a0,a1
9000176c:	40c12223          	sw	a2,1028(sp)

90001770 <inst_276>:

inst_276:
// rs1_val==46340 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x80020cf4, 0xb504, -0xb503, x2, 1032, x15)
90001770:	0000b537          	lui	a0,0xb
90001774:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001778:	ffff55b7          	lui	a1,0xffff5
9000177c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001780:	02b50633          	mul	a2,a0,a1
90001784:	40c12423          	sw	a2,1032(sp)

90001788 <inst_277>:

inst_277:
// rs1_val==46340 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x7fff5d14, 0xb504, 0xb505, x2, 1036, x15)
90001788:	0000b537          	lui	a0,0xb
9000178c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001790:	0000b5b7          	lui	a1,0xb
90001794:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001798:	02b50633          	mul	a2,a0,a1
9000179c:	40c12623          	sw	a2,1036(sp)

900017a0 <inst_278>:

inst_278:
// rs1_val==2 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x6, 0x2, 0x3, x2, 1040, x15)
900017a0:	00200513          	li	a0,2
900017a4:	00300593          	li	a1,3
900017a8:	02b50633          	mul	a2,a0,a1
900017ac:	40c12823          	sw	a2,1040(sp)

900017b0 <inst_279>:

inst_279:
// rs1_val==2 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaaa, 0x2, 0x55555555, x2, 1044, x15)
900017b0:	00200513          	li	a0,2
900017b4:	555555b7          	lui	a1,0x55555
900017b8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900017bc:	02b50633          	mul	a2,a0,a1
900017c0:	40c12a23          	sw	a2,1044(sp)

900017c4 <inst_280>:

inst_280:
// rs1_val==2 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x55555554, 0x2, -0x55555556, x2, 1048, x15)
900017c4:	00200513          	li	a0,2
900017c8:	aaaab5b7          	lui	a1,0xaaaab
900017cc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900017d0:	02b50633          	mul	a2,a0,a1
900017d4:	40c12c23          	sw	a2,1048(sp)

900017d8 <inst_281>:

inst_281:
// rs1_val==2 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0xa, 0x2, 0x5, x2, 1052, x15)
900017d8:	00200513          	li	a0,2
900017dc:	00500593          	li	a1,5
900017e0:	02b50633          	mul	a2,a0,a1
900017e4:	40c12e23          	sw	a2,1052(sp)

900017e8 <inst_282>:

inst_282:
// rs1_val==2 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x66666666, 0x2, 0x33333333, x2, 1056, x15)
900017e8:	00200513          	li	a0,2
900017ec:	333335b7          	lui	a1,0x33333
900017f0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
900017f4:	02b50633          	mul	a2,a0,a1
900017f8:	42c12023          	sw	a2,1056(sp)

900017fc <inst_283>:

inst_283:
// rs1_val==2 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0xcccccccc, 0x2, 0x66666666, x2, 1060, x15)
900017fc:	00200513          	li	a0,2
90001800:	666665b7          	lui	a1,0x66666
90001804:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001808:	02b50633          	mul	a2,a0,a1
9000180c:	42c12223          	sw	a2,1060(sp)

90001810 <inst_284>:

inst_284:
// rs1_val==2 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xfffe95f8, 0x2, -0xb504, x2, 1064, x15)
90001810:	00200513          	li	a0,2
90001814:	ffff55b7          	lui	a1,0xffff5
90001818:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000181c:	02b50633          	mul	a2,a0,a1
90001820:	42c12423          	sw	a2,1064(sp)

90001824 <inst_285>:

inst_285:
// rs1_val==2 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x16a08, 0x2, 0xb504, x2, 1068, x15)
90001824:	00200513          	li	a0,2
90001828:	0000b5b7          	lui	a1,0xb
9000182c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001830:	02b50633          	mul	a2,a0,a1
90001834:	42c12623          	sw	a2,1068(sp)

90001838 <inst_286>:

inst_286:
// rs1_val==2 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x4, 0x2, 0x2, x2, 1072, x15)
90001838:	00200513          	li	a0,2
9000183c:	00200593          	li	a1,2
90001840:	02b50633          	mul	a2,a0,a1
90001844:	42c12823          	sw	a2,1072(sp)

90001848 <inst_287>:

inst_287:
// rs1_val==2 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaa8, 0x2, 0x55555554, x2, 1076, x15)
90001848:	00200513          	li	a0,2
9000184c:	555555b7          	lui	a1,0x55555
90001850:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001854:	02b50633          	mul	a2,a0,a1
90001858:	42c12a23          	sw	a2,1076(sp)

9000185c <inst_288>:

inst_288:
// rs1_val==2 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x2, 0x0, x2, 1080, x15)
9000185c:	00200513          	li	a0,2
90001860:	00000593          	li	a1,0
90001864:	02b50633          	mul	a2,a0,a1
90001868:	42c12c23          	sw	a2,1080(sp)

9000186c <inst_289>:

inst_289:
// rs1_val==2 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x8, 0x2, 0x4, x2, 1084, x15)
9000186c:	00200513          	li	a0,2
90001870:	00400593          	li	a1,4
90001874:	02b50633          	mul	a2,a0,a1
90001878:	42c12e23          	sw	a2,1084(sp)

9000187c <inst_290>:

inst_290:
// rs1_val==2 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x66666664, 0x2, 0x33333332, x2, 1088, x15)
9000187c:	00200513          	li	a0,2
90001880:	333335b7          	lui	a1,0x33333
90001884:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90001888:	02b50633          	mul	a2,a0,a1
9000188c:	44c12023          	sw	a2,1088(sp)

90001890 <inst_291>:

inst_291:
// rs1_val==2 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0xccccccca, 0x2, 0x66666665, x2, 1092, x15)
90001890:	00200513          	li	a0,2
90001894:	666665b7          	lui	a1,0x66666
90001898:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
9000189c:	02b50633          	mul	a2,a0,a1
900018a0:	44c12223          	sw	a2,1092(sp)

900018a4 <inst_292>:

inst_292:
// rs1_val==2 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x16a06, 0x2, 0xb503, x2, 1096, x15)
900018a4:	00200513          	li	a0,2
900018a8:	0000b5b7          	lui	a1,0xb
900018ac:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900018b0:	02b50633          	mul	a2,a0,a1
900018b4:	44c12423          	sw	a2,1096(sp)

900018b8 <inst_293>:

inst_293:
// rs1_val==2 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaac, 0x2, 0x55555556, x2, 1100, x15)
900018b8:	00200513          	li	a0,2
900018bc:	555555b7          	lui	a1,0x55555
900018c0:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
900018c4:	02b50633          	mul	a2,a0,a1
900018c8:	44c12623          	sw	a2,1100(sp)

900018cc <inst_294>:

inst_294:
// rs1_val==2 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x55555556, 0x2, -0x55555555, x2, 1104, x15)
900018cc:	00200513          	li	a0,2
900018d0:	aaaab5b7          	lui	a1,0xaaaab
900018d4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900018d8:	02b50633          	mul	a2,a0,a1
900018dc:	44c12823          	sw	a2,1104(sp)

900018e0 <inst_295>:

inst_295:
// rs1_val==2 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0xc, 0x2, 0x6, x2, 1108, x15)
900018e0:	00200513          	li	a0,2
900018e4:	00600593          	li	a1,6
900018e8:	02b50633          	mul	a2,a0,a1
900018ec:	44c12a23          	sw	a2,1108(sp)

900018f0 <inst_296>:

inst_296:
// rs1_val==2 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x66666668, 0x2, 0x33333334, x2, 1112, x15)
900018f0:	00200513          	li	a0,2
900018f4:	333335b7          	lui	a1,0x33333
900018f8:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
900018fc:	02b50633          	mul	a2,a0,a1
90001900:	44c12c23          	sw	a2,1112(sp)

90001904 <inst_297>:

inst_297:
// rs1_val==2 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0xccccccce, 0x2, 0x66666667, x2, 1116, x15)
90001904:	00200513          	li	a0,2
90001908:	666665b7          	lui	a1,0x66666
9000190c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001910:	02b50633          	mul	a2,a0,a1
90001914:	44c12e23          	sw	a2,1116(sp)

90001918 <inst_298>:

inst_298:
// rs1_val==2 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xfffe95fa, 0x2, -0xb503, x2, 1120, x15)
90001918:	00200513          	li	a0,2
9000191c:	ffff55b7          	lui	a1,0xffff5
90001920:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001924:	02b50633          	mul	a2,a0,a1
90001928:	46c12023          	sw	a2,1120(sp)

9000192c <inst_299>:

inst_299:
// rs1_val==2 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x16a0a, 0x2, 0xb505, x2, 1124, x15)
9000192c:	00200513          	li	a0,2
90001930:	0000b5b7          	lui	a1,0xb
90001934:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001938:	02b50633          	mul	a2,a0,a1
9000193c:	46c12223          	sw	a2,1124(sp)

90001940 <inst_300>:

inst_300:
// rs1_val==1431655764 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffc, 0x55555554, 0x3, x2, 1128, x15)
90001940:	55555537          	lui	a0,0x55555
90001944:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001948:	00300593          	li	a1,3
9000194c:	02b50633          	mul	a2,a0,a1
90001950:	46c12423          	sw	a2,1128(sp)

90001954 <inst_301>:

inst_301:
// rs1_val==1431655764 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xe38e38e4, 0x55555554, 0x55555555, x2, 1132, x15)
90001954:	55555537          	lui	a0,0x55555
90001958:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
9000195c:	555555b7          	lui	a1,0x55555
90001960:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90001964:	02b50633          	mul	a2,a0,a1
90001968:	46c12623          	sw	a2,1132(sp)

9000196c <inst_302>:

inst_302:
// rs1_val==1431655764 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xc71c71c8, 0x55555554, -0x55555556, x2, 1136, x15)
9000196c:	55555537          	lui	a0,0x55555
90001970:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001974:	aaaab5b7          	lui	a1,0xaaaab
90001978:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
9000197c:	02b50633          	mul	a2,a0,a1
90001980:	46c12823          	sw	a2,1136(sp)

90001984 <inst_303>:

inst_303:
// rs1_val==1431655764 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaa4, 0x55555554, 0x5, x2, 1140, x15)
90001984:	55555537          	lui	a0,0x55555
90001988:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
9000198c:	00500593          	li	a1,5
90001990:	02b50633          	mul	a2,a0,a1
90001994:	46c12a23          	sw	a2,1140(sp)

90001998 <inst_304>:

inst_304:
// rs1_val==1431655764 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0xbbbbbbbc, 0x55555554, 0x33333333, x2, 1144, x15)
90001998:	55555537          	lui	a0,0x55555
9000199c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
900019a0:	333335b7          	lui	a1,0x33333
900019a4:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
900019a8:	02b50633          	mul	a2,a0,a1
900019ac:	46c12c23          	sw	a2,1144(sp)

900019b0 <inst_305>:

inst_305:
// rs1_val==1431655764 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x77777778, 0x55555554, 0x66666666, x2, 1148, x15)
900019b0:	55555537          	lui	a0,0x55555
900019b4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
900019b8:	666665b7          	lui	a1,0x66666
900019bc:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
900019c0:	02b50633          	mul	a2,a0,a1
900019c4:	46c12e23          	sw	a2,1148(sp)

900019c8 <inst_306>:

inst_306:
// rs1_val==1431655764 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x555646b0, 0x55555554, -0xb504, x2, 1152, x15)
900019c8:	55555537          	lui	a0,0x55555
900019cc:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
900019d0:	ffff55b7          	lui	a1,0xffff5
900019d4:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
900019d8:	02b50633          	mul	a2,a0,a1
900019dc:	48c12023          	sw	a2,1152(sp)

900019e0 <inst_307>:

inst_307:
// rs1_val==1431655764 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xaaa9b950, 0x55555554, 0xb504, x2, 1156, x15)
900019e0:	55555537          	lui	a0,0x55555
900019e4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
900019e8:	0000b5b7          	lui	a1,0xb
900019ec:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
900019f0:	02b50633          	mul	a2,a0,a1
900019f4:	48c12223          	sw	a2,1156(sp)

900019f8 <inst_308>:

inst_308:
// rs1_val==1431655764 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaa8, 0x55555554, 0x2, x2, 1160, x15)
900019f8:	55555537          	lui	a0,0x55555
900019fc:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a00:	00200593          	li	a1,2
90001a04:	02b50633          	mul	a2,a0,a1
90001a08:	48c12423          	sw	a2,1160(sp)

90001a0c <inst_309>:

inst_309:
// rs1_val==1431655764 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0x8e38e390, 0x55555554, 0x55555554, x2, 1164, x15)
90001a0c:	55555537          	lui	a0,0x55555
90001a10:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a14:	555555b7          	lui	a1,0x55555
90001a18:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001a1c:	02b50633          	mul	a2,a0,a1
90001a20:	48c12623          	sw	a2,1164(sp)

90001a24 <inst_310>:

inst_310:
// rs1_val==1431655764 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x55555554, 0x0, x2, 1168, x15)
90001a24:	55555537          	lui	a0,0x55555
90001a28:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a2c:	00000593          	li	a1,0
90001a30:	02b50633          	mul	a2,a0,a1
90001a34:	48c12823          	sw	a2,1168(sp)

90001a38 <inst_311>:

inst_311:
// rs1_val==1431655764 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x55555550, 0x55555554, 0x4, x2, 1172, x15)
90001a38:	55555537          	lui	a0,0x55555
90001a3c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a40:	00400593          	li	a1,4
90001a44:	02b50633          	mul	a2,a0,a1
90001a48:	48c12a23          	sw	a2,1172(sp)

90001a4c <inst_312>:

inst_312:
// rs1_val==1431655764 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x66666668, 0x55555554, 0x33333332, x2, 1176, x15)
90001a4c:	55555537          	lui	a0,0x55555
90001a50:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a54:	333335b7          	lui	a1,0x33333
90001a58:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90001a5c:	02b50633          	mul	a2,a0,a1
90001a60:	48c12c23          	sw	a2,1176(sp)

90001a64 <inst_313>:

inst_313:
// rs1_val==1431655764 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x22222224, 0x55555554, 0x66666665, x2, 1180, x15)
90001a64:	55555537          	lui	a0,0x55555
90001a68:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a6c:	666665b7          	lui	a1,0x66666
90001a70:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90001a74:	02b50633          	mul	a2,a0,a1
90001a78:	48c12e23          	sw	a2,1180(sp)

90001a7c <inst_314>:

inst_314:
// rs1_val==1431655764 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x555463fc, 0x55555554, 0xb503, x2, 1184, x15)
90001a7c:	55555537          	lui	a0,0x55555
90001a80:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a84:	0000b5b7          	lui	a1,0xb
90001a88:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90001a8c:	02b50633          	mul	a2,a0,a1
90001a90:	4ac12023          	sw	a2,1184(sp)

90001a94 <inst_315>:

inst_315:
// rs1_val==1431655764 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x38e38e38, 0x55555554, 0x55555556, x2, 1188, x15)
90001a94:	55555537          	lui	a0,0x55555
90001a98:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a9c:	555555b7          	lui	a1,0x55555
90001aa0:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90001aa4:	02b50633          	mul	a2,a0,a1
90001aa8:	4ac12223          	sw	a2,1188(sp)

90001aac <inst_316>:

inst_316:
// rs1_val==1431655764 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x1c71c71c, 0x55555554, -0x55555555, x2, 1192, x15)
90001aac:	55555537          	lui	a0,0x55555
90001ab0:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001ab4:	aaaab5b7          	lui	a1,0xaaaab
90001ab8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001abc:	02b50633          	mul	a2,a0,a1
90001ac0:	4ac12423          	sw	a2,1192(sp)

90001ac4 <inst_317>:

inst_317:
// rs1_val==1431655764 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0xfffffff8, 0x55555554, 0x6, x2, 1196, x15)
90001ac4:	55555537          	lui	a0,0x55555
90001ac8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001acc:	00600593          	li	a1,6
90001ad0:	02b50633          	mul	a2,a0,a1
90001ad4:	4ac12623          	sw	a2,1196(sp)

90001ad8 <inst_318>:

inst_318:
// rs1_val==1431655764 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x11111110, 0x55555554, 0x33333334, x2, 1200, x15)
90001ad8:	55555537          	lui	a0,0x55555
90001adc:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001ae0:	333335b7          	lui	a1,0x33333
90001ae4:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001ae8:	02b50633          	mul	a2,a0,a1
90001aec:	4ac12823          	sw	a2,1200(sp)

90001af0 <inst_319>:

inst_319:
// rs1_val==1431655764 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0xcccccccc, 0x55555554, 0x66666667, x2, 1204, x15)
90001af0:	55555537          	lui	a0,0x55555
90001af4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001af8:	666665b7          	lui	a1,0x66666
90001afc:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001b00:	02b50633          	mul	a2,a0,a1
90001b04:	4ac12a23          	sw	a2,1204(sp)

90001b08 <inst_320>:

inst_320:
// rs1_val==1431655764 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xaaab9c04, 0x55555554, -0xb503, x2, 1208, x15)
90001b08:	55555537          	lui	a0,0x55555
90001b0c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001b10:	ffff55b7          	lui	a1,0xffff5
90001b14:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001b18:	02b50633          	mul	a2,a0,a1
90001b1c:	4ac12c23          	sw	a2,1208(sp)

90001b20 <inst_321>:

inst_321:
// rs1_val==1431655764 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0xffff0ea4, 0x55555554, 0xb505, x2, 1212, x15)
90001b20:	55555537          	lui	a0,0x55555
90001b24:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001b28:	0000b5b7          	lui	a1,0xb
90001b2c:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001b30:	02b50633          	mul	a2,a0,a1
90001b34:	4ac12e23          	sw	a2,1212(sp)

90001b38 <inst_322>:

inst_322:
// rs1_val==0 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x3, x2, 1216, x15)
90001b38:	00000513          	li	a0,0
90001b3c:	00300593          	li	a1,3
90001b40:	02b50633          	mul	a2,a0,a1
90001b44:	4cc12023          	sw	a2,1216(sp)

90001b48 <inst_323>:

inst_323:
// rs1_val==0 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x55555555, x2, 1220, x15)
90001b48:	00000513          	li	a0,0
90001b4c:	555555b7          	lui	a1,0x55555
90001b50:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90001b54:	02b50633          	mul	a2,a0,a1
90001b58:	4cc12223          	sw	a2,1220(sp)

90001b5c <inst_324>:

inst_324:
// rs1_val==0 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, -0x55555556, x2, 1224, x15)
90001b5c:	00000513          	li	a0,0
90001b60:	aaaab5b7          	lui	a1,0xaaaab
90001b64:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90001b68:	02b50633          	mul	a2,a0,a1
90001b6c:	4cc12423          	sw	a2,1224(sp)

90001b70 <inst_325>:

inst_325:
// rs1_val==0 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x5, x2, 1228, x15)
90001b70:	00000513          	li	a0,0
90001b74:	00500593          	li	a1,5
90001b78:	02b50633          	mul	a2,a0,a1
90001b7c:	4cc12623          	sw	a2,1228(sp)

90001b80 <inst_326>:

inst_326:
// rs1_val==0 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x33333333, x2, 1232, x15)
90001b80:	00000513          	li	a0,0
90001b84:	333335b7          	lui	a1,0x33333
90001b88:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001b8c:	02b50633          	mul	a2,a0,a1
90001b90:	4cc12823          	sw	a2,1232(sp)

90001b94 <inst_327>:

inst_327:
// rs1_val==-1431655765 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x38e38e39, -0x55555555, -0x55555555, x2, 1236, x15)
90001b94:	aaaab537          	lui	a0,0xaaaab
90001b98:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001b9c:	aaaab5b7          	lui	a1,0xaaaab
90001ba0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001ba4:	02b50633          	mul	a2,a0,a1
90001ba8:	4cc12a23          	sw	a2,1236(sp)

90001bac <inst_328>:

inst_328:
// rs1_val==-1431655765 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x2, -0x55555555, 0x6, x2, 1240, x15)
90001bac:	aaaab537          	lui	a0,0xaaaab
90001bb0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001bb4:	00600593          	li	a1,6
90001bb8:	02b50633          	mul	a2,a0,a1
90001bbc:	4cc12c23          	sw	a2,1240(sp)

90001bc0 <inst_329>:

inst_329:
// rs1_val==-1431655765 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0xbbbbbbbc, -0x55555555, 0x33333334, x2, 1244, x15)
90001bc0:	aaaab537          	lui	a0,0xaaaab
90001bc4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001bc8:	333335b7          	lui	a1,0x33333
90001bcc:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001bd0:	02b50633          	mul	a2,a0,a1
90001bd4:	4cc12e23          	sw	a2,1244(sp)

90001bd8 <inst_330>:

inst_330:
// rs1_val==-1431655765 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0xcccccccd, -0x55555555, 0x66666667, x2, 1248, x15)
90001bd8:	aaaab537          	lui	a0,0xaaaab
90001bdc:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001be0:	666665b7          	lui	a1,0x66666
90001be4:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001be8:	02b50633          	mul	a2,a0,a1
90001bec:	4ec12023          	sw	a2,1248(sp)

90001bf0 <inst_331>:

inst_331:
// rs1_val==-1431655765 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x555518ff, -0x55555555, -0xb503, x2, 1252, x15)
90001bf0:	aaaab537          	lui	a0,0xaaaab
90001bf4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001bf8:	ffff55b7          	lui	a1,0xffff5
90001bfc:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001c00:	02b50633          	mul	a2,a0,a1
90001c04:	4ec12223          	sw	a2,1252(sp)

90001c08 <inst_332>:

inst_332:
// rs1_val==-1431655765 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x3c57, -0x55555555, 0xb505, x2, 1256, x15)
90001c08:	aaaab537          	lui	a0,0xaaaab
90001c0c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001c10:	0000b5b7          	lui	a1,0xb
90001c14:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001c18:	02b50633          	mul	a2,a0,a1
90001c1c:	4ec12423          	sw	a2,1256(sp)

90001c20 <inst_333>:

inst_333:
// rs1_val==6 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x12, 0x6, 0x3, x2, 1260, x15)
90001c20:	00600513          	li	a0,6
90001c24:	00300593          	li	a1,3
90001c28:	02b50633          	mul	a2,a0,a1
90001c2c:	4ec12623          	sw	a2,1260(sp)

90001c30 <inst_334>:

inst_334:
// rs1_val==6 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffe, 0x6, 0x55555555, x2, 1264, x15)
90001c30:	00600513          	li	a0,6
90001c34:	555555b7          	lui	a1,0x55555
90001c38:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90001c3c:	02b50633          	mul	a2,a0,a1
90001c40:	4ec12823          	sw	a2,1264(sp)

90001c44 <inst_335>:

inst_335:
// rs1_val==6 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffc, 0x6, -0x55555556, x2, 1268, x15)
90001c44:	00600513          	li	a0,6
90001c48:	aaaab5b7          	lui	a1,0xaaaab
90001c4c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90001c50:	02b50633          	mul	a2,a0,a1
90001c54:	4ec12a23          	sw	a2,1268(sp)

90001c58 <inst_336>:

inst_336:
// rs1_val==6 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x1e, 0x6, 0x5, x2, 1272, x15)
90001c58:	00600513          	li	a0,6
90001c5c:	00500593          	li	a1,5
90001c60:	02b50633          	mul	a2,a0,a1
90001c64:	4ec12c23          	sw	a2,1272(sp)

90001c68 <inst_337>:

inst_337:
// rs1_val==6 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x33333332, 0x6, 0x33333333, x2, 1276, x15)
90001c68:	00600513          	li	a0,6
90001c6c:	333335b7          	lui	a1,0x33333
90001c70:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001c74:	02b50633          	mul	a2,a0,a1
90001c78:	4ec12e23          	sw	a2,1276(sp)

90001c7c <inst_338>:

inst_338:
// rs1_val==6 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x66666664, 0x6, 0x66666666, x2, 1280, x15)
90001c7c:	00600513          	li	a0,6
90001c80:	666665b7          	lui	a1,0x66666
90001c84:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001c88:	02b50633          	mul	a2,a0,a1
90001c8c:	50c12023          	sw	a2,1280(sp)

90001c90 <inst_339>:

inst_339:
// rs1_val==6 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xfffbc1e8, 0x6, -0xb504, x2, 1284, x15)
90001c90:	00600513          	li	a0,6
90001c94:	ffff55b7          	lui	a1,0xffff5
90001c98:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001c9c:	02b50633          	mul	a2,a0,a1
90001ca0:	50c12223          	sw	a2,1284(sp)

90001ca4 <inst_340>:

inst_340:
// rs1_val==6 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x43e18, 0x6, 0xb504, x2, 1288, x15)
90001ca4:	00600513          	li	a0,6
90001ca8:	0000b5b7          	lui	a1,0xb
90001cac:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001cb0:	02b50633          	mul	a2,a0,a1
90001cb4:	50c12423          	sw	a2,1288(sp)

90001cb8 <inst_341>:

inst_341:
// rs1_val==6 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0xc, 0x6, 0x2, x2, 1292, x15)
90001cb8:	00600513          	li	a0,6
90001cbc:	00200593          	li	a1,2
90001cc0:	02b50633          	mul	a2,a0,a1
90001cc4:	50c12623          	sw	a2,1292(sp)

90001cc8 <inst_342>:

inst_342:
// rs1_val==6 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0xfffffff8, 0x6, 0x55555554, x2, 1296, x15)
90001cc8:	00600513          	li	a0,6
90001ccc:	555555b7          	lui	a1,0x55555
90001cd0:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001cd4:	02b50633          	mul	a2,a0,a1
90001cd8:	50c12823          	sw	a2,1296(sp)

90001cdc <inst_343>:

inst_343:
// rs1_val==6 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x6, 0x0, x2, 1300, x15)
90001cdc:	00600513          	li	a0,6
90001ce0:	00000593          	li	a1,0
90001ce4:	02b50633          	mul	a2,a0,a1
90001ce8:	50c12a23          	sw	a2,1300(sp)

90001cec <inst_344>:

inst_344:
// rs1_val==6 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x18, 0x6, 0x4, x2, 1304, x15)
90001cec:	00600513          	li	a0,6
90001cf0:	00400593          	li	a1,4
90001cf4:	02b50633          	mul	a2,a0,a1
90001cf8:	50c12c23          	sw	a2,1304(sp)

90001cfc <inst_345>:

inst_345:
// rs1_val==6 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x3333332c, 0x6, 0x33333332, x2, 1308, x15)
90001cfc:	00600513          	li	a0,6
90001d00:	333335b7          	lui	a1,0x33333
90001d04:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90001d08:	02b50633          	mul	a2,a0,a1
90001d0c:	50c12e23          	sw	a2,1308(sp)

90001d10 <inst_346>:

inst_346:
// rs1_val==6 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x6666665e, 0x6, 0x66666665, x2, 1312, x15)
90001d10:	00600513          	li	a0,6
90001d14:	666665b7          	lui	a1,0x66666
90001d18:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90001d1c:	02b50633          	mul	a2,a0,a1
90001d20:	52c12023          	sw	a2,1312(sp)

90001d24 <inst_347>:

inst_347:
// rs1_val==6 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x43e12, 0x6, 0xb503, x2, 1316, x15)
90001d24:	00600513          	li	a0,6
90001d28:	0000b5b7          	lui	a1,0xb
90001d2c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90001d30:	02b50633          	mul	a2,a0,a1
90001d34:	52c12223          	sw	a2,1316(sp)

90001d38 <inst_348>:

inst_348:
// rs1_val==6 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x4, 0x6, 0x55555556, x2, 1320, x15)
90001d38:	00600513          	li	a0,6
90001d3c:	555555b7          	lui	a1,0x55555
90001d40:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90001d44:	02b50633          	mul	a2,a0,a1
90001d48:	52c12423          	sw	a2,1320(sp)

90001d4c <inst_349>:

inst_349:
// rs1_val==6 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x2, 0x6, -0x55555555, x2, 1324, x15)
90001d4c:	00600513          	li	a0,6
90001d50:	aaaab5b7          	lui	a1,0xaaaab
90001d54:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001d58:	02b50633          	mul	a2,a0,a1
90001d5c:	52c12623          	sw	a2,1324(sp)

90001d60 <inst_350>:

inst_350:
// rs1_val==6 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x24, 0x6, 0x6, x2, 1328, x15)
90001d60:	00600513          	li	a0,6
90001d64:	00600593          	li	a1,6
90001d68:	02b50633          	mul	a2,a0,a1
90001d6c:	52c12823          	sw	a2,1328(sp)

90001d70 <inst_351>:

inst_351:
// rs1_val==6 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x33333338, 0x6, 0x33333334, x2, 1332, x15)
90001d70:	00600513          	li	a0,6
90001d74:	333335b7          	lui	a1,0x33333
90001d78:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001d7c:	02b50633          	mul	a2,a0,a1
90001d80:	52c12a23          	sw	a2,1332(sp)

90001d84 <inst_352>:

inst_352:
// rs1_val==6 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x6666666a, 0x6, 0x66666667, x2, 1336, x15)
90001d84:	00600513          	li	a0,6
90001d88:	666665b7          	lui	a1,0x66666
90001d8c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001d90:	02b50633          	mul	a2,a0,a1
90001d94:	52c12c23          	sw	a2,1336(sp)

90001d98 <inst_353>:

inst_353:
// rs1_val==6 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xfffbc1ee, 0x6, -0xb503, x2, 1340, x15)
90001d98:	00600513          	li	a0,6
90001d9c:	ffff55b7          	lui	a1,0xffff5
90001da0:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001da4:	02b50633          	mul	a2,a0,a1
90001da8:	52c12e23          	sw	a2,1340(sp)

90001dac <inst_354>:

inst_354:
// rs1_val==6 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x43e1e, 0x6, 0xb505, x2, 1344, x15)
90001dac:	00600513          	li	a0,6
90001db0:	0000b5b7          	lui	a1,0xb
90001db4:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001db8:	02b50633          	mul	a2,a0,a1
90001dbc:	54c12023          	sw	a2,1344(sp)

90001dc0 <inst_355>:

inst_355:
// rs1_val==858993460 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x9999999c, 0x33333334, 0x3, x2, 1348, x15)
90001dc0:	33333537          	lui	a0,0x33333
90001dc4:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001dc8:	00300593          	li	a1,3
90001dcc:	02b50633          	mul	a2,a0,a1
90001dd0:	54c12223          	sw	a2,1348(sp)

90001dd4 <inst_356>:

inst_356:
// rs1_val==858993460 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x44444444, 0x33333334, 0x55555555, x2, 1352, x15)
90001dd4:	33333537          	lui	a0,0x33333
90001dd8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001ddc:	555555b7          	lui	a1,0x55555
90001de0:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90001de4:	02b50633          	mul	a2,a0,a1
90001de8:	54c12423          	sw	a2,1352(sp)

90001dec <inst_357>:

inst_357:
// rs1_val==858993460 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x88888888, 0x33333334, -0x55555556, x2, 1356, x15)
90001dec:	33333537          	lui	a0,0x33333
90001df0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001df4:	aaaab5b7          	lui	a1,0xaaaab
90001df8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90001dfc:	02b50633          	mul	a2,a0,a1
90001e00:	54c12623          	sw	a2,1356(sp)

90001e04 <inst_358>:

inst_358:
// rs1_val==858993460 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x4, 0x33333334, 0x5, x2, 1360, x15)
90001e04:	33333537          	lui	a0,0x33333
90001e08:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e0c:	00500593          	li	a1,5
90001e10:	02b50633          	mul	a2,a0,a1
90001e14:	54c12823          	sw	a2,1360(sp)

90001e18 <inst_359>:

inst_359:
// rs1_val==858993460 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0xf5c28f5c, 0x33333334, 0x33333333, x2, 1364, x15)
90001e18:	33333537          	lui	a0,0x33333
90001e1c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e20:	333335b7          	lui	a1,0x33333
90001e24:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001e28:	02b50633          	mul	a2,a0,a1
90001e2c:	54c12a23          	sw	a2,1364(sp)

90001e30 <inst_360>:

inst_360:
// rs1_val==858993460 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0xeb851eb8, 0x33333334, 0x66666666, x2, 1368, x15)
90001e30:	33333537          	lui	a0,0x33333
90001e34:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e38:	666665b7          	lui	a1,0x66666
90001e3c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001e40:	02b50633          	mul	a2,a0,a1
90001e44:	54c12c23          	sw	a2,1368(sp)

90001e48 <inst_361>:

inst_361:
// rs1_val==858993460 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xffff6f30, 0x33333334, -0xb504, x2, 1372, x15)
90001e48:	33333537          	lui	a0,0x33333
90001e4c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e50:	ffff55b7          	lui	a1,0xffff5
90001e54:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001e58:	02b50633          	mul	a2,a0,a1
90001e5c:	54c12e23          	sw	a2,1372(sp)

90001e60 <inst_362>:

inst_362:
// rs1_val==858993460 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x90d0, 0x33333334, 0xb504, x2, 1376, x15)
90001e60:	33333537          	lui	a0,0x33333
90001e64:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e68:	0000b5b7          	lui	a1,0xb
90001e6c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001e70:	02b50633          	mul	a2,a0,a1
90001e74:	56c12023          	sw	a2,1376(sp)

90001e78 <inst_363>:

inst_363:
// rs1_val==858993460 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x66666668, 0x33333334, 0x2, x2, 1380, x15)
90001e78:	33333537          	lui	a0,0x33333
90001e7c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e80:	00200593          	li	a1,2
90001e84:	02b50633          	mul	a2,a0,a1
90001e88:	56c12223          	sw	a2,1380(sp)

90001e8c <inst_364>:

inst_364:
// rs1_val==858993460 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0x11111110, 0x33333334, 0x55555554, x2, 1384, x15)
90001e8c:	33333537          	lui	a0,0x33333
90001e90:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e94:	555555b7          	lui	a1,0x55555
90001e98:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001e9c:	02b50633          	mul	a2,a0,a1
90001ea0:	56c12423          	sw	a2,1384(sp)

90001ea4 <inst_365>:

inst_365:
// rs1_val==858993460 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x33333334, 0x0, x2, 1388, x15)
90001ea4:	33333537          	lui	a0,0x33333
90001ea8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001eac:	00000593          	li	a1,0
90001eb0:	02b50633          	mul	a2,a0,a1
90001eb4:	56c12623          	sw	a2,1388(sp)

90001eb8 <inst_366>:

inst_366:
// rs1_val==858993460 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0xccccccd0, 0x33333334, 0x4, x2, 1392, x15)
90001eb8:	33333537          	lui	a0,0x33333
90001ebc:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001ec0:	00400593          	li	a1,4
90001ec4:	02b50633          	mul	a2,a0,a1
90001ec8:	56c12823          	sw	a2,1392(sp)

90001ecc <inst_367>:

inst_367:
// rs1_val==858993460 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0xc28f5c28, 0x33333334, 0x33333332, x2, 1396, x15)
90001ecc:	33333537          	lui	a0,0x33333
90001ed0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001ed4:	333335b7          	lui	a1,0x33333
90001ed8:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90001edc:	02b50633          	mul	a2,a0,a1
90001ee0:	56c12a23          	sw	a2,1396(sp)

90001ee4 <inst_368>:

inst_368:
// rs1_val==858993460 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0xb851eb84, 0x33333334, 0x66666665, x2, 1400, x15)
90001ee4:	33333537          	lui	a0,0x33333
90001ee8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001eec:	666665b7          	lui	a1,0x66666
90001ef0:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90001ef4:	02b50633          	mul	a2,a0,a1
90001ef8:	56c12c23          	sw	a2,1400(sp)

90001efc <inst_369>:

inst_369:
// rs1_val==858993460 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xcccd5d9c, 0x33333334, 0xb503, x2, 1404, x15)
90001efc:	33333537          	lui	a0,0x33333
90001f00:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f04:	0000b5b7          	lui	a1,0xb
90001f08:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90001f0c:	02b50633          	mul	a2,a0,a1
90001f10:	56c12e23          	sw	a2,1404(sp)

90001f14 <inst_370>:

inst_370:
// rs1_val==858993460 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x77777778, 0x33333334, 0x55555556, x2, 1408, x15)
90001f14:	33333537          	lui	a0,0x33333
90001f18:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f1c:	555555b7          	lui	a1,0x55555
90001f20:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90001f24:	02b50633          	mul	a2,a0,a1
90001f28:	58c12023          	sw	a2,1408(sp)

90001f2c <inst_371>:

inst_371:
// rs1_val==858993460 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xbbbbbbbc, 0x33333334, -0x55555555, x2, 1412, x15)
90001f2c:	33333537          	lui	a0,0x33333
90001f30:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f34:	aaaab5b7          	lui	a1,0xaaaab
90001f38:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001f3c:	02b50633          	mul	a2,a0,a1
90001f40:	58c12223          	sw	a2,1412(sp)

90001f44 <inst_372>:

inst_372:
// rs1_val==858993460 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x33333338, 0x33333334, 0x6, x2, 1416, x15)
90001f44:	33333537          	lui	a0,0x33333
90001f48:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f4c:	00600593          	li	a1,6
90001f50:	02b50633          	mul	a2,a0,a1
90001f54:	58c12423          	sw	a2,1416(sp)

90001f58 <inst_373>:

inst_373:
// rs1_val==858993460 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x28f5c290, 0x33333334, 0x33333334, x2, 1420, x15)
90001f58:	33333537          	lui	a0,0x33333
90001f5c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f60:	333335b7          	lui	a1,0x33333
90001f64:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001f68:	02b50633          	mul	a2,a0,a1
90001f6c:	58c12623          	sw	a2,1420(sp)

90001f70 <inst_374>:

inst_374:
// rs1_val==858993460 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x1eb851ec, 0x33333334, 0x66666667, x2, 1424, x15)
90001f70:	33333537          	lui	a0,0x33333
90001f74:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f78:	666665b7          	lui	a1,0x66666
90001f7c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001f80:	02b50633          	mul	a2,a0,a1
90001f84:	58c12823          	sw	a2,1424(sp)

90001f88 <inst_375>:

inst_375:
// rs1_val==858993460 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x3332a264, 0x33333334, -0xb503, x2, 1428, x15)
90001f88:	33333537          	lui	a0,0x33333
90001f8c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f90:	ffff55b7          	lui	a1,0xffff5
90001f94:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001f98:	02b50633          	mul	a2,a0,a1
90001f9c:	58c12a23          	sw	a2,1428(sp)

90001fa0 <inst_376>:

inst_376:
// rs1_val==858993460 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x3333c404, 0x33333334, 0xb505, x2, 1432, x15)
90001fa0:	33333537          	lui	a0,0x33333
90001fa4:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001fa8:	0000b5b7          	lui	a1,0xb
90001fac:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001fb0:	02b50633          	mul	a2,a0,a1
90001fb4:	58c12c23          	sw	a2,1432(sp)

90001fb8 <inst_377>:

inst_377:
// rs1_val==1717986919 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x33333335, 0x66666667, 0x3, x2, 1436, x15)
90001fb8:	66666537          	lui	a0,0x66666
90001fbc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90001fc0:	00300593          	li	a1,3
90001fc4:	02b50633          	mul	a2,a0,a1
90001fc8:	58c12e23          	sw	a2,1436(sp)

90001fcc <inst_378>:

inst_378:
// rs1_val==1717986919 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x33333333, 0x66666667, 0x55555555, x2, 1440, x15)
90001fcc:	66666537          	lui	a0,0x66666
90001fd0:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90001fd4:	555555b7          	lui	a1,0x55555
90001fd8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90001fdc:	02b50633          	mul	a2,a0,a1
90001fe0:	5ac12023          	sw	a2,1440(sp)

90001fe4 <inst_379>:

inst_379:
// rs1_val==1717986919 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x66666666, 0x66666667, -0x55555556, x2, 1444, x15)
90001fe4:	66666537          	lui	a0,0x66666
90001fe8:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90001fec:	aaaab5b7          	lui	a1,0xaaaab
90001ff0:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90001ff4:	02b50633          	mul	a2,a0,a1
90001ff8:	5ac12223          	sw	a2,1444(sp)

90001ffc <inst_380>:

inst_380:
// rs1_val==1717986919 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x3, 0x66666667, 0x5, x2, 1448, x15)
90001ffc:	66666537          	lui	a0,0x66666
90002000:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002004:	00500593          	li	a1,5
90002008:	02b50633          	mul	a2,a0,a1
9000200c:	5ac12423          	sw	a2,1448(sp)

90002010 <inst_381>:

inst_381:
// rs1_val==1717986919 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0xb851eb85, 0x66666667, 0x33333333, x2, 1452, x15)
90002010:	66666537          	lui	a0,0x66666
90002014:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002018:	333335b7          	lui	a1,0x33333
9000201c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90002020:	02b50633          	mul	a2,a0,a1
90002024:	5ac12623          	sw	a2,1452(sp)

90002028 <inst_382>:

inst_382:
// rs1_val==1717986919 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x70a3d70a, 0x66666667, 0x66666666, x2, 1456, x15)
90002028:	66666537          	lui	a0,0x66666
9000202c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002030:	666665b7          	lui	a1,0x66666
90002034:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002038:	02b50633          	mul	a2,a0,a1
9000203c:	5ac12823          	sw	a2,1456(sp)

90002040 <inst_383>:

inst_383:
// rs1_val==1717986919 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xffff9364, 0x66666667, -0xb504, x2, 1460, x15)
90002040:	66666537          	lui	a0,0x66666
90002044:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002048:	ffff55b7          	lui	a1,0xffff5
9000204c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002050:	02b50633          	mul	a2,a0,a1
90002054:	5ac12a23          	sw	a2,1460(sp)

90002058 <inst_384>:

inst_384:
// rs1_val==1717986919 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x6c9c, 0x66666667, 0xb504, x2, 1464, x15)
90002058:	66666537          	lui	a0,0x66666
9000205c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002060:	0000b5b7          	lui	a1,0xb
90002064:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002068:	02b50633          	mul	a2,a0,a1
9000206c:	5ac12c23          	sw	a2,1464(sp)

90002070 <inst_385>:

inst_385:
// rs1_val==1717986919 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0xccccccce, 0x66666667, 0x2, x2, 1468, x15)
90002070:	66666537          	lui	a0,0x66666
90002074:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002078:	00200593          	li	a1,2
9000207c:	02b50633          	mul	a2,a0,a1
90002080:	5ac12e23          	sw	a2,1468(sp)

90002084 <inst_386>:

inst_386:
// rs1_val==1717986919 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0xcccccccc, 0x66666667, 0x55555554, x2, 1472, x15)
90002084:	66666537          	lui	a0,0x66666
90002088:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
9000208c:	555555b7          	lui	a1,0x55555
90002090:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90002094:	02b50633          	mul	a2,a0,a1
90002098:	5cc12023          	sw	a2,1472(sp)

9000209c <inst_387>:

inst_387:
// rs1_val==1717986919 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x66666667, 0x0, x2, 1476, x15)
9000209c:	66666537          	lui	a0,0x66666
900020a0:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900020a4:	00000593          	li	a1,0
900020a8:	02b50633          	mul	a2,a0,a1
900020ac:	5cc12223          	sw	a2,1476(sp)

900020b0 <inst_388>:

inst_388:
// rs1_val==1717986919 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x9999999c, 0x66666667, 0x4, x2, 1480, x15)
900020b0:	66666537          	lui	a0,0x66666
900020b4:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900020b8:	00400593          	li	a1,4
900020bc:	02b50633          	mul	a2,a0,a1
900020c0:	5cc12423          	sw	a2,1480(sp)

900020c4 <inst_389>:

inst_389:
// rs1_val==1717986919 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x51eb851e, 0x66666667, 0x33333332, x2, 1484, x15)
900020c4:	66666537          	lui	a0,0x66666
900020c8:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900020cc:	333335b7          	lui	a1,0x33333
900020d0:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900020d4:	02b50633          	mul	a2,a0,a1
900020d8:	5cc12623          	sw	a2,1484(sp)

900020dc <inst_390>:

inst_390:
// rs1_val==1717986919 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0xa3d70a3, 0x66666667, 0x66666665, x2, 1488, x15)
900020dc:	66666537          	lui	a0,0x66666
900020e0:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900020e4:	666665b7          	lui	a1,0x66666
900020e8:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900020ec:	02b50633          	mul	a2,a0,a1
900020f0:	5cc12823          	sw	a2,1488(sp)

900020f4 <inst_391>:

inst_391:
// rs1_val==1717986919 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x999a0635, 0x66666667, 0xb503, x2, 1492, x15)
900020f4:	66666537          	lui	a0,0x66666
900020f8:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900020fc:	0000b5b7          	lui	a1,0xb
90002100:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002104:	02b50633          	mul	a2,a0,a1
90002108:	5cc12a23          	sw	a2,1492(sp)

9000210c <inst_392>:

inst_392:
// rs1_val==1717986919 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x9999999a, 0x66666667, 0x55555556, x2, 1496, x15)
9000210c:	66666537          	lui	a0,0x66666
90002110:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002114:	555555b7          	lui	a1,0x55555
90002118:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
9000211c:	02b50633          	mul	a2,a0,a1
90002120:	5cc12c23          	sw	a2,1496(sp)

90002124 <inst_393>:

inst_393:
// rs1_val==1717986919 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xcccccccd, 0x66666667, -0x55555555, x2, 1500, x15)
90002124:	66666537          	lui	a0,0x66666
90002128:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
9000212c:	aaaab5b7          	lui	a1,0xaaaab
90002130:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002134:	02b50633          	mul	a2,a0,a1
90002138:	5cc12e23          	sw	a2,1500(sp)

9000213c <inst_394>:

inst_394:
// rs1_val==1717986919 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x6666666a, 0x66666667, 0x6, x2, 1504, x15)
9000213c:	66666537          	lui	a0,0x66666
90002140:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002144:	00600593          	li	a1,6
90002148:	02b50633          	mul	a2,a0,a1
9000214c:	5ec12023          	sw	a2,1504(sp)

90002150 <inst_395>:

inst_395:
// rs1_val==1717986919 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x1eb851ec, 0x66666667, 0x33333334, x2, 1508, x15)
90002150:	66666537          	lui	a0,0x66666
90002154:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002158:	333335b7          	lui	a1,0x33333
9000215c:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90002160:	02b50633          	mul	a2,a0,a1
90002164:	5ec12223          	sw	a2,1508(sp)

90002168 <inst_396>:

inst_396:
// rs1_val==1717986919 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0xd70a3d71, 0x66666667, 0x66666667, x2, 1512, x15)
90002168:	66666537          	lui	a0,0x66666
9000216c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002170:	666665b7          	lui	a1,0x66666
90002174:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90002178:	02b50633          	mul	a2,a0,a1
9000217c:	5ec12423          	sw	a2,1512(sp)

90002180 <inst_397>:

inst_397:
// rs1_val==1717986919 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x6665f9cb, 0x66666667, -0xb503, x2, 1516, x15)
90002180:	66666537          	lui	a0,0x66666
90002184:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002188:	ffff55b7          	lui	a1,0xffff5
9000218c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002190:	02b50633          	mul	a2,a0,a1
90002194:	5ec12623          	sw	a2,1516(sp)

90002198 <inst_398>:

inst_398:
// rs1_val==1717986919 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x6666d303, 0x66666667, 0xb505, x2, 1520, x15)
90002198:	66666537          	lui	a0,0x66666
9000219c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900021a0:	0000b5b7          	lui	a1,0xb
900021a4:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900021a8:	02b50633          	mul	a2,a0,a1
900021ac:	5ec12823          	sw	a2,1520(sp)

900021b0 <inst_399>:

inst_399:
// rs1_val==-46339 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0xfffde0f7, -0xb503, 0x3, x2, 1524, x15)
900021b0:	ffff5537          	lui	a0,0xffff5
900021b4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900021b8:	00300593          	li	a1,3
900021bc:	02b50633          	mul	a2,a0,a1
900021c0:	5ec12a23          	sw	a2,1524(sp)

900021c4 <inst_400>:

inst_400:
// rs1_val==-46339 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xaaaae701, -0xb503, 0x55555555, x2, 1528, x15)
900021c4:	ffff5537          	lui	a0,0xffff5
900021c8:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900021cc:	555555b7          	lui	a1,0x55555
900021d0:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900021d4:	02b50633          	mul	a2,a0,a1
900021d8:	5ec12c23          	sw	a2,1528(sp)

900021dc <inst_401>:

inst_401:
// rs1_val==-46339 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x5555ce02, -0xb503, -0x55555556, x2, 1532, x15)
900021dc:	ffff5537          	lui	a0,0xffff5
900021e0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900021e4:	aaaab5b7          	lui	a1,0xaaaab
900021e8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900021ec:	02b50633          	mul	a2,a0,a1
900021f0:	5ec12e23          	sw	a2,1532(sp)

900021f4 <inst_402>:

inst_402:
// rs1_val==-46339 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0xfffc76f1, -0xb503, 0x5, x2, 1536, x15)
900021f4:	ffff5537          	lui	a0,0xffff5
900021f8:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900021fc:	00500593          	li	a1,5
90002200:	02b50633          	mul	a2,a0,a1
90002204:	60c12023          	sw	a2,1536(sp)

90002208 <inst_403>:

inst_403:
// rs1_val==-46339 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x33335767, -0xb503, 0x33333333, x2, 1540, x15)
90002208:	ffff5537          	lui	a0,0xffff5
9000220c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002210:	333335b7          	lui	a1,0x33333
90002214:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90002218:	02b50633          	mul	a2,a0,a1
9000221c:	60c12223          	sw	a2,1540(sp)

90002220 <inst_404>:

inst_404:
// rs1_val==-46339 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x6666aece, -0xb503, 0x66666666, x2, 1544, x15)
90002220:	ffff5537          	lui	a0,0xffff5
90002224:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002228:	666665b7          	lui	a1,0x66666
9000222c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002230:	02b50633          	mul	a2,a0,a1
90002234:	60c12423          	sw	a2,1544(sp)

90002238 <inst_405>:

inst_405:
// rs1_val==-46339 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x7ffdf30c, -0xb503, -0xb504, x2, 1548, x15)
90002238:	ffff5537          	lui	a0,0xffff5
9000223c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002240:	ffff55b7          	lui	a1,0xffff5
90002244:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002248:	02b50633          	mul	a2,a0,a1
9000224c:	60c12623          	sw	a2,1548(sp)

90002250 <inst_406>:

inst_406:
// rs1_val==-46339 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x80020cf4, -0xb503, 0xb504, x2, 1552, x15)
90002250:	ffff5537          	lui	a0,0xffff5
90002254:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002258:	0000b5b7          	lui	a1,0xb
9000225c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002260:	02b50633          	mul	a2,a0,a1
90002264:	60c12823          	sw	a2,1552(sp)

90002268 <inst_407>:

inst_407:
// rs1_val==-46339 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0xfffe95fa, -0xb503, 0x2, x2, 1556, x15)
90002268:	ffff5537          	lui	a0,0xffff5
9000226c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002270:	00200593          	li	a1,2
90002274:	02b50633          	mul	a2,a0,a1
90002278:	60c12a23          	sw	a2,1556(sp)

9000227c <inst_408>:

inst_408:
// rs1_val==-46339 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0xaaab9c04, -0xb503, 0x55555554, x2, 1560, x15)
9000227c:	ffff5537          	lui	a0,0xffff5
90002280:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002284:	555555b7          	lui	a1,0x55555
90002288:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
9000228c:	02b50633          	mul	a2,a0,a1
90002290:	60c12c23          	sw	a2,1560(sp)

90002294 <inst_409>:

inst_409:
// rs1_val==-46339 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, -0xb503, 0x0, x2, 1564, x15)
90002294:	ffff5537          	lui	a0,0xffff5
90002298:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
9000229c:	00000593          	li	a1,0
900022a0:	02b50633          	mul	a2,a0,a1
900022a4:	60c12e23          	sw	a2,1564(sp)

900022a8 <inst_410>:

inst_410:
// rs1_val==-46339 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x33340c6a, -0xb503, 0x33333332, x2, 1568, x15)
900022a8:	ffff5537          	lui	a0,0xffff5
900022ac:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022b0:	333335b7          	lui	a1,0x33333
900022b4:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900022b8:	02b50633          	mul	a2,a0,a1
900022bc:	62c12023          	sw	a2,1568(sp)

900022c0 <inst_411>:

inst_411:
// rs1_val==-46339 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x666763d1, -0xb503, 0x66666665, x2, 1572, x15)
900022c0:	ffff5537          	lui	a0,0xffff5
900022c4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022c8:	666665b7          	lui	a1,0x66666
900022cc:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900022d0:	02b50633          	mul	a2,a0,a1
900022d4:	62c12223          	sw	a2,1572(sp)

900022d8 <inst_412>:

inst_412:
// rs1_val==-46339 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x8002c1f7, -0xb503, 0xb503, x2, 1576, x15)
900022d8:	ffff5537          	lui	a0,0xffff5
900022dc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022e0:	0000b5b7          	lui	a1,0xb
900022e4:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900022e8:	02b50633          	mul	a2,a0,a1
900022ec:	62c12423          	sw	a2,1576(sp)

900022f0 <inst_413>:

inst_413:
// rs1_val==-46339 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xaaaa31fe, -0xb503, 0x55555556, x2, 1580, x15)
900022f0:	ffff5537          	lui	a0,0xffff5
900022f4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022f8:	555555b7          	lui	a1,0x55555
900022fc:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002300:	02b50633          	mul	a2,a0,a1
90002304:	62c12623          	sw	a2,1580(sp)

90002308 <inst_414>:

inst_414:
// rs1_val==-46339 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x555518ff, -0xb503, -0x55555555, x2, 1584, x15)
90002308:	ffff5537          	lui	a0,0xffff5
9000230c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002310:	aaaab5b7          	lui	a1,0xaaaab
90002314:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002318:	02b50633          	mul	a2,a0,a1
9000231c:	62c12823          	sw	a2,1584(sp)

90002320 <inst_415>:

inst_415:
// rs1_val==-46339 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0xfffbc1ee, -0xb503, 0x6, x2, 1588, x15)
90002320:	ffff5537          	lui	a0,0xffff5
90002324:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002328:	00600593          	li	a1,6
9000232c:	02b50633          	mul	a2,a0,a1
90002330:	62c12a23          	sw	a2,1588(sp)

90002334 <inst_416>:

inst_416:
// rs1_val==-46339 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x3332a264, -0xb503, 0x33333334, x2, 1592, x15)
90002334:	ffff5537          	lui	a0,0xffff5
90002338:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
9000233c:	333335b7          	lui	a1,0x33333
90002340:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90002344:	02b50633          	mul	a2,a0,a1
90002348:	62c12c23          	sw	a2,1592(sp)

9000234c <inst_417>:

inst_417:
// rs1_val==-46339 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x6665f9cb, -0xb503, 0x66666667, x2, 1596, x15)
9000234c:	ffff5537          	lui	a0,0xffff5
90002350:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002354:	666665b7          	lui	a1,0x66666
90002358:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
9000235c:	02b50633          	mul	a2,a0,a1
90002360:	62c12e23          	sw	a2,1596(sp)

90002364 <inst_418>:

inst_418:
// rs1_val==-46339 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x7ffd3e09, -0xb503, -0xb503, x2, 1600, x15)
90002364:	ffff5537          	lui	a0,0xffff5
90002368:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
9000236c:	ffff55b7          	lui	a1,0xffff5
90002370:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002374:	02b50633          	mul	a2,a0,a1
90002378:	64c12023          	sw	a2,1600(sp)

9000237c <inst_419>:

inst_419:
// rs1_val==-46339 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x800157f1, -0xb503, 0xb505, x2, 1604, x15)
9000237c:	ffff5537          	lui	a0,0xffff5
90002380:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002384:	0000b5b7          	lui	a1,0xb
90002388:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
9000238c:	02b50633          	mul	a2,a0,a1
90002390:	64c12223          	sw	a2,1604(sp)

90002394 <inst_420>:

inst_420:
// rs1_val==46341 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x21f0f, 0xb505, 0x3, x2, 1608, x15)
90002394:	0000b537          	lui	a0,0xb
90002398:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
9000239c:	00300593          	li	a1,3
900023a0:	02b50633          	mul	a2,a0,a1
900023a4:	64c12423          	sw	a2,1608(sp)

900023a8 <inst_421>:

inst_421:
// rs1_val==46341 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xffffc3a9, 0xb505, 0x55555555, x2, 1612, x15)
900023a8:	0000b537          	lui	a0,0xb
900023ac:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900023b0:	555555b7          	lui	a1,0x55555
900023b4:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900023b8:	02b50633          	mul	a2,a0,a1
900023bc:	64c12623          	sw	a2,1612(sp)

900023c0 <inst_422>:

inst_422:
// rs1_val==46341 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xffff8752, 0xb505, -0x55555556, x2, 1616, x15)
900023c0:	0000b537          	lui	a0,0xb
900023c4:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900023c8:	aaaab5b7          	lui	a1,0xaaaab
900023cc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900023d0:	02b50633          	mul	a2,a0,a1
900023d4:	64c12823          	sw	a2,1616(sp)

900023d8 <inst_423>:

inst_423:
// rs1_val==46341 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x38919, 0xb505, 0x5, x2, 1620, x15)
900023d8:	0000b537          	lui	a0,0xb
900023dc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900023e0:	00500593          	li	a1,5
900023e4:	02b50633          	mul	a2,a0,a1
900023e8:	64c12a23          	sw	a2,1620(sp)

900023ec <inst_424>:

inst_424:
// rs1_val==46341 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x33330eff, 0xb505, 0x33333333, x2, 1624, x15)
900023ec:	0000b537          	lui	a0,0xb
900023f0:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900023f4:	333335b7          	lui	a1,0x33333
900023f8:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
900023fc:	02b50633          	mul	a2,a0,a1
90002400:	64c12c23          	sw	a2,1624(sp)

90002404 <inst_425>:

inst_425:
// rs1_val==46341 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x66661dfe, 0xb505, 0x66666666, x2, 1628, x15)
90002404:	0000b537          	lui	a0,0xb
90002408:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
9000240c:	666665b7          	lui	a1,0x66666
90002410:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002414:	02b50633          	mul	a2,a0,a1
90002418:	64c12e23          	sw	a2,1628(sp)

9000241c <inst_426>:

inst_426:
// rs1_val==46341 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x8000a2ec, 0xb505, -0xb504, x2, 1632, x15)
9000241c:	0000b537          	lui	a0,0xb
90002420:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002424:	ffff55b7          	lui	a1,0xffff5
90002428:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000242c:	02b50633          	mul	a2,a0,a1
90002430:	66c12023          	sw	a2,1632(sp)

90002434 <inst_427>:

inst_427:
// rs1_val==46341 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x7fff5d14, 0xb505, 0xb504, x2, 1636, x15)
90002434:	0000b537          	lui	a0,0xb
90002438:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
9000243c:	0000b5b7          	lui	a1,0xb
90002440:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002444:	02b50633          	mul	a2,a0,a1
90002448:	66c12223          	sw	a2,1636(sp)

9000244c <inst_428>:

inst_428:
// rs1_val==46341 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x16a0a, 0xb505, 0x2, x2, 1640, x15)
9000244c:	0000b537          	lui	a0,0xb
90002450:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002454:	00200593          	li	a1,2
90002458:	02b50633          	mul	a2,a0,a1
9000245c:	66c12423          	sw	a2,1640(sp)

90002460 <inst_429>:

inst_429:
// rs1_val==46341 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0xffff0ea4, 0xb505, 0x55555554, x2, 1644, x15)
90002460:	0000b537          	lui	a0,0xb
90002464:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002468:	555555b7          	lui	a1,0x55555
9000246c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90002470:	02b50633          	mul	a2,a0,a1
90002474:	66c12623          	sw	a2,1644(sp)

90002478 <inst_430>:

inst_430:
// rs1_val==46341 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0xb505, 0x0, x2, 1648, x15)
90002478:	0000b537          	lui	a0,0xb
9000247c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002480:	00000593          	li	a1,0
90002484:	02b50633          	mul	a2,a0,a1
90002488:	66c12823          	sw	a2,1648(sp)

9000248c <inst_431>:

inst_431:
// rs1_val==46341 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x2d414, 0xb505, 0x4, x2, 1652, x15)
9000248c:	0000b537          	lui	a0,0xb
90002490:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002494:	00400593          	li	a1,4
90002498:	02b50633          	mul	a2,a0,a1
9000249c:	66c12a23          	sw	a2,1652(sp)

900024a0 <inst_432>:

inst_432:
// rs1_val==46341 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x333259fa, 0xb505, 0x33333332, x2, 1656, x15)
900024a0:	0000b537          	lui	a0,0xb
900024a4:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900024a8:	333335b7          	lui	a1,0x33333
900024ac:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900024b0:	02b50633          	mul	a2,a0,a1
900024b4:	66c12c23          	sw	a2,1656(sp)

900024b8 <inst_433>:

inst_433:
// rs1_val==46341 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x666568f9, 0xb505, 0x66666665, x2, 1660, x15)
900024b8:	0000b537          	lui	a0,0xb
900024bc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900024c0:	666665b7          	lui	a1,0x66666
900024c4:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900024c8:	02b50633          	mul	a2,a0,a1
900024cc:	66c12e23          	sw	a2,1660(sp)

900024d0 <inst_434>:

inst_434:
// rs1_val==46341 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x7ffea80f, 0xb505, 0xb503, x2, 1664, x15)
900024d0:	0000b537          	lui	a0,0xb
900024d4:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900024d8:	0000b5b7          	lui	a1,0xb
900024dc:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900024e0:	02b50633          	mul	a2,a0,a1
900024e4:	68c12023          	sw	a2,1664(sp)

900024e8 <inst_435>:

inst_435:
// rs1_val==46341 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x78ae, 0xb505, 0x55555556, x2, 1668, x15)
900024e8:	0000b537          	lui	a0,0xb
900024ec:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900024f0:	555555b7          	lui	a1,0x55555
900024f4:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
900024f8:	02b50633          	mul	a2,a0,a1
900024fc:	68c12223          	sw	a2,1668(sp)

90002500 <inst_436>:

inst_436:
// rs1_val==46341 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x3c57, 0xb505, -0x55555555, x2, 1672, x15)
90002500:	0000b537          	lui	a0,0xb
90002504:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002508:	aaaab5b7          	lui	a1,0xaaaab
9000250c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002510:	02b50633          	mul	a2,a0,a1
90002514:	68c12423          	sw	a2,1672(sp)

90002518 <inst_437>:

inst_437:
// rs1_val==46341 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x43e1e, 0xb505, 0x6, x2, 1676, x15)
90002518:	0000b537          	lui	a0,0xb
9000251c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002520:	00600593          	li	a1,6
90002524:	02b50633          	mul	a2,a0,a1
90002528:	68c12623          	sw	a2,1676(sp)

9000252c <inst_438>:

inst_438:
// rs1_val==46341 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x3333c404, 0xb505, 0x33333334, x2, 1680, x15)
9000252c:	0000b537          	lui	a0,0xb
90002530:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002534:	333335b7          	lui	a1,0x33333
90002538:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
9000253c:	02b50633          	mul	a2,a0,a1
90002540:	68c12823          	sw	a2,1680(sp)

90002544 <inst_439>:

inst_439:
// rs1_val==46341 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x6666d303, 0xb505, 0x66666667, x2, 1684, x15)
90002544:	0000b537          	lui	a0,0xb
90002548:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
9000254c:	666665b7          	lui	a1,0x66666
90002550:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90002554:	02b50633          	mul	a2,a0,a1
90002558:	68c12a23          	sw	a2,1684(sp)

9000255c <inst_440>:

inst_440:
// rs1_val==46341 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x800157f1, 0xb505, -0xb503, x2, 1688, x15)
9000255c:	0000b537          	lui	a0,0xb
90002560:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002564:	ffff55b7          	lui	a1,0xffff5
90002568:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
9000256c:	02b50633          	mul	a2,a0,a1
90002570:	68c12c23          	sw	a2,1688(sp)

90002574 <inst_441>:

inst_441:
// rs1_val==46341 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x80001219, 0xb505, 0xb505, x2, 1692, x15)
90002574:	0000b537          	lui	a0,0xb
90002578:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
9000257c:	0000b5b7          	lui	a1,0xb
90002580:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90002584:	02b50633          	mul	a2,a0,a1
90002588:	68c12e23          	sw	a2,1692(sp)

9000258c <inst_442>:

inst_442:
// rs1_val==0 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x66666666, x2, 1696, x15)
9000258c:	00000513          	li	a0,0
90002590:	666665b7          	lui	a1,0x66666
90002594:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002598:	02b50633          	mul	a2,a0,a1
9000259c:	6ac12023          	sw	a2,1696(sp)

900025a0 <inst_443>:

inst_443:
// rs1_val==0 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, -0xb504, x2, 1700, x15)
900025a0:	00000513          	li	a0,0
900025a4:	ffff55b7          	lui	a1,0xffff5
900025a8:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
900025ac:	02b50633          	mul	a2,a0,a1
900025b0:	6ac12223          	sw	a2,1700(sp)

900025b4 <inst_444>:

inst_444:
// rs1_val==0 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0xb504, x2, 1704, x15)
900025b4:	00000513          	li	a0,0
900025b8:	0000b5b7          	lui	a1,0xb
900025bc:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
900025c0:	02b50633          	mul	a2,a0,a1
900025c4:	6ac12423          	sw	a2,1704(sp)

900025c8 <inst_445>:

inst_445:
// rs1_val==0 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x2, x2, 1708, x15)
900025c8:	00000513          	li	a0,0
900025cc:	00200593          	li	a1,2
900025d0:	02b50633          	mul	a2,a0,a1
900025d4:	6ac12623          	sw	a2,1708(sp)

900025d8 <inst_446>:

inst_446:
// rs1_val==0 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x55555554, x2, 1712, x15)
900025d8:	00000513          	li	a0,0
900025dc:	555555b7          	lui	a1,0x55555
900025e0:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
900025e4:	02b50633          	mul	a2,a0,a1
900025e8:	6ac12823          	sw	a2,1712(sp)

900025ec <inst_447>:

inst_447:
// rs1_val==0 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x4, x2, 1716, x15)
900025ec:	00000513          	li	a0,0
900025f0:	00400593          	li	a1,4
900025f4:	02b50633          	mul	a2,a0,a1
900025f8:	6ac12a23          	sw	a2,1716(sp)

900025fc <inst_448>:

inst_448:
// rs1_val==0 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x33333332, x2, 1720, x15)
900025fc:	00000513          	li	a0,0
90002600:	333335b7          	lui	a1,0x33333
90002604:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002608:	02b50633          	mul	a2,a0,a1
9000260c:	6ac12c23          	sw	a2,1720(sp)

90002610 <inst_449>:

inst_449:
// rs1_val==0 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x66666665, x2, 1724, x15)
90002610:	00000513          	li	a0,0
90002614:	666665b7          	lui	a1,0x66666
90002618:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
9000261c:	02b50633          	mul	a2,a0,a1
90002620:	6ac12e23          	sw	a2,1724(sp)

90002624 <inst_450>:

inst_450:
// rs1_val==0 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0xb503, x2, 1728, x15)
90002624:	00000513          	li	a0,0
90002628:	0000b5b7          	lui	a1,0xb
9000262c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002630:	02b50633          	mul	a2,a0,a1
90002634:	6cc12023          	sw	a2,1728(sp)

90002638 <inst_451>:

inst_451:
// rs1_val==0 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x55555556, x2, 1732, x15)
90002638:	00000513          	li	a0,0
9000263c:	555555b7          	lui	a1,0x55555
90002640:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002644:	02b50633          	mul	a2,a0,a1
90002648:	6cc12223          	sw	a2,1732(sp)

9000264c <inst_452>:

inst_452:
// rs1_val==0 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, -0x55555555, x2, 1736, x15)
9000264c:	00000513          	li	a0,0
90002650:	aaaab5b7          	lui	a1,0xaaaab
90002654:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002658:	02b50633          	mul	a2,a0,a1
9000265c:	6cc12423          	sw	a2,1736(sp)

90002660 <inst_453>:

inst_453:
// rs1_val==0 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x6, x2, 1740, x15)
90002660:	00000513          	li	a0,0
90002664:	00600593          	li	a1,6
90002668:	02b50633          	mul	a2,a0,a1
9000266c:	6cc12623          	sw	a2,1740(sp)

90002670 <inst_454>:

inst_454:
// rs1_val==0 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x33333334, x2, 1744, x15)
90002670:	00000513          	li	a0,0
90002674:	333335b7          	lui	a1,0x33333
90002678:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
9000267c:	02b50633          	mul	a2,a0,a1
90002680:	6cc12823          	sw	a2,1744(sp)

90002684 <inst_455>:

inst_455:
// rs1_val==0 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0x66666667, x2, 1748, x15)
90002684:	00000513          	li	a0,0
90002688:	666665b7          	lui	a1,0x66666
9000268c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90002690:	02b50633          	mul	a2,a0,a1
90002694:	6cc12a23          	sw	a2,1748(sp)

90002698 <inst_456>:

inst_456:
// rs1_val==0 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, -0xb503, x2, 1752, x15)
90002698:	00000513          	li	a0,0
9000269c:	ffff55b7          	lui	a1,0xffff5
900026a0:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
900026a4:	02b50633          	mul	a2,a0,a1
900026a8:	6cc12c23          	sw	a2,1752(sp)

900026ac <inst_457>:

inst_457:
// rs1_val==0 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x0, 0xb505, x2, 1756, x15)
900026ac:	00000513          	li	a0,0
900026b0:	0000b5b7          	lui	a1,0xb
900026b4:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900026b8:	02b50633          	mul	a2,a0,a1
900026bc:	6cc12e23          	sw	a2,1756(sp)

900026c0 <inst_458>:

inst_458:
// rs1_val==4 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0xc, 0x4, 0x3, x2, 1760, x15)
900026c0:	00400513          	li	a0,4
900026c4:	00300593          	li	a1,3
900026c8:	02b50633          	mul	a2,a0,a1
900026cc:	6ec12023          	sw	a2,1760(sp)

900026d0 <inst_459>:

inst_459:
// rs1_val==4 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x55555554, 0x4, 0x55555555, x2, 1764, x15)
900026d0:	00400513          	li	a0,4
900026d4:	555555b7          	lui	a1,0x55555
900026d8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900026dc:	02b50633          	mul	a2,a0,a1
900026e0:	6ec12223          	sw	a2,1764(sp)

900026e4 <inst_460>:

inst_460:
// rs1_val==4 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaa8, 0x4, -0x55555556, x2, 1768, x15)
900026e4:	00400513          	li	a0,4
900026e8:	aaaab5b7          	lui	a1,0xaaaab
900026ec:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900026f0:	02b50633          	mul	a2,a0,a1
900026f4:	6ec12423          	sw	a2,1768(sp)

900026f8 <inst_461>:

inst_461:
// rs1_val==4 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x14, 0x4, 0x5, x2, 1772, x15)
900026f8:	00400513          	li	a0,4
900026fc:	00500593          	li	a1,5
90002700:	02b50633          	mul	a2,a0,a1
90002704:	6ec12623          	sw	a2,1772(sp)

90002708 <inst_462>:

inst_462:
// rs1_val==4 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0xcccccccc, 0x4, 0x33333333, x2, 1776, x15)
90002708:	00400513          	li	a0,4
9000270c:	333335b7          	lui	a1,0x33333
90002710:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90002714:	02b50633          	mul	a2,a0,a1
90002718:	6ec12823          	sw	a2,1776(sp)

9000271c <inst_463>:

inst_463:
// rs1_val==4 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x99999998, 0x4, 0x66666666, x2, 1780, x15)
9000271c:	00400513          	li	a0,4
90002720:	666665b7          	lui	a1,0x66666
90002724:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002728:	02b50633          	mul	a2,a0,a1
9000272c:	6ec12a23          	sw	a2,1780(sp)

90002730 <inst_464>:

inst_464:
// rs1_val==4 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xfffd2bf0, 0x4, -0xb504, x2, 1784, x15)
90002730:	00400513          	li	a0,4
90002734:	ffff55b7          	lui	a1,0xffff5
90002738:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000273c:	02b50633          	mul	a2,a0,a1
90002740:	6ec12c23          	sw	a2,1784(sp)

90002744 <inst_465>:

inst_465:
// rs1_val==4 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x2d410, 0x4, 0xb504, x2, 1788, x15)
90002744:	00400513          	li	a0,4
90002748:	0000b5b7          	lui	a1,0xb
9000274c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002750:	02b50633          	mul	a2,a0,a1
90002754:	6ec12e23          	sw	a2,1788(sp)

90002758 <inst_466>:

inst_466:
// rs1_val==4 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x8, 0x4, 0x2, x2, 1792, x15)
90002758:	00400513          	li	a0,4
9000275c:	00200593          	li	a1,2
90002760:	02b50633          	mul	a2,a0,a1
90002764:	70c12023          	sw	a2,1792(sp)

90002768 <inst_467>:

inst_467:
// rs1_val==4 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x4, 0x0, x2, 1796, x15)
90002768:	00400513          	li	a0,4
9000276c:	00000593          	li	a1,0
90002770:	02b50633          	mul	a2,a0,a1
90002774:	70c12223          	sw	a2,1796(sp)

90002778 <inst_468>:

inst_468:
// rs1_val==4 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x10, 0x4, 0x4, x2, 1800, x15)
90002778:	00400513          	li	a0,4
9000277c:	00400593          	li	a1,4
90002780:	02b50633          	mul	a2,a0,a1
90002784:	70c12423          	sw	a2,1800(sp)

90002788 <inst_469>:

inst_469:
// rs1_val==4 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0xccccccc8, 0x4, 0x33333332, x2, 1804, x15)
90002788:	00400513          	li	a0,4
9000278c:	333335b7          	lui	a1,0x33333
90002790:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002794:	02b50633          	mul	a2,a0,a1
90002798:	70c12623          	sw	a2,1804(sp)

9000279c <inst_470>:

inst_470:
// rs1_val==4 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x99999994, 0x4, 0x66666665, x2, 1808, x15)
9000279c:	00400513          	li	a0,4
900027a0:	666665b7          	lui	a1,0x66666
900027a4:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900027a8:	02b50633          	mul	a2,a0,a1
900027ac:	70c12823          	sw	a2,1808(sp)

900027b0 <inst_471>:

inst_471:
// rs1_val==4 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x2d40c, 0x4, 0xb503, x2, 1812, x15)
900027b0:	00400513          	li	a0,4
900027b4:	0000b5b7          	lui	a1,0xb
900027b8:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900027bc:	02b50633          	mul	a2,a0,a1
900027c0:	70c12a23          	sw	a2,1812(sp)

900027c4 <inst_472>:

inst_472:
// rs1_val==4 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x55555558, 0x4, 0x55555556, x2, 1816, x15)
900027c4:	00400513          	li	a0,4
900027c8:	555555b7          	lui	a1,0x55555
900027cc:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
900027d0:	02b50633          	mul	a2,a0,a1
900027d4:	70c12c23          	sw	a2,1816(sp)

900027d8 <inst_473>:

inst_473:
// rs1_val==4 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaac, 0x4, -0x55555555, x2, 1820, x15)
900027d8:	00400513          	li	a0,4
900027dc:	aaaab5b7          	lui	a1,0xaaaab
900027e0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900027e4:	02b50633          	mul	a2,a0,a1
900027e8:	70c12e23          	sw	a2,1820(sp)

900027ec <inst_474>:

inst_474:
// rs1_val==4 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x18, 0x4, 0x6, x2, 1824, x15)
900027ec:	00400513          	li	a0,4
900027f0:	00600593          	li	a1,6
900027f4:	02b50633          	mul	a2,a0,a1
900027f8:	72c12023          	sw	a2,1824(sp)

900027fc <inst_475>:

inst_475:
// rs1_val==4 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0xccccccd0, 0x4, 0x33333334, x2, 1828, x15)
900027fc:	00400513          	li	a0,4
90002800:	333335b7          	lui	a1,0x33333
90002804:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90002808:	02b50633          	mul	a2,a0,a1
9000280c:	72c12223          	sw	a2,1828(sp)

90002810 <inst_476>:

inst_476:
// rs1_val==4 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x9999999c, 0x4, 0x66666667, x2, 1832, x15)
90002810:	00400513          	li	a0,4
90002814:	666665b7          	lui	a1,0x66666
90002818:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
9000281c:	02b50633          	mul	a2,a0,a1
90002820:	72c12423          	sw	a2,1832(sp)

90002824 <inst_477>:

inst_477:
// rs1_val==4 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xfffd2bf4, 0x4, -0xb503, x2, 1836, x15)
90002824:	00400513          	li	a0,4
90002828:	ffff55b7          	lui	a1,0xffff5
9000282c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002830:	02b50633          	mul	a2,a0,a1
90002834:	72c12623          	sw	a2,1836(sp)

90002838 <inst_478>:

inst_478:
// rs1_val==4 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x2d414, 0x4, 0xb505, x2, 1840, x15)
90002838:	00400513          	li	a0,4
9000283c:	0000b5b7          	lui	a1,0xb
90002840:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90002844:	02b50633          	mul	a2,a0,a1
90002848:	72c12823          	sw	a2,1840(sp)

9000284c <inst_479>:

inst_479:
// rs1_val==858993458 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x99999996, 0x33333332, 0x3, x2, 1844, x15)
9000284c:	33333537          	lui	a0,0x33333
90002850:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002854:	00300593          	li	a1,3
90002858:	02b50633          	mul	a2,a0,a1
9000285c:	72c12a23          	sw	a2,1844(sp)

90002860 <inst_480>:

inst_480:
// rs1_val==858993458 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x9999999a, 0x33333332, 0x55555555, x2, 1848, x15)
90002860:	33333537          	lui	a0,0x33333
90002864:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002868:	555555b7          	lui	a1,0x55555
9000286c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90002870:	02b50633          	mul	a2,a0,a1
90002874:	72c12c23          	sw	a2,1848(sp)

90002878 <inst_481>:

inst_481:
// rs1_val==858993458 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x33333334, 0x33333332, -0x55555556, x2, 1852, x15)
90002878:	33333537          	lui	a0,0x33333
9000287c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002880:	aaaab5b7          	lui	a1,0xaaaab
90002884:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002888:	02b50633          	mul	a2,a0,a1
9000288c:	72c12e23          	sw	a2,1852(sp)

90002890 <inst_482>:

inst_482:
// rs1_val==858993458 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0xfffffffa, 0x33333332, 0x5, x2, 1856, x15)
90002890:	33333537          	lui	a0,0x33333
90002894:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002898:	00500593          	li	a1,5
9000289c:	02b50633          	mul	a2,a0,a1
900028a0:	74c12023          	sw	a2,1856(sp)

900028a4 <inst_483>:

inst_483:
// rs1_val==858993458 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x8f5c28f6, 0x33333332, 0x33333333, x2, 1860, x15)
900028a4:	33333537          	lui	a0,0x33333
900028a8:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900028ac:	333335b7          	lui	a1,0x33333
900028b0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
900028b4:	02b50633          	mul	a2,a0,a1
900028b8:	74c12223          	sw	a2,1860(sp)

900028bc <inst_484>:

inst_484:
// rs1_val==858993458 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x1eb851ec, 0x33333332, 0x66666666, x2, 1864, x15)
900028bc:	33333537          	lui	a0,0x33333
900028c0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900028c4:	666665b7          	lui	a1,0x66666
900028c8:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
900028cc:	02b50633          	mul	a2,a0,a1
900028d0:	74c12423          	sw	a2,1864(sp)

900028d4 <inst_485>:

inst_485:
// rs1_val==858993458 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xd938, 0x33333332, -0xb504, x2, 1868, x15)
900028d4:	33333537          	lui	a0,0x33333
900028d8:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900028dc:	ffff55b7          	lui	a1,0xffff5
900028e0:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
900028e4:	02b50633          	mul	a2,a0,a1
900028e8:	74c12623          	sw	a2,1868(sp)

900028ec <inst_486>:

inst_486:
// rs1_val==858993458 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xffff26c8, 0x33333332, 0xb504, x2, 1872, x15)
900028ec:	33333537          	lui	a0,0x33333
900028f0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900028f4:	0000b5b7          	lui	a1,0xb
900028f8:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
900028fc:	02b50633          	mul	a2,a0,a1
90002900:	74c12823          	sw	a2,1872(sp)

90002904 <inst_487>:

inst_487:
// rs1_val==858993458 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x66666664, 0x33333332, 0x2, x2, 1876, x15)
90002904:	33333537          	lui	a0,0x33333
90002908:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
9000290c:	00200593          	li	a1,2
90002910:	02b50633          	mul	a2,a0,a1
90002914:	74c12a23          	sw	a2,1876(sp)

90002918 <inst_488>:

inst_488:
// rs1_val==858993458 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0x66666668, 0x33333332, 0x55555554, x2, 1880, x15)
90002918:	33333537          	lui	a0,0x33333
9000291c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002920:	555555b7          	lui	a1,0x55555
90002924:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90002928:	02b50633          	mul	a2,a0,a1
9000292c:	74c12c23          	sw	a2,1880(sp)

90002930 <inst_489>:

inst_489:
// rs1_val==858993458 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x33333332, 0x0, x2, 1884, x15)
90002930:	33333537          	lui	a0,0x33333
90002934:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002938:	00000593          	li	a1,0
9000293c:	02b50633          	mul	a2,a0,a1
90002940:	74c12e23          	sw	a2,1884(sp)

90002944 <inst_490>:

inst_490:
// rs1_val==858993458 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0xccccccc8, 0x33333332, 0x4, x2, 1888, x15)
90002944:	33333537          	lui	a0,0x33333
90002948:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
9000294c:	00400593          	li	a1,4
90002950:	02b50633          	mul	a2,a0,a1
90002954:	76c12023          	sw	a2,1888(sp)

90002958 <inst_491>:

inst_491:
// rs1_val==858993458 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x5c28f5c4, 0x33333332, 0x33333332, x2, 1892, x15)
90002958:	33333537          	lui	a0,0x33333
9000295c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002960:	333335b7          	lui	a1,0x33333
90002964:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002968:	02b50633          	mul	a2,a0,a1
9000296c:	76c12223          	sw	a2,1892(sp)

90002970 <inst_492>:

inst_492:
// rs1_val==858993458 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0xeb851eba, 0x33333332, 0x66666665, x2, 1896, x15)
90002970:	33333537          	lui	a0,0x33333
90002974:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002978:	666665b7          	lui	a1,0x66666
9000297c:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90002980:	02b50633          	mul	a2,a0,a1
90002984:	76c12423          	sw	a2,1896(sp)

90002988 <inst_493>:

inst_493:
// rs1_val==858993458 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xcccbf396, 0x33333332, 0xb503, x2, 1900, x15)
90002988:	33333537          	lui	a0,0x33333
9000298c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002990:	0000b5b7          	lui	a1,0xb
90002994:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002998:	02b50633          	mul	a2,a0,a1
9000299c:	76c12623          	sw	a2,1900(sp)

900029a0 <inst_494>:

inst_494:
// rs1_val==858993458 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xcccccccc, 0x33333332, 0x55555556, x2, 1904, x15)
900029a0:	33333537          	lui	a0,0x33333
900029a4:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900029a8:	555555b7          	lui	a1,0x55555
900029ac:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
900029b0:	02b50633          	mul	a2,a0,a1
900029b4:	76c12823          	sw	a2,1904(sp)

900029b8 <inst_495>:

inst_495:
// rs1_val==858993458 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x66666666, 0x33333332, -0x55555555, x2, 1908, x15)
900029b8:	33333537          	lui	a0,0x33333
900029bc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900029c0:	aaaab5b7          	lui	a1,0xaaaab
900029c4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900029c8:	02b50633          	mul	a2,a0,a1
900029cc:	76c12a23          	sw	a2,1908(sp)

900029d0 <inst_496>:

inst_496:
// rs1_val==858993458 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x3333332c, 0x33333332, 0x6, x2, 1912, x15)
900029d0:	33333537          	lui	a0,0x33333
900029d4:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900029d8:	00600593          	li	a1,6
900029dc:	02b50633          	mul	a2,a0,a1
900029e0:	76c12c23          	sw	a2,1912(sp)

900029e4 <inst_497>:

inst_497:
// rs1_val==858993458 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0xc28f5c28, 0x33333332, 0x33333334, x2, 1916, x15)
900029e4:	33333537          	lui	a0,0x33333
900029e8:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900029ec:	333335b7          	lui	a1,0x33333
900029f0:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
900029f4:	02b50633          	mul	a2,a0,a1
900029f8:	76c12e23          	sw	a2,1916(sp)

900029fc <inst_498>:

inst_498:
// rs1_val==858993458 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x51eb851e, 0x33333332, 0x66666667, x2, 1920, x15)
900029fc:	33333537          	lui	a0,0x33333
90002a00:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002a04:	666665b7          	lui	a1,0x66666
90002a08:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90002a0c:	02b50633          	mul	a2,a0,a1
90002a10:	78c12023          	sw	a2,1920(sp)

90002a14 <inst_499>:

inst_499:
// rs1_val==858993458 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x33340c6a, 0x33333332, -0xb503, x2, 1924, x15)
90002a14:	33333537          	lui	a0,0x33333
90002a18:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002a1c:	ffff55b7          	lui	a1,0xffff5
90002a20:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002a24:	02b50633          	mul	a2,a0,a1
90002a28:	78c12223          	sw	a2,1924(sp)

90002a2c <inst_500>:

inst_500:
// rs1_val==858993458 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x333259fa, 0x33333332, 0xb505, x2, 1928, x15)
90002a2c:	33333537          	lui	a0,0x33333
90002a30:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002a34:	0000b5b7          	lui	a1,0xb
90002a38:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90002a3c:	02b50633          	mul	a2,a0,a1
90002a40:	78c12423          	sw	a2,1928(sp)

90002a44 <inst_501>:

inst_501:
// rs1_val==1717986917 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x3333332f, 0x66666665, 0x3, x2, 1932, x15)
90002a44:	66666537          	lui	a0,0x66666
90002a48:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002a4c:	00300593          	li	a1,3
90002a50:	02b50633          	mul	a2,a0,a1
90002a54:	78c12623          	sw	a2,1932(sp)

90002a58 <inst_502>:

inst_502:
// rs1_val==1717986917 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x88888889, 0x66666665, 0x55555555, x2, 1936, x15)
90002a58:	66666537          	lui	a0,0x66666
90002a5c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002a60:	555555b7          	lui	a1,0x55555
90002a64:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90002a68:	02b50633          	mul	a2,a0,a1
90002a6c:	78c12823          	sw	a2,1936(sp)

90002a70 <inst_503>:

inst_503:
// rs1_val==1717986917 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x11111112, 0x66666665, -0x55555556, x2, 1940, x15)
90002a70:	66666537          	lui	a0,0x66666
90002a74:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002a78:	aaaab5b7          	lui	a1,0xaaaab
90002a7c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002a80:	02b50633          	mul	a2,a0,a1
90002a84:	78c12a23          	sw	a2,1940(sp)

90002a88 <inst_504>:

inst_504:
// rs1_val==1717986917 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0xfffffff9, 0x66666665, 0x5, x2, 1944, x15)
90002a88:	66666537          	lui	a0,0x66666
90002a8c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002a90:	00500593          	li	a1,5
90002a94:	02b50633          	mul	a2,a0,a1
90002a98:	78c12c23          	sw	a2,1944(sp)

90002a9c <inst_505>:

inst_505:
// rs1_val==1717986917 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x51eb851f, 0x66666665, 0x33333333, x2, 1948, x15)
90002a9c:	66666537          	lui	a0,0x66666
90002aa0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002aa4:	333335b7          	lui	a1,0x33333
90002aa8:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90002aac:	02b50633          	mul	a2,a0,a1
90002ab0:	78c12e23          	sw	a2,1948(sp)

90002ab4 <inst_506>:

inst_506:
// rs1_val==1717986917 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0xa3d70a3e, 0x66666665, 0x66666666, x2, 1952, x15)
90002ab4:	66666537          	lui	a0,0x66666
90002ab8:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002abc:	666665b7          	lui	a1,0x66666
90002ac0:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002ac4:	02b50633          	mul	a2,a0,a1
90002ac8:	7ac12023          	sw	a2,1952(sp)

90002acc <inst_507>:

inst_507:
// rs1_val==1717986917 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xfd6c, 0x66666665, -0xb504, x2, 1956, x15)
90002acc:	66666537          	lui	a0,0x66666
90002ad0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002ad4:	ffff55b7          	lui	a1,0xffff5
90002ad8:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002adc:	02b50633          	mul	a2,a0,a1
90002ae0:	7ac12223          	sw	a2,1956(sp)

90002ae4 <inst_508>:

inst_508:
// rs1_val==1717986917 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xffff0294, 0x66666665, 0xb504, x2, 1960, x15)
90002ae4:	66666537          	lui	a0,0x66666
90002ae8:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002aec:	0000b5b7          	lui	a1,0xb
90002af0:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002af4:	02b50633          	mul	a2,a0,a1
90002af8:	7ac12423          	sw	a2,1960(sp)

90002afc <inst_509>:

inst_509:
// rs1_val==1717986917 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0xccccccca, 0x66666665, 0x2, x2, 1964, x15)
90002afc:	66666537          	lui	a0,0x66666
90002b00:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b04:	00200593          	li	a1,2
90002b08:	02b50633          	mul	a2,a0,a1
90002b0c:	7ac12623          	sw	a2,1964(sp)

90002b10 <inst_510>:

inst_510:
// rs1_val==1717986917 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0x22222224, 0x66666665, 0x55555554, x2, 1968, x15)
90002b10:	66666537          	lui	a0,0x66666
90002b14:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b18:	555555b7          	lui	a1,0x55555
90002b1c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90002b20:	02b50633          	mul	a2,a0,a1
90002b24:	7ac12823          	sw	a2,1968(sp)

90002b28 <inst_511>:

inst_511:
// rs1_val==1717986917 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x99999994, 0x66666665, 0x4, x2, 1972, x15)
90002b28:	66666537          	lui	a0,0x66666
90002b2c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b30:	00400593          	li	a1,4
90002b34:	02b50633          	mul	a2,a0,a1
90002b38:	7ac12a23          	sw	a2,1972(sp)

90002b3c <inst_512>:

inst_512:
// rs1_val==1717986917 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0xeb851eba, 0x66666665, 0x33333332, x2, 1976, x15)
90002b3c:	66666537          	lui	a0,0x66666
90002b40:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b44:	333335b7          	lui	a1,0x33333
90002b48:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002b4c:	02b50633          	mul	a2,a0,a1
90002b50:	7ac12c23          	sw	a2,1976(sp)

90002b54 <inst_513>:

inst_513:
// rs1_val==1717986917 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x3d70a3d9, 0x66666665, 0x66666665, x2, 1980, x15)
90002b54:	66666537          	lui	a0,0x66666
90002b58:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b5c:	666665b7          	lui	a1,0x66666
90002b60:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90002b64:	02b50633          	mul	a2,a0,a1
90002b68:	7ac12e23          	sw	a2,1980(sp)

90002b6c <inst_514>:

inst_514:
// rs1_val==1717986917 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x99989c2f, 0x66666665, 0xb503, x2, 1984, x15)
90002b6c:	66666537          	lui	a0,0x66666
90002b70:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b74:	0000b5b7          	lui	a1,0xb
90002b78:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002b7c:	02b50633          	mul	a2,a0,a1
90002b80:	7cc12023          	sw	a2,1984(sp)

90002b84 <inst_515>:

inst_515:
// rs1_val==1717986917 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xeeeeeeee, 0x66666665, 0x55555556, x2, 1988, x15)
90002b84:	66666537          	lui	a0,0x66666
90002b88:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b8c:	555555b7          	lui	a1,0x55555
90002b90:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002b94:	02b50633          	mul	a2,a0,a1
90002b98:	7cc12223          	sw	a2,1988(sp)

90002b9c <inst_516>:

inst_516:
// rs1_val==1717986917 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x77777777, 0x66666665, -0x55555555, x2, 1992, x15)
90002b9c:	66666537          	lui	a0,0x66666
90002ba0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002ba4:	aaaab5b7          	lui	a1,0xaaaab
90002ba8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002bac:	02b50633          	mul	a2,a0,a1
90002bb0:	7cc12423          	sw	a2,1992(sp)

90002bb4 <inst_517>:

inst_517:
// rs1_val==1717986917 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x6666665e, 0x66666665, 0x6, x2, 1996, x15)
90002bb4:	66666537          	lui	a0,0x66666
90002bb8:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002bbc:	00600593          	li	a1,6
90002bc0:	02b50633          	mul	a2,a0,a1
90002bc4:	7cc12623          	sw	a2,1996(sp)

90002bc8 <inst_518>:

inst_518:
// rs1_val==1717986917 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0xb851eb84, 0x66666665, 0x33333334, x2, 2000, x15)
90002bc8:	66666537          	lui	a0,0x66666
90002bcc:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002bd0:	333335b7          	lui	a1,0x33333
90002bd4:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90002bd8:	02b50633          	mul	a2,a0,a1
90002bdc:	7cc12823          	sw	a2,2000(sp)

90002be0 <inst_519>:

inst_519:
// rs1_val==1717986917 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0xa3d70a3, 0x66666665, 0x66666667, x2, 2004, x15)
90002be0:	66666537          	lui	a0,0x66666
90002be4:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002be8:	666665b7          	lui	a1,0x66666
90002bec:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90002bf0:	02b50633          	mul	a2,a0,a1
90002bf4:	7cc12a23          	sw	a2,2004(sp)

90002bf8 <inst_520>:

inst_520:
// rs1_val==1717986917 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x666763d1, 0x66666665, -0xb503, x2, 2008, x15)
90002bf8:	66666537          	lui	a0,0x66666
90002bfc:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002c00:	ffff55b7          	lui	a1,0xffff5
90002c04:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002c08:	02b50633          	mul	a2,a0,a1
90002c0c:	7cc12c23          	sw	a2,2008(sp)

90002c10 <inst_521>:

inst_521:
// rs1_val==1717986917 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x666568f9, 0x66666665, 0xb505, x2, 2012, x15)
90002c10:	66666537          	lui	a0,0x66666
90002c14:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002c18:	0000b5b7          	lui	a1,0xb
90002c1c:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90002c20:	02b50633          	mul	a2,a0,a1
90002c24:	7cc12e23          	sw	a2,2012(sp)

90002c28 <inst_522>:

inst_522:
// rs1_val==46339 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x21f09, 0xb503, 0x3, x2, 2016, x15)
90002c28:	0000b537          	lui	a0,0xb
90002c2c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002c30:	00300593          	li	a1,3
90002c34:	02b50633          	mul	a2,a0,a1
90002c38:	7ec12023          	sw	a2,2016(sp)

90002c3c <inst_523>:

inst_523:
// rs1_val==46339 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x555518ff, 0xb503, 0x55555555, x2, 2020, x15)
90002c3c:	0000b537          	lui	a0,0xb
90002c40:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002c44:	555555b7          	lui	a1,0x55555
90002c48:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90002c4c:	02b50633          	mul	a2,a0,a1
90002c50:	7ec12223          	sw	a2,2020(sp)

90002c54 <inst_524>:

inst_524:
// rs1_val==46339 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xaaaa31fe, 0xb503, -0x55555556, x2, 2024, x15)
90002c54:	0000b537          	lui	a0,0xb
90002c58:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002c5c:	aaaab5b7          	lui	a1,0xaaaab
90002c60:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002c64:	02b50633          	mul	a2,a0,a1
90002c68:	7ec12423          	sw	a2,2024(sp)

90002c6c <inst_525>:

inst_525:
// rs1_val==46339 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x3890f, 0xb503, 0x5, x2, 2028, x15)
90002c6c:	0000b537          	lui	a0,0xb
90002c70:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002c74:	00500593          	li	a1,5
90002c78:	02b50633          	mul	a2,a0,a1
90002c7c:	7ec12623          	sw	a2,2028(sp)

90002c80 <inst_526>:

inst_526:
// rs1_val==46339 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0xcccca899, 0xb503, 0x33333333, x2, 2032, x15)
90002c80:	0000b537          	lui	a0,0xb
90002c84:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002c88:	333335b7          	lui	a1,0x33333
90002c8c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90002c90:	02b50633          	mul	a2,a0,a1
90002c94:	7ec12823          	sw	a2,2032(sp)

90002c98 <inst_527>:

inst_527:
// rs1_val==46339 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x99995132, 0xb503, 0x66666666, x2, 2036, x15)
90002c98:	0000b537          	lui	a0,0xb
90002c9c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002ca0:	666665b7          	lui	a1,0x66666
90002ca4:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002ca8:	02b50633          	mul	a2,a0,a1
90002cac:	7ec12a23          	sw	a2,2036(sp)

90002cb0 <inst_528>:

inst_528:
// rs1_val==46339 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x80020cf4, 0xb503, -0xb504, x2, 2040, x15)
90002cb0:	0000b537          	lui	a0,0xb
90002cb4:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002cb8:	ffff55b7          	lui	a1,0xffff5
90002cbc:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002cc0:	02b50633          	mul	a2,a0,a1
90002cc4:	7ec12c23          	sw	a2,2040(sp)

90002cc8 <inst_529>:

inst_529:
// rs1_val==46339 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x7ffdf30c, 0xb503, 0xb504, x2, 2044, x15)
90002cc8:	0000b537          	lui	a0,0xb
90002ccc:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002cd0:	0000b5b7          	lui	a1,0xb
90002cd4:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002cd8:	02b50633          	mul	a2,a0,a1
90002cdc:	7ec12e23          	sw	a2,2044(sp)
RVTEST_SIGBASE( x2,signature_x2_1)
90002ce0:	00003117          	auipc	sp,0x3
90002ce4:	b7810113          	addi	sp,sp,-1160 # 90005858 <signature_x2_1>

90002ce8 <inst_530>:

inst_530:
// rs1_val==46339 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x16a06, 0xb503, 0x2, x2, 0, x15)
90002ce8:	0000b537          	lui	a0,0xb
90002cec:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002cf0:	00200593          	li	a1,2
90002cf4:	02b50633          	mul	a2,a0,a1
90002cf8:	00c12023          	sw	a2,0(sp)

90002cfc <inst_531>:

inst_531:
// rs1_val==46339 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0x555463fc, 0xb503, 0x55555554, x2, 4, x15)
90002cfc:	0000b537          	lui	a0,0xb
90002d00:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d04:	555555b7          	lui	a1,0x55555
90002d08:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90002d0c:	02b50633          	mul	a2,a0,a1
90002d10:	00c12223          	sw	a2,4(sp)

90002d14 <inst_532>:

inst_532:
// rs1_val==46339 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0xb503, 0x0, x2, 8, x15)
90002d14:	0000b537          	lui	a0,0xb
90002d18:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d1c:	00000593          	li	a1,0
90002d20:	02b50633          	mul	a2,a0,a1
90002d24:	00c12423          	sw	a2,8(sp)

90002d28 <inst_533>:

inst_533:
// rs1_val==46339 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x2d40c, 0xb503, 0x4, x2, 12, x15)
90002d28:	0000b537          	lui	a0,0xb
90002d2c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d30:	00400593          	li	a1,4
90002d34:	02b50633          	mul	a2,a0,a1
90002d38:	00c12623          	sw	a2,12(sp)

90002d3c <inst_534>:

inst_534:
// rs1_val==46339 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0xcccbf396, 0xb503, 0x33333332, x2, 16, x15)
90002d3c:	0000b537          	lui	a0,0xb
90002d40:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d44:	333335b7          	lui	a1,0x33333
90002d48:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002d4c:	02b50633          	mul	a2,a0,a1
90002d50:	00c12823          	sw	a2,16(sp)

90002d54 <inst_535>:

inst_535:
// rs1_val==46339 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x99989c2f, 0xb503, 0x66666665, x2, 20, x15)
90002d54:	0000b537          	lui	a0,0xb
90002d58:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d5c:	666665b7          	lui	a1,0x66666
90002d60:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90002d64:	02b50633          	mul	a2,a0,a1
90002d68:	00c12a23          	sw	a2,20(sp)

90002d6c <inst_536>:

inst_536:
// rs1_val==46339 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x7ffd3e09, 0xb503, 0xb503, x2, 24, x15)
90002d6c:	0000b537          	lui	a0,0xb
90002d70:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d74:	0000b5b7          	lui	a1,0xb
90002d78:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002d7c:	02b50633          	mul	a2,a0,a1
90002d80:	00c12c23          	sw	a2,24(sp)

90002d84 <inst_537>:

inst_537:
// rs1_val==46339 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x5555ce02, 0xb503, 0x55555556, x2, 28, x15)
90002d84:	0000b537          	lui	a0,0xb
90002d88:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d8c:	555555b7          	lui	a1,0x55555
90002d90:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002d94:	02b50633          	mul	a2,a0,a1
90002d98:	00c12e23          	sw	a2,28(sp)

90002d9c <inst_538>:

inst_538:
// rs1_val==46339 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xaaaae701, 0xb503, -0x55555555, x2, 32, x15)
90002d9c:	0000b537          	lui	a0,0xb
90002da0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002da4:	aaaab5b7          	lui	a1,0xaaaab
90002da8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002dac:	02b50633          	mul	a2,a0,a1
90002db0:	02c12023          	sw	a2,32(sp)

90002db4 <inst_539>:

inst_539:
// rs1_val==46339 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x43e12, 0xb503, 0x6, x2, 36, x15)
90002db4:	0000b537          	lui	a0,0xb
90002db8:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002dbc:	00600593          	li	a1,6
90002dc0:	02b50633          	mul	a2,a0,a1
90002dc4:	02c12223          	sw	a2,36(sp)

90002dc8 <inst_540>:

inst_540:
// rs1_val==46339 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0xcccd5d9c, 0xb503, 0x33333334, x2, 40, x15)
90002dc8:	0000b537          	lui	a0,0xb
90002dcc:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002dd0:	333335b7          	lui	a1,0x33333
90002dd4:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90002dd8:	02b50633          	mul	a2,a0,a1
90002ddc:	02c12423          	sw	a2,40(sp)

90002de0 <inst_541>:

inst_541:
// rs1_val==46339 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x999a0635, 0xb503, 0x66666667, x2, 44, x15)
90002de0:	0000b537          	lui	a0,0xb
90002de4:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002de8:	666665b7          	lui	a1,0x66666
90002dec:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90002df0:	02b50633          	mul	a2,a0,a1
90002df4:	02c12623          	sw	a2,44(sp)

90002df8 <inst_542>:

inst_542:
// rs1_val==46339 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x8002c1f7, 0xb503, -0xb503, x2, 48, x15)
90002df8:	0000b537          	lui	a0,0xb
90002dfc:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002e00:	ffff55b7          	lui	a1,0xffff5
90002e04:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002e08:	02b50633          	mul	a2,a0,a1
90002e0c:	02c12823          	sw	a2,48(sp)

90002e10 <inst_543>:

inst_543:
// rs1_val==46339 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x7ffea80f, 0xb503, 0xb505, x2, 52, x15)
90002e10:	0000b537          	lui	a0,0xb
90002e14:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002e18:	0000b5b7          	lui	a1,0xb
90002e1c:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90002e20:	02b50633          	mul	a2,a0,a1
90002e24:	02c12a23          	sw	a2,52(sp)

90002e28 <inst_544>:

inst_544:
// rs1_val==1431655766 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x2, 0x55555556, 0x3, x2, 56, x15)
90002e28:	55555537          	lui	a0,0x55555
90002e2c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002e30:	00300593          	li	a1,3
90002e34:	02b50633          	mul	a2,a0,a1
90002e38:	02c12c23          	sw	a2,56(sp)

90002e3c <inst_545>:

inst_545:
// rs1_val==1431655766 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x8e38e38e, 0x55555556, 0x55555555, x2, 60, x15)
90002e3c:	55555537          	lui	a0,0x55555
90002e40:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002e44:	555555b7          	lui	a1,0x55555
90002e48:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90002e4c:	02b50633          	mul	a2,a0,a1
90002e50:	02c12e23          	sw	a2,60(sp)

90002e54 <inst_546>:

inst_546:
// rs1_val==1431655766 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x1c71c71c, 0x55555556, -0x55555556, x2, 64, x15)
90002e54:	55555537          	lui	a0,0x55555
90002e58:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002e5c:	aaaab5b7          	lui	a1,0xaaaab
90002e60:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002e64:	02b50633          	mul	a2,a0,a1
90002e68:	04c12023          	sw	a2,64(sp)

90002e6c <inst_547>:

inst_547:
// rs1_val==1431655766 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaae, 0x55555556, 0x5, x2, 68, x15)
90002e6c:	55555537          	lui	a0,0x55555
90002e70:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002e74:	00500593          	li	a1,5
90002e78:	02b50633          	mul	a2,a0,a1
90002e7c:	04c12223          	sw	a2,68(sp)

90002e80 <inst_548>:

inst_548:
// rs1_val==1431655766 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x22222222, 0x55555556, 0x33333333, x2, 72, x15)
90002e80:	55555537          	lui	a0,0x55555
90002e84:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002e88:	333335b7          	lui	a1,0x33333
90002e8c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90002e90:	02b50633          	mul	a2,a0,a1
90002e94:	04c12423          	sw	a2,72(sp)

90002e98 <inst_549>:

inst_549:
// rs1_val==1431655766 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x44444444, 0x55555556, 0x66666666, x2, 76, x15)
90002e98:	55555537          	lui	a0,0x55555
90002e9c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002ea0:	666665b7          	lui	a1,0x66666
90002ea4:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002ea8:	02b50633          	mul	a2,a0,a1
90002eac:	04c12623          	sw	a2,76(sp)

90002eb0 <inst_550>:

inst_550:
// rs1_val==1431655766 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x5554dca8, 0x55555556, -0xb504, x2, 80, x15)
90002eb0:	55555537          	lui	a0,0x55555
90002eb4:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002eb8:	ffff55b7          	lui	a1,0xffff5
90002ebc:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002ec0:	02b50633          	mul	a2,a0,a1
90002ec4:	04c12823          	sw	a2,80(sp)

90002ec8 <inst_551>:

inst_551:
// rs1_val==1431655766 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xaaab2358, 0x55555556, 0xb504, x2, 84, x15)
90002ec8:	55555537          	lui	a0,0x55555
90002ecc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002ed0:	0000b5b7          	lui	a1,0xb
90002ed4:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002ed8:	02b50633          	mul	a2,a0,a1
90002edc:	04c12a23          	sw	a2,84(sp)

90002ee0 <inst_552>:

inst_552:
// rs1_val==1431655766 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaac, 0x55555556, 0x2, x2, 88, x15)
90002ee0:	55555537          	lui	a0,0x55555
90002ee4:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002ee8:	00200593          	li	a1,2
90002eec:	02b50633          	mul	a2,a0,a1
90002ef0:	04c12c23          	sw	a2,88(sp)

90002ef4 <inst_553>:

inst_553:
// rs1_val==1431655766 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0x38e38e38, 0x55555556, 0x55555554, x2, 92, x15)
90002ef4:	55555537          	lui	a0,0x55555
90002ef8:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002efc:	555555b7          	lui	a1,0x55555
90002f00:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90002f04:	02b50633          	mul	a2,a0,a1
90002f08:	04c12e23          	sw	a2,92(sp)

90002f0c <inst_554>:

inst_554:
// rs1_val==1431655766 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, 0x55555556, 0x0, x2, 96, x15)
90002f0c:	55555537          	lui	a0,0x55555
90002f10:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f14:	00000593          	li	a1,0
90002f18:	02b50633          	mul	a2,a0,a1
90002f1c:	06c12023          	sw	a2,96(sp)

90002f20 <inst_555>:

inst_555:
// rs1_val==1431655766 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0x55555558, 0x55555556, 0x4, x2, 100, x15)
90002f20:	55555537          	lui	a0,0x55555
90002f24:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f28:	00400593          	li	a1,4
90002f2c:	02b50633          	mul	a2,a0,a1
90002f30:	06c12223          	sw	a2,100(sp)

90002f34 <inst_556>:

inst_556:
// rs1_val==1431655766 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0xcccccccc, 0x55555556, 0x33333332, x2, 104, x15)
90002f34:	55555537          	lui	a0,0x55555
90002f38:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f3c:	333335b7          	lui	a1,0x33333
90002f40:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002f44:	02b50633          	mul	a2,a0,a1
90002f48:	06c12423          	sw	a2,104(sp)

90002f4c <inst_557>:

inst_557:
// rs1_val==1431655766 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0xeeeeeeee, 0x55555556, 0x66666665, x2, 108, x15)
90002f4c:	55555537          	lui	a0,0x55555
90002f50:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f54:	666665b7          	lui	a1,0x66666
90002f58:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90002f5c:	02b50633          	mul	a2,a0,a1
90002f60:	06c12623          	sw	a2,108(sp)

90002f64 <inst_558>:

inst_558:
// rs1_val==1431655766 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0x5555ce02, 0x55555556, 0xb503, x2, 112, x15)
90002f64:	55555537          	lui	a0,0x55555
90002f68:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f6c:	0000b5b7          	lui	a1,0xb
90002f70:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002f74:	02b50633          	mul	a2,a0,a1
90002f78:	06c12823          	sw	a2,112(sp)

90002f7c <inst_559>:

inst_559:
// rs1_val==1431655766 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0xe38e38e4, 0x55555556, 0x55555556, x2, 116, x15)
90002f7c:	55555537          	lui	a0,0x55555
90002f80:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f84:	555555b7          	lui	a1,0x55555
90002f88:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002f8c:	02b50633          	mul	a2,a0,a1
90002f90:	06c12a23          	sw	a2,116(sp)

90002f94 <inst_560>:

inst_560:
// rs1_val==1431655766 and rs2_val==-1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0x71c71c72, 0x55555556, -0x55555555, x2, 120, x15)
90002f94:	55555537          	lui	a0,0x55555
90002f98:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f9c:	aaaab5b7          	lui	a1,0xaaaab
90002fa0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002fa4:	02b50633          	mul	a2,a0,a1
90002fa8:	06c12c23          	sw	a2,120(sp)

90002fac <inst_561>:

inst_561:
// rs1_val==1431655766 and rs2_val==6, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x6
TEST_RR_OP(mul, x12, x10, x11, 0x4, 0x55555556, 0x6, x2, 124, x15)
90002fac:	55555537          	lui	a0,0x55555
90002fb0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002fb4:	00600593          	li	a1,6
90002fb8:	02b50633          	mul	a2,a0,a1
90002fbc:	06c12e23          	sw	a2,124(sp)

90002fc0 <inst_562>:

inst_562:
// rs1_val==1431655766 and rs2_val==858993460, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333334
TEST_RR_OP(mul, x12, x10, x11, 0x77777778, 0x55555556, 0x33333334, x2, 128, x15)
90002fc0:	55555537          	lui	a0,0x55555
90002fc4:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002fc8:	333335b7          	lui	a1,0x33333
90002fcc:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90002fd0:	02b50633          	mul	a2,a0,a1
90002fd4:	08c12023          	sw	a2,128(sp)

90002fd8 <inst_563>:

inst_563:
// rs1_val==1431655766 and rs2_val==1717986919, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666667
TEST_RR_OP(mul, x12, x10, x11, 0x9999999a, 0x55555556, 0x66666667, x2, 132, x15)
90002fd8:	55555537          	lui	a0,0x55555
90002fdc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002fe0:	666665b7          	lui	a1,0x66666
90002fe4:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90002fe8:	02b50633          	mul	a2,a0,a1
90002fec:	08c12223          	sw	a2,132(sp)

90002ff0 <inst_564>:

inst_564:
// rs1_val==1431655766 and rs2_val==-46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xaaaa31fe, 0x55555556, -0xb503, x2, 136, x15)
90002ff0:	55555537          	lui	a0,0x55555
90002ff4:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002ff8:	ffff55b7          	lui	a1,0xffff5
90002ffc:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90003000:	02b50633          	mul	a2,a0,a1
90003004:	08c12423          	sw	a2,136(sp)

90003008 <inst_565>:

inst_565:
// rs1_val==1431655766 and rs2_val==46341, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb505
TEST_RR_OP(mul, x12, x10, x11, 0x78ae, 0x55555556, 0xb505, x2, 140, x15)
90003008:	55555537          	lui	a0,0x55555
9000300c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90003010:	0000b5b7          	lui	a1,0xb
90003014:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90003018:	02b50633          	mul	a2,a0,a1
9000301c:	08c12623          	sw	a2,140(sp)

90003020 <inst_566>:

inst_566:
// rs1_val==-1431655765 and rs2_val==3, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x3
TEST_RR_OP(mul, x12, x10, x11, 0x1, -0x55555555, 0x3, x2, 144, x15)
90003020:	aaaab537          	lui	a0,0xaaaab
90003024:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003028:	00300593          	li	a1,3
9000302c:	02b50633          	mul	a2,a0,a1
90003030:	08c12823          	sw	a2,144(sp)

90003034 <inst_567>:

inst_567:
// rs1_val==-1431655765 and rs2_val==1431655765, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555555
TEST_RR_OP(mul, x12, x10, x11, 0xc71c71c7, -0x55555555, 0x55555555, x2, 148, x15)
90003034:	aaaab537          	lui	a0,0xaaaab
90003038:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000303c:	555555b7          	lui	a1,0x55555
90003040:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90003044:	02b50633          	mul	a2,a0,a1
90003048:	08c12a23          	sw	a2,148(sp)

9000304c <inst_568>:

inst_568:
// rs1_val==-1431655765 and rs2_val==-1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x8e38e38e, -0x55555555, -0x55555556, x2, 152, x15)
9000304c:	aaaab537          	lui	a0,0xaaaab
90003050:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003054:	aaaab5b7          	lui	a1,0xaaaab
90003058:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
9000305c:	02b50633          	mul	a2,a0,a1
90003060:	08c12c23          	sw	a2,152(sp)

90003064 <inst_569>:

inst_569:
// rs1_val==-1431655765 and rs2_val==5, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x5
TEST_RR_OP(mul, x12, x10, x11, 0x55555557, -0x55555555, 0x5, x2, 156, x15)
90003064:	aaaab537          	lui	a0,0xaaaab
90003068:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000306c:	00500593          	li	a1,5
90003070:	02b50633          	mul	a2,a0,a1
90003074:	08c12e23          	sw	a2,156(sp)

90003078 <inst_570>:

inst_570:
// rs1_val==-1431655765 and rs2_val==858993459, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333333
TEST_RR_OP(mul, x12, x10, x11, 0x11111111, -0x55555555, 0x33333333, x2, 160, x15)
90003078:	aaaab537          	lui	a0,0xaaaab
9000307c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003080:	333335b7          	lui	a1,0x33333
90003084:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90003088:	02b50633          	mul	a2,a0,a1
9000308c:	0ac12023          	sw	a2,160(sp)

90003090 <inst_571>:

inst_571:
// rs1_val==-1431655765 and rs2_val==1717986918, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666666
TEST_RR_OP(mul, x12, x10, x11, 0x22222222, -0x55555555, 0x66666666, x2, 164, x15)
90003090:	aaaab537          	lui	a0,0xaaaab
90003094:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003098:	666665b7          	lui	a1,0x66666
9000309c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
900030a0:	02b50633          	mul	a2,a0,a1
900030a4:	0ac12223          	sw	a2,164(sp)

900030a8 <inst_572>:

inst_572:
// rs1_val==-1431655765 and rs2_val==-46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0xb504
TEST_RR_OP(mul, x12, x10, x11, 0xaaaa6e54, -0x55555555, -0xb504, x2, 168, x15)
900030a8:	aaaab537          	lui	a0,0xaaaab
900030ac:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030b0:	ffff55b7          	lui	a1,0xffff5
900030b4:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
900030b8:	02b50633          	mul	a2,a0,a1
900030bc:	0ac12423          	sw	a2,168(sp)

900030c0 <inst_573>:

inst_573:
// rs1_val==-1431655765 and rs2_val==46340, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb504
TEST_RR_OP(mul, x12, x10, x11, 0x555591ac, -0x55555555, 0xb504, x2, 172, x15)
900030c0:	aaaab537          	lui	a0,0xaaaab
900030c4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030c8:	0000b5b7          	lui	a1,0xb
900030cc:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
900030d0:	02b50633          	mul	a2,a0,a1
900030d4:	0ac12623          	sw	a2,172(sp)

900030d8 <inst_574>:

inst_574:
// rs1_val==-1431655765 and rs2_val==2, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x2
TEST_RR_OP(mul, x12, x10, x11, 0x55555556, -0x55555555, 0x2, x2, 176, x15)
900030d8:	aaaab537          	lui	a0,0xaaaab
900030dc:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030e0:	00200593          	li	a1,2
900030e4:	02b50633          	mul	a2,a0,a1
900030e8:	0ac12823          	sw	a2,176(sp)

900030ec <inst_575>:

inst_575:
// rs1_val==-1431655765 and rs2_val==1431655764, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555554
TEST_RR_OP(mul, x12, x10, x11, 0x1c71c71c, -0x55555555, 0x55555554, x2, 180, x15)
900030ec:	aaaab537          	lui	a0,0xaaaab
900030f0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030f4:	555555b7          	lui	a1,0x55555
900030f8:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
900030fc:	02b50633          	mul	a2,a0,a1
90003100:	0ac12a23          	sw	a2,180(sp)

90003104 <inst_576>:

inst_576:
// rs1_val==-1431655765 and rs2_val==0, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x0
TEST_RR_OP(mul, x12, x10, x11, 0x0, -0x55555555, 0x0, x2, 184, x15)
90003104:	aaaab537          	lui	a0,0xaaaab
90003108:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000310c:	00000593          	li	a1,0
90003110:	02b50633          	mul	a2,a0,a1
90003114:	0ac12c23          	sw	a2,184(sp)

90003118 <inst_577>:

inst_577:
// rs1_val==-1431655765 and rs2_val==4, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x4
TEST_RR_OP(mul, x12, x10, x11, 0xaaaaaaac, -0x55555555, 0x4, x2, 188, x15)
90003118:	aaaab537          	lui	a0,0xaaaab
9000311c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003120:	00400593          	li	a1,4
90003124:	02b50633          	mul	a2,a0,a1
90003128:	0ac12e23          	sw	a2,188(sp)

9000312c <inst_578>:

inst_578:
// rs1_val==-1431655765 and rs2_val==858993458, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333332
TEST_RR_OP(mul, x12, x10, x11, 0x66666666, -0x55555555, 0x33333332, x2, 192, x15)
9000312c:	aaaab537          	lui	a0,0xaaaab
90003130:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003134:	333335b7          	lui	a1,0x33333
90003138:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
9000313c:	02b50633          	mul	a2,a0,a1
90003140:	0cc12023          	sw	a2,192(sp)

90003144 <inst_579>:

inst_579:
// rs1_val==-1431655765 and rs2_val==1717986917, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666665
TEST_RR_OP(mul, x12, x10, x11, 0x77777777, -0x55555555, 0x66666665, x2, 196, x15)
90003144:	aaaab537          	lui	a0,0xaaaab
90003148:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000314c:	666665b7          	lui	a1,0x66666
90003150:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90003154:	02b50633          	mul	a2,a0,a1
90003158:	0cc12223          	sw	a2,196(sp)

9000315c <inst_580>:

inst_580:
// rs1_val==-1431655765 and rs2_val==46339, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb503
TEST_RR_OP(mul, x12, x10, x11, 0xaaaae701, -0x55555555, 0xb503, x2, 200, x15)
9000315c:	aaaab537          	lui	a0,0xaaaab
90003160:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003164:	0000b5b7          	lui	a1,0xb
90003168:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
9000316c:	02b50633          	mul	a2,a0,a1
90003170:	0cc12423          	sw	a2,200(sp)

90003174 <inst_581>:

inst_581:
// rs1_val==-1431655765 and rs2_val==1431655766, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555556
TEST_RR_OP(mul, x12, x10, x11, 0x71c71c72, -0x55555555, 0x55555556, x2, 204, x15)
90003174:	aaaab537          	lui	a0,0xaaaab
90003178:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000317c:	555555b7          	lui	a1,0x55555
90003180:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90003184:	02b50633          	mul	a2,a0,a1
90003188:	0cc12623          	sw	a2,204(sp)

9000318c <inst_582>:

inst_582:
// rs1_val > 0 and rs2_val < 0, rs1_val == 32, rs2_val == -16385
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x20;  op2val:-0x4001
TEST_RR_OP(mul, x12, x10, x11, 0xfff7ffe0, 0x20, -0x4001, x2, 208, x15)
9000318c:	02000513          	li	a0,32
90003190:	ffffc5b7          	lui	a1,0xffffc
90003194:	fff58593          	addi	a1,a1,-1 # ffffbfff <_end+0x6fff64fb>
90003198:	02b50633          	mul	a2,a0,a1
9000319c:	0cc12823          	sw	a2,208(sp)

900031a0 <inst_583>:

inst_583:
// rs2_val == 8192, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x9;  op2val:0x2000
TEST_RR_OP(mul, x12, x10, x11, 0x12000, 0x9, 0x2000, x2, 212, x15)
900031a0:	00900513          	li	a0,9
900031a4:	000025b7          	lui	a1,0x2
900031a8:	02b50633          	mul	a2,a0,a1
900031ac:	0cc12a23          	sw	a2,212(sp)

900031b0 <inst_584>:

inst_584:
// rs2_val == 32768, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:-0x4;  op2val:0x8000
TEST_RR_OP(mul, x12, x10, x11, 0xfffe0000, -0x4, 0x8000, x2, 216, x15)
900031b0:	ffc00513          	li	a0,-4
900031b4:	000085b7          	lui	a1,0x8
900031b8:	02b50633          	mul	a2,a0,a1
900031bc:	0cc12c23          	sw	a2,216(sp)

900031c0 <inst_585>:

inst_585:
// rs2_val == 262144, 
// opcode: mul ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x40000
TEST_RR_OP(mul, x12, x10, x11, 0xccd00000, 0x33333334, 0x40000, x2, 220, x15)
900031c0:	33333537          	lui	a0,0x33333
900031c4:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
900031c8:	000405b7          	lui	a1,0x40
900031cc:	02b50633          	mul	a2,a0,a1
900031d0:	0cc12e23          	sw	a2,220(sp)
900031d4:	00000013          	nop
900031d8:	00000013          	nop
900031dc:	00000013          	nop

900031e0 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
900031e0:	00408093          	addi	ra,ra,4
900031e4:	00100093          	li	ra,1

900031e8 <write_tohost>:
900031e8:	00001f17          	auipc	t5,0x1
900031ec:	e01f2c23          	sw	ra,-488(t5) # 90004000 <tohost>

900031f0 <self_loop>:
900031f0:	0000006f          	j	900031f0 <self_loop>
	...
