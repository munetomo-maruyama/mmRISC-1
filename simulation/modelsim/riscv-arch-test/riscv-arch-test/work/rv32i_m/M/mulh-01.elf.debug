
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/M/mulh-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed63a9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f768452>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6f03>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd5cd1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00005317          	auipc	t1,0x5
9000002c:	fd830313          	addi	t1,t1,-40 # 90005000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb5bf6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfddad5>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfe92ba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff7637>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f606b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bf82b3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adf93d7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656f9c69>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7a0b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfd33>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eada3e9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56a472>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7f13>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d564d9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4bea84ea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56f4f>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa5cf7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d00f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe52fa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df5657>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f507b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db77abb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edb8fdb>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676d9a6b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb69fb3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*M.*);def TEST_CASE_1=True;",mulh)

RVTEST_SIGBASE( x4,signature_x4_1)
900000f8:	00005217          	auipc	tp,0x5
900000fc:	f1820213          	addi	tp,tp,-232 # 90005010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rs1 == rd != rs2, rs1==x15, rs2==x21, rd==x15, rs1_val > 0 and rs2_val > 0, rs2_val == 134217728, rs1_val != rs2_val
// opcode: mulh ; op1:x15; op2:x21; dest:x15; op1val:0xb504;  op2val:0x8000000
TEST_RR_OP(mulh, x15, x15, x21, 0x5a8, 0xb504, 0x8000000, x4, 0, x14)
90000100:	0000b7b7          	lui	a5,0xb
90000104:	50478793          	addi	a5,a5,1284 # b504 <offset+0xb45c>
90000108:	08000ab7          	lui	s5,0x8000
9000010c:	035797b3          	mulh	a5,a5,s5
90000110:	00f22023          	sw	a5,0(tp) # 0 <offset-0xa8>

90000114 <inst_1>:

inst_1:
// rs1 == rs2 != rd, rs1==x1, rs2==x1, rd==x7, rs1_val > 0 and rs2_val < 0, rs2_val == -2
// opcode: mulh ; op1:x1; op2:x1; dest:x7; op1val:0x33333332;  op2val:0x33333332
TEST_RR_OP(mulh, x7, x1, x1, 0xa3d70a3, 0x33333332, 0x33333332, x4, 4, x14)
90000114:	333330b7          	lui	ra,0x33333
90000118:	33208093          	addi	ra,ra,818 # 33333332 <offset+0x3333328a>
9000011c:	333330b7          	lui	ra,0x33333
90000120:	33208093          	addi	ra,ra,818 # 33333332 <offset+0x3333328a>
90000124:	021093b3          	mulh	t2,ra,ra
90000128:	00722223          	sw	t2,4(tp) # 4 <offset-0xa4>

9000012c <inst_2>:

inst_2:
// rs2 == rd != rs1, rs1==x7, rs2==x6, rd==x6, rs1_val < 0 and rs2_val < 0, rs2_val == -2049, rs1_val == -32769
// opcode: mulh ; op1:x7; op2:x6; dest:x6; op1val:-0x8001;  op2val:-0x801
TEST_RR_OP(mulh, x6, x7, x6, 0x0, -0x8001, -0x801, x4, 8, x14)
9000012c:	ffff83b7          	lui	t2,0xffff8
90000130:	fff38393          	addi	t2,t2,-1 # ffff7fff <_end+0x6fff24fb>
90000134:	fffff337          	lui	t1,0xfffff
90000138:	7ff30313          	addi	t1,t1,2047 # fffff7ff <_end+0x6fff9cfb>
9000013c:	02639333          	mulh	t1,t2,t1
90000140:	00622423          	sw	t1,8(tp) # 8 <offset-0xa0>

90000144 <inst_3>:

inst_3:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x27, rs2==x16, rd==x5, rs1_val < 0 and rs2_val > 0, rs2_val == 64
// opcode: mulh ; op1:x27; op2:x16; dest:x5; op1val:-0xb503;  op2val:0x40
TEST_RR_OP(mulh, x5, x27, x16, 0xffffffff, -0xb503, 0x40, x4, 12, x14)
90000144:	ffff5db7          	lui	s11,0xffff5
90000148:	afdd8d93          	addi	s11,s11,-1283 # ffff4afd <_end+0x6ffeeff9>
9000014c:	04000813          	li	a6,64
90000150:	030d92b3          	mulh	t0,s11,a6
90000154:	00522623          	sw	t0,12(tp) # c <offset-0x9c>

90000158 <inst_4>:

inst_4:
// rs1 == rs2 == rd, rs1==x26, rs2==x26, rd==x26, rs1_val == rs2_val, 
// opcode: mulh ; op1:x26; op2:x26; dest:x26; op1val:0x7;  op2val:0x7
TEST_RR_OP(mulh, x26, x26, x26, 0x0, 0x7, 0x7, x4, 16, x14)
90000158:	00700d13          	li	s10,7
9000015c:	00700d13          	li	s10,7
90000160:	03ad1d33          	mulh	s10,s10,s10
90000164:	01a22823          	sw	s10,16(tp) # 10 <offset-0x98>

90000168 <inst_5>:

inst_5:
// rs1==x24, rs2==x7, rd==x10, rs2_val == (-2**(xlen-1)), rs2_val == -2147483648
// opcode: mulh ; op1:x24; op2:x7; dest:x10; op1val:-0xb503;  op2val:-0x80000000
TEST_RR_OP(mulh, x10, x24, x7, 0x5a81, -0xb503, -0x80000000, x4, 20, x14)
90000168:	ffff5c37          	lui	s8,0xffff5
9000016c:	afdc0c13          	addi	s8,s8,-1283 # ffff4afd <_end+0x6ffeeff9>
90000170:	800003b7          	lui	t2,0x80000
90000174:	027c1533          	mulh	a0,s8,t2
90000178:	00a22a23          	sw	a0,20(tp) # 14 <offset-0x94>

9000017c <inst_6>:

inst_6:
// rs1==x30, rs2==x2, rd==x8, rs2_val == 0, rs1_val == -8193
// opcode: mulh ; op1:x30; op2:x2; dest:x8; op1val:-0x2001;  op2val:0x0
TEST_RR_OP(mulh, x8, x30, x2, 0x0, -0x2001, 0x0, x4, 24, x14)
9000017c:	ffffef37          	lui	t5,0xffffe
90000180:	ffff0f13          	addi	t5,t5,-1 # ffffdfff <_end+0x6fff84fb>
90000184:	00000113          	li	sp,0
90000188:	022f1433          	mulh	s0,t5,sp
9000018c:	00822c23          	sw	s0,24(tp) # 18 <offset-0x90>

90000190 <inst_7>:

inst_7:
// rs1==x0, rs2==x11, rd==x19, rs2_val == (2**(xlen-1)-1), rs1_val == -5, rs2_val == 2147483647
// opcode: mulh ; op1:x0; op2:x11; dest:x19; op1val:0x0;  op2val:0x7fffffff
TEST_RR_OP(mulh, x19, x0, x11, 0x0, 0x0, 0x7fffffff, x4, 28, x14)
90000190:	00000013          	nop
90000194:	800005b7          	lui	a1,0x80000
90000198:	fff58593          	addi	a1,a1,-1 # 7fffffff <_end+0xefffa4fb>
9000019c:	02b019b3          	mulh	s3,zero,a1
900001a0:	01322e23          	sw	s3,28(tp) # 1c <offset-0x8c>

900001a4 <inst_8>:

inst_8:
// rs1==x21, rs2==x17, rd==x24, rs2_val == 1, rs1_val == 8192
// opcode: mulh ; op1:x21; op2:x17; dest:x24; op1val:0x2000;  op2val:0x1
TEST_RR_OP(mulh, x24, x21, x17, 0x0, 0x2000, 0x1, x4, 32, x14)
900001a4:	00002ab7          	lui	s5,0x2
900001a8:	00100893          	li	a7,1
900001ac:	031a9c33          	mulh	s8,s5,a7
900001b0:	03822023          	sw	s8,32(tp) # 20 <offset-0x88>

900001b4 <inst_9>:

inst_9:
// rs1==x23, rs2==x9, rd==x29, rs1_val == (-2**(xlen-1)), rs1_val == -2147483648
// opcode: mulh ; op1:x23; op2:x9; dest:x29; op1val:-0x80000000;  op2val:-0x4
TEST_RR_OP(mulh, x29, x23, x9, 0x2, -0x80000000, -0x4, x4, 36, x14)
900001b4:	80000bb7          	lui	s7,0x80000
900001b8:	ffc00493          	li	s1,-4
900001bc:	029b9eb3          	mulh	t4,s7,s1
900001c0:	03d22223          	sw	t4,36(tp) # 24 <offset-0x84>

900001c4 <inst_10>:

inst_10:
// rs1==x22, rs2==x3, rd==x27, rs1_val == 0, 
// opcode: mulh ; op1:x22; op2:x3; dest:x27; op1val:0x0;  op2val:0x7
TEST_RR_OP(mulh, x27, x22, x3, 0x0, 0x0, 0x7, x4, 40, x14)
900001c4:	00000b13          	li	s6,0
900001c8:	00700193          	li	gp,7
900001cc:	023b1db3          	mulh	s11,s6,gp
900001d0:	03b22423          	sw	s11,40(tp) # 28 <offset-0x80>

900001d4 <inst_11>:

inst_11:
// rs1==x2, rs2==x22, rd==x28, rs1_val == (2**(xlen-1)-1), rs1_val == 2147483647
// opcode: mulh ; op1:x2; op2:x22; dest:x28; op1val:0x7fffffff;  op2val:0x6
TEST_RR_OP(mulh, x28, x2, x22, 0x2, 0x7fffffff, 0x6, x4, 44, x14)
900001d4:	80000137          	lui	sp,0x80000
900001d8:	fff10113          	addi	sp,sp,-1 # 7fffffff <_end+0xefffa4fb>
900001dc:	00600b13          	li	s6,6
900001e0:	03611e33          	mulh	t3,sp,s6
900001e4:	03c22623          	sw	t3,44(tp) # 2c <offset-0x7c>

900001e8 <inst_12>:

inst_12:
// rs1==x28, rs2==x29, rd==x23, rs1_val == 1, rs2_val == 1431655765
// opcode: mulh ; op1:x28; op2:x29; dest:x23; op1val:0x1;  op2val:0x55555555
TEST_RR_OP(mulh, x23, x28, x29, 0x0, 0x1, 0x55555555, x4, 48, x14)
900001e8:	00100e13          	li	t3,1
900001ec:	55555eb7          	lui	t4,0x55555
900001f0:	555e8e93          	addi	t4,t4,1365 # 55555555 <offset+0x555554ad>
900001f4:	03de1bb3          	mulh	s7,t3,t4
900001f8:	03722823          	sw	s7,48(tp) # 30 <offset-0x78>

900001fc <inst_13>:

inst_13:
// rs1==x13, rs2==x19, rd==x20, rs2_val == 2, rs1_val==1717986919 and rs2_val==2
// opcode: mulh ; op1:x13; op2:x19; dest:x20; op1val:0x66666667;  op2val:0x2
TEST_RR_OP(mulh, x20, x13, x19, 0x0, 0x66666667, 0x2, x4, 52, x14)
900001fc:	666666b7          	lui	a3,0x66666
90000200:	66768693          	addi	a3,a3,1639 # 66666667 <offset+0x666665bf>
90000204:	00200993          	li	s3,2
90000208:	03369a33          	mulh	s4,a3,s3
9000020c:	03422a23          	sw	s4,52(tp) # 34 <offset-0x74>

90000210 <inst_14>:

inst_14:
// rs1==x5, rs2==x12, rd==x22, rs2_val == 4, rs1_val==0 and rs2_val==4
// opcode: mulh ; op1:x5; op2:x12; dest:x22; op1val:0x0;  op2val:0x4
TEST_RR_OP(mulh, x22, x5, x12, 0x0, 0x0, 0x4, x4, 56, x14)
90000210:	00000293          	li	t0,0
90000214:	00400613          	li	a2,4
90000218:	02c29b33          	mulh	s6,t0,a2
9000021c:	03622c23          	sw	s6,56(tp) # 38 <offset-0x70>

90000220 <inst_15>:

inst_15:
// rs1==x10, rs2==x18, rd==x25, rs2_val == 8, rs1_val == 4
// opcode: mulh ; op1:x10; op2:x18; dest:x25; op1val:0x4;  op2val:0x8
TEST_RR_OP(mulh, x25, x10, x18, 0x0, 0x4, 0x8, x4, 60, x14)
90000220:	00400513          	li	a0,4
90000224:	00800913          	li	s2,8
90000228:	03251cb3          	mulh	s9,a0,s2
9000022c:	03922e23          	sw	s9,60(tp) # 3c <offset-0x6c>
RVTEST_SIGBASE( x7,signature_x7_0)
90000230:	00005397          	auipc	t2,0x5
90000234:	e2038393          	addi	t2,t2,-480 # 90005050 <signature_x7_0>

90000238 <inst_16>:

inst_16:
// rs1==x25, rs2==x15, rd==x9, rs2_val == 16, rs1_val == -17
// opcode: mulh ; op1:x25; op2:x15; dest:x9; op1val:-0x11;  op2val:0x10
TEST_RR_OP(mulh, x9, x25, x15, 0xffffffff, -0x11, 0x10, x7, 0, x22)
90000238:	fef00c93          	li	s9,-17
9000023c:	01000793          	li	a5,16
90000240:	02fc94b3          	mulh	s1,s9,a5
90000244:	0093a023          	sw	s1,0(t2)

90000248 <inst_17>:

inst_17:
// rs1==x16, rs2==x28, rd==x2, rs2_val == 32, 
// opcode: mulh ; op1:x16; op2:x28; dest:x2; op1val:0x5;  op2val:0x20
TEST_RR_OP(mulh, x2, x16, x28, 0x0, 0x5, 0x20, x7, 4, x22)
90000248:	00500813          	li	a6,5
9000024c:	02000e13          	li	t3,32
90000250:	03c81133          	mulh	sp,a6,t3
90000254:	0023a223          	sw	sp,4(t2)

90000258 <inst_18>:

inst_18:
// rs1==x9, rs2==x10, rd==x1, rs2_val == 128, rs1_val == 262144
// opcode: mulh ; op1:x9; op2:x10; dest:x1; op1val:0x40000;  op2val:0x80
TEST_RR_OP(mulh, x1, x9, x10, 0x0, 0x40000, 0x80, x7, 8, x22)
90000258:	000404b7          	lui	s1,0x40
9000025c:	08000513          	li	a0,128
90000260:	02a490b3          	mulh	ra,s1,a0
90000264:	0013a423          	sw	ra,8(t2)

90000268 <inst_19>:

inst_19:
// rs1==x20, rs2==x5, rd==x11, rs2_val == 256, rs1_val == -536870913
// opcode: mulh ; op1:x20; op2:x5; dest:x11; op1val:-0x20000001;  op2val:0x100
TEST_RR_OP(mulh, x11, x20, x5, 0xffffffdf, -0x20000001, 0x100, x7, 12, x22)
90000268:	e0000a37          	lui	s4,0xe0000
9000026c:	fffa0a13          	addi	s4,s4,-1 # dfffffff <_end+0x4fffa4fb>
90000270:	10000293          	li	t0,256
90000274:	025a15b3          	mulh	a1,s4,t0
90000278:	00b3a623          	sw	a1,12(t2)

9000027c <inst_20>:

inst_20:
// rs1==x6, rs2==x20, rd==x13, rs2_val == 512, 
// opcode: mulh ; op1:x6; op2:x20; dest:x13; op1val:0x55555554;  op2val:0x200
TEST_RR_OP(mulh, x13, x6, x20, 0xaa, 0x55555554, 0x200, x7, 16, x22)
9000027c:	55555337          	lui	t1,0x55555
90000280:	55430313          	addi	t1,t1,1364 # 55555554 <offset+0x555554ac>
90000284:	20000a13          	li	s4,512
90000288:	034316b3          	mulh	a3,t1,s4
9000028c:	00d3a823          	sw	a3,16(t2)

90000290 <inst_21>:

inst_21:
// rs1==x19, rs2==x25, rd==x12, rs2_val == 1024, rs1_val == -1073741825
// opcode: mulh ; op1:x19; op2:x25; dest:x12; op1val:-0x40000001;  op2val:0x400
TEST_RR_OP(mulh, x12, x19, x25, 0xfffffeff, -0x40000001, 0x400, x7, 20, x22)
90000290:	c00009b7          	lui	s3,0xc0000
90000294:	fff98993          	addi	s3,s3,-1 # bfffffff <_end+0x2fffa4fb>
90000298:	40000c93          	li	s9,1024
9000029c:	03999633          	mulh	a2,s3,s9
900002a0:	00c3aa23          	sw	a2,20(t2)

900002a4 <inst_22>:

inst_22:
// rs1==x4, rs2==x27, rd==x16, rs2_val == 2048, 
// opcode: mulh ; op1:x4; op2:x27; dest:x16; op1val:-0xb504;  op2val:0x800
TEST_RR_OP(mulh, x16, x4, x27, 0xffffffff, -0xb504, 0x800, x7, 24, x22)
900002a4:	ffff5237          	lui	tp,0xffff5
900002a8:	afc20213          	addi	tp,tp,-1284 # ffff4afc <_end+0x6ffeeff8>
900002ac:	00001db7          	lui	s11,0x1
900002b0:	800d8d93          	addi	s11,s11,-2048 # 800 <offset+0x758>
900002b4:	03b21833          	mulh	a6,tp,s11
900002b8:	0103ac23          	sw	a6,24(t2)

900002bc <inst_23>:

inst_23:
// rs1==x17, rs2==x4, rd==x30, rs2_val == 4096, 
// opcode: mulh ; op1:x17; op2:x4; dest:x30; op1val:-0x2001;  op2val:0x1000
TEST_RR_OP(mulh, x30, x17, x4, 0xffffffff, -0x2001, 0x1000, x7, 28, x22)
900002bc:	ffffe8b7          	lui	a7,0xffffe
900002c0:	fff88893          	addi	a7,a7,-1 # ffffdfff <_end+0x6fff84fb>
900002c4:	00001237          	lui	tp,0x1
900002c8:	02489f33          	mulh	t5,a7,tp
900002cc:	01e3ae23          	sw	t5,28(t2)

900002d0 <inst_24>:

inst_24:
// rs1==x31, rs2==x14, rd==x0, rs2_val == 8192, 
// opcode: mulh ; op1:x31; op2:x14; dest:x0; op1val:0x5;  op2val:0x2000
TEST_RR_OP(mulh, x0, x31, x14, 0, 0x5, 0x2000, x7, 32, x22)
900002d0:	00500f93          	li	t6,5
900002d4:	00002737          	lui	a4,0x2
900002d8:	02ef9033          	mulh	zero,t6,a4
900002dc:	0203a023          	sw	zero,32(t2)

900002e0 <inst_25>:

inst_25:
// rs1==x14, rs2==x13, rd==x31, rs2_val == 16384, rs1_val == 2
// opcode: mulh ; op1:x14; op2:x13; dest:x31; op1val:0x2;  op2val:0x4000
TEST_RR_OP(mulh, x31, x14, x13, 0x0, 0x2, 0x4000, x7, 36, x22)
900002e0:	00200713          	li	a4,2
900002e4:	000046b7          	lui	a3,0x4
900002e8:	02d71fb3          	mulh	t6,a4,a3
900002ec:	03f3a223          	sw	t6,36(t2)

900002f0 <inst_26>:

inst_26:
// rs1==x12, rs2==x8, rd==x14, rs2_val == 32768, rs1_val == -33
// opcode: mulh ; op1:x12; op2:x8; dest:x14; op1val:-0x21;  op2val:0x8000
TEST_RR_OP(mulh, x14, x12, x8, 0xffffffff, -0x21, 0x8000, x7, 40, x22)
900002f0:	fdf00613          	li	a2,-33
900002f4:	00008437          	lui	s0,0x8
900002f8:	02861733          	mulh	a4,a2,s0
900002fc:	02e3a423          	sw	a4,40(t2)

90000300 <inst_27>:

inst_27:
// rs1==x11, rs2==x23, rd==x17, rs2_val == 65536, rs1_val == -2
// opcode: mulh ; op1:x11; op2:x23; dest:x17; op1val:-0x2;  op2val:0x10000
TEST_RR_OP(mulh, x17, x11, x23, 0xffffffff, -0x2, 0x10000, x7, 44, x22)
90000300:	ffe00593          	li	a1,-2
90000304:	00010bb7          	lui	s7,0x10
90000308:	037598b3          	mulh	a7,a1,s7
9000030c:	0313a623          	sw	a7,44(t2)

90000310 <inst_28>:

inst_28:
// rs1==x29, rs2==x0, rd==x21, rs2_val == 131072, rs1_val == 33554432
// opcode: mulh ; op1:x29; op2:x0; dest:x21; op1val:0x2000000;  op2val:0x0
TEST_RR_OP(mulh, x21, x29, x0, 0x0, 0x2000000, 0x0, x7, 48, x22)
90000310:	02000eb7          	lui	t4,0x2000
90000314:	00000013          	nop
90000318:	020e9ab3          	mulh	s5,t4,zero
9000031c:	0353a823          	sw	s5,48(t2)

90000320 <inst_29>:

inst_29:
// rs1==x18, rs2==x30, rd==x3, rs2_val == 262144, rs1_val == -33554433
// opcode: mulh ; op1:x18; op2:x30; dest:x3; op1val:-0x2000001;  op2val:0x40000
TEST_RR_OP(mulh, x3, x18, x30, 0xfffff7ff, -0x2000001, 0x40000, x7, 52, x22)
90000320:	fe000937          	lui	s2,0xfe000
90000324:	fff90913          	addi	s2,s2,-1 # fdffffff <_end+0x6dffa4fb>
90000328:	00040f37          	lui	t5,0x40
9000032c:	03e911b3          	mulh	gp,s2,t5
90000330:	0233aa23          	sw	gp,52(t2)

90000334 <inst_30>:

inst_30:
// rs1==x8, rs2==x24, rd==x18, rs2_val == 524288, rs1_val == 1024
// opcode: mulh ; op1:x8; op2:x24; dest:x18; op1val:0x400;  op2val:0x80000
TEST_RR_OP(mulh, x18, x8, x24, 0x0, 0x400, 0x80000, x7, 56, x2)
90000334:	40000413          	li	s0,1024
90000338:	00080c37          	lui	s8,0x80
9000033c:	03841933          	mulh	s2,s0,s8
90000340:	0323ac23          	sw	s2,56(t2)
RVTEST_SIGBASE( x1,signature_x1_0)
90000344:	00005097          	auipc	ra,0x5
90000348:	d4808093          	addi	ra,ra,-696 # 9000508c <signature_x1_0>

9000034c <inst_31>:

inst_31:
// rs1==x3, rs2==x31, rd==x4, rs2_val == 1048576, rs1_val == -524289
// opcode: mulh ; op1:x3; op2:x31; dest:x4; op1val:-0x80001;  op2val:0x100000
TEST_RR_OP(mulh, x4, x3, x31, 0xffffff7f, -0x80001, 0x100000, x1, 0, x2)
9000034c:	fff801b7          	lui	gp,0xfff80
90000350:	fff18193          	addi	gp,gp,-1 # fff7ffff <_end+0x6ff7a4fb>
90000354:	00100fb7          	lui	t6,0x100
90000358:	03f19233          	mulh	tp,gp,t6
9000035c:	0040a023          	sw	tp,0(ra)

90000360 <inst_32>:

inst_32:
// rs2_val == 2097152, rs1_val == -131073
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x20001;  op2val:0x200000
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffbf, -0x20001, 0x200000, x1, 4, x2)
90000360:	fffe0537          	lui	a0,0xfffe0
90000364:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0x6ffda4fb>
90000368:	002005b7          	lui	a1,0x200
9000036c:	02b51633          	mulh	a2,a0,a1
90000370:	00c0a223          	sw	a2,4(ra)

90000374 <inst_33>:

inst_33:
// rs2_val == 4194304, rs1_val == -1431655766
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x400000
TEST_RR_OP(mulh, x12, x10, x11, 0xffeaaaaa, -0x55555556, 0x400000, x1, 8, x2)
90000374:	aaaab537          	lui	a0,0xaaaab
90000378:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
9000037c:	004005b7          	lui	a1,0x400
90000380:	02b51633          	mulh	a2,a0,a1
90000384:	00c0a423          	sw	a2,8(ra)

90000388 <inst_34>:

inst_34:
// rs2_val == 8388608, rs1_val == -129
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x81;  op2val:0x800000
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0x81, 0x800000, x1, 12, x2)
90000388:	f7f00513          	li	a0,-129
9000038c:	008005b7          	lui	a1,0x800
90000390:	02b51633          	mulh	a2,a0,a1
90000394:	00c0a623          	sw	a2,12(ra)

90000398 <inst_35>:

inst_35:
// rs2_val == 16777216, rs1_val == -4097
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x1001;  op2val:0x1000000
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffef, -0x1001, 0x1000000, x1, 16, x2)
90000398:	fffff537          	lui	a0,0xfffff
9000039c:	fff50513          	addi	a0,a0,-1 # ffffefff <_end+0x6fff94fb>
900003a0:	010005b7          	lui	a1,0x1000
900003a4:	02b51633          	mulh	a2,a0,a1
900003a8:	00c0a823          	sw	a2,16(ra)

900003ac <inst_36>:

inst_36:
// rs2_val == 33554432, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x2000000
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffe95, -0xb503, 0x2000000, x1, 20, x2)
900003ac:	ffff5537          	lui	a0,0xffff5
900003b0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900003b4:	020005b7          	lui	a1,0x2000
900003b8:	02b51633          	mulh	a2,a0,a1
900003bc:	00c0aa23          	sw	a2,20(ra)

900003c0 <inst_37>:

inst_37:
// rs2_val == 67108864, rs1_val == 524288
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x80000;  op2val:0x4000000
TEST_RR_OP(mulh, x12, x10, x11, 0x2000, 0x80000, 0x4000000, x1, 24, x2)
900003c0:	00080537          	lui	a0,0x80
900003c4:	040005b7          	lui	a1,0x4000
900003c8:	02b51633          	mulh	a2,a0,a1
900003cc:	00c0ac23          	sw	a2,24(ra)

900003d0 <inst_38>:

inst_38:
// rs2_val == 268435456, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x9;  op2val:0x10000000
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x9, 0x10000000, x1, 28, x2)
900003d0:	00900513          	li	a0,9
900003d4:	100005b7          	lui	a1,0x10000
900003d8:	02b51633          	mulh	a2,a0,a1
900003dc:	00c0ae23          	sw	a2,28(ra)

900003e0 <inst_39>:

inst_39:
// rs2_val == 536870912, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x20000000
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0x20000000, x1, 32, x2)
900003e0:	00400513          	li	a0,4
900003e4:	200005b7          	lui	a1,0x20000
900003e8:	02b51633          	mulh	a2,a0,a1
900003ec:	02c0a023          	sw	a2,32(ra)

900003f0 <inst_40>:

inst_40:
// rs2_val == 1073741824, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x21;  op2val:0x40000000
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffff7, -0x21, 0x40000000, x1, 36, x2)
900003f0:	fdf00513          	li	a0,-33
900003f4:	400005b7          	lui	a1,0x40000
900003f8:	02b51633          	mulh	a2,a0,a1
900003fc:	02c0a223          	sw	a2,36(ra)

90000400 <inst_41>:

inst_41:
// rs2_val == -3, rs1_val == -8388609
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x800001;  op2val:-0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0x800001, -0x3, x1, 40, x2)
90000400:	ff800537          	lui	a0,0xff800
90000404:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0x6f7fa4fb>
90000408:	ffd00593          	li	a1,-3
9000040c:	02b51633          	mulh	a2,a0,a1
90000410:	02c0a423          	sw	a2,40(ra)

90000414 <inst_42>:

inst_42:
// rs2_val == -5, rs1_val == 512
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x200;  op2val:-0x5
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x200, -0x5, x1, 44, x2)
90000414:	20000513          	li	a0,512
90000418:	ffb00593          	li	a1,-5
9000041c:	02b51633          	mulh	a2,a0,a1
90000420:	02c0a623          	sw	a2,44(ra)

90000424 <inst_43>:

inst_43:
// rs2_val == -9, rs1_val == 128
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x80;  op2val:-0x9
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x80, -0x9, x1, 48, x2)
90000424:	08000513          	li	a0,128
90000428:	ff700593          	li	a1,-9
9000042c:	02b51633          	mulh	a2,a0,a1
90000430:	02c0a823          	sw	a2,48(ra)

90000434 <inst_44>:

inst_44:
// rs2_val == -17, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x7;  op2val:-0x11
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x7, -0x11, x1, 52, x2)
90000434:	00700513          	li	a0,7
90000438:	fef00593          	li	a1,-17
9000043c:	02b51633          	mulh	a2,a0,a1
90000440:	02c0aa23          	sw	a2,52(ra)

90000444 <inst_45>:

inst_45:
// rs2_val == -33, rs1_val == 16777216
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x1000000;  op2val:-0x21
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x1000000, -0x21, x1, 56, x2)
90000444:	01000537          	lui	a0,0x1000
90000448:	fdf00593          	li	a1,-33
9000044c:	02b51633          	mulh	a2,a0,a1
90000450:	02c0ac23          	sw	a2,56(ra)

90000454 <inst_46>:

inst_46:
// rs2_val == -65, rs1_val == 1048576
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x100000;  op2val:-0x41
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x100000, -0x41, x1, 60, x2)
90000454:	00100537          	lui	a0,0x100
90000458:	fbf00593          	li	a1,-65
9000045c:	02b51633          	mulh	a2,a0,a1
90000460:	02c0ae23          	sw	a2,60(ra)

90000464 <inst_47>:

inst_47:
// rs2_val == -129, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0x81
TEST_RR_OP(mulh, x12, x10, x11, 0x2b, -0x55555556, -0x81, x1, 64, x2)
90000464:	aaaab537          	lui	a0,0xaaaab
90000468:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
9000046c:	f7f00593          	li	a1,-129
90000470:	02b51633          	mulh	a2,a0,a1
90000474:	04c0a023          	sw	a2,64(ra)

90000478 <inst_48>:

inst_48:
// rs2_val == -257, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0x101
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffaa, 0x55555556, -0x101, x1, 68, x2)
90000478:	55555537          	lui	a0,0x55555
9000047c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90000480:	eff00593          	li	a1,-257
90000484:	02b51633          	mulh	a2,a0,a1
90000488:	04c0a223          	sw	a2,68(ra)

9000048c <inst_49>:

inst_49:
// rs2_val == -513, rs1_val == 65536
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:-0x201
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x10000, -0x201, x1, 72, x2)
9000048c:	00010537          	lui	a0,0x10
90000490:	dff00593          	li	a1,-513
90000494:	02b51633          	mulh	a2,a0,a1
90000498:	04c0a423          	sw	a2,72(ra)

9000049c <inst_50>:

inst_50:
// rs2_val == -1025, rs1_val == 8388608
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x800000;  op2val:-0x401
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffd, 0x800000, -0x401, x1, 76, x2)
9000049c:	00800537          	lui	a0,0x800
900004a0:	bff00593          	li	a1,-1025
900004a4:	02b51633          	mulh	a2,a0,a1
900004a8:	04c0a623          	sw	a2,76(ra)

900004ac <inst_51>:

inst_51:
// rs2_val == -4097, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x1001
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x5, -0x1001, x1, 80, x2)
900004ac:	00500513          	li	a0,5
900004b0:	fffff5b7          	lui	a1,0xfffff
900004b4:	fff58593          	addi	a1,a1,-1 # ffffefff <_end+0x6fff94fb>
900004b8:	02b51633          	mulh	a2,a0,a1
900004bc:	04c0a823          	sw	a2,80(ra)

900004c0 <inst_52>:

inst_52:
// rs2_val == -8193, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0x2001
TEST_RR_OP(mulh, x12, x10, x11, 0xfffff999, 0x33333333, -0x2001, x1, 84, x2)
900004c0:	33333537          	lui	a0,0x33333
900004c4:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
900004c8:	ffffe5b7          	lui	a1,0xffffe
900004cc:	fff58593          	addi	a1,a1,-1 # ffffdfff <_end+0x6fff84fb>
900004d0:	02b51633          	mulh	a2,a0,a1
900004d4:	04c0aa23          	sw	a2,84(ra)

900004d8 <inst_53>:

inst_53:
// rs2_val == -16385, rs1_val == -2049
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x801;  op2val:-0x4001
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0x801, -0x4001, x1, 88, x2)
900004d8:	fffff537          	lui	a0,0xfffff
900004dc:	7ff50513          	addi	a0,a0,2047 # fffff7ff <_end+0x6fff9cfb>
900004e0:	ffffc5b7          	lui	a1,0xffffc
900004e4:	fff58593          	addi	a1,a1,-1 # ffffbfff <_end+0x6fff64fb>
900004e8:	02b51633          	mulh	a2,a0,a1
900004ec:	04c0ac23          	sw	a2,88(ra)

900004f0 <inst_54>:

inst_54:
// rs2_val == -32769, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x40000;  op2val:-0x8001
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffd, 0x40000, -0x8001, x1, 92, x2)
900004f0:	00040537          	lui	a0,0x40
900004f4:	ffff85b7          	lui	a1,0xffff8
900004f8:	fff58593          	addi	a1,a1,-1 # ffff7fff <_end+0x6fff24fb>
900004fc:	02b51633          	mulh	a2,a0,a1
90000500:	04c0ae23          	sw	a2,92(ra)

90000504 <inst_55>:

inst_55:
// rs2_val == -65537, rs1_val == -65
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x41;  op2val:-0x10001
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0x41, -0x10001, x1, 96, x2)
90000504:	fbf00513          	li	a0,-65
90000508:	ffff05b7          	lui	a1,0xffff0
9000050c:	fff58593          	addi	a1,a1,-1 # fffeffff <_end+0x6ffea4fb>
90000510:	02b51633          	mulh	a2,a0,a1
90000514:	06c0a023          	sw	a2,96(ra)

90000518 <inst_56>:

inst_56:
// rs2_val == -131073, rs1_val == -16777217
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x1000001;  op2val:-0x20001
TEST_RR_OP(mulh, x12, x10, x11, 0x200, -0x1000001, -0x20001, x1, 100, x2)
90000518:	ff000537          	lui	a0,0xff000
9000051c:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0x6effa4fb>
90000520:	fffe05b7          	lui	a1,0xfffe0
90000524:	fff58593          	addi	a1,a1,-1 # fffdffff <_end+0x6ffda4fb>
90000528:	02b51633          	mulh	a2,a0,a1
9000052c:	06c0a223          	sw	a2,100(ra)

90000530 <inst_57>:

inst_57:
// rs2_val == -262145, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x6;  op2val:-0x40001
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0x6, -0x40001, x1, 104, x2)
90000530:	ffa00513          	li	a0,-6
90000534:	fffc05b7          	lui	a1,0xfffc0
90000538:	fff58593          	addi	a1,a1,-1 # fffbffff <_end+0x6ffba4fb>
9000053c:	02b51633          	mulh	a2,a0,a1
90000540:	06c0a423          	sw	a2,104(ra)

90000544 <inst_58>:

inst_58:
// rs2_val == -524289, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x800001;  op2val:-0x80001
TEST_RR_OP(mulh, x12, x10, x11, 0x400, -0x800001, -0x80001, x1, 108, x2)
90000544:	ff800537          	lui	a0,0xff800
90000548:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0x6f7fa4fb>
9000054c:	fff805b7          	lui	a1,0xfff80
90000550:	fff58593          	addi	a1,a1,-1 # fff7ffff <_end+0x6ff7a4fb>
90000554:	02b51633          	mulh	a2,a0,a1
90000558:	06c0a623          	sw	a2,108(ra)

9000055c <inst_59>:

inst_59:
// rs2_val == -1048577, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x11;  op2val:-0x100001
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0x11, -0x100001, x1, 112, x2)
9000055c:	fef00513          	li	a0,-17
90000560:	fff005b7          	lui	a1,0xfff00
90000564:	fff58593          	addi	a1,a1,-1 # ffefffff <_end+0x6fefa4fb>
90000568:	02b51633          	mulh	a2,a0,a1
9000056c:	06c0a823          	sw	a2,112(ra)

90000570 <inst_60>:

inst_60:
// rs2_val == -2097153, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2000;  op2val:-0x200001
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffb, 0x2000, -0x200001, x1, 116, x2)
90000570:	00002537          	lui	a0,0x2
90000574:	ffe005b7          	lui	a1,0xffe00
90000578:	fff58593          	addi	a1,a1,-1 # ffdfffff <_end+0x6fdfa4fb>
9000057c:	02b51633          	mulh	a2,a0,a1
90000580:	06c0aa23          	sw	a2,116(ra)

90000584 <inst_61>:

inst_61:
// rs2_val == -4194305, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0x400001
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffd2, 0xb505, -0x400001, x1, 120, x2)
90000584:	0000b537          	lui	a0,0xb
90000588:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
9000058c:	ffc005b7          	lui	a1,0xffc00
90000590:	fff58593          	addi	a1,a1,-1 # ffbfffff <_end+0x6fbfa4fb>
90000594:	02b51633          	mulh	a2,a0,a1
90000598:	06c0ac23          	sw	a2,120(ra)

9000059c <inst_62>:

inst_62:
// rs2_val == -8388609, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x81;  op2val:-0x800001
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0x81, -0x800001, x1, 124, x2)
9000059c:	f7f00513          	li	a0,-129
900005a0:	ff8005b7          	lui	a1,0xff800
900005a4:	fff58593          	addi	a1,a1,-1 # ff7fffff <_end+0x6f7fa4fb>
900005a8:	02b51633          	mulh	a2,a0,a1
900005ac:	06c0ae23          	sw	a2,124(ra)

900005b0 <inst_63>:

inst_63:
// rs2_val == -16777217, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0x1000001
TEST_RR_OP(mulh, x12, x10, x11, 0x555555, -0x55555555, -0x1000001, x1, 128, x2)
900005b0:	aaaab537          	lui	a0,0xaaaab
900005b4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900005b8:	ff0005b7          	lui	a1,0xff000
900005bc:	fff58593          	addi	a1,a1,-1 # feffffff <_end+0x6effa4fb>
900005c0:	02b51633          	mulh	a2,a0,a1
900005c4:	08c0a023          	sw	a2,128(ra)

900005c8 <inst_64>:

inst_64:
// rs2_val == -33554433, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x2000001;  op2val:-0x2000001
TEST_RR_OP(mulh, x12, x10, x11, 0x40000, -0x2000001, -0x2000001, x1, 132, x2)
900005c8:	fe000537          	lui	a0,0xfe000
900005cc:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0x6dffa4fb>
900005d0:	fe0005b7          	lui	a1,0xfe000
900005d4:	fff58593          	addi	a1,a1,-1 # fdffffff <_end+0x6dffa4fb>
900005d8:	02b51633          	mulh	a2,a0,a1
900005dc:	08c0a223          	sw	a2,132(ra)

900005e0 <inst_65>:

inst_65:
// rs2_val == -67108865, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:-0x4000001
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x1, -0x4000001, x1, 136, x2)
900005e0:	00100513          	li	a0,1
900005e4:	fc0005b7          	lui	a1,0xfc000
900005e8:	fff58593          	addi	a1,a1,-1 # fbffffff <_end+0x6bffa4fb>
900005ec:	02b51633          	mulh	a2,a0,a1
900005f0:	08c0a423          	sw	a2,136(ra)

900005f4 <inst_66>:

inst_66:
// rs2_val == -134217729, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x8000001
TEST_RR_OP(mulh, x12, x10, x11, 0x5a8, -0xb504, -0x8000001, x1, 140, x2)
900005f4:	ffff5537          	lui	a0,0xffff5
900005f8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900005fc:	f80005b7          	lui	a1,0xf8000
90000600:	fff58593          	addi	a1,a1,-1 # f7ffffff <_end+0x67ffa4fb>
90000604:	02b51633          	mulh	a2,a0,a1
90000608:	08c0a623          	sw	a2,140(ra)

9000060c <inst_67>:

inst_67:
// rs2_val == -268435457, rs1_val == 2048
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x800;  op2val:-0x10000001
TEST_RR_OP(mulh, x12, x10, x11, 0xffffff7f, 0x800, -0x10000001, x1, 144, x2)
9000060c:	00001537          	lui	a0,0x1
90000610:	80050513          	addi	a0,a0,-2048 # 800 <offset+0x758>
90000614:	f00005b7          	lui	a1,0xf0000
90000618:	fff58593          	addi	a1,a1,-1 # efffffff <_end+0x5fffa4fb>
9000061c:	02b51633          	mulh	a2,a0,a1
90000620:	08c0a823          	sw	a2,144(ra)

90000624 <inst_68>:

inst_68:
// rs2_val == -536870913, rs1_val == 131072
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x20000;  op2val:-0x20000001
TEST_RR_OP(mulh, x12, x10, x11, 0xffffbfff, 0x20000, -0x20000001, x1, 148, x2)
90000624:	00020537          	lui	a0,0x20
90000628:	e00005b7          	lui	a1,0xe0000
9000062c:	fff58593          	addi	a1,a1,-1 # dfffffff <_end+0x4fffa4fb>
90000630:	02b51633          	mulh	a2,a0,a1
90000634:	08c0aa23          	sw	a2,148(ra)

90000638 <inst_69>:

inst_69:
// rs2_val == -1073741825, rs1_val == -16385
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x4001;  op2val:-0x40000001
TEST_RR_OP(mulh, x12, x10, x11, 0x1000, -0x4001, -0x40000001, x1, 152, x2)
90000638:	ffffc537          	lui	a0,0xffffc
9000063c:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0x6fff64fb>
90000640:	c00005b7          	lui	a1,0xc0000
90000644:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0x2fffa4fb>
90000648:	02b51633          	mulh	a2,a0,a1
9000064c:	08c0ac23          	sw	a2,152(ra)

90000650 <inst_70>:

inst_70:
// rs2_val == -1431655766, rs1_val==6 and rs2_val==-1431655766
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffd, 0x6, -0x55555556, x1, 156, x2)
90000650:	00600513          	li	a0,6
90000654:	aaaab5b7          	lui	a1,0xaaaab
90000658:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
9000065c:	02b51633          	mulh	a2,a0,a1
90000660:	08c0ae23          	sw	a2,156(ra)

90000664 <inst_71>:

inst_71:
// rs1_val == 8, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x8;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x8, 0x33333333, x1, 160, x2)
90000664:	00800513          	li	a0,8
90000668:	333335b7          	lui	a1,0x33333
9000066c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90000670:	02b51633          	mulh	a2,a0,a1
90000674:	0ac0a023          	sw	a2,160(ra)

90000678 <inst_72>:

inst_72:
// rs1_val == 16, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x10;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x10, 0x4, x1, 164, x2)
90000678:	01000513          	li	a0,16
9000067c:	00400593          	li	a1,4
90000680:	02b51633          	mulh	a2,a0,a1
90000684:	0ac0a223          	sw	a2,164(ra)

90000688 <inst_73>:

inst_73:
// rs1_val == 32, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x20;  op2val:0x80000
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x20, 0x80000, x1, 168, x2)
90000688:	02000513          	li	a0,32
9000068c:	000805b7          	lui	a1,0x80
90000690:	02b51633          	mulh	a2,a0,a1
90000694:	0ac0a423          	sw	a2,168(ra)

90000698 <inst_74>:

inst_74:
// rs1_val == 64, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x40;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0xc, 0x40, 0x33333332, x1, 172, x2)
90000698:	04000513          	li	a0,64
9000069c:	333335b7          	lui	a1,0x33333
900006a0:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
900006a4:	02b51633          	mulh	a2,a0,a1
900006a8:	0ac0a623          	sw	a2,172(ra)

900006ac <inst_75>:

inst_75:
// rs1_val == 256, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x100;  op2val:-0x100001
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x100, -0x100001, x1, 176, x2)
900006ac:	10000513          	li	a0,256
900006b0:	fff005b7          	lui	a1,0xfff00
900006b4:	fff58593          	addi	a1,a1,-1 # ffefffff <_end+0x6fefa4fb>
900006b8:	02b51633          	mulh	a2,a0,a1
900006bc:	0ac0a823          	sw	a2,176(ra)

900006c0 <inst_76>:

inst_76:
// rs1_val == 4096, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x1000;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x1000, 0x0, x1, 180, x2)
900006c0:	00001537          	lui	a0,0x1
900006c4:	00000593          	li	a1,0
900006c8:	02b51633          	mulh	a2,a0,a1
900006cc:	0ac0aa23          	sw	a2,180(ra)

900006d0 <inst_77>:

inst_77:
// rs1_val == 16384, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4000;  op2val:0x100
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4000, 0x100, x1, 184, x2)
900006d0:	00004537          	lui	a0,0x4
900006d4:	10000593          	li	a1,256
900006d8:	02b51633          	mulh	a2,a0,a1
900006dc:	0ac0ac23          	sw	a2,184(ra)

900006e0 <inst_78>:

inst_78:
// rs1_val == 32768, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x8000;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x8000, 0xb505, x1, 188, x2)
900006e0:	00008537          	lui	a0,0x8
900006e4:	0000b5b7          	lui	a1,0xb
900006e8:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
900006ec:	02b51633          	mulh	a2,a0,a1
900006f0:	0ac0ae23          	sw	a2,188(ra)

900006f4 <inst_79>:

inst_79:
// rs1_val == 2097152, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x200000;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x200000, 0x0, x1, 192, x2)
900006f4:	00200537          	lui	a0,0x200
900006f8:	00000593          	li	a1,0
900006fc:	02b51633          	mulh	a2,a0,a1
90000700:	0cc0a023          	sw	a2,192(ra)

90000704 <inst_80>:

inst_80:
// rs1_val == 4194304, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x400000;  op2val:0x10000000
TEST_RR_OP(mulh, x12, x10, x11, 0x40000, 0x400000, 0x10000000, x1, 196, x2)
90000704:	00400537          	lui	a0,0x400
90000708:	100005b7          	lui	a1,0x10000
9000070c:	02b51633          	mulh	a2,a0,a1
90000710:	0cc0a223          	sw	a2,196(ra)

90000714 <inst_81>:

inst_81:
// rs1_val == 67108864, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4000000;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xfeaaaaaa, 0x4000000, -0x55555555, x1, 200, x2)
90000714:	04000537          	lui	a0,0x4000
90000718:	aaaab5b7          	lui	a1,0xaaaab
9000071c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90000720:	02b51633          	mulh	a2,a0,a1
90000724:	0cc0a423          	sw	a2,200(ra)

90000728 <inst_82>:

inst_82:
// rs1_val == 134217728, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x8000000;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x5a8, 0x8000000, 0xb504, x1, 204, x2)
90000728:	08000537          	lui	a0,0x8000
9000072c:	0000b5b7          	lui	a1,0xb
90000730:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90000734:	02b51633          	mulh	a2,a0,a1
90000738:	0cc0a623          	sw	a2,204(ra)

9000073c <inst_83>:

inst_83:
// rs1_val == 268435456, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x10000000;  op2val:-0x40000001
TEST_RR_OP(mulh, x12, x10, x11, 0xfbffffff, 0x10000000, -0x40000001, x1, 208, x2)
9000073c:	10000537          	lui	a0,0x10000
90000740:	c00005b7          	lui	a1,0xc0000
90000744:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0x2fffa4fb>
90000748:	02b51633          	mulh	a2,a0,a1
9000074c:	0cc0a823          	sw	a2,208(ra)

90000750 <inst_84>:

inst_84:
// rs1_val == 536870912, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x20000000;  op2val:-0x11
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffd, 0x20000000, -0x11, x1, 212, x2)
90000750:	20000537          	lui	a0,0x20000
90000754:	fef00593          	li	a1,-17
90000758:	02b51633          	mulh	a2,a0,a1
9000075c:	0cc0aa23          	sw	a2,212(ra)

90000760 <inst_85>:

inst_85:
// rs1_val == 1073741824, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:-0x2001
TEST_RR_OP(mulh, x12, x10, x11, 0xfffff7ff, 0x40000000, -0x2001, x1, 216, x2)
90000760:	40000537          	lui	a0,0x40000
90000764:	ffffe5b7          	lui	a1,0xffffe
90000768:	fff58593          	addi	a1,a1,-1 # ffffdfff <_end+0x6fff84fb>
9000076c:	02b51633          	mulh	a2,a0,a1
90000770:	0cc0ac23          	sw	a2,216(ra)

90000774 <inst_86>:

inst_86:
// rs1_val == -3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x3;  op2val:0x40
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0x3, 0x40, x1, 220, x2)
90000774:	ffd00513          	li	a0,-3
90000778:	04000593          	li	a1,64
9000077c:	02b51633          	mulh	a2,a0,a1
90000780:	0cc0ae23          	sw	a2,220(ra)

90000784 <inst_87>:

inst_87:
// rs1_val == -9, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x9;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffd, -0x9, 0x55555554, x1, 224, x2)
90000784:	ff700513          	li	a0,-9
90000788:	555555b7          	lui	a1,0x55555
9000078c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90000790:	02b51633          	mulh	a2,a0,a1
90000794:	0ec0a023          	sw	a2,224(ra)

90000798 <inst_88>:

inst_88:
// rs1_val == -257, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x101;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0x101, 0x0, x1, 228, x2)
90000798:	eff00513          	li	a0,-257
9000079c:	00000593          	li	a1,0
900007a0:	02b51633          	mulh	a2,a0,a1
900007a4:	0ec0a223          	sw	a2,228(ra)

900007a8 <inst_89>:

inst_89:
// rs1_val == -513, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x201;  op2val:0x40
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0x201, 0x40, x1, 232, x2)
900007a8:	dff00513          	li	a0,-513
900007ac:	04000593          	li	a1,64
900007b0:	02b51633          	mulh	a2,a0,a1
900007b4:	0ec0a423          	sw	a2,232(ra)

900007b8 <inst_90>:

inst_90:
// rs1_val == -1025, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x401;  op2val:0x7fffffff
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffdff, -0x401, 0x7fffffff, x1, 236, x2)
900007b8:	bff00513          	li	a0,-1025
900007bc:	800005b7          	lui	a1,0x80000
900007c0:	fff58593          	addi	a1,a1,-1 # 7fffffff <_end+0xefffa4fb>
900007c4:	02b51633          	mulh	a2,a0,a1
900007c8:	0ec0a623          	sw	a2,236(ra)

900007cc <inst_91>:

inst_91:
// rs1_val == -65537, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x10001;  op2val:-0x10001
TEST_RR_OP(mulh, x12, x10, x11, 0x1, -0x10001, -0x10001, x1, 240, x2)
900007cc:	ffff0537          	lui	a0,0xffff0
900007d0:	fff50513          	addi	a0,a0,-1 # fffeffff <_end+0x6ffea4fb>
900007d4:	ffff05b7          	lui	a1,0xffff0
900007d8:	fff58593          	addi	a1,a1,-1 # fffeffff <_end+0x6ffea4fb>
900007dc:	02b51633          	mulh	a2,a0,a1
900007e0:	0ec0a823          	sw	a2,240(ra)

900007e4 <inst_92>:

inst_92:
// rs1_val == -262145, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x40001;  op2val:-0x4000001
TEST_RR_OP(mulh, x12, x10, x11, 0x1000, -0x40001, -0x4000001, x1, 244, x2)
900007e4:	fffc0537          	lui	a0,0xfffc0
900007e8:	fff50513          	addi	a0,a0,-1 # fffbffff <_end+0x6ffba4fb>
900007ec:	fc0005b7          	lui	a1,0xfc000
900007f0:	fff58593          	addi	a1,a1,-1 # fbffffff <_end+0x6bffa4fb>
900007f4:	02b51633          	mulh	a2,a0,a1
900007f8:	0ec0aa23          	sw	a2,244(ra)

900007fc <inst_93>:

inst_93:
// rs1_val == -1048577, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x100001;  op2val:0x200
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0x100001, 0x200, x1, 248, x2)
900007fc:	fff00537          	lui	a0,0xfff00
90000800:	fff50513          	addi	a0,a0,-1 # ffefffff <_end+0x6fefa4fb>
90000804:	20000593          	li	a1,512
90000808:	02b51633          	mulh	a2,a0,a1
9000080c:	0ec0ac23          	sw	a2,248(ra)

90000810 <inst_94>:

inst_94:
// rs1_val == -2097153, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x200001;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffe9, -0x200001, 0xb503, x1, 252, x2)
90000810:	ffe00537          	lui	a0,0xffe00
90000814:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0x6fdfa4fb>
90000818:	0000b5b7          	lui	a1,0xb
9000081c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90000820:	02b51633          	mulh	a2,a0,a1
90000824:	0ec0ae23          	sw	a2,252(ra)

90000828 <inst_95>:

inst_95:
// rs1_val == -4194305, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x400001;  op2val:0x400000
TEST_RR_OP(mulh, x12, x10, x11, 0xffffefff, -0x400001, 0x400000, x1, 256, x2)
90000828:	ffc00537          	lui	a0,0xffc00
9000082c:	fff50513          	addi	a0,a0,-1 # ffbfffff <_end+0x6fbfa4fb>
90000830:	004005b7          	lui	a1,0x400
90000834:	02b51633          	mulh	a2,a0,a1
90000838:	10c0a023          	sw	a2,256(ra)

9000083c <inst_96>:

inst_96:
// rs1_val == -67108865, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x4000001;  op2val:0x3fffffff
TEST_RR_OP(mulh, x12, x10, x11, 0xfeffffff, -0x4000001, 0x3fffffff, x1, 260, x2)
9000083c:	fc000537          	lui	a0,0xfc000
90000840:	fff50513          	addi	a0,a0,-1 # fbffffff <_end+0x6bffa4fb>
90000844:	400005b7          	lui	a1,0x40000
90000848:	fff58593          	addi	a1,a1,-1 # 3fffffff <offset+0x3fffff57>
9000084c:	02b51633          	mulh	a2,a0,a1
90000850:	10c0a223          	sw	a2,260(ra)

90000854 <inst_97>:

inst_97:
// rs1_val == -134217729, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x8000001;  op2val:-0x11
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0x8000001, -0x11, x1, 264, x2)
90000854:	f8000537          	lui	a0,0xf8000
90000858:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0x67ffa4fb>
9000085c:	fef00593          	li	a1,-17
90000860:	02b51633          	mulh	a2,a0,a1
90000864:	10c0a423          	sw	a2,264(ra)

90000868 <inst_98>:

inst_98:
// rs1_val == -268435457, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x10000001;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0x10000001, 0x0, x1, 268, x2)
90000868:	f0000537          	lui	a0,0xf0000
9000086c:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0x5fffa4fb>
90000870:	00000593          	li	a1,0
90000874:	02b51633          	mulh	a2,a0,a1
90000878:	10c0a623          	sw	a2,268(ra)

9000087c <inst_99>:

inst_99:
// rs1_val == 1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x9
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffd, 0x55555555, -0x9, x1, 272, x2)
9000087c:	55555537          	lui	a0,0x55555
90000880:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000884:	ff700593          	li	a1,-9
90000888:	02b51633          	mulh	a2,a0,a1
9000088c:	10c0a823          	sw	a2,272(ra)

90000890 <inst_100>:

inst_100:
// rs1_val==3 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0x3, x1, 276, x2)
90000890:	00300513          	li	a0,3
90000894:	00300593          	li	a1,3
90000898:	02b51633          	mulh	a2,a0,a1
9000089c:	10c0aa23          	sw	a2,276(ra)

900008a0 <inst_101>:

inst_101:
// rs1_val==3 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0x55555555, x1, 280, x2)
900008a0:	00300513          	li	a0,3
900008a4:	555555b7          	lui	a1,0x55555
900008a8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
900008ac:	02b51633          	mulh	a2,a0,a1
900008b0:	10c0ac23          	sw	a2,280(ra)

900008b4 <inst_102>:

inst_102:
// rs1_val==3 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, 0x3, -0x55555556, x1, 284, x2)
900008b4:	00300513          	li	a0,3
900008b8:	aaaab5b7          	lui	a1,0xaaaab
900008bc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900008c0:	02b51633          	mulh	a2,a0,a1
900008c4:	10c0ae23          	sw	a2,284(ra)

900008c8 <inst_103>:

inst_103:
// rs1_val==3 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0x5, x1, 288, x2)
900008c8:	00300513          	li	a0,3
900008cc:	00500593          	li	a1,5
900008d0:	02b51633          	mulh	a2,a0,a1
900008d4:	12c0a023          	sw	a2,288(ra)

900008d8 <inst_104>:

inst_104:
// rs1_val==3 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0x33333333, x1, 292, x2)
900008d8:	00300513          	li	a0,3
900008dc:	333335b7          	lui	a1,0x33333
900008e0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
900008e4:	02b51633          	mulh	a2,a0,a1
900008e8:	12c0a223          	sw	a2,292(ra)

900008ec <inst_105>:

inst_105:
// rs1_val==3 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x3, 0x66666666, x1, 296, x2)
900008ec:	00300513          	li	a0,3
900008f0:	666665b7          	lui	a1,0x66666
900008f4:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
900008f8:	02b51633          	mulh	a2,a0,a1
900008fc:	12c0a423          	sw	a2,296(ra)

90000900 <inst_106>:

inst_106:
// rs1_val==3 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x3, -0xb504, x1, 300, x2)
90000900:	00300513          	li	a0,3
90000904:	ffff55b7          	lui	a1,0xffff5
90000908:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000090c:	02b51633          	mulh	a2,a0,a1
90000910:	12c0a623          	sw	a2,300(ra)

90000914 <inst_107>:

inst_107:
// rs1_val==3 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0xb504, x1, 304, x2)
90000914:	00300513          	li	a0,3
90000918:	0000b5b7          	lui	a1,0xb
9000091c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90000920:	02b51633          	mulh	a2,a0,a1
90000924:	12c0a823          	sw	a2,304(ra)

90000928 <inst_108>:

inst_108:
// rs1_val==3 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0x2, x1, 308, x2)
90000928:	00300513          	li	a0,3
9000092c:	00200593          	li	a1,2
90000930:	02b51633          	mulh	a2,a0,a1
90000934:	12c0aa23          	sw	a2,308(ra)

90000938 <inst_109>:

inst_109:
// rs1_val==3 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0x55555554, x1, 312, x2)
90000938:	00300513          	li	a0,3
9000093c:	555555b7          	lui	a1,0x55555
90000940:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90000944:	02b51633          	mulh	a2,a0,a1
90000948:	12c0ac23          	sw	a2,312(ra)

9000094c <inst_110>:

inst_110:
// rs1_val==3 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0x0, x1, 316, x2)
9000094c:	00300513          	li	a0,3
90000950:	00000593          	li	a1,0
90000954:	02b51633          	mulh	a2,a0,a1
90000958:	12c0ae23          	sw	a2,316(ra)

9000095c <inst_111>:

inst_111:
// rs1_val==3 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0x4, x1, 320, x2)
9000095c:	00300513          	li	a0,3
90000960:	00400593          	li	a1,4
90000964:	02b51633          	mulh	a2,a0,a1
90000968:	14c0a023          	sw	a2,320(ra)

9000096c <inst_112>:

inst_112:
// rs1_val==3 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0x33333332, x1, 324, x2)
9000096c:	00300513          	li	a0,3
90000970:	333335b7          	lui	a1,0x33333
90000974:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90000978:	02b51633          	mulh	a2,a0,a1
9000097c:	14c0a223          	sw	a2,324(ra)

90000980 <inst_113>:

inst_113:
// rs1_val==3 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x3, 0x66666665, x1, 328, x2)
90000980:	00300513          	li	a0,3
90000984:	666665b7          	lui	a1,0x66666
90000988:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
9000098c:	02b51633          	mulh	a2,a0,a1
90000990:	14c0a423          	sw	a2,328(ra)

90000994 <inst_114>:

inst_114:
// rs1_val==3 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0xb503, x1, 332, x2)
90000994:	00300513          	li	a0,3
90000998:	0000b5b7          	lui	a1,0xb
9000099c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
900009a0:	02b51633          	mulh	a2,a0,a1
900009a4:	14c0a623          	sw	a2,332(ra)

900009a8 <inst_115>:

inst_115:
// rs1_val==3 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x3, 0x55555556, x1, 336, x2)
900009a8:	00300513          	li	a0,3
900009ac:	555555b7          	lui	a1,0x55555
900009b0:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
900009b4:	02b51633          	mulh	a2,a0,a1
900009b8:	14c0a823          	sw	a2,336(ra)

900009bc <inst_116>:

inst_116:
// rs1_val==3 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x3, -0x55555555, x1, 340, x2)
900009bc:	00300513          	li	a0,3
900009c0:	aaaab5b7          	lui	a1,0xaaaab
900009c4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900009c8:	02b51633          	mulh	a2,a0,a1
900009cc:	14c0aa23          	sw	a2,340(ra)

900009d0 <inst_117>:

inst_117:
// rs1_val==3 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0x6, x1, 344, x2)
900009d0:	00300513          	li	a0,3
900009d4:	00600593          	li	a1,6
900009d8:	02b51633          	mulh	a2,a0,a1
900009dc:	14c0ac23          	sw	a2,344(ra)

900009e0 <inst_118>:

inst_118:
// rs1_val==3 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0x33333334, x1, 348, x2)
900009e0:	00300513          	li	a0,3
900009e4:	333335b7          	lui	a1,0x33333
900009e8:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
900009ec:	02b51633          	mulh	a2,a0,a1
900009f0:	14c0ae23          	sw	a2,348(ra)

900009f4 <inst_119>:

inst_119:
// rs1_val==3 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x3, 0x66666667, x1, 352, x2)
900009f4:	00300513          	li	a0,3
900009f8:	666665b7          	lui	a1,0x66666
900009fc:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90000a00:	02b51633          	mulh	a2,a0,a1
90000a04:	16c0a023          	sw	a2,352(ra)

90000a08 <inst_120>:

inst_120:
// rs1_val==3 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x3, -0xb503, x1, 356, x2)
90000a08:	00300513          	li	a0,3
90000a0c:	ffff55b7          	lui	a1,0xffff5
90000a10:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000a14:	02b51633          	mulh	a2,a0,a1
90000a18:	16c0a223          	sw	a2,356(ra)

90000a1c <inst_121>:

inst_121:
// rs1_val==3 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x3, 0xb505, x1, 360, x2)
90000a1c:	00300513          	li	a0,3
90000a20:	0000b5b7          	lui	a1,0xb
90000a24:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90000a28:	02b51633          	mulh	a2,a0,a1
90000a2c:	16c0a423          	sw	a2,360(ra)

90000a30 <inst_122>:

inst_122:
// rs1_val==1431655765 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x55555555, 0x3, x1, 364, x2)
90000a30:	55555537          	lui	a0,0x55555
90000a34:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000a38:	00300593          	li	a1,3
90000a3c:	02b51633          	mulh	a2,a0,a1
90000a40:	16c0a623          	sw	a2,364(ra)

90000a44 <inst_123>:

inst_123:
// rs1_val==1431655765 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71c, 0x55555555, 0x55555555, x1, 368, x2)
90000a44:	55555537          	lui	a0,0x55555
90000a48:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000a4c:	555555b7          	lui	a1,0x55555
90000a50:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90000a54:	02b51633          	mulh	a2,a0,a1
90000a58:	16c0a823          	sw	a2,368(ra)

90000a5c <inst_124>:

inst_124:
// rs1_val==1431655765 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e3, 0x55555555, -0x55555556, x1, 372, x2)
90000a5c:	55555537          	lui	a0,0x55555
90000a60:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000a64:	aaaab5b7          	lui	a1,0xaaaab
90000a68:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000a6c:	02b51633          	mulh	a2,a0,a1
90000a70:	16c0aa23          	sw	a2,372(ra)

90000a74 <inst_125>:

inst_125:
// rs1_val==1431655765 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x55555555, 0x5, x1, 376, x2)
90000a74:	55555537          	lui	a0,0x55555
90000a78:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000a7c:	00500593          	li	a1,5
90000a80:	02b51633          	mulh	a2,a0,a1
90000a84:	16c0ac23          	sw	a2,376(ra)

90000a88 <inst_126>:

inst_126:
// rs1_val==1431655765 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x11111110, 0x55555555, 0x33333333, x1, 380, x2)
90000a88:	55555537          	lui	a0,0x55555
90000a8c:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000a90:	333335b7          	lui	a1,0x33333
90000a94:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90000a98:	02b51633          	mulh	a2,a0,a1
90000a9c:	16c0ae23          	sw	a2,380(ra)

90000aa0 <inst_127>:

inst_127:
// rs1_val==1431655765 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x55555555, 0x66666666, x1, 384, x2)
90000aa0:	55555537          	lui	a0,0x55555
90000aa4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000aa8:	666665b7          	lui	a1,0x66666
90000aac:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90000ab0:	02b51633          	mulh	a2,a0,a1
90000ab4:	18c0a023          	sw	a2,384(ra)

90000ab8 <inst_128>:

inst_128:
// rs1_val==1431655765 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, 0x55555555, -0xb504, x1, 388, x2)
90000ab8:	55555537          	lui	a0,0x55555
90000abc:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000ac0:	ffff55b7          	lui	a1,0xffff5
90000ac4:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90000ac8:	02b51633          	mulh	a2,a0,a1
90000acc:	18c0a223          	sw	a2,388(ra)

90000ad0 <inst_129>:

inst_129:
// rs1_val==1431655765 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0x55555555, 0xb504, x1, 392, x2)
90000ad0:	55555537          	lui	a0,0x55555
90000ad4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000ad8:	0000b5b7          	lui	a1,0xb
90000adc:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90000ae0:	02b51633          	mulh	a2,a0,a1
90000ae4:	18c0a423          	sw	a2,392(ra)

90000ae8 <inst_130>:

inst_130:
// rs1_val==1431655765 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x55555555, 0x2, x1, 396, x2)
90000ae8:	55555537          	lui	a0,0x55555
90000aec:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000af0:	00200593          	li	a1,2
90000af4:	02b51633          	mulh	a2,a0,a1
90000af8:	18c0a623          	sw	a2,396(ra)

90000afc <inst_131>:

inst_131:
// rs1_val==1431655765 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71b, 0x55555555, 0x55555554, x1, 400, x2)
90000afc:	55555537          	lui	a0,0x55555
90000b00:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000b04:	555555b7          	lui	a1,0x55555
90000b08:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90000b0c:	02b51633          	mulh	a2,a0,a1
90000b10:	18c0a823          	sw	a2,400(ra)

90000b14 <inst_132>:

inst_132:
// rs1_val==1431655765 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x55555555, 0x0, x1, 404, x2)
90000b14:	55555537          	lui	a0,0x55555
90000b18:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000b1c:	00000593          	li	a1,0
90000b20:	02b51633          	mulh	a2,a0,a1
90000b24:	18c0aa23          	sw	a2,404(ra)

90000b28 <inst_133>:

inst_133:
// rs1_val==1431655765 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x55555555, 0x4, x1, 408, x2)
90000b28:	55555537          	lui	a0,0x55555
90000b2c:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000b30:	00400593          	li	a1,4
90000b34:	02b51633          	mulh	a2,a0,a1
90000b38:	18c0ac23          	sw	a2,408(ra)

90000b3c <inst_134>:

inst_134:
// rs1_val==1431655765 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x11111110, 0x55555555, 0x33333332, x1, 412, x2)
90000b3c:	55555537          	lui	a0,0x55555
90000b40:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000b44:	333335b7          	lui	a1,0x33333
90000b48:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90000b4c:	02b51633          	mulh	a2,a0,a1
90000b50:	18c0ae23          	sw	a2,412(ra)

90000b54 <inst_135>:

inst_135:
// rs1_val==1431655765 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x55555555, 0x66666665, x1, 416, x2)
90000b54:	55555537          	lui	a0,0x55555
90000b58:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000b5c:	666665b7          	lui	a1,0x66666
90000b60:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90000b64:	02b51633          	mulh	a2,a0,a1
90000b68:	1ac0a023          	sw	a2,416(ra)

90000b6c <inst_136>:

inst_136:
// rs1_val==1431655765 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0x55555555, 0xb503, x1, 420, x2)
90000b6c:	55555537          	lui	a0,0x55555
90000b70:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000b74:	0000b5b7          	lui	a1,0xb
90000b78:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90000b7c:	02b51633          	mulh	a2,a0,a1
90000b80:	1ac0a223          	sw	a2,420(ra)

90000b84 <inst_137>:

inst_137:
// rs1_val==1431655765 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71c, 0x55555555, 0x55555556, x1, 424, x2)
90000b84:	55555537          	lui	a0,0x55555
90000b88:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000b8c:	555555b7          	lui	a1,0x55555
90000b90:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90000b94:	02b51633          	mulh	a2,a0,a1
90000b98:	1ac0a423          	sw	a2,424(ra)

90000b9c <inst_138>:

inst_138:
// rs1_val==1431655765 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e3, 0x55555555, -0x55555555, x1, 428, x2)
90000b9c:	55555537          	lui	a0,0x55555
90000ba0:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000ba4:	aaaab5b7          	lui	a1,0xaaaab
90000ba8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90000bac:	02b51633          	mulh	a2,a0,a1
90000bb0:	1ac0a623          	sw	a2,428(ra)

90000bb4 <inst_139>:

inst_139:
// rs1_val==1431655765 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x55555555, 0x6, x1, 432, x2)
90000bb4:	55555537          	lui	a0,0x55555
90000bb8:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000bbc:	00600593          	li	a1,6
90000bc0:	02b51633          	mulh	a2,a0,a1
90000bc4:	1ac0a823          	sw	a2,432(ra)

90000bc8 <inst_140>:

inst_140:
// rs1_val==1431655765 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x11111111, 0x55555555, 0x33333334, x1, 436, x2)
90000bc8:	55555537          	lui	a0,0x55555
90000bcc:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000bd0:	333335b7          	lui	a1,0x33333
90000bd4:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90000bd8:	02b51633          	mulh	a2,a0,a1
90000bdc:	1ac0aa23          	sw	a2,436(ra)

90000be0 <inst_141>:

inst_141:
// rs1_val==1431655765 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x22222222, 0x55555555, 0x66666667, x1, 440, x2)
90000be0:	55555537          	lui	a0,0x55555
90000be4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000be8:	666665b7          	lui	a1,0x66666
90000bec:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90000bf0:	02b51633          	mulh	a2,a0,a1
90000bf4:	1ac0ac23          	sw	a2,440(ra)

90000bf8 <inst_142>:

inst_142:
// rs1_val==1431655765 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, 0x55555555, -0xb503, x1, 444, x2)
90000bf8:	55555537          	lui	a0,0x55555
90000bfc:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000c00:	ffff55b7          	lui	a1,0xffff5
90000c04:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000c08:	02b51633          	mulh	a2,a0,a1
90000c0c:	1ac0ae23          	sw	a2,444(ra)

90000c10 <inst_143>:

inst_143:
// rs1_val==1431655765 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0x55555555, 0xb505, x1, 448, x2)
90000c10:	55555537          	lui	a0,0x55555
90000c14:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ad>
90000c18:	0000b5b7          	lui	a1,0xb
90000c1c:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90000c20:	02b51633          	mulh	a2,a0,a1
90000c24:	1cc0a023          	sw	a2,448(ra)

90000c28 <inst_144>:

inst_144:
// rs1_val==-1431655766 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, -0x55555556, 0x3, x1, 452, x2)
90000c28:	aaaab537          	lui	a0,0xaaaab
90000c2c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c30:	00300593          	li	a1,3
90000c34:	02b51633          	mulh	a2,a0,a1
90000c38:	1cc0a223          	sw	a2,452(ra)

90000c3c <inst_145>:

inst_145:
// rs1_val==-1431655766 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e3, -0x55555556, 0x55555555, x1, 456, x2)
90000c3c:	aaaab537          	lui	a0,0xaaaab
90000c40:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c44:	555555b7          	lui	a1,0x55555
90000c48:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90000c4c:	02b51633          	mulh	a2,a0,a1
90000c50:	1cc0a423          	sw	a2,456(ra)

90000c54 <inst_146>:

inst_146:
// rs1_val==-1431655766 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71c, -0x55555556, -0x55555556, x1, 460, x2)
90000c54:	aaaab537          	lui	a0,0xaaaab
90000c58:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c5c:	aaaab5b7          	lui	a1,0xaaaab
90000c60:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c64:	02b51633          	mulh	a2,a0,a1
90000c68:	1cc0a623          	sw	a2,460(ra)

90000c6c <inst_147>:

inst_147:
// rs1_val==-1431655766 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, -0x55555556, 0x5, x1, 464, x2)
90000c6c:	aaaab537          	lui	a0,0xaaaab
90000c70:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c74:	00500593          	li	a1,5
90000c78:	02b51633          	mulh	a2,a0,a1
90000c7c:	1cc0a823          	sw	a2,464(ra)

90000c80 <inst_148>:

inst_148:
// rs1_val==-1431655766 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeee, -0x55555556, 0x33333333, x1, 468, x2)
90000c80:	aaaab537          	lui	a0,0xaaaab
90000c84:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c88:	333335b7          	lui	a1,0x33333
90000c8c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90000c90:	02b51633          	mulh	a2,a0,a1
90000c94:	1cc0aa23          	sw	a2,468(ra)

90000c98 <inst_149>:

inst_149:
// rs1_val==-1431655766 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0xdddddddd, -0x55555556, 0x66666666, x1, 472, x2)
90000c98:	aaaab537          	lui	a0,0xaaaab
90000c9c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000ca0:	666665b7          	lui	a1,0x66666
90000ca4:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90000ca8:	02b51633          	mulh	a2,a0,a1
90000cac:	1cc0ac23          	sw	a2,472(ra)

90000cb0 <inst_150>:

inst_150:
// rs1_val==-1431655766 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, -0x55555556, -0xb504, x1, 476, x2)
90000cb0:	aaaab537          	lui	a0,0xaaaab
90000cb4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000cb8:	ffff55b7          	lui	a1,0xffff5
90000cbc:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90000cc0:	02b51633          	mulh	a2,a0,a1
90000cc4:	1cc0ae23          	sw	a2,476(ra)

90000cc8 <inst_151>:

inst_151:
// rs1_val==-1431655766 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, -0x55555556, 0xb504, x1, 480, x2)
90000cc8:	aaaab537          	lui	a0,0xaaaab
90000ccc:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000cd0:	0000b5b7          	lui	a1,0xb
90000cd4:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90000cd8:	02b51633          	mulh	a2,a0,a1
90000cdc:	1ec0a023          	sw	a2,480(ra)

90000ce0 <inst_152>:

inst_152:
// rs1_val==-1431655766 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0x55555556, 0x2, x1, 484, x2)
90000ce0:	aaaab537          	lui	a0,0xaaaab
90000ce4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000ce8:	00200593          	li	a1,2
90000cec:	02b51633          	mulh	a2,a0,a1
90000cf0:	1ec0a223          	sw	a2,484(ra)

90000cf4 <inst_153>:

inst_153:
// rs1_val==-1431655766 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e3, -0x55555556, 0x55555554, x1, 488, x2)
90000cf4:	aaaab537          	lui	a0,0xaaaab
90000cf8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000cfc:	555555b7          	lui	a1,0x55555
90000d00:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90000d04:	02b51633          	mulh	a2,a0,a1
90000d08:	1ec0a423          	sw	a2,488(ra)

90000d0c <inst_154>:

inst_154:
// rs1_val==-1431655766 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0x55555556, 0x0, x1, 492, x2)
90000d0c:	aaaab537          	lui	a0,0xaaaab
90000d10:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d14:	00000593          	li	a1,0
90000d18:	02b51633          	mulh	a2,a0,a1
90000d1c:	1ec0a623          	sw	a2,492(ra)

90000d20 <inst_155>:

inst_155:
// rs1_val==-1431655766 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, -0x55555556, 0x4, x1, 496, x2)
90000d20:	aaaab537          	lui	a0,0xaaaab
90000d24:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d28:	00400593          	li	a1,4
90000d2c:	02b51633          	mulh	a2,a0,a1
90000d30:	1ec0a823          	sw	a2,496(ra)

90000d34 <inst_156>:

inst_156:
// rs1_val==-1431655766 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeef, -0x55555556, 0x33333332, x1, 500, x2)
90000d34:	aaaab537          	lui	a0,0xaaaab
90000d38:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d3c:	333335b7          	lui	a1,0x33333
90000d40:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90000d44:	02b51633          	mulh	a2,a0,a1
90000d48:	1ec0aa23          	sw	a2,500(ra)

90000d4c <inst_157>:

inst_157:
// rs1_val==-1431655766 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0xddddddde, -0x55555556, 0x66666665, x1, 504, x2)
90000d4c:	aaaab537          	lui	a0,0xaaaab
90000d50:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d54:	666665b7          	lui	a1,0x66666
90000d58:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90000d5c:	02b51633          	mulh	a2,a0,a1
90000d60:	1ec0ac23          	sw	a2,504(ra)

90000d64 <inst_158>:

inst_158:
// rs1_val==-1431655766 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, -0x55555556, 0xb503, x1, 508, x2)
90000d64:	aaaab537          	lui	a0,0xaaaab
90000d68:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d6c:	0000b5b7          	lui	a1,0xb
90000d70:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90000d74:	02b51633          	mulh	a2,a0,a1
90000d78:	1ec0ae23          	sw	a2,508(ra)

90000d7c <inst_159>:

inst_159:
// rs1_val==-1431655766 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e3, -0x55555556, 0x55555556, x1, 512, x2)
90000d7c:	aaaab537          	lui	a0,0xaaaab
90000d80:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d84:	555555b7          	lui	a1,0x55555
90000d88:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90000d8c:	02b51633          	mulh	a2,a0,a1
90000d90:	20c0a023          	sw	a2,512(ra)

90000d94 <inst_160>:

inst_160:
// rs1_val==-1431655766 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71c, -0x55555556, -0x55555555, x1, 516, x2)
90000d94:	aaaab537          	lui	a0,0xaaaab
90000d98:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d9c:	aaaab5b7          	lui	a1,0xaaaab
90000da0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90000da4:	02b51633          	mulh	a2,a0,a1
90000da8:	20c0a223          	sw	a2,516(ra)

90000dac <inst_161>:

inst_161:
// rs1_val==-1431655766 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffd, -0x55555556, 0x6, x1, 520, x2)
90000dac:	aaaab537          	lui	a0,0xaaaab
90000db0:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000db4:	00600593          	li	a1,6
90000db8:	02b51633          	mulh	a2,a0,a1
90000dbc:	20c0a423          	sw	a2,520(ra)

90000dc0 <inst_162>:

inst_162:
// rs1_val==-1431655766 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeee, -0x55555556, 0x33333334, x1, 524, x2)
90000dc0:	aaaab537          	lui	a0,0xaaaab
90000dc4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000dc8:	333335b7          	lui	a1,0x33333
90000dcc:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90000dd0:	02b51633          	mulh	a2,a0,a1
90000dd4:	20c0a623          	sw	a2,524(ra)

90000dd8 <inst_163>:

inst_163:
// rs1_val==-1431655766 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0xdddddddd, -0x55555556, 0x66666667, x1, 528, x2)
90000dd8:	aaaab537          	lui	a0,0xaaaab
90000ddc:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000de0:	666665b7          	lui	a1,0x66666
90000de4:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90000de8:	02b51633          	mulh	a2,a0,a1
90000dec:	20c0a823          	sw	a2,528(ra)

90000df0 <inst_164>:

inst_164:
// rs1_val==-1431655766 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, -0x55555556, -0xb503, x1, 532, x2)
90000df0:	aaaab537          	lui	a0,0xaaaab
90000df4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000df8:	ffff55b7          	lui	a1,0xffff5
90000dfc:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000e00:	02b51633          	mulh	a2,a0,a1
90000e04:	20c0aa23          	sw	a2,532(ra)

90000e08 <inst_165>:

inst_165:
// rs1_val==-1431655766 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a8, -0x55555556, 0xb505, x1, 536, x2)
90000e08:	aaaab537          	lui	a0,0xaaaab
90000e0c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000e10:	0000b5b7          	lui	a1,0xb
90000e14:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90000e18:	02b51633          	mulh	a2,a0,a1
90000e1c:	20c0ac23          	sw	a2,536(ra)

90000e20 <inst_166>:

inst_166:
// rs1_val==5 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0x3, x1, 540, x2)
90000e20:	00500513          	li	a0,5
90000e24:	00300593          	li	a1,3
90000e28:	02b51633          	mulh	a2,a0,a1
90000e2c:	20c0ae23          	sw	a2,540(ra)

90000e30 <inst_167>:

inst_167:
// rs1_val==5 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x5, 0x55555555, x1, 544, x2)
90000e30:	00500513          	li	a0,5
90000e34:	555555b7          	lui	a1,0x55555
90000e38:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90000e3c:	02b51633          	mulh	a2,a0,a1
90000e40:	22c0a023          	sw	a2,544(ra)

90000e44 <inst_168>:

inst_168:
// rs1_val==5 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, 0x5, -0x55555556, x1, 548, x2)
90000e44:	00500513          	li	a0,5
90000e48:	aaaab5b7          	lui	a1,0xaaaab
90000e4c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000e50:	02b51633          	mulh	a2,a0,a1
90000e54:	22c0a223          	sw	a2,548(ra)

90000e58 <inst_169>:

inst_169:
// rs1_val==5 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0x5, x1, 552, x2)
90000e58:	00500513          	li	a0,5
90000e5c:	00500593          	li	a1,5
90000e60:	02b51633          	mulh	a2,a0,a1
90000e64:	22c0a423          	sw	a2,552(ra)

90000e68 <inst_170>:

inst_170:
// rs1_val==5 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0x33333333, x1, 556, x2)
90000e68:	00500513          	li	a0,5
90000e6c:	333335b7          	lui	a1,0x33333
90000e70:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90000e74:	02b51633          	mulh	a2,a0,a1
90000e78:	22c0a623          	sw	a2,556(ra)

90000e7c <inst_171>:

inst_171:
// rs1_val==5 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x5, 0x66666666, x1, 560, x2)
90000e7c:	00500513          	li	a0,5
90000e80:	666665b7          	lui	a1,0x66666
90000e84:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90000e88:	02b51633          	mulh	a2,a0,a1
90000e8c:	22c0a823          	sw	a2,560(ra)

90000e90 <inst_172>:

inst_172:
// rs1_val==5 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x5, -0xb504, x1, 564, x2)
90000e90:	00500513          	li	a0,5
90000e94:	ffff55b7          	lui	a1,0xffff5
90000e98:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90000e9c:	02b51633          	mulh	a2,a0,a1
90000ea0:	22c0aa23          	sw	a2,564(ra)

90000ea4 <inst_173>:

inst_173:
// rs1_val==5 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0xb504, x1, 568, x2)
90000ea4:	00500513          	li	a0,5
90000ea8:	0000b5b7          	lui	a1,0xb
90000eac:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90000eb0:	02b51633          	mulh	a2,a0,a1
90000eb4:	22c0ac23          	sw	a2,568(ra)

90000eb8 <inst_174>:

inst_174:
// rs1_val==5 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0x2, x1, 572, x2)
90000eb8:	00500513          	li	a0,5
90000ebc:	00200593          	li	a1,2
90000ec0:	02b51633          	mulh	a2,a0,a1
90000ec4:	22c0ae23          	sw	a2,572(ra)

90000ec8 <inst_175>:

inst_175:
// rs1_val==5 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x5, 0x55555554, x1, 576, x2)
90000ec8:	00500513          	li	a0,5
90000ecc:	555555b7          	lui	a1,0x55555
90000ed0:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90000ed4:	02b51633          	mulh	a2,a0,a1
90000ed8:	24c0a023          	sw	a2,576(ra)

90000edc <inst_176>:

inst_176:
// rs1_val==5 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0x0, x1, 580, x2)
90000edc:	00500513          	li	a0,5
90000ee0:	00000593          	li	a1,0
90000ee4:	02b51633          	mulh	a2,a0,a1
90000ee8:	24c0a223          	sw	a2,580(ra)

90000eec <inst_177>:

inst_177:
// rs1_val==5 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0x4, x1, 584, x2)
90000eec:	00500513          	li	a0,5
90000ef0:	00400593          	li	a1,4
90000ef4:	02b51633          	mulh	a2,a0,a1
90000ef8:	24c0a423          	sw	a2,584(ra)

90000efc <inst_178>:

inst_178:
// rs1_val==5 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0x33333332, x1, 588, x2)
90000efc:	00500513          	li	a0,5
90000f00:	333335b7          	lui	a1,0x33333
90000f04:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90000f08:	02b51633          	mulh	a2,a0,a1
90000f0c:	24c0a623          	sw	a2,588(ra)

90000f10 <inst_179>:

inst_179:
// rs1_val==5 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x5, 0x66666665, x1, 592, x2)
90000f10:	00500513          	li	a0,5
90000f14:	666665b7          	lui	a1,0x66666
90000f18:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90000f1c:	02b51633          	mulh	a2,a0,a1
90000f20:	24c0a823          	sw	a2,592(ra)

90000f24 <inst_180>:

inst_180:
// rs1_val==5 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0xb503, x1, 596, x2)
90000f24:	00500513          	li	a0,5
90000f28:	0000b5b7          	lui	a1,0xb
90000f2c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90000f30:	02b51633          	mulh	a2,a0,a1
90000f34:	24c0aa23          	sw	a2,596(ra)

90000f38 <inst_181>:

inst_181:
// rs1_val==5 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x5, 0x55555556, x1, 600, x2)
90000f38:	00500513          	li	a0,5
90000f3c:	555555b7          	lui	a1,0x55555
90000f40:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90000f44:	02b51633          	mulh	a2,a0,a1
90000f48:	24c0ac23          	sw	a2,600(ra)

90000f4c <inst_182>:

inst_182:
// rs1_val==5 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, 0x5, -0x55555555, x1, 604, x2)
90000f4c:	00500513          	li	a0,5
90000f50:	aaaab5b7          	lui	a1,0xaaaab
90000f54:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90000f58:	02b51633          	mulh	a2,a0,a1
90000f5c:	24c0ae23          	sw	a2,604(ra)

90000f60 <inst_183>:

inst_183:
// rs1_val==5 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0x6, x1, 608, x2)
90000f60:	00500513          	li	a0,5
90000f64:	00600593          	li	a1,6
90000f68:	02b51633          	mulh	a2,a0,a1
90000f6c:	26c0a023          	sw	a2,608(ra)

90000f70 <inst_184>:

inst_184:
// rs1_val==5 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x5, 0x33333334, x1, 612, x2)
90000f70:	00500513          	li	a0,5
90000f74:	333335b7          	lui	a1,0x33333
90000f78:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90000f7c:	02b51633          	mulh	a2,a0,a1
90000f80:	26c0a223          	sw	a2,612(ra)

90000f84 <inst_185>:

inst_185:
// rs1_val==5 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x2, 0x5, 0x66666667, x1, 616, x2)
90000f84:	00500513          	li	a0,5
90000f88:	666665b7          	lui	a1,0x66666
90000f8c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90000f90:	02b51633          	mulh	a2,a0,a1
90000f94:	26c0a423          	sw	a2,616(ra)

90000f98 <inst_186>:

inst_186:
// rs1_val==5 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x5, -0xb503, x1, 620, x2)
90000f98:	00500513          	li	a0,5
90000f9c:	ffff55b7          	lui	a1,0xffff5
90000fa0:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000fa4:	02b51633          	mulh	a2,a0,a1
90000fa8:	26c0a623          	sw	a2,620(ra)

90000fac <inst_187>:

inst_187:
// rs1_val==5 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0xb505, x1, 624, x2)
90000fac:	00500513          	li	a0,5
90000fb0:	0000b5b7          	lui	a1,0xb
90000fb4:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90000fb8:	02b51633          	mulh	a2,a0,a1
90000fbc:	26c0a823          	sw	a2,624(ra)

90000fc0 <inst_188>:

inst_188:
// rs1_val==858993459 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333333, 0x3, x1, 628, x2)
90000fc0:	33333537          	lui	a0,0x33333
90000fc4:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90000fc8:	00300593          	li	a1,3
90000fcc:	02b51633          	mulh	a2,a0,a1
90000fd0:	26c0aa23          	sw	a2,628(ra)

90000fd4 <inst_189>:

inst_189:
// rs1_val==858993459 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x11111110, 0x33333333, 0x55555555, x1, 632, x2)
90000fd4:	33333537          	lui	a0,0x33333
90000fd8:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90000fdc:	555555b7          	lui	a1,0x55555
90000fe0:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90000fe4:	02b51633          	mulh	a2,a0,a1
90000fe8:	26c0ac23          	sw	a2,632(ra)

90000fec <inst_190>:

inst_190:
// rs1_val==858993459 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeee, 0x33333333, -0x55555556, x1, 636, x2)
90000fec:	33333537          	lui	a0,0x33333
90000ff0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90000ff4:	aaaab5b7          	lui	a1,0xaaaab
90000ff8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000ffc:	02b51633          	mulh	a2,a0,a1
90001000:	26c0ae23          	sw	a2,636(ra)

90001004 <inst_191>:

inst_191:
// rs1_val==858993459 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333333, 0x5, x1, 640, x2)
90001004:	33333537          	lui	a0,0x33333
90001008:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
9000100c:	00500593          	li	a1,5
90001010:	02b51633          	mulh	a2,a0,a1
90001014:	28c0a023          	sw	a2,640(ra)

90001018 <inst_192>:

inst_192:
// rs1_val==858993459 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0xa3d70a3, 0x33333333, 0x33333333, x1, 644, x2)
90001018:	33333537          	lui	a0,0x33333
9000101c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90001020:	333335b7          	lui	a1,0x33333
90001024:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90001028:	02b51633          	mulh	a2,a0,a1
9000102c:	28c0a223          	sw	a2,644(ra)

90001030 <inst_193>:

inst_193:
// rs1_val==858993459 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x33333333, 0x66666666, x1, 648, x2)
90001030:	33333537          	lui	a0,0x33333
90001034:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90001038:	666665b7          	lui	a1,0x66666
9000103c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90001040:	02b51633          	mulh	a2,a0,a1
90001044:	28c0a423          	sw	a2,648(ra)

90001048 <inst_194>:

inst_194:
// rs1_val==858993459 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcc, 0x33333333, -0xb504, x1, 652, x2)
90001048:	33333537          	lui	a0,0x33333
9000104c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90001050:	ffff55b7          	lui	a1,0xffff5
90001054:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001058:	02b51633          	mulh	a2,a0,a1
9000105c:	28c0a623          	sw	a2,652(ra)

90001060 <inst_195>:

inst_195:
// rs1_val==858993459 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x2433, 0x33333333, 0xb504, x1, 656, x2)
90001060:	33333537          	lui	a0,0x33333
90001064:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90001068:	0000b5b7          	lui	a1,0xb
9000106c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90001070:	02b51633          	mulh	a2,a0,a1
90001074:	28c0a823          	sw	a2,656(ra)

90001078 <inst_196>:

inst_196:
// rs1_val==858993459 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333333, 0x2, x1, 660, x2)
90001078:	33333537          	lui	a0,0x33333
9000107c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90001080:	00200593          	li	a1,2
90001084:	02b51633          	mulh	a2,a0,a1
90001088:	28c0aa23          	sw	a2,660(ra)

9000108c <inst_197>:

inst_197:
// rs1_val==858993459 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x11111110, 0x33333333, 0x55555554, x1, 664, x2)
9000108c:	33333537          	lui	a0,0x33333
90001090:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90001094:	555555b7          	lui	a1,0x55555
90001098:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
9000109c:	02b51633          	mulh	a2,a0,a1
900010a0:	28c0ac23          	sw	a2,664(ra)

900010a4 <inst_198>:

inst_198:
// rs1_val==858993459 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333333, 0x0, x1, 668, x2)
900010a4:	33333537          	lui	a0,0x33333
900010a8:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
900010ac:	00000593          	li	a1,0
900010b0:	02b51633          	mulh	a2,a0,a1
900010b4:	28c0ae23          	sw	a2,668(ra)

900010b8 <inst_199>:

inst_199:
// rs1_val==858993459 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333333, 0x4, x1, 672, x2)
900010b8:	33333537          	lui	a0,0x33333
900010bc:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
900010c0:	00400593          	li	a1,4
900010c4:	02b51633          	mulh	a2,a0,a1
900010c8:	2ac0a023          	sw	a2,672(ra)

900010cc <inst_200>:

inst_200:
// rs1_val==858993459 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0xa3d70a3, 0x33333333, 0x33333332, x1, 676, x2)
900010cc:	33333537          	lui	a0,0x33333
900010d0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
900010d4:	333335b7          	lui	a1,0x33333
900010d8:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
900010dc:	02b51633          	mulh	a2,a0,a1
900010e0:	2ac0a223          	sw	a2,676(ra)

900010e4 <inst_201>:

inst_201:
// rs1_val==858993459 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x33333333, 0x66666665, x1, 680, x2)
900010e4:	33333537          	lui	a0,0x33333
900010e8:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
900010ec:	666665b7          	lui	a1,0x66666
900010f0:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
900010f4:	02b51633          	mulh	a2,a0,a1
900010f8:	2ac0a423          	sw	a2,680(ra)

900010fc <inst_202>:

inst_202:
// rs1_val==858993459 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x2433, 0x33333333, 0xb503, x1, 684, x2)
900010fc:	33333537          	lui	a0,0x33333
90001100:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90001104:	0000b5b7          	lui	a1,0xb
90001108:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
9000110c:	02b51633          	mulh	a2,a0,a1
90001110:	2ac0a623          	sw	a2,684(ra)

90001114 <inst_203>:

inst_203:
// rs1_val==858993459 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x11111111, 0x33333333, 0x55555556, x1, 688, x2)
90001114:	33333537          	lui	a0,0x33333
90001118:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
9000111c:	555555b7          	lui	a1,0x55555
90001120:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90001124:	02b51633          	mulh	a2,a0,a1
90001128:	2ac0a823          	sw	a2,688(ra)

9000112c <inst_204>:

inst_204:
// rs1_val==858993459 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeef, 0x33333333, -0x55555555, x1, 692, x2)
9000112c:	33333537          	lui	a0,0x33333
90001130:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90001134:	aaaab5b7          	lui	a1,0xaaaab
90001138:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000113c:	02b51633          	mulh	a2,a0,a1
90001140:	2ac0aa23          	sw	a2,692(ra)

90001144 <inst_205>:

inst_205:
// rs1_val==858993459 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x33333333, 0x6, x1, 696, x2)
90001144:	33333537          	lui	a0,0x33333
90001148:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
9000114c:	00600593          	li	a1,6
90001150:	02b51633          	mulh	a2,a0,a1
90001154:	2ac0ac23          	sw	a2,696(ra)

90001158 <inst_206>:

inst_206:
// rs1_val==858993459 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0xa3d70a3, 0x33333333, 0x33333334, x1, 700, x2)
90001158:	33333537          	lui	a0,0x33333
9000115c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90001160:	333335b7          	lui	a1,0x33333
90001164:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90001168:	02b51633          	mulh	a2,a0,a1
9000116c:	2ac0ae23          	sw	a2,700(ra)

90001170 <inst_207>:

inst_207:
// rs1_val==858993459 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x33333333, 0x66666667, x1, 704, x2)
90001170:	33333537          	lui	a0,0x33333
90001174:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90001178:	666665b7          	lui	a1,0x66666
9000117c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90001180:	02b51633          	mulh	a2,a0,a1
90001184:	2cc0a023          	sw	a2,704(ra)

90001188 <inst_208>:

inst_208:
// rs1_val==858993459 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcc, 0x33333333, -0xb503, x1, 708, x2)
90001188:	33333537          	lui	a0,0x33333
9000118c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
90001190:	ffff55b7          	lui	a1,0xffff5
90001194:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001198:	02b51633          	mulh	a2,a0,a1
9000119c:	2cc0a223          	sw	a2,708(ra)

900011a0 <inst_209>:

inst_209:
// rs1_val==858993459 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x2434, 0x33333333, 0xb505, x1, 712, x2)
900011a0:	33333537          	lui	a0,0x33333
900011a4:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x3333328b>
900011a8:	0000b5b7          	lui	a1,0xb
900011ac:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
900011b0:	02b51633          	mulh	a2,a0,a1
900011b4:	2cc0a423          	sw	a2,712(ra)

900011b8 <inst_210>:

inst_210:
// rs1_val==1717986918 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x66666666, 0x3, x1, 716, x2)
900011b8:	66666537          	lui	a0,0x66666
900011bc:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
900011c0:	00300593          	li	a1,3
900011c4:	02b51633          	mulh	a2,a0,a1
900011c8:	2cc0a623          	sw	a2,716(ra)

900011cc <inst_211>:

inst_211:
// rs1_val==1717986918 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x66666666, 0x55555555, x1, 720, x2)
900011cc:	66666537          	lui	a0,0x66666
900011d0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
900011d4:	555555b7          	lui	a1,0x55555
900011d8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
900011dc:	02b51633          	mulh	a2,a0,a1
900011e0:	2cc0a823          	sw	a2,720(ra)

900011e4 <inst_212>:

inst_212:
// rs1_val==1717986918 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xdddddddd, 0x66666666, -0x55555556, x1, 724, x2)
900011e4:	66666537          	lui	a0,0x66666
900011e8:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
900011ec:	aaaab5b7          	lui	a1,0xaaaab
900011f0:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900011f4:	02b51633          	mulh	a2,a0,a1
900011f8:	2cc0aa23          	sw	a2,724(ra)

900011fc <inst_213>:

inst_213:
// rs1_val==1717986918 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x66666666, 0x5, x1, 728, x2)
900011fc:	66666537          	lui	a0,0x66666
90001200:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
90001204:	00500593          	li	a1,5
90001208:	02b51633          	mulh	a2,a0,a1
9000120c:	2cc0ac23          	sw	a2,728(ra)

90001210 <inst_214>:

inst_214:
// rs1_val==1717986918 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x66666666, 0x33333333, x1, 732, x2)
90001210:	66666537          	lui	a0,0x66666
90001214:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
90001218:	333335b7          	lui	a1,0x33333
9000121c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90001220:	02b51633          	mulh	a2,a0,a1
90001224:	2cc0ae23          	sw	a2,732(ra)

90001228 <inst_215>:

inst_215:
// rs1_val==1717986918 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x28f5c28f, 0x66666666, 0x66666666, x1, 736, x2)
90001228:	66666537          	lui	a0,0x66666
9000122c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
90001230:	666665b7          	lui	a1,0x66666
90001234:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90001238:	02b51633          	mulh	a2,a0,a1
9000123c:	2ec0a023          	sw	a2,736(ra)

90001240 <inst_216>:

inst_216:
// rs1_val==1717986918 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb798, 0x66666666, -0xb504, x1, 740, x2)
90001240:	66666537          	lui	a0,0x66666
90001244:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
90001248:	ffff55b7          	lui	a1,0xffff5
9000124c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001250:	02b51633          	mulh	a2,a0,a1
90001254:	2ec0a223          	sw	a2,740(ra)

90001258 <inst_217>:

inst_217:
// rs1_val==1717986918 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x4867, 0x66666666, 0xb504, x1, 744, x2)
90001258:	66666537          	lui	a0,0x66666
9000125c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
90001260:	0000b5b7          	lui	a1,0xb
90001264:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90001268:	02b51633          	mulh	a2,a0,a1
9000126c:	2ec0a423          	sw	a2,744(ra)

90001270 <inst_218>:

inst_218:
// rs1_val==1717986918 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x66666666, 0x2, x1, 748, x2)
90001270:	66666537          	lui	a0,0x66666
90001274:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
90001278:	00200593          	li	a1,2
9000127c:	02b51633          	mulh	a2,a0,a1
90001280:	2ec0a623          	sw	a2,748(ra)

90001284 <inst_219>:

inst_219:
// rs1_val==1717986918 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x66666666, 0x55555554, x1, 752, x2)
90001284:	66666537          	lui	a0,0x66666
90001288:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
9000128c:	555555b7          	lui	a1,0x55555
90001290:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90001294:	02b51633          	mulh	a2,a0,a1
90001298:	2ec0a823          	sw	a2,752(ra)

9000129c <inst_220>:

inst_220:
// rs1_val==1717986918 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x66666666, 0x0, x1, 756, x2)
9000129c:	66666537          	lui	a0,0x66666
900012a0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
900012a4:	00000593          	li	a1,0
900012a8:	02b51633          	mulh	a2,a0,a1
900012ac:	2ec0aa23          	sw	a2,756(ra)

900012b0 <inst_221>:

inst_221:
// rs1_val==1717986918 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x66666666, 0x4, x1, 760, x2)
900012b0:	66666537          	lui	a0,0x66666
900012b4:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
900012b8:	00400593          	li	a1,4
900012bc:	02b51633          	mulh	a2,a0,a1
900012c0:	2ec0ac23          	sw	a2,760(ra)

900012c4 <inst_222>:

inst_222:
// rs1_val==1717986918 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x66666666, 0x33333332, x1, 764, x2)
900012c4:	66666537          	lui	a0,0x66666
900012c8:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
900012cc:	333335b7          	lui	a1,0x33333
900012d0:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
900012d4:	02b51633          	mulh	a2,a0,a1
900012d8:	2ec0ae23          	sw	a2,764(ra)

900012dc <inst_223>:

inst_223:
// rs1_val==1717986918 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x28f5c28e, 0x66666666, 0x66666665, x1, 768, x2)
900012dc:	66666537          	lui	a0,0x66666
900012e0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
900012e4:	666665b7          	lui	a1,0x66666
900012e8:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
900012ec:	02b51633          	mulh	a2,a0,a1
900012f0:	30c0a023          	sw	a2,768(ra)

900012f4 <inst_224>:

inst_224:
// rs1_val==1717986918 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x4867, 0x66666666, 0xb503, x1, 772, x2)
900012f4:	66666537          	lui	a0,0x66666
900012f8:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
900012fc:	0000b5b7          	lui	a1,0xb
90001300:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90001304:	02b51633          	mulh	a2,a0,a1
90001308:	30c0a223          	sw	a2,772(ra)

9000130c <inst_225>:

inst_225:
// rs1_val==1717986918 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x22222222, 0x66666666, 0x55555556, x1, 776, x2)
9000130c:	66666537          	lui	a0,0x66666
90001310:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
90001314:	555555b7          	lui	a1,0x55555
90001318:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
9000131c:	02b51633          	mulh	a2,a0,a1
90001320:	30c0a423          	sw	a2,776(ra)

90001324 <inst_226>:

inst_226:
// rs1_val==1717986918 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xddddddde, 0x66666666, -0x55555555, x1, 780, x2)
90001324:	66666537          	lui	a0,0x66666
90001328:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
9000132c:	aaaab5b7          	lui	a1,0xaaaab
90001330:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001334:	02b51633          	mulh	a2,a0,a1
90001338:	30c0a623          	sw	a2,780(ra)

9000133c <inst_227>:

inst_227:
// rs1_val==1717986918 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x2, 0x66666666, 0x6, x1, 784, x2)
9000133c:	66666537          	lui	a0,0x66666
90001340:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
90001344:	00600593          	li	a1,6
90001348:	02b51633          	mulh	a2,a0,a1
9000134c:	30c0a823          	sw	a2,784(ra)

90001350 <inst_228>:

inst_228:
// rs1_val==1717986918 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x66666666, 0x33333334, x1, 788, x2)
90001350:	66666537          	lui	a0,0x66666
90001354:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
90001358:	333335b7          	lui	a1,0x33333
9000135c:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90001360:	02b51633          	mulh	a2,a0,a1
90001364:	30c0aa23          	sw	a2,788(ra)

90001368 <inst_229>:

inst_229:
// rs1_val==1717986918 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x28f5c28f, 0x66666666, 0x66666667, x1, 792, x2)
90001368:	66666537          	lui	a0,0x66666
9000136c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
90001370:	666665b7          	lui	a1,0x66666
90001374:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90001378:	02b51633          	mulh	a2,a0,a1
9000137c:	30c0ac23          	sw	a2,792(ra)

90001380 <inst_230>:

inst_230:
// rs1_val==1717986918 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb798, 0x66666666, -0xb503, x1, 796, x2)
90001380:	66666537          	lui	a0,0x66666
90001384:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
90001388:	ffff55b7          	lui	a1,0xffff5
9000138c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001390:	02b51633          	mulh	a2,a0,a1
90001394:	30c0ae23          	sw	a2,796(ra)

90001398 <inst_231>:

inst_231:
// rs1_val==1717986918 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x4868, 0x66666666, 0xb505, x1, 800, x2)
90001398:	66666537          	lui	a0,0x66666
9000139c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665be>
900013a0:	0000b5b7          	lui	a1,0xb
900013a4:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
900013a8:	02b51633          	mulh	a2,a0,a1
900013ac:	32c0a023          	sw	a2,800(ra)

900013b0 <inst_232>:

inst_232:
// rs1_val==-46340 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb504, 0x3, x1, 804, x2)
900013b0:	ffff5537          	lui	a0,0xffff5
900013b4:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013b8:	00300593          	li	a1,3
900013bc:	02b51633          	mulh	a2,a0,a1
900013c0:	32c0a223          	sw	a2,804(ra)

900013c4 <inst_233>:

inst_233:
// rs1_val==-46340 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, -0xb504, 0x55555555, x1, 808, x2)
900013c4:	ffff5537          	lui	a0,0xffff5
900013c8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013cc:	555555b7          	lui	a1,0x55555
900013d0:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
900013d4:	02b51633          	mulh	a2,a0,a1
900013d8:	32c0a423          	sw	a2,808(ra)

900013dc <inst_234>:

inst_234:
// rs1_val==-46340 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, -0xb504, -0x55555556, x1, 812, x2)
900013dc:	ffff5537          	lui	a0,0xffff5
900013e0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013e4:	aaaab5b7          	lui	a1,0xaaaab
900013e8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900013ec:	02b51633          	mulh	a2,a0,a1
900013f0:	32c0a623          	sw	a2,812(ra)

900013f4 <inst_235>:

inst_235:
// rs1_val==-46340 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb504, 0x5, x1, 816, x2)
900013f4:	ffff5537          	lui	a0,0xffff5
900013f8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013fc:	00500593          	li	a1,5
90001400:	02b51633          	mulh	a2,a0,a1
90001404:	32c0a823          	sw	a2,816(ra)

90001408 <inst_236>:

inst_236:
// rs1_val==-46340 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcc, -0xb504, 0x33333333, x1, 820, x2)
90001408:	ffff5537          	lui	a0,0xffff5
9000140c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001410:	333335b7          	lui	a1,0x33333
90001414:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90001418:	02b51633          	mulh	a2,a0,a1
9000141c:	32c0aa23          	sw	a2,820(ra)

90001420 <inst_237>:

inst_237:
// rs1_val==-46340 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb798, -0xb504, 0x66666666, x1, 824, x2)
90001420:	ffff5537          	lui	a0,0xffff5
90001424:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001428:	666665b7          	lui	a1,0x66666
9000142c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90001430:	02b51633          	mulh	a2,a0,a1
90001434:	32c0ac23          	sw	a2,824(ra)

90001438 <inst_238>:

inst_238:
// rs1_val==-46340 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0xb504, -0xb504, x1, 828, x2)
90001438:	ffff5537          	lui	a0,0xffff5
9000143c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001440:	ffff55b7          	lui	a1,0xffff5
90001444:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001448:	02b51633          	mulh	a2,a0,a1
9000144c:	32c0ae23          	sw	a2,828(ra)

90001450 <inst_239>:

inst_239:
// rs1_val==-46340 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb504, 0xb504, x1, 832, x2)
90001450:	ffff5537          	lui	a0,0xffff5
90001454:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001458:	0000b5b7          	lui	a1,0xb
9000145c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90001460:	02b51633          	mulh	a2,a0,a1
90001464:	34c0a023          	sw	a2,832(ra)

90001468 <inst_240>:

inst_240:
// rs1_val==-46340 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb504, 0x2, x1, 836, x2)
90001468:	ffff5537          	lui	a0,0xffff5
9000146c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001470:	00200593          	li	a1,2
90001474:	02b51633          	mulh	a2,a0,a1
90001478:	34c0a223          	sw	a2,836(ra)

9000147c <inst_241>:

inst_241:
// rs1_val==-46340 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, -0xb504, 0x55555554, x1, 840, x2)
9000147c:	ffff5537          	lui	a0,0xffff5
90001480:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001484:	555555b7          	lui	a1,0x55555
90001488:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
9000148c:	02b51633          	mulh	a2,a0,a1
90001490:	34c0a423          	sw	a2,840(ra)

90001494 <inst_242>:

inst_242:
// rs1_val==-46340 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0xb504, 0x0, x1, 844, x2)
90001494:	ffff5537          	lui	a0,0xffff5
90001498:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
9000149c:	00000593          	li	a1,0
900014a0:	02b51633          	mulh	a2,a0,a1
900014a4:	34c0a623          	sw	a2,844(ra)

900014a8 <inst_243>:

inst_243:
// rs1_val==-46340 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb504, 0x4, x1, 848, x2)
900014a8:	ffff5537          	lui	a0,0xffff5
900014ac:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014b0:	00400593          	li	a1,4
900014b4:	02b51633          	mulh	a2,a0,a1
900014b8:	34c0a823          	sw	a2,848(ra)

900014bc <inst_244>:

inst_244:
// rs1_val==-46340 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcc, -0xb504, 0x33333332, x1, 852, x2)
900014bc:	ffff5537          	lui	a0,0xffff5
900014c0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014c4:	333335b7          	lui	a1,0x33333
900014c8:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
900014cc:	02b51633          	mulh	a2,a0,a1
900014d0:	34c0aa23          	sw	a2,852(ra)

900014d4 <inst_245>:

inst_245:
// rs1_val==-46340 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb798, -0xb504, 0x66666665, x1, 856, x2)
900014d4:	ffff5537          	lui	a0,0xffff5
900014d8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014dc:	666665b7          	lui	a1,0x66666
900014e0:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
900014e4:	02b51633          	mulh	a2,a0,a1
900014e8:	34c0ac23          	sw	a2,856(ra)

900014ec <inst_246>:

inst_246:
// rs1_val==-46340 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb504, 0xb503, x1, 860, x2)
900014ec:	ffff5537          	lui	a0,0xffff5
900014f0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014f4:	0000b5b7          	lui	a1,0xb
900014f8:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
900014fc:	02b51633          	mulh	a2,a0,a1
90001500:	34c0ae23          	sw	a2,860(ra)

90001504 <inst_247>:

inst_247:
// rs1_val==-46340 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, -0xb504, 0x55555556, x1, 864, x2)
90001504:	ffff5537          	lui	a0,0xffff5
90001508:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
9000150c:	555555b7          	lui	a1,0x55555
90001510:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90001514:	02b51633          	mulh	a2,a0,a1
90001518:	36c0a023          	sw	a2,864(ra)

9000151c <inst_248>:

inst_248:
// rs1_val==-46340 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, -0xb504, -0x55555555, x1, 868, x2)
9000151c:	ffff5537          	lui	a0,0xffff5
90001520:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001524:	aaaab5b7          	lui	a1,0xaaaab
90001528:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000152c:	02b51633          	mulh	a2,a0,a1
90001530:	36c0a223          	sw	a2,868(ra)

90001534 <inst_249>:

inst_249:
// rs1_val==-46340 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb504, 0x6, x1, 872, x2)
90001534:	ffff5537          	lui	a0,0xffff5
90001538:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
9000153c:	00600593          	li	a1,6
90001540:	02b51633          	mulh	a2,a0,a1
90001544:	36c0a423          	sw	a2,872(ra)

90001548 <inst_250>:

inst_250:
// rs1_val==-46340 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcb, -0xb504, 0x33333334, x1, 876, x2)
90001548:	ffff5537          	lui	a0,0xffff5
9000154c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001550:	333335b7          	lui	a1,0x33333
90001554:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90001558:	02b51633          	mulh	a2,a0,a1
9000155c:	36c0a623          	sw	a2,876(ra)

90001560 <inst_251>:

inst_251:
// rs1_val==-46340 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb797, -0xb504, 0x66666667, x1, 880, x2)
90001560:	ffff5537          	lui	a0,0xffff5
90001564:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001568:	666665b7          	lui	a1,0x66666
9000156c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90001570:	02b51633          	mulh	a2,a0,a1
90001574:	36c0a823          	sw	a2,880(ra)

90001578 <inst_252>:

inst_252:
// rs1_val==-46340 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0xb504, -0xb503, x1, 884, x2)
90001578:	ffff5537          	lui	a0,0xffff5
9000157c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001580:	ffff55b7          	lui	a1,0xffff5
90001584:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001588:	02b51633          	mulh	a2,a0,a1
9000158c:	36c0aa23          	sw	a2,884(ra)

90001590 <inst_253>:

inst_253:
// rs1_val==-46340 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb504, 0xb505, x1, 888, x2)
90001590:	ffff5537          	lui	a0,0xffff5
90001594:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001598:	0000b5b7          	lui	a1,0xb
9000159c:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
900015a0:	02b51633          	mulh	a2,a0,a1
900015a4:	36c0ac23          	sw	a2,888(ra)

900015a8 <inst_254>:

inst_254:
// rs1_val==46340 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb504, 0x3, x1, 892, x2)
900015a8:	0000b537          	lui	a0,0xb
900015ac:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
900015b0:	00300593          	li	a1,3
900015b4:	02b51633          	mulh	a2,a0,a1
900015b8:	36c0ae23          	sw	a2,892(ra)

900015bc <inst_255>:

inst_255:
// rs1_val==46340 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0xb504, 0x55555555, x1, 896, x2)
900015bc:	0000b537          	lui	a0,0xb
900015c0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
900015c4:	555555b7          	lui	a1,0x55555
900015c8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
900015cc:	02b51633          	mulh	a2,a0,a1
900015d0:	38c0a023          	sw	a2,896(ra)

900015d4 <inst_256>:

inst_256:
// rs1_val==46340 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, 0xb504, -0x55555556, x1, 900, x2)
900015d4:	0000b537          	lui	a0,0xb
900015d8:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
900015dc:	aaaab5b7          	lui	a1,0xaaaab
900015e0:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900015e4:	02b51633          	mulh	a2,a0,a1
900015e8:	38c0a223          	sw	a2,900(ra)

900015ec <inst_257>:

inst_257:
// rs1_val==46340 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb504, 0x5, x1, 904, x2)
900015ec:	0000b537          	lui	a0,0xb
900015f0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
900015f4:	00500593          	li	a1,5
900015f8:	02b51633          	mulh	a2,a0,a1
900015fc:	38c0a423          	sw	a2,904(ra)

90001600 <inst_258>:

inst_258:
// rs1_val==46340 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x2433, 0xb504, 0x33333333, x1, 908, x2)
90001600:	0000b537          	lui	a0,0xb
90001604:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001608:	333335b7          	lui	a1,0x33333
9000160c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90001610:	02b51633          	mulh	a2,a0,a1
90001614:	38c0a623          	sw	a2,908(ra)

90001618 <inst_259>:

inst_259:
// rs1_val==46340 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x4867, 0xb504, 0x66666666, x1, 912, x2)
90001618:	0000b537          	lui	a0,0xb
9000161c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001620:	666665b7          	lui	a1,0x66666
90001624:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90001628:	02b51633          	mulh	a2,a0,a1
9000162c:	38c0a823          	sw	a2,912(ra)

90001630 <inst_260>:

inst_260:
// rs1_val==46340 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0xb504, -0xb504, x1, 916, x2)
90001630:	0000b537          	lui	a0,0xb
90001634:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001638:	ffff55b7          	lui	a1,0xffff5
9000163c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001640:	02b51633          	mulh	a2,a0,a1
90001644:	38c0aa23          	sw	a2,916(ra)

90001648 <inst_261>:

inst_261:
// rs1_val==46340 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb504, 0xb504, x1, 920, x2)
90001648:	0000b537          	lui	a0,0xb
9000164c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001650:	0000b5b7          	lui	a1,0xb
90001654:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90001658:	02b51633          	mulh	a2,a0,a1
9000165c:	38c0ac23          	sw	a2,920(ra)

90001660 <inst_262>:

inst_262:
// rs1_val==46340 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb504, 0x2, x1, 924, x2)
90001660:	0000b537          	lui	a0,0xb
90001664:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001668:	00200593          	li	a1,2
9000166c:	02b51633          	mulh	a2,a0,a1
90001670:	38c0ae23          	sw	a2,924(ra)

90001674 <inst_263>:

inst_263:
// rs1_val==46340 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0xb504, 0x55555554, x1, 928, x2)
90001674:	0000b537          	lui	a0,0xb
90001678:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
9000167c:	555555b7          	lui	a1,0x55555
90001680:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90001684:	02b51633          	mulh	a2,a0,a1
90001688:	3ac0a023          	sw	a2,928(ra)

9000168c <inst_264>:

inst_264:
// rs1_val==46340 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb504, 0x0, x1, 932, x2)
9000168c:	0000b537          	lui	a0,0xb
90001690:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001694:	00000593          	li	a1,0
90001698:	02b51633          	mulh	a2,a0,a1
9000169c:	3ac0a223          	sw	a2,932(ra)

900016a0 <inst_265>:

inst_265:
// rs1_val==46340 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb504, 0x4, x1, 936, x2)
900016a0:	0000b537          	lui	a0,0xb
900016a4:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
900016a8:	00400593          	li	a1,4
900016ac:	02b51633          	mulh	a2,a0,a1
900016b0:	3ac0a423          	sw	a2,936(ra)

900016b4 <inst_266>:

inst_266:
// rs1_val==46340 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x2433, 0xb504, 0x33333332, x1, 940, x2)
900016b4:	0000b537          	lui	a0,0xb
900016b8:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
900016bc:	333335b7          	lui	a1,0x33333
900016c0:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
900016c4:	02b51633          	mulh	a2,a0,a1
900016c8:	3ac0a623          	sw	a2,940(ra)

900016cc <inst_267>:

inst_267:
// rs1_val==46340 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x4867, 0xb504, 0x66666665, x1, 944, x2)
900016cc:	0000b537          	lui	a0,0xb
900016d0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
900016d4:	666665b7          	lui	a1,0x66666
900016d8:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
900016dc:	02b51633          	mulh	a2,a0,a1
900016e0:	3ac0a823          	sw	a2,944(ra)

900016e4 <inst_268>:

inst_268:
// rs1_val==46340 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb504, 0xb503, x1, 948, x2)
900016e4:	0000b537          	lui	a0,0xb
900016e8:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
900016ec:	0000b5b7          	lui	a1,0xb
900016f0:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
900016f4:	02b51633          	mulh	a2,a0,a1
900016f8:	3ac0aa23          	sw	a2,948(ra)

900016fc <inst_269>:

inst_269:
// rs1_val==46340 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0xb504, 0x55555556, x1, 952, x2)
900016fc:	0000b537          	lui	a0,0xb
90001700:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001704:	555555b7          	lui	a1,0x55555
90001708:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
9000170c:	02b51633          	mulh	a2,a0,a1
90001710:	3ac0ac23          	sw	a2,952(ra)

90001714 <inst_270>:

inst_270:
// rs1_val==46340 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, 0xb504, -0x55555555, x1, 956, x2)
90001714:	0000b537          	lui	a0,0xb
90001718:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
9000171c:	aaaab5b7          	lui	a1,0xaaaab
90001720:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001724:	02b51633          	mulh	a2,a0,a1
90001728:	3ac0ae23          	sw	a2,956(ra)

9000172c <inst_271>:

inst_271:
// rs1_val==46340 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb504, 0x6, x1, 960, x2)
9000172c:	0000b537          	lui	a0,0xb
90001730:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001734:	00600593          	li	a1,6
90001738:	02b51633          	mulh	a2,a0,a1
9000173c:	3cc0a023          	sw	a2,960(ra)

90001740 <inst_272>:

inst_272:
// rs1_val==46340 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x2434, 0xb504, 0x33333334, x1, 964, x2)
90001740:	0000b537          	lui	a0,0xb
90001744:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001748:	333335b7          	lui	a1,0x33333
9000174c:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90001750:	02b51633          	mulh	a2,a0,a1
90001754:	3cc0a223          	sw	a2,964(ra)

90001758 <inst_273>:

inst_273:
// rs1_val==46340 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x4868, 0xb504, 0x66666667, x1, 968, x2)
90001758:	0000b537          	lui	a0,0xb
9000175c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001760:	666665b7          	lui	a1,0x66666
90001764:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90001768:	02b51633          	mulh	a2,a0,a1
9000176c:	3cc0a423          	sw	a2,968(ra)

90001770 <inst_274>:

inst_274:
// rs1_val==46340 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0xb504, -0xb503, x1, 972, x2)
90001770:	0000b537          	lui	a0,0xb
90001774:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001778:	ffff55b7          	lui	a1,0xffff5
9000177c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001780:	02b51633          	mulh	a2,a0,a1
90001784:	3cc0a623          	sw	a2,972(ra)

90001788 <inst_275>:

inst_275:
// rs1_val==46340 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb504, 0xb505, x1, 976, x2)
90001788:	0000b537          	lui	a0,0xb
9000178c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb45c>
90001790:	0000b5b7          	lui	a1,0xb
90001794:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90001798:	02b51633          	mulh	a2,a0,a1
9000179c:	3cc0a823          	sw	a2,976(ra)

900017a0 <inst_276>:

inst_276:
// rs1_val==2 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x3, x1, 980, x2)
900017a0:	00200513          	li	a0,2
900017a4:	00300593          	li	a1,3
900017a8:	02b51633          	mulh	a2,a0,a1
900017ac:	3cc0aa23          	sw	a2,980(ra)

900017b0 <inst_277>:

inst_277:
// rs1_val==2 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x55555555, x1, 984, x2)
900017b0:	00200513          	li	a0,2
900017b4:	555555b7          	lui	a1,0x55555
900017b8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
900017bc:	02b51633          	mulh	a2,a0,a1
900017c0:	3cc0ac23          	sw	a2,984(ra)

900017c4 <inst_278>:

inst_278:
// rs1_val==2 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x2, -0x55555556, x1, 988, x2)
900017c4:	00200513          	li	a0,2
900017c8:	aaaab5b7          	lui	a1,0xaaaab
900017cc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900017d0:	02b51633          	mulh	a2,a0,a1
900017d4:	3cc0ae23          	sw	a2,988(ra)

900017d8 <inst_279>:

inst_279:
// rs1_val==2 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x5, x1, 992, x2)
900017d8:	00200513          	li	a0,2
900017dc:	00500593          	li	a1,5
900017e0:	02b51633          	mulh	a2,a0,a1
900017e4:	3ec0a023          	sw	a2,992(ra)

900017e8 <inst_280>:

inst_280:
// rs1_val==2 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x33333333, x1, 996, x2)
900017e8:	00200513          	li	a0,2
900017ec:	333335b7          	lui	a1,0x33333
900017f0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
900017f4:	02b51633          	mulh	a2,a0,a1
900017f8:	3ec0a223          	sw	a2,996(ra)

900017fc <inst_281>:

inst_281:
// rs1_val==2 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x66666666, x1, 1000, x2)
900017fc:	00200513          	li	a0,2
90001800:	666665b7          	lui	a1,0x66666
90001804:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90001808:	02b51633          	mulh	a2,a0,a1
9000180c:	3ec0a423          	sw	a2,1000(ra)

90001810 <inst_282>:

inst_282:
// rs1_val==2 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x2, -0xb504, x1, 1004, x2)
90001810:	00200513          	li	a0,2
90001814:	ffff55b7          	lui	a1,0xffff5
90001818:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000181c:	02b51633          	mulh	a2,a0,a1
90001820:	3ec0a623          	sw	a2,1004(ra)

90001824 <inst_283>:

inst_283:
// rs1_val==2 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0xb504, x1, 1008, x2)
90001824:	00200513          	li	a0,2
90001828:	0000b5b7          	lui	a1,0xb
9000182c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90001830:	02b51633          	mulh	a2,a0,a1
90001834:	3ec0a823          	sw	a2,1008(ra)

90001838 <inst_284>:

inst_284:
// rs1_val==2 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x2, x1, 1012, x2)
90001838:	00200513          	li	a0,2
9000183c:	00200593          	li	a1,2
90001840:	02b51633          	mulh	a2,a0,a1
90001844:	3ec0aa23          	sw	a2,1012(ra)

90001848 <inst_285>:

inst_285:
// rs1_val==2 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x55555554, x1, 1016, x2)
90001848:	00200513          	li	a0,2
9000184c:	555555b7          	lui	a1,0x55555
90001850:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90001854:	02b51633          	mulh	a2,a0,a1
90001858:	3ec0ac23          	sw	a2,1016(ra)

9000185c <inst_286>:

inst_286:
// rs1_val==2 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x0, x1, 1020, x2)
9000185c:	00200513          	li	a0,2
90001860:	00000593          	li	a1,0
90001864:	02b51633          	mulh	a2,a0,a1
90001868:	3ec0ae23          	sw	a2,1020(ra)

9000186c <inst_287>:

inst_287:
// rs1_val==2 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x4, x1, 1024, x2)
9000186c:	00200513          	li	a0,2
90001870:	00400593          	li	a1,4
90001874:	02b51633          	mulh	a2,a0,a1
90001878:	40c0a023          	sw	a2,1024(ra)

9000187c <inst_288>:

inst_288:
// rs1_val==2 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x33333332, x1, 1028, x2)
9000187c:	00200513          	li	a0,2
90001880:	333335b7          	lui	a1,0x33333
90001884:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90001888:	02b51633          	mulh	a2,a0,a1
9000188c:	40c0a223          	sw	a2,1028(ra)

90001890 <inst_289>:

inst_289:
// rs1_val==2 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x66666665, x1, 1032, x2)
90001890:	00200513          	li	a0,2
90001894:	666665b7          	lui	a1,0x66666
90001898:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
9000189c:	02b51633          	mulh	a2,a0,a1
900018a0:	40c0a423          	sw	a2,1032(ra)

900018a4 <inst_290>:

inst_290:
// rs1_val==2 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0xb503, x1, 1036, x2)
900018a4:	00200513          	li	a0,2
900018a8:	0000b5b7          	lui	a1,0xb
900018ac:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
900018b0:	02b51633          	mulh	a2,a0,a1
900018b4:	40c0a623          	sw	a2,1036(ra)

900018b8 <inst_291>:

inst_291:
// rs1_val==2 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x55555556, x1, 1040, x2)
900018b8:	00200513          	li	a0,2
900018bc:	555555b7          	lui	a1,0x55555
900018c0:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
900018c4:	02b51633          	mulh	a2,a0,a1
900018c8:	40c0a823          	sw	a2,1040(ra)

900018cc <inst_292>:

inst_292:
// rs1_val==2 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x2, -0x55555555, x1, 1044, x2)
900018cc:	00200513          	li	a0,2
900018d0:	aaaab5b7          	lui	a1,0xaaaab
900018d4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900018d8:	02b51633          	mulh	a2,a0,a1
900018dc:	40c0aa23          	sw	a2,1044(ra)

900018e0 <inst_293>:

inst_293:
// rs1_val==2 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x6, x1, 1048, x2)
900018e0:	00200513          	li	a0,2
900018e4:	00600593          	li	a1,6
900018e8:	02b51633          	mulh	a2,a0,a1
900018ec:	40c0ac23          	sw	a2,1048(ra)

900018f0 <inst_294>:

inst_294:
// rs1_val==2 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x33333334, x1, 1052, x2)
900018f0:	00200513          	li	a0,2
900018f4:	333335b7          	lui	a1,0x33333
900018f8:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
900018fc:	02b51633          	mulh	a2,a0,a1
90001900:	40c0ae23          	sw	a2,1052(ra)

90001904 <inst_295>:

inst_295:
// rs1_val==2 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0x66666667, x1, 1056, x2)
90001904:	00200513          	li	a0,2
90001908:	666665b7          	lui	a1,0x66666
9000190c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90001910:	02b51633          	mulh	a2,a0,a1
90001914:	42c0a023          	sw	a2,1056(ra)

90001918 <inst_296>:

inst_296:
// rs1_val==2 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x2, -0xb503, x1, 1060, x2)
90001918:	00200513          	li	a0,2
9000191c:	ffff55b7          	lui	a1,0xffff5
90001920:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001924:	02b51633          	mulh	a2,a0,a1
90001928:	42c0a223          	sw	a2,1060(ra)

9000192c <inst_297>:

inst_297:
// rs1_val==2 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x2, 0xb505, x1, 1064, x2)
9000192c:	00200513          	li	a0,2
90001930:	0000b5b7          	lui	a1,0xb
90001934:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90001938:	02b51633          	mulh	a2,a0,a1
9000193c:	42c0a423          	sw	a2,1064(ra)

90001940 <inst_298>:

inst_298:
// rs1_val==1431655764 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x55555554, 0x3, x1, 1068, x2)
90001940:	55555537          	lui	a0,0x55555
90001944:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001948:	00300593          	li	a1,3
9000194c:	02b51633          	mulh	a2,a0,a1
90001950:	42c0a623          	sw	a2,1068(ra)

90001954 <inst_299>:

inst_299:
// rs1_val==1431655764 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71b, 0x55555554, 0x55555555, x1, 1072, x2)
90001954:	55555537          	lui	a0,0x55555
90001958:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
9000195c:	555555b7          	lui	a1,0x55555
90001960:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90001964:	02b51633          	mulh	a2,a0,a1
90001968:	42c0a823          	sw	a2,1072(ra)

9000196c <inst_300>:

inst_300:
// rs1_val==1431655764 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e3, 0x55555554, -0x55555556, x1, 1076, x2)
9000196c:	55555537          	lui	a0,0x55555
90001970:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001974:	aaaab5b7          	lui	a1,0xaaaab
90001978:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
9000197c:	02b51633          	mulh	a2,a0,a1
90001980:	42c0aa23          	sw	a2,1076(ra)

90001984 <inst_301>:

inst_301:
// rs1_val==1431655764 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x55555554, 0x5, x1, 1080, x2)
90001984:	55555537          	lui	a0,0x55555
90001988:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
9000198c:	00500593          	li	a1,5
90001990:	02b51633          	mulh	a2,a0,a1
90001994:	42c0ac23          	sw	a2,1080(ra)

90001998 <inst_302>:

inst_302:
// rs1_val==1431655764 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x11111110, 0x55555554, 0x33333333, x1, 1084, x2)
90001998:	55555537          	lui	a0,0x55555
9000199c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
900019a0:	333335b7          	lui	a1,0x33333
900019a4:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
900019a8:	02b51633          	mulh	a2,a0,a1
900019ac:	42c0ae23          	sw	a2,1084(ra)

900019b0 <inst_303>:

inst_303:
// rs1_val==1431655764 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x55555554, 0x66666666, x1, 1088, x2)
900019b0:	55555537          	lui	a0,0x55555
900019b4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
900019b8:	666665b7          	lui	a1,0x66666
900019bc:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
900019c0:	02b51633          	mulh	a2,a0,a1
900019c4:	44c0a023          	sw	a2,1088(ra)

900019c8 <inst_304>:

inst_304:
// rs1_val==1431655764 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, 0x55555554, -0xb504, x1, 1092, x2)
900019c8:	55555537          	lui	a0,0x55555
900019cc:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
900019d0:	ffff55b7          	lui	a1,0xffff5
900019d4:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
900019d8:	02b51633          	mulh	a2,a0,a1
900019dc:	44c0a223          	sw	a2,1092(ra)

900019e0 <inst_305>:

inst_305:
// rs1_val==1431655764 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0x55555554, 0xb504, x1, 1096, x2)
900019e0:	55555537          	lui	a0,0x55555
900019e4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
900019e8:	0000b5b7          	lui	a1,0xb
900019ec:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
900019f0:	02b51633          	mulh	a2,a0,a1
900019f4:	44c0a423          	sw	a2,1096(ra)

900019f8 <inst_306>:

inst_306:
// rs1_val==1431655764 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x55555554, 0x2, x1, 1100, x2)
900019f8:	55555537          	lui	a0,0x55555
900019fc:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001a00:	00200593          	li	a1,2
90001a04:	02b51633          	mulh	a2,a0,a1
90001a08:	44c0a623          	sw	a2,1100(ra)

90001a0c <inst_307>:

inst_307:
// rs1_val==1431655764 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71b, 0x55555554, 0x55555554, x1, 1104, x2)
90001a0c:	55555537          	lui	a0,0x55555
90001a10:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001a14:	555555b7          	lui	a1,0x55555
90001a18:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90001a1c:	02b51633          	mulh	a2,a0,a1
90001a20:	44c0a823          	sw	a2,1104(ra)

90001a24 <inst_308>:

inst_308:
// rs1_val==1431655764 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x55555554, 0x0, x1, 1108, x2)
90001a24:	55555537          	lui	a0,0x55555
90001a28:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001a2c:	00000593          	li	a1,0
90001a30:	02b51633          	mulh	a2,a0,a1
90001a34:	44c0aa23          	sw	a2,1108(ra)

90001a38 <inst_309>:

inst_309:
// rs1_val==1431655764 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x55555554, 0x4, x1, 1112, x2)
90001a38:	55555537          	lui	a0,0x55555
90001a3c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001a40:	00400593          	li	a1,4
90001a44:	02b51633          	mulh	a2,a0,a1
90001a48:	44c0ac23          	sw	a2,1112(ra)

90001a4c <inst_310>:

inst_310:
// rs1_val==1431655764 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x11111110, 0x55555554, 0x33333332, x1, 1116, x2)
90001a4c:	55555537          	lui	a0,0x55555
90001a50:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001a54:	333335b7          	lui	a1,0x33333
90001a58:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90001a5c:	02b51633          	mulh	a2,a0,a1
90001a60:	44c0ae23          	sw	a2,1116(ra)

90001a64 <inst_311>:

inst_311:
// rs1_val==1431655764 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x55555554, 0x66666665, x1, 1120, x2)
90001a64:	55555537          	lui	a0,0x55555
90001a68:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001a6c:	666665b7          	lui	a1,0x66666
90001a70:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90001a74:	02b51633          	mulh	a2,a0,a1
90001a78:	46c0a023          	sw	a2,1120(ra)

90001a7c <inst_312>:

inst_312:
// rs1_val==1431655764 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0x55555554, 0xb503, x1, 1124, x2)
90001a7c:	55555537          	lui	a0,0x55555
90001a80:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001a84:	0000b5b7          	lui	a1,0xb
90001a88:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90001a8c:	02b51633          	mulh	a2,a0,a1
90001a90:	46c0a223          	sw	a2,1124(ra)

90001a94 <inst_313>:

inst_313:
// rs1_val==1431655764 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71c, 0x55555554, 0x55555556, x1, 1128, x2)
90001a94:	55555537          	lui	a0,0x55555
90001a98:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001a9c:	555555b7          	lui	a1,0x55555
90001aa0:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90001aa4:	02b51633          	mulh	a2,a0,a1
90001aa8:	46c0a423          	sw	a2,1128(ra)

90001aac <inst_314>:

inst_314:
// rs1_val==1431655764 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e4, 0x55555554, -0x55555555, x1, 1132, x2)
90001aac:	55555537          	lui	a0,0x55555
90001ab0:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001ab4:	aaaab5b7          	lui	a1,0xaaaab
90001ab8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001abc:	02b51633          	mulh	a2,a0,a1
90001ac0:	46c0a623          	sw	a2,1132(ra)

90001ac4 <inst_315>:

inst_315:
// rs1_val==1431655764 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x55555554, 0x6, x1, 1136, x2)
90001ac4:	55555537          	lui	a0,0x55555
90001ac8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001acc:	00600593          	li	a1,6
90001ad0:	02b51633          	mulh	a2,a0,a1
90001ad4:	46c0a823          	sw	a2,1136(ra)

90001ad8 <inst_316>:

inst_316:
// rs1_val==1431655764 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x11111111, 0x55555554, 0x33333334, x1, 1140, x2)
90001ad8:	55555537          	lui	a0,0x55555
90001adc:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001ae0:	333335b7          	lui	a1,0x33333
90001ae4:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90001ae8:	02b51633          	mulh	a2,a0,a1
90001aec:	46c0aa23          	sw	a2,1140(ra)

90001af0 <inst_317>:

inst_317:
// rs1_val==1431655764 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x55555554, 0x66666667, x1, 1144, x2)
90001af0:	55555537          	lui	a0,0x55555
90001af4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001af8:	666665b7          	lui	a1,0x66666
90001afc:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90001b00:	02b51633          	mulh	a2,a0,a1
90001b04:	46c0ac23          	sw	a2,1144(ra)

90001b08 <inst_318>:

inst_318:
// rs1_val==1431655764 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, 0x55555554, -0xb503, x1, 1148, x2)
90001b08:	55555537          	lui	a0,0x55555
90001b0c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001b10:	ffff55b7          	lui	a1,0xffff5
90001b14:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001b18:	02b51633          	mulh	a2,a0,a1
90001b1c:	46c0ae23          	sw	a2,1148(ra)

90001b20 <inst_319>:

inst_319:
// rs1_val==1431655764 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0x55555554, 0xb505, x1, 1152, x2)
90001b20:	55555537          	lui	a0,0x55555
90001b24:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ac>
90001b28:	0000b5b7          	lui	a1,0xb
90001b2c:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90001b30:	02b51633          	mulh	a2,a0,a1
90001b34:	48c0a023          	sw	a2,1152(ra)

90001b38 <inst_320>:

inst_320:
// rs1_val==0 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x3, x1, 1156, x2)
90001b38:	00000513          	li	a0,0
90001b3c:	00300593          	li	a1,3
90001b40:	02b51633          	mulh	a2,a0,a1
90001b44:	48c0a223          	sw	a2,1156(ra)

90001b48 <inst_321>:

inst_321:
// rs1_val==0 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x55555555, x1, 1160, x2)
90001b48:	00000513          	li	a0,0
90001b4c:	555555b7          	lui	a1,0x55555
90001b50:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90001b54:	02b51633          	mulh	a2,a0,a1
90001b58:	48c0a423          	sw	a2,1160(ra)

90001b5c <inst_322>:

inst_322:
// rs1_val==0 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, -0x55555556, x1, 1164, x2)
90001b5c:	00000513          	li	a0,0
90001b60:	aaaab5b7          	lui	a1,0xaaaab
90001b64:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90001b68:	02b51633          	mulh	a2,a0,a1
90001b6c:	48c0a623          	sw	a2,1164(ra)

90001b70 <inst_323>:

inst_323:
// rs1_val==0 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x5, x1, 1168, x2)
90001b70:	00000513          	li	a0,0
90001b74:	00500593          	li	a1,5
90001b78:	02b51633          	mulh	a2,a0,a1
90001b7c:	48c0a823          	sw	a2,1168(ra)

90001b80 <inst_324>:

inst_324:
// rs1_val==0 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x33333333, x1, 1172, x2)
90001b80:	00000513          	li	a0,0
90001b84:	333335b7          	lui	a1,0x33333
90001b88:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90001b8c:	02b51633          	mulh	a2,a0,a1
90001b90:	48c0aa23          	sw	a2,1172(ra)

90001b94 <inst_325>:

inst_325:
// rs1_val==0 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x66666666, x1, 1176, x2)
90001b94:	00000513          	li	a0,0
90001b98:	666665b7          	lui	a1,0x66666
90001b9c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90001ba0:	02b51633          	mulh	a2,a0,a1
90001ba4:	48c0ac23          	sw	a2,1176(ra)

90001ba8 <inst_326>:

inst_326:
// rs1_val==-1431655765 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71c, -0x55555555, -0x55555555, x1, 1180, x2)
90001ba8:	aaaab537          	lui	a0,0xaaaab
90001bac:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001bb0:	aaaab5b7          	lui	a1,0xaaaab
90001bb4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001bb8:	02b51633          	mulh	a2,a0,a1
90001bbc:	48c0ae23          	sw	a2,1180(ra)

90001bc0 <inst_327>:

inst_327:
// rs1_val==-1431655765 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, -0x55555555, 0x6, x1, 1184, x2)
90001bc0:	aaaab537          	lui	a0,0xaaaab
90001bc4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001bc8:	00600593          	li	a1,6
90001bcc:	02b51633          	mulh	a2,a0,a1
90001bd0:	4ac0a023          	sw	a2,1184(ra)

90001bd4 <inst_328>:

inst_328:
// rs1_val==-1431655765 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeee, -0x55555555, 0x33333334, x1, 1188, x2)
90001bd4:	aaaab537          	lui	a0,0xaaaab
90001bd8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001bdc:	333335b7          	lui	a1,0x33333
90001be0:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90001be4:	02b51633          	mulh	a2,a0,a1
90001be8:	4ac0a223          	sw	a2,1188(ra)

90001bec <inst_329>:

inst_329:
// rs1_val==-1431655765 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0xdddddddd, -0x55555555, 0x66666667, x1, 1192, x2)
90001bec:	aaaab537          	lui	a0,0xaaaab
90001bf0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001bf4:	666665b7          	lui	a1,0x66666
90001bf8:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90001bfc:	02b51633          	mulh	a2,a0,a1
90001c00:	4ac0a423          	sw	a2,1192(ra)

90001c04 <inst_330>:

inst_330:
// rs1_val==-1431655765 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, -0x55555555, -0xb503, x1, 1196, x2)
90001c04:	aaaab537          	lui	a0,0xaaaab
90001c08:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001c0c:	ffff55b7          	lui	a1,0xffff5
90001c10:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001c14:	02b51633          	mulh	a2,a0,a1
90001c18:	4ac0a623          	sw	a2,1196(ra)

90001c1c <inst_331>:

inst_331:
// rs1_val==-1431655765 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, -0x55555555, 0xb505, x1, 1200, x2)
90001c1c:	aaaab537          	lui	a0,0xaaaab
90001c20:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001c24:	0000b5b7          	lui	a1,0xb
90001c28:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90001c2c:	02b51633          	mulh	a2,a0,a1
90001c30:	4ac0a823          	sw	a2,1200(ra)

90001c34 <inst_332>:

inst_332:
// rs1_val==6 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x6, 0x3, x1, 1204, x2)
90001c34:	00600513          	li	a0,6
90001c38:	00300593          	li	a1,3
90001c3c:	02b51633          	mulh	a2,a0,a1
90001c40:	4ac0aa23          	sw	a2,1204(ra)

90001c44 <inst_333>:

inst_333:
// rs1_val==6 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x6, 0x55555555, x1, 1208, x2)
90001c44:	00600513          	li	a0,6
90001c48:	555555b7          	lui	a1,0x55555
90001c4c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90001c50:	02b51633          	mulh	a2,a0,a1
90001c54:	4ac0ac23          	sw	a2,1208(ra)

90001c58 <inst_334>:

inst_334:
// rs1_val==6 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x6, 0x5, x1, 1212, x2)
90001c58:	00600513          	li	a0,6
90001c5c:	00500593          	li	a1,5
90001c60:	02b51633          	mulh	a2,a0,a1
90001c64:	4ac0ae23          	sw	a2,1212(ra)

90001c68 <inst_335>:

inst_335:
// rs1_val==6 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x6, 0x33333333, x1, 1216, x2)
90001c68:	00600513          	li	a0,6
90001c6c:	333335b7          	lui	a1,0x33333
90001c70:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90001c74:	02b51633          	mulh	a2,a0,a1
90001c78:	4cc0a023          	sw	a2,1216(ra)

90001c7c <inst_336>:

inst_336:
// rs1_val==6 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x2, 0x6, 0x66666666, x1, 1220, x2)
90001c7c:	00600513          	li	a0,6
90001c80:	666665b7          	lui	a1,0x66666
90001c84:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90001c88:	02b51633          	mulh	a2,a0,a1
90001c8c:	4cc0a223          	sw	a2,1220(ra)

90001c90 <inst_337>:

inst_337:
// rs1_val==6 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x6, -0xb504, x1, 1224, x2)
90001c90:	00600513          	li	a0,6
90001c94:	ffff55b7          	lui	a1,0xffff5
90001c98:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001c9c:	02b51633          	mulh	a2,a0,a1
90001ca0:	4cc0a423          	sw	a2,1224(ra)

90001ca4 <inst_338>:

inst_338:
// rs1_val==6 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x6, 0xb504, x1, 1228, x2)
90001ca4:	00600513          	li	a0,6
90001ca8:	0000b5b7          	lui	a1,0xb
90001cac:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90001cb0:	02b51633          	mulh	a2,a0,a1
90001cb4:	4cc0a623          	sw	a2,1228(ra)

90001cb8 <inst_339>:

inst_339:
// rs1_val==6 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x6, 0x2, x1, 1232, x2)
90001cb8:	00600513          	li	a0,6
90001cbc:	00200593          	li	a1,2
90001cc0:	02b51633          	mulh	a2,a0,a1
90001cc4:	4cc0a823          	sw	a2,1232(ra)

90001cc8 <inst_340>:

inst_340:
// rs1_val==6 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x6, 0x55555554, x1, 1236, x2)
90001cc8:	00600513          	li	a0,6
90001ccc:	555555b7          	lui	a1,0x55555
90001cd0:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90001cd4:	02b51633          	mulh	a2,a0,a1
90001cd8:	4cc0aa23          	sw	a2,1236(ra)

90001cdc <inst_341>:

inst_341:
// rs1_val==6 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x6, 0x0, x1, 1240, x2)
90001cdc:	00600513          	li	a0,6
90001ce0:	00000593          	li	a1,0
90001ce4:	02b51633          	mulh	a2,a0,a1
90001ce8:	4cc0ac23          	sw	a2,1240(ra)

90001cec <inst_342>:

inst_342:
// rs1_val==6 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x6, 0x4, x1, 1244, x2)
90001cec:	00600513          	li	a0,6
90001cf0:	00400593          	li	a1,4
90001cf4:	02b51633          	mulh	a2,a0,a1
90001cf8:	4cc0ae23          	sw	a2,1244(ra)

90001cfc <inst_343>:

inst_343:
// rs1_val==6 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x6, 0x33333332, x1, 1248, x2)
90001cfc:	00600513          	li	a0,6
90001d00:	333335b7          	lui	a1,0x33333
90001d04:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90001d08:	02b51633          	mulh	a2,a0,a1
90001d0c:	4ec0a023          	sw	a2,1248(ra)

90001d10 <inst_344>:

inst_344:
// rs1_val==6 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x2, 0x6, 0x66666665, x1, 1252, x2)
90001d10:	00600513          	li	a0,6
90001d14:	666665b7          	lui	a1,0x66666
90001d18:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90001d1c:	02b51633          	mulh	a2,a0,a1
90001d20:	4ec0a223          	sw	a2,1252(ra)

90001d24 <inst_345>:

inst_345:
// rs1_val==6 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x6, 0xb503, x1, 1256, x2)
90001d24:	00600513          	li	a0,6
90001d28:	0000b5b7          	lui	a1,0xb
90001d2c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90001d30:	02b51633          	mulh	a2,a0,a1
90001d34:	4ec0a423          	sw	a2,1256(ra)

90001d38 <inst_346>:

inst_346:
// rs1_val==6 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x2, 0x6, 0x55555556, x1, 1260, x2)
90001d38:	00600513          	li	a0,6
90001d3c:	555555b7          	lui	a1,0x55555
90001d40:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90001d44:	02b51633          	mulh	a2,a0,a1
90001d48:	4ec0a623          	sw	a2,1260(ra)

90001d4c <inst_347>:

inst_347:
// rs1_val==6 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, 0x6, -0x55555555, x1, 1264, x2)
90001d4c:	00600513          	li	a0,6
90001d50:	aaaab5b7          	lui	a1,0xaaaab
90001d54:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001d58:	02b51633          	mulh	a2,a0,a1
90001d5c:	4ec0a823          	sw	a2,1264(ra)

90001d60 <inst_348>:

inst_348:
// rs1_val==6 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x6, 0x6, x1, 1268, x2)
90001d60:	00600513          	li	a0,6
90001d64:	00600593          	li	a1,6
90001d68:	02b51633          	mulh	a2,a0,a1
90001d6c:	4ec0aa23          	sw	a2,1268(ra)

90001d70 <inst_349>:

inst_349:
// rs1_val==6 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x6, 0x33333334, x1, 1272, x2)
90001d70:	00600513          	li	a0,6
90001d74:	333335b7          	lui	a1,0x33333
90001d78:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90001d7c:	02b51633          	mulh	a2,a0,a1
90001d80:	4ec0ac23          	sw	a2,1272(ra)

90001d84 <inst_350>:

inst_350:
// rs1_val==6 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x2, 0x6, 0x66666667, x1, 1276, x2)
90001d84:	00600513          	li	a0,6
90001d88:	666665b7          	lui	a1,0x66666
90001d8c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90001d90:	02b51633          	mulh	a2,a0,a1
90001d94:	4ec0ae23          	sw	a2,1276(ra)

90001d98 <inst_351>:

inst_351:
// rs1_val==6 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x6, -0xb503, x1, 1280, x2)
90001d98:	00600513          	li	a0,6
90001d9c:	ffff55b7          	lui	a1,0xffff5
90001da0:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001da4:	02b51633          	mulh	a2,a0,a1
90001da8:	50c0a023          	sw	a2,1280(ra)

90001dac <inst_352>:

inst_352:
// rs1_val==6 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x6, 0xb505, x1, 1284, x2)
90001dac:	00600513          	li	a0,6
90001db0:	0000b5b7          	lui	a1,0xb
90001db4:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90001db8:	02b51633          	mulh	a2,a0,a1
90001dbc:	50c0a223          	sw	a2,1284(ra)

90001dc0 <inst_353>:

inst_353:
// rs1_val==858993460 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333334, 0x3, x1, 1288, x2)
90001dc0:	33333537          	lui	a0,0x33333
90001dc4:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001dc8:	00300593          	li	a1,3
90001dcc:	02b51633          	mulh	a2,a0,a1
90001dd0:	50c0a423          	sw	a2,1288(ra)

90001dd4 <inst_354>:

inst_354:
// rs1_val==858993460 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x11111111, 0x33333334, 0x55555555, x1, 1292, x2)
90001dd4:	33333537          	lui	a0,0x33333
90001dd8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001ddc:	555555b7          	lui	a1,0x55555
90001de0:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90001de4:	02b51633          	mulh	a2,a0,a1
90001de8:	50c0a623          	sw	a2,1292(ra)

90001dec <inst_355>:

inst_355:
// rs1_val==858993460 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeee, 0x33333334, -0x55555556, x1, 1296, x2)
90001dec:	33333537          	lui	a0,0x33333
90001df0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001df4:	aaaab5b7          	lui	a1,0xaaaab
90001df8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90001dfc:	02b51633          	mulh	a2,a0,a1
90001e00:	50c0a823          	sw	a2,1296(ra)

90001e04 <inst_356>:

inst_356:
// rs1_val==858993460 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x33333334, 0x5, x1, 1300, x2)
90001e04:	33333537          	lui	a0,0x33333
90001e08:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001e0c:	00500593          	li	a1,5
90001e10:	02b51633          	mulh	a2,a0,a1
90001e14:	50c0aa23          	sw	a2,1300(ra)

90001e18 <inst_357>:

inst_357:
// rs1_val==858993460 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0xa3d70a3, 0x33333334, 0x33333333, x1, 1304, x2)
90001e18:	33333537          	lui	a0,0x33333
90001e1c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001e20:	333335b7          	lui	a1,0x33333
90001e24:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90001e28:	02b51633          	mulh	a2,a0,a1
90001e2c:	50c0ac23          	sw	a2,1304(ra)

90001e30 <inst_358>:

inst_358:
// rs1_val==858993460 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x33333334, 0x66666666, x1, 1308, x2)
90001e30:	33333537          	lui	a0,0x33333
90001e34:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001e38:	666665b7          	lui	a1,0x66666
90001e3c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90001e40:	02b51633          	mulh	a2,a0,a1
90001e44:	50c0ae23          	sw	a2,1308(ra)

90001e48 <inst_359>:

inst_359:
// rs1_val==858993460 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcb, 0x33333334, -0xb504, x1, 1312, x2)
90001e48:	33333537          	lui	a0,0x33333
90001e4c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001e50:	ffff55b7          	lui	a1,0xffff5
90001e54:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001e58:	02b51633          	mulh	a2,a0,a1
90001e5c:	52c0a023          	sw	a2,1312(ra)

90001e60 <inst_360>:

inst_360:
// rs1_val==858993460 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x2434, 0x33333334, 0xb504, x1, 1316, x2)
90001e60:	33333537          	lui	a0,0x33333
90001e64:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001e68:	0000b5b7          	lui	a1,0xb
90001e6c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90001e70:	02b51633          	mulh	a2,a0,a1
90001e74:	52c0a223          	sw	a2,1316(ra)

90001e78 <inst_361>:

inst_361:
// rs1_val==858993460 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333334, 0x2, x1, 1320, x2)
90001e78:	33333537          	lui	a0,0x33333
90001e7c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001e80:	00200593          	li	a1,2
90001e84:	02b51633          	mulh	a2,a0,a1
90001e88:	52c0a423          	sw	a2,1320(ra)

90001e8c <inst_362>:

inst_362:
// rs1_val==858993460 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x11111111, 0x33333334, 0x55555554, x1, 1324, x2)
90001e8c:	33333537          	lui	a0,0x33333
90001e90:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001e94:	555555b7          	lui	a1,0x55555
90001e98:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90001e9c:	02b51633          	mulh	a2,a0,a1
90001ea0:	52c0a623          	sw	a2,1324(ra)

90001ea4 <inst_363>:

inst_363:
// rs1_val==858993460 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333334, 0x0, x1, 1328, x2)
90001ea4:	33333537          	lui	a0,0x33333
90001ea8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001eac:	00000593          	li	a1,0
90001eb0:	02b51633          	mulh	a2,a0,a1
90001eb4:	52c0a823          	sw	a2,1328(ra)

90001eb8 <inst_364>:

inst_364:
// rs1_val==858993460 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333334, 0x4, x1, 1332, x2)
90001eb8:	33333537          	lui	a0,0x33333
90001ebc:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001ec0:	00400593          	li	a1,4
90001ec4:	02b51633          	mulh	a2,a0,a1
90001ec8:	52c0aa23          	sw	a2,1332(ra)

90001ecc <inst_365>:

inst_365:
// rs1_val==858993460 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0xa3d70a3, 0x33333334, 0x33333332, x1, 1336, x2)
90001ecc:	33333537          	lui	a0,0x33333
90001ed0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001ed4:	333335b7          	lui	a1,0x33333
90001ed8:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90001edc:	02b51633          	mulh	a2,a0,a1
90001ee0:	52c0ac23          	sw	a2,1336(ra)

90001ee4 <inst_366>:

inst_366:
// rs1_val==858993460 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x33333334, 0x66666665, x1, 1340, x2)
90001ee4:	33333537          	lui	a0,0x33333
90001ee8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001eec:	666665b7          	lui	a1,0x66666
90001ef0:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90001ef4:	02b51633          	mulh	a2,a0,a1
90001ef8:	52c0ae23          	sw	a2,1340(ra)

90001efc <inst_367>:

inst_367:
// rs1_val==858993460 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x2433, 0x33333334, 0xb503, x1, 1344, x2)
90001efc:	33333537          	lui	a0,0x33333
90001f00:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001f04:	0000b5b7          	lui	a1,0xb
90001f08:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90001f0c:	02b51633          	mulh	a2,a0,a1
90001f10:	54c0a023          	sw	a2,1344(ra)

90001f14 <inst_368>:

inst_368:
// rs1_val==858993460 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x11111111, 0x33333334, 0x55555556, x1, 1348, x2)
90001f14:	33333537          	lui	a0,0x33333
90001f18:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001f1c:	555555b7          	lui	a1,0x55555
90001f20:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90001f24:	02b51633          	mulh	a2,a0,a1
90001f28:	54c0a223          	sw	a2,1348(ra)

90001f2c <inst_369>:

inst_369:
// rs1_val==858993460 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeee, 0x33333334, -0x55555555, x1, 1352, x2)
90001f2c:	33333537          	lui	a0,0x33333
90001f30:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001f34:	aaaab5b7          	lui	a1,0xaaaab
90001f38:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001f3c:	02b51633          	mulh	a2,a0,a1
90001f40:	54c0a423          	sw	a2,1352(ra)

90001f44 <inst_370>:

inst_370:
// rs1_val==858993460 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x33333334, 0x6, x1, 1356, x2)
90001f44:	33333537          	lui	a0,0x33333
90001f48:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001f4c:	00600593          	li	a1,6
90001f50:	02b51633          	mulh	a2,a0,a1
90001f54:	54c0a623          	sw	a2,1356(ra)

90001f58 <inst_371>:

inst_371:
// rs1_val==858993460 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0xa3d70a4, 0x33333334, 0x33333334, x1, 1360, x2)
90001f58:	33333537          	lui	a0,0x33333
90001f5c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001f60:	333335b7          	lui	a1,0x33333
90001f64:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90001f68:	02b51633          	mulh	a2,a0,a1
90001f6c:	54c0a823          	sw	a2,1360(ra)

90001f70 <inst_372>:

inst_372:
// rs1_val==858993460 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae148, 0x33333334, 0x66666667, x1, 1364, x2)
90001f70:	33333537          	lui	a0,0x33333
90001f74:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001f78:	666665b7          	lui	a1,0x66666
90001f7c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90001f80:	02b51633          	mulh	a2,a0,a1
90001f84:	54c0aa23          	sw	a2,1364(ra)

90001f88 <inst_373>:

inst_373:
// rs1_val==858993460 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcc, 0x33333334, -0xb503, x1, 1368, x2)
90001f88:	33333537          	lui	a0,0x33333
90001f8c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001f90:	ffff55b7          	lui	a1,0xffff5
90001f94:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001f98:	02b51633          	mulh	a2,a0,a1
90001f9c:	54c0ac23          	sw	a2,1368(ra)

90001fa0 <inst_374>:

inst_374:
// rs1_val==858993460 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x2434, 0x33333334, 0xb505, x1, 1372, x2)
90001fa0:	33333537          	lui	a0,0x33333
90001fa4:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x3333328c>
90001fa8:	0000b5b7          	lui	a1,0xb
90001fac:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90001fb0:	02b51633          	mulh	a2,a0,a1
90001fb4:	54c0ae23          	sw	a2,1372(ra)

90001fb8 <inst_375>:

inst_375:
// rs1_val==1717986919 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x66666667, 0x3, x1, 1376, x2)
90001fb8:	66666537          	lui	a0,0x66666
90001fbc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90001fc0:	00300593          	li	a1,3
90001fc4:	02b51633          	mulh	a2,a0,a1
90001fc8:	56c0a023          	sw	a2,1376(ra)

90001fcc <inst_376>:

inst_376:
// rs1_val==1717986919 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x22222222, 0x66666667, 0x55555555, x1, 1380, x2)
90001fcc:	66666537          	lui	a0,0x66666
90001fd0:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90001fd4:	555555b7          	lui	a1,0x55555
90001fd8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90001fdc:	02b51633          	mulh	a2,a0,a1
90001fe0:	56c0a223          	sw	a2,1380(ra)

90001fe4 <inst_377>:

inst_377:
// rs1_val==1717986919 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xdddddddd, 0x66666667, -0x55555556, x1, 1384, x2)
90001fe4:	66666537          	lui	a0,0x66666
90001fe8:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90001fec:	aaaab5b7          	lui	a1,0xaaaab
90001ff0:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90001ff4:	02b51633          	mulh	a2,a0,a1
90001ff8:	56c0a423          	sw	a2,1384(ra)

90001ffc <inst_378>:

inst_378:
// rs1_val==1717986919 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x2, 0x66666667, 0x5, x1, 1388, x2)
90001ffc:	66666537          	lui	a0,0x66666
90002000:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002004:	00500593          	li	a1,5
90002008:	02b51633          	mulh	a2,a0,a1
9000200c:	56c0a623          	sw	a2,1388(ra)

90002010 <inst_379>:

inst_379:
// rs1_val==1717986919 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x66666667, 0x33333333, x1, 1392, x2)
90002010:	66666537          	lui	a0,0x66666
90002014:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002018:	333335b7          	lui	a1,0x33333
9000201c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90002020:	02b51633          	mulh	a2,a0,a1
90002024:	56c0a823          	sw	a2,1392(ra)

90002028 <inst_380>:

inst_380:
// rs1_val==1717986919 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x28f5c28f, 0x66666667, 0x66666666, x1, 1396, x2)
90002028:	66666537          	lui	a0,0x66666
9000202c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002030:	666665b7          	lui	a1,0x66666
90002034:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90002038:	02b51633          	mulh	a2,a0,a1
9000203c:	56c0aa23          	sw	a2,1396(ra)

90002040 <inst_381>:

inst_381:
// rs1_val==1717986919 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb797, 0x66666667, -0xb504, x1, 1400, x2)
90002040:	66666537          	lui	a0,0x66666
90002044:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002048:	ffff55b7          	lui	a1,0xffff5
9000204c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002050:	02b51633          	mulh	a2,a0,a1
90002054:	56c0ac23          	sw	a2,1400(ra)

90002058 <inst_382>:

inst_382:
// rs1_val==1717986919 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x4868, 0x66666667, 0xb504, x1, 1404, x2)
90002058:	66666537          	lui	a0,0x66666
9000205c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002060:	0000b5b7          	lui	a1,0xb
90002064:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90002068:	02b51633          	mulh	a2,a0,a1
9000206c:	56c0ae23          	sw	a2,1404(ra)

90002070 <inst_383>:

inst_383:
// rs1_val==1717986919 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x66666667, 0x55555554, x1, 1408, x2)
90002070:	66666537          	lui	a0,0x66666
90002074:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002078:	555555b7          	lui	a1,0x55555
9000207c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90002080:	02b51633          	mulh	a2,a0,a1
90002084:	58c0a023          	sw	a2,1408(ra)

90002088 <inst_384>:

inst_384:
// rs1_val==1717986919 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x66666667, 0x0, x1, 1412, x2)
90002088:	66666537          	lui	a0,0x66666
9000208c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002090:	00000593          	li	a1,0
90002094:	02b51633          	mulh	a2,a0,a1
90002098:	58c0a223          	sw	a2,1412(ra)

9000209c <inst_385>:

inst_385:
// rs1_val==1717986919 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x66666667, 0x4, x1, 1416, x2)
9000209c:	66666537          	lui	a0,0x66666
900020a0:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
900020a4:	00400593          	li	a1,4
900020a8:	02b51633          	mulh	a2,a0,a1
900020ac:	58c0a423          	sw	a2,1416(ra)

900020b0 <inst_386>:

inst_386:
// rs1_val==1717986919 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x66666667, 0x33333332, x1, 1420, x2)
900020b0:	66666537          	lui	a0,0x66666
900020b4:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
900020b8:	333335b7          	lui	a1,0x33333
900020bc:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
900020c0:	02b51633          	mulh	a2,a0,a1
900020c4:	58c0a623          	sw	a2,1420(ra)

900020c8 <inst_387>:

inst_387:
// rs1_val==1717986919 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x28f5c28f, 0x66666667, 0x66666665, x1, 1424, x2)
900020c8:	66666537          	lui	a0,0x66666
900020cc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
900020d0:	666665b7          	lui	a1,0x66666
900020d4:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
900020d8:	02b51633          	mulh	a2,a0,a1
900020dc:	58c0a823          	sw	a2,1424(ra)

900020e0 <inst_388>:

inst_388:
// rs1_val==1717986919 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x4867, 0x66666667, 0xb503, x1, 1428, x2)
900020e0:	66666537          	lui	a0,0x66666
900020e4:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
900020e8:	0000b5b7          	lui	a1,0xb
900020ec:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
900020f0:	02b51633          	mulh	a2,a0,a1
900020f4:	58c0aa23          	sw	a2,1428(ra)

900020f8 <inst_389>:

inst_389:
// rs1_val==1717986919 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x22222222, 0x66666667, 0x55555556, x1, 1432, x2)
900020f8:	66666537          	lui	a0,0x66666
900020fc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002100:	555555b7          	lui	a1,0x55555
90002104:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90002108:	02b51633          	mulh	a2,a0,a1
9000210c:	58c0ac23          	sw	a2,1432(ra)

90002110 <inst_390>:

inst_390:
// rs1_val==1717986919 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xdddddddd, 0x66666667, -0x55555555, x1, 1436, x2)
90002110:	66666537          	lui	a0,0x66666
90002114:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002118:	aaaab5b7          	lui	a1,0xaaaab
9000211c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002120:	02b51633          	mulh	a2,a0,a1
90002124:	58c0ae23          	sw	a2,1436(ra)

90002128 <inst_391>:

inst_391:
// rs1_val==1717986919 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x2, 0x66666667, 0x6, x1, 1440, x2)
90002128:	66666537          	lui	a0,0x66666
9000212c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002130:	00600593          	li	a1,6
90002134:	02b51633          	mulh	a2,a0,a1
90002138:	5ac0a023          	sw	a2,1440(ra)

9000213c <inst_392>:

inst_392:
// rs1_val==1717986919 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae148, 0x66666667, 0x33333334, x1, 1444, x2)
9000213c:	66666537          	lui	a0,0x66666
90002140:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002144:	333335b7          	lui	a1,0x33333
90002148:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
9000214c:	02b51633          	mulh	a2,a0,a1
90002150:	5ac0a223          	sw	a2,1444(ra)

90002154 <inst_393>:

inst_393:
// rs1_val==1717986919 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x28f5c28f, 0x66666667, 0x66666667, x1, 1448, x2)
90002154:	66666537          	lui	a0,0x66666
90002158:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
9000215c:	666665b7          	lui	a1,0x66666
90002160:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90002164:	02b51633          	mulh	a2,a0,a1
90002168:	5ac0a423          	sw	a2,1448(ra)

9000216c <inst_394>:

inst_394:
// rs1_val==1717986919 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb798, 0x66666667, -0xb503, x1, 1452, x2)
9000216c:	66666537          	lui	a0,0x66666
90002170:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
90002174:	ffff55b7          	lui	a1,0xffff5
90002178:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
9000217c:	02b51633          	mulh	a2,a0,a1
90002180:	5ac0a623          	sw	a2,1452(ra)

90002184 <inst_395>:

inst_395:
// rs1_val==1717986919 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x4868, 0x66666667, 0xb505, x1, 1456, x2)
90002184:	66666537          	lui	a0,0x66666
90002188:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665bf>
9000218c:	0000b5b7          	lui	a1,0xb
90002190:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90002194:	02b51633          	mulh	a2,a0,a1
90002198:	5ac0a823          	sw	a2,1456(ra)

9000219c <inst_396>:

inst_396:
// rs1_val==-46339 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb503, 0x3, x1, 1460, x2)
9000219c:	ffff5537          	lui	a0,0xffff5
900021a0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900021a4:	00300593          	li	a1,3
900021a8:	02b51633          	mulh	a2,a0,a1
900021ac:	5ac0aa23          	sw	a2,1460(ra)

900021b0 <inst_397>:

inst_397:
// rs1_val==-46339 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, -0xb503, 0x55555555, x1, 1464, x2)
900021b0:	ffff5537          	lui	a0,0xffff5
900021b4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900021b8:	555555b7          	lui	a1,0x55555
900021bc:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
900021c0:	02b51633          	mulh	a2,a0,a1
900021c4:	5ac0ac23          	sw	a2,1464(ra)

900021c8 <inst_398>:

inst_398:
// rs1_val==-46339 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, -0xb503, -0x55555556, x1, 1468, x2)
900021c8:	ffff5537          	lui	a0,0xffff5
900021cc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900021d0:	aaaab5b7          	lui	a1,0xaaaab
900021d4:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900021d8:	02b51633          	mulh	a2,a0,a1
900021dc:	5ac0ae23          	sw	a2,1468(ra)

900021e0 <inst_399>:

inst_399:
// rs1_val==-46339 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb503, 0x5, x1, 1472, x2)
900021e0:	ffff5537          	lui	a0,0xffff5
900021e4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900021e8:	00500593          	li	a1,5
900021ec:	02b51633          	mulh	a2,a0,a1
900021f0:	5cc0a023          	sw	a2,1472(ra)

900021f4 <inst_400>:

inst_400:
// rs1_val==-46339 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcc, -0xb503, 0x33333333, x1, 1476, x2)
900021f4:	ffff5537          	lui	a0,0xffff5
900021f8:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900021fc:	333335b7          	lui	a1,0x33333
90002200:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90002204:	02b51633          	mulh	a2,a0,a1
90002208:	5cc0a223          	sw	a2,1476(ra)

9000220c <inst_401>:

inst_401:
// rs1_val==-46339 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb798, -0xb503, 0x66666666, x1, 1480, x2)
9000220c:	ffff5537          	lui	a0,0xffff5
90002210:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002214:	666665b7          	lui	a1,0x66666
90002218:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
9000221c:	02b51633          	mulh	a2,a0,a1
90002220:	5cc0a423          	sw	a2,1480(ra)

90002224 <inst_402>:

inst_402:
// rs1_val==-46339 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0xb503, -0xb504, x1, 1484, x2)
90002224:	ffff5537          	lui	a0,0xffff5
90002228:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
9000222c:	ffff55b7          	lui	a1,0xffff5
90002230:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002234:	02b51633          	mulh	a2,a0,a1
90002238:	5cc0a623          	sw	a2,1484(ra)

9000223c <inst_403>:

inst_403:
// rs1_val==-46339 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb503, 0xb504, x1, 1488, x2)
9000223c:	ffff5537          	lui	a0,0xffff5
90002240:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002244:	0000b5b7          	lui	a1,0xb
90002248:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
9000224c:	02b51633          	mulh	a2,a0,a1
90002250:	5cc0a823          	sw	a2,1488(ra)

90002254 <inst_404>:

inst_404:
// rs1_val==-46339 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb503, 0x2, x1, 1492, x2)
90002254:	ffff5537          	lui	a0,0xffff5
90002258:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
9000225c:	00200593          	li	a1,2
90002260:	02b51633          	mulh	a2,a0,a1
90002264:	5cc0aa23          	sw	a2,1492(ra)

90002268 <inst_405>:

inst_405:
// rs1_val==-46339 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, -0xb503, 0x55555554, x1, 1496, x2)
90002268:	ffff5537          	lui	a0,0xffff5
9000226c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002270:	555555b7          	lui	a1,0x55555
90002274:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90002278:	02b51633          	mulh	a2,a0,a1
9000227c:	5cc0ac23          	sw	a2,1496(ra)

90002280 <inst_406>:

inst_406:
// rs1_val==-46339 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0xb503, 0x0, x1, 1500, x2)
90002280:	ffff5537          	lui	a0,0xffff5
90002284:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002288:	00000593          	li	a1,0
9000228c:	02b51633          	mulh	a2,a0,a1
90002290:	5cc0ae23          	sw	a2,1500(ra)

90002294 <inst_407>:

inst_407:
// rs1_val==-46339 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb503, 0x4, x1, 1504, x2)
90002294:	ffff5537          	lui	a0,0xffff5
90002298:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
9000229c:	00400593          	li	a1,4
900022a0:	02b51633          	mulh	a2,a0,a1
900022a4:	5ec0a023          	sw	a2,1504(ra)

900022a8 <inst_408>:

inst_408:
// rs1_val==-46339 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcc, -0xb503, 0x33333332, x1, 1508, x2)
900022a8:	ffff5537          	lui	a0,0xffff5
900022ac:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022b0:	333335b7          	lui	a1,0x33333
900022b4:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
900022b8:	02b51633          	mulh	a2,a0,a1
900022bc:	5ec0a223          	sw	a2,1508(ra)

900022c0 <inst_409>:

inst_409:
// rs1_val==-46339 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb798, -0xb503, 0x66666665, x1, 1512, x2)
900022c0:	ffff5537          	lui	a0,0xffff5
900022c4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022c8:	666665b7          	lui	a1,0x66666
900022cc:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
900022d0:	02b51633          	mulh	a2,a0,a1
900022d4:	5ec0a423          	sw	a2,1512(ra)

900022d8 <inst_410>:

inst_410:
// rs1_val==-46339 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb503, 0xb503, x1, 1516, x2)
900022d8:	ffff5537          	lui	a0,0xffff5
900022dc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022e0:	0000b5b7          	lui	a1,0xb
900022e4:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
900022e8:	02b51633          	mulh	a2,a0,a1
900022ec:	5ec0a623          	sw	a2,1516(ra)

900022f0 <inst_411>:

inst_411:
// rs1_val==-46339 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, -0xb503, 0x55555556, x1, 1520, x2)
900022f0:	ffff5537          	lui	a0,0xffff5
900022f4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022f8:	555555b7          	lui	a1,0x55555
900022fc:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90002300:	02b51633          	mulh	a2,a0,a1
90002304:	5ec0a823          	sw	a2,1520(ra)

90002308 <inst_412>:

inst_412:
// rs1_val==-46339 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, -0xb503, -0x55555555, x1, 1524, x2)
90002308:	ffff5537          	lui	a0,0xffff5
9000230c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002310:	aaaab5b7          	lui	a1,0xaaaab
90002314:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002318:	02b51633          	mulh	a2,a0,a1
9000231c:	5ec0aa23          	sw	a2,1524(ra)

90002320 <inst_413>:

inst_413:
// rs1_val==-46339 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb503, 0x6, x1, 1528, x2)
90002320:	ffff5537          	lui	a0,0xffff5
90002324:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002328:	00600593          	li	a1,6
9000232c:	02b51633          	mulh	a2,a0,a1
90002330:	5ec0ac23          	sw	a2,1528(ra)

90002334 <inst_414>:

inst_414:
// rs1_val==-46339 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcc, -0xb503, 0x33333334, x1, 1532, x2)
90002334:	ffff5537          	lui	a0,0xffff5
90002338:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
9000233c:	333335b7          	lui	a1,0x33333
90002340:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90002344:	02b51633          	mulh	a2,a0,a1
90002348:	5ec0ae23          	sw	a2,1532(ra)

9000234c <inst_415>:

inst_415:
// rs1_val==-46339 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb798, -0xb503, 0x66666667, x1, 1536, x2)
9000234c:	ffff5537          	lui	a0,0xffff5
90002350:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002354:	666665b7          	lui	a1,0x66666
90002358:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
9000235c:	02b51633          	mulh	a2,a0,a1
90002360:	60c0a023          	sw	a2,1536(ra)

90002364 <inst_416>:

inst_416:
// rs1_val==-46339 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0xb503, -0xb503, x1, 1540, x2)
90002364:	ffff5537          	lui	a0,0xffff5
90002368:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
9000236c:	ffff55b7          	lui	a1,0xffff5
90002370:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002374:	02b51633          	mulh	a2,a0,a1
90002378:	60c0a223          	sw	a2,1540(ra)

9000237c <inst_417>:

inst_417:
// rs1_val==-46339 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0xb503, 0xb505, x1, 1544, x2)
9000237c:	ffff5537          	lui	a0,0xffff5
90002380:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002384:	0000b5b7          	lui	a1,0xb
90002388:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
9000238c:	02b51633          	mulh	a2,a0,a1
90002390:	60c0a423          	sw	a2,1544(ra)

90002394 <inst_418>:

inst_418:
// rs1_val==46341 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb505, 0x3, x1, 1548, x2)
90002394:	0000b537          	lui	a0,0xb
90002398:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
9000239c:	00300593          	li	a1,3
900023a0:	02b51633          	mulh	a2,a0,a1
900023a4:	60c0a623          	sw	a2,1548(ra)

900023a8 <inst_419>:

inst_419:
// rs1_val==46341 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0xb505, 0x55555555, x1, 1552, x2)
900023a8:	0000b537          	lui	a0,0xb
900023ac:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
900023b0:	555555b7          	lui	a1,0x55555
900023b4:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
900023b8:	02b51633          	mulh	a2,a0,a1
900023bc:	60c0a823          	sw	a2,1552(ra)

900023c0 <inst_420>:

inst_420:
// rs1_val==46341 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a8, 0xb505, -0x55555556, x1, 1556, x2)
900023c0:	0000b537          	lui	a0,0xb
900023c4:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
900023c8:	aaaab5b7          	lui	a1,0xaaaab
900023cc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900023d0:	02b51633          	mulh	a2,a0,a1
900023d4:	60c0aa23          	sw	a2,1556(ra)

900023d8 <inst_421>:

inst_421:
// rs1_val==46341 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb505, 0x5, x1, 1560, x2)
900023d8:	0000b537          	lui	a0,0xb
900023dc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
900023e0:	00500593          	li	a1,5
900023e4:	02b51633          	mulh	a2,a0,a1
900023e8:	60c0ac23          	sw	a2,1560(ra)

900023ec <inst_422>:

inst_422:
// rs1_val==46341 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x2434, 0xb505, 0x33333333, x1, 1564, x2)
900023ec:	0000b537          	lui	a0,0xb
900023f0:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
900023f4:	333335b7          	lui	a1,0x33333
900023f8:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
900023fc:	02b51633          	mulh	a2,a0,a1
90002400:	60c0ae23          	sw	a2,1564(ra)

90002404 <inst_423>:

inst_423:
// rs1_val==46341 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x4868, 0xb505, 0x66666666, x1, 1568, x2)
90002404:	0000b537          	lui	a0,0xb
90002408:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
9000240c:	666665b7          	lui	a1,0x66666
90002410:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90002414:	02b51633          	mulh	a2,a0,a1
90002418:	62c0a023          	sw	a2,1568(ra)

9000241c <inst_424>:

inst_424:
// rs1_val==46341 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0xb505, -0xb504, x1, 1572, x2)
9000241c:	0000b537          	lui	a0,0xb
90002420:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
90002424:	ffff55b7          	lui	a1,0xffff5
90002428:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000242c:	02b51633          	mulh	a2,a0,a1
90002430:	62c0a223          	sw	a2,1572(ra)

90002434 <inst_425>:

inst_425:
// rs1_val==46341 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb505, 0xb504, x1, 1576, x2)
90002434:	0000b537          	lui	a0,0xb
90002438:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
9000243c:	0000b5b7          	lui	a1,0xb
90002440:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90002444:	02b51633          	mulh	a2,a0,a1
90002448:	62c0a423          	sw	a2,1576(ra)

9000244c <inst_426>:

inst_426:
// rs1_val==46341 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb505, 0x2, x1, 1580, x2)
9000244c:	0000b537          	lui	a0,0xb
90002450:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
90002454:	00200593          	li	a1,2
90002458:	02b51633          	mulh	a2,a0,a1
9000245c:	62c0a623          	sw	a2,1580(ra)

90002460 <inst_427>:

inst_427:
// rs1_val==46341 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0xb505, 0x55555554, x1, 1584, x2)
90002460:	0000b537          	lui	a0,0xb
90002464:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
90002468:	555555b7          	lui	a1,0x55555
9000246c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90002470:	02b51633          	mulh	a2,a0,a1
90002474:	62c0a823          	sw	a2,1584(ra)

90002478 <inst_428>:

inst_428:
// rs1_val==46341 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb505, 0x0, x1, 1588, x2)
90002478:	0000b537          	lui	a0,0xb
9000247c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
90002480:	00000593          	li	a1,0
90002484:	02b51633          	mulh	a2,a0,a1
90002488:	62c0aa23          	sw	a2,1588(ra)

9000248c <inst_429>:

inst_429:
// rs1_val==46341 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb505, 0x4, x1, 1592, x2)
9000248c:	0000b537          	lui	a0,0xb
90002490:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
90002494:	00400593          	li	a1,4
90002498:	02b51633          	mulh	a2,a0,a1
9000249c:	62c0ac23          	sw	a2,1592(ra)

900024a0 <inst_430>:

inst_430:
// rs1_val==46341 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x2434, 0xb505, 0x33333332, x1, 1596, x2)
900024a0:	0000b537          	lui	a0,0xb
900024a4:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
900024a8:	333335b7          	lui	a1,0x33333
900024ac:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
900024b0:	02b51633          	mulh	a2,a0,a1
900024b4:	62c0ae23          	sw	a2,1596(ra)

900024b8 <inst_431>:

inst_431:
// rs1_val==46341 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x4868, 0xb505, 0x66666665, x1, 1600, x2)
900024b8:	0000b537          	lui	a0,0xb
900024bc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
900024c0:	666665b7          	lui	a1,0x66666
900024c4:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
900024c8:	02b51633          	mulh	a2,a0,a1
900024cc:	64c0a023          	sw	a2,1600(ra)

900024d0 <inst_432>:

inst_432:
// rs1_val==46341 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb505, 0xb503, x1, 1604, x2)
900024d0:	0000b537          	lui	a0,0xb
900024d4:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
900024d8:	0000b5b7          	lui	a1,0xb
900024dc:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
900024e0:	02b51633          	mulh	a2,a0,a1
900024e4:	64c0a223          	sw	a2,1604(ra)

900024e8 <inst_433>:

inst_433:
// rs1_val==46341 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x3c57, 0xb505, 0x55555556, x1, 1608, x2)
900024e8:	0000b537          	lui	a0,0xb
900024ec:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
900024f0:	555555b7          	lui	a1,0x55555
900024f4:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
900024f8:	02b51633          	mulh	a2,a0,a1
900024fc:	64c0a423          	sw	a2,1608(ra)

90002500 <inst_434>:

inst_434:
// rs1_val==46341 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, 0xb505, -0x55555555, x1, 1612, x2)
90002500:	0000b537          	lui	a0,0xb
90002504:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
90002508:	aaaab5b7          	lui	a1,0xaaaab
9000250c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002510:	02b51633          	mulh	a2,a0,a1
90002514:	64c0a623          	sw	a2,1612(ra)

90002518 <inst_435>:

inst_435:
// rs1_val==46341 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb505, 0x6, x1, 1616, x2)
90002518:	0000b537          	lui	a0,0xb
9000251c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
90002520:	00600593          	li	a1,6
90002524:	02b51633          	mulh	a2,a0,a1
90002528:	64c0a823          	sw	a2,1616(ra)

9000252c <inst_436>:

inst_436:
// rs1_val==46341 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x2434, 0xb505, 0x33333334, x1, 1620, x2)
9000252c:	0000b537          	lui	a0,0xb
90002530:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
90002534:	333335b7          	lui	a1,0x33333
90002538:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
9000253c:	02b51633          	mulh	a2,a0,a1
90002540:	64c0aa23          	sw	a2,1620(ra)

90002544 <inst_437>:

inst_437:
// rs1_val==46341 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x4868, 0xb505, 0x66666667, x1, 1624, x2)
90002544:	0000b537          	lui	a0,0xb
90002548:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
9000254c:	666665b7          	lui	a1,0x66666
90002550:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90002554:	02b51633          	mulh	a2,a0,a1
90002558:	64c0ac23          	sw	a2,1624(ra)

9000255c <inst_438>:

inst_438:
// rs1_val==46341 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0xb505, -0xb503, x1, 1628, x2)
9000255c:	0000b537          	lui	a0,0xb
90002560:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
90002564:	ffff55b7          	lui	a1,0xffff5
90002568:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
9000256c:	02b51633          	mulh	a2,a0,a1
90002570:	64c0ae23          	sw	a2,1628(ra)

90002574 <inst_439>:

inst_439:
// rs1_val==46341 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb505, 0xb505, x1, 1632, x2)
90002574:	0000b537          	lui	a0,0xb
90002578:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb45d>
9000257c:	0000b5b7          	lui	a1,0xb
90002580:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90002584:	02b51633          	mulh	a2,a0,a1
90002588:	66c0a023          	sw	a2,1632(ra)

9000258c <inst_440>:

inst_440:
// rs1_val==0 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, -0xb504, x1, 1636, x2)
9000258c:	00000513          	li	a0,0
90002590:	ffff55b7          	lui	a1,0xffff5
90002594:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002598:	02b51633          	mulh	a2,a0,a1
9000259c:	66c0a223          	sw	a2,1636(ra)

900025a0 <inst_441>:

inst_441:
// rs1_val==0 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0xb504, x1, 1640, x2)
900025a0:	00000513          	li	a0,0
900025a4:	0000b5b7          	lui	a1,0xb
900025a8:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
900025ac:	02b51633          	mulh	a2,a0,a1
900025b0:	66c0a423          	sw	a2,1640(ra)

900025b4 <inst_442>:

inst_442:
// rs1_val==0 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x2, x1, 1644, x2)
900025b4:	00000513          	li	a0,0
900025b8:	00200593          	li	a1,2
900025bc:	02b51633          	mulh	a2,a0,a1
900025c0:	66c0a623          	sw	a2,1644(ra)

900025c4 <inst_443>:

inst_443:
// rs1_val==0 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x55555554, x1, 1648, x2)
900025c4:	00000513          	li	a0,0
900025c8:	555555b7          	lui	a1,0x55555
900025cc:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
900025d0:	02b51633          	mulh	a2,a0,a1
900025d4:	66c0a823          	sw	a2,1648(ra)

900025d8 <inst_444>:

inst_444:
// rs1_val==0 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x0, x1, 1652, x2)
900025d8:	00000513          	li	a0,0
900025dc:	00000593          	li	a1,0
900025e0:	02b51633          	mulh	a2,a0,a1
900025e4:	66c0aa23          	sw	a2,1652(ra)

900025e8 <inst_445>:

inst_445:
// rs1_val==0 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x33333332, x1, 1656, x2)
900025e8:	00000513          	li	a0,0
900025ec:	333335b7          	lui	a1,0x33333
900025f0:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
900025f4:	02b51633          	mulh	a2,a0,a1
900025f8:	66c0ac23          	sw	a2,1656(ra)

900025fc <inst_446>:

inst_446:
// rs1_val==0 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x66666665, x1, 1660, x2)
900025fc:	00000513          	li	a0,0
90002600:	666665b7          	lui	a1,0x66666
90002604:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90002608:	02b51633          	mulh	a2,a0,a1
9000260c:	66c0ae23          	sw	a2,1660(ra)

90002610 <inst_447>:

inst_447:
// rs1_val==0 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0xb503, x1, 1664, x2)
90002610:	00000513          	li	a0,0
90002614:	0000b5b7          	lui	a1,0xb
90002618:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
9000261c:	02b51633          	mulh	a2,a0,a1
90002620:	68c0a023          	sw	a2,1664(ra)

90002624 <inst_448>:

inst_448:
// rs1_val==0 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x55555556, x1, 1668, x2)
90002624:	00000513          	li	a0,0
90002628:	555555b7          	lui	a1,0x55555
9000262c:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90002630:	02b51633          	mulh	a2,a0,a1
90002634:	68c0a223          	sw	a2,1668(ra)

90002638 <inst_449>:

inst_449:
// rs1_val==0 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, -0x55555555, x1, 1672, x2)
90002638:	00000513          	li	a0,0
9000263c:	aaaab5b7          	lui	a1,0xaaaab
90002640:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002644:	02b51633          	mulh	a2,a0,a1
90002648:	68c0a423          	sw	a2,1672(ra)

9000264c <inst_450>:

inst_450:
// rs1_val==0 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x6, x1, 1676, x2)
9000264c:	00000513          	li	a0,0
90002650:	00600593          	li	a1,6
90002654:	02b51633          	mulh	a2,a0,a1
90002658:	68c0a623          	sw	a2,1676(ra)

9000265c <inst_451>:

inst_451:
// rs1_val==0 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x33333334, x1, 1680, x2)
9000265c:	00000513          	li	a0,0
90002660:	333335b7          	lui	a1,0x33333
90002664:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90002668:	02b51633          	mulh	a2,a0,a1
9000266c:	68c0a823          	sw	a2,1680(ra)

90002670 <inst_452>:

inst_452:
// rs1_val==0 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0x66666667, x1, 1684, x2)
90002670:	00000513          	li	a0,0
90002674:	666665b7          	lui	a1,0x66666
90002678:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
9000267c:	02b51633          	mulh	a2,a0,a1
90002680:	68c0aa23          	sw	a2,1684(ra)

90002684 <inst_453>:

inst_453:
// rs1_val==0 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, -0xb503, x1, 1688, x2)
90002684:	00000513          	li	a0,0
90002688:	ffff55b7          	lui	a1,0xffff5
9000268c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002690:	02b51633          	mulh	a2,a0,a1
90002694:	68c0ac23          	sw	a2,1688(ra)

90002698 <inst_454>:

inst_454:
// rs1_val==0 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x0, 0xb505, x1, 1692, x2)
90002698:	00000513          	li	a0,0
9000269c:	0000b5b7          	lui	a1,0xb
900026a0:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
900026a4:	02b51633          	mulh	a2,a0,a1
900026a8:	68c0ae23          	sw	a2,1692(ra)

900026ac <inst_455>:

inst_455:
// rs1_val==4 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0x3, x1, 1696, x2)
900026ac:	00400513          	li	a0,4
900026b0:	00300593          	li	a1,3
900026b4:	02b51633          	mulh	a2,a0,a1
900026b8:	6ac0a023          	sw	a2,1696(ra)

900026bc <inst_456>:

inst_456:
// rs1_val==4 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x4, 0x55555555, x1, 1700, x2)
900026bc:	00400513          	li	a0,4
900026c0:	555555b7          	lui	a1,0x55555
900026c4:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
900026c8:	02b51633          	mulh	a2,a0,a1
900026cc:	6ac0a223          	sw	a2,1700(ra)

900026d0 <inst_457>:

inst_457:
// rs1_val==4 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, 0x4, -0x55555556, x1, 1704, x2)
900026d0:	00400513          	li	a0,4
900026d4:	aaaab5b7          	lui	a1,0xaaaab
900026d8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900026dc:	02b51633          	mulh	a2,a0,a1
900026e0:	6ac0a423          	sw	a2,1704(ra)

900026e4 <inst_458>:

inst_458:
// rs1_val==4 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0x5, x1, 1708, x2)
900026e4:	00400513          	li	a0,4
900026e8:	00500593          	li	a1,5
900026ec:	02b51633          	mulh	a2,a0,a1
900026f0:	6ac0a623          	sw	a2,1708(ra)

900026f4 <inst_459>:

inst_459:
// rs1_val==4 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0x33333333, x1, 1712, x2)
900026f4:	00400513          	li	a0,4
900026f8:	333335b7          	lui	a1,0x33333
900026fc:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90002700:	02b51633          	mulh	a2,a0,a1
90002704:	6ac0a823          	sw	a2,1712(ra)

90002708 <inst_460>:

inst_460:
// rs1_val==4 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x4, 0x66666666, x1, 1716, x2)
90002708:	00400513          	li	a0,4
9000270c:	666665b7          	lui	a1,0x66666
90002710:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90002714:	02b51633          	mulh	a2,a0,a1
90002718:	6ac0aa23          	sw	a2,1716(ra)

9000271c <inst_461>:

inst_461:
// rs1_val==4 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x4, -0xb504, x1, 1720, x2)
9000271c:	00400513          	li	a0,4
90002720:	ffff55b7          	lui	a1,0xffff5
90002724:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002728:	02b51633          	mulh	a2,a0,a1
9000272c:	6ac0ac23          	sw	a2,1720(ra)

90002730 <inst_462>:

inst_462:
// rs1_val==4 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0xb504, x1, 1724, x2)
90002730:	00400513          	li	a0,4
90002734:	0000b5b7          	lui	a1,0xb
90002738:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
9000273c:	02b51633          	mulh	a2,a0,a1
90002740:	6ac0ae23          	sw	a2,1724(ra)

90002744 <inst_463>:

inst_463:
// rs1_val==4 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0x2, x1, 1728, x2)
90002744:	00400513          	li	a0,4
90002748:	00200593          	li	a1,2
9000274c:	02b51633          	mulh	a2,a0,a1
90002750:	6cc0a023          	sw	a2,1728(ra)

90002754 <inst_464>:

inst_464:
// rs1_val==4 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x4, 0x55555554, x1, 1732, x2)
90002754:	00400513          	li	a0,4
90002758:	555555b7          	lui	a1,0x55555
9000275c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90002760:	02b51633          	mulh	a2,a0,a1
90002764:	6cc0a223          	sw	a2,1732(ra)

90002768 <inst_465>:

inst_465:
// rs1_val==4 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0x0, x1, 1736, x2)
90002768:	00400513          	li	a0,4
9000276c:	00000593          	li	a1,0
90002770:	02b51633          	mulh	a2,a0,a1
90002774:	6cc0a423          	sw	a2,1736(ra)

90002778 <inst_466>:

inst_466:
// rs1_val==4 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0x4, x1, 1740, x2)
90002778:	00400513          	li	a0,4
9000277c:	00400593          	li	a1,4
90002780:	02b51633          	mulh	a2,a0,a1
90002784:	6cc0a623          	sw	a2,1740(ra)

90002788 <inst_467>:

inst_467:
// rs1_val==4 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0x33333332, x1, 1744, x2)
90002788:	00400513          	li	a0,4
9000278c:	333335b7          	lui	a1,0x33333
90002790:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90002794:	02b51633          	mulh	a2,a0,a1
90002798:	6cc0a823          	sw	a2,1744(ra)

9000279c <inst_468>:

inst_468:
// rs1_val==4 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x4, 0x66666665, x1, 1748, x2)
9000279c:	00400513          	li	a0,4
900027a0:	666665b7          	lui	a1,0x66666
900027a4:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
900027a8:	02b51633          	mulh	a2,a0,a1
900027ac:	6cc0aa23          	sw	a2,1748(ra)

900027b0 <inst_469>:

inst_469:
// rs1_val==4 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0xb503, x1, 1752, x2)
900027b0:	00400513          	li	a0,4
900027b4:	0000b5b7          	lui	a1,0xb
900027b8:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
900027bc:	02b51633          	mulh	a2,a0,a1
900027c0:	6cc0ac23          	sw	a2,1752(ra)

900027c4 <inst_470>:

inst_470:
// rs1_val==4 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x4, 0x55555556, x1, 1756, x2)
900027c4:	00400513          	li	a0,4
900027c8:	555555b7          	lui	a1,0x55555
900027cc:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
900027d0:	02b51633          	mulh	a2,a0,a1
900027d4:	6cc0ae23          	sw	a2,1756(ra)

900027d8 <inst_471>:

inst_471:
// rs1_val==4 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, 0x4, -0x55555555, x1, 1760, x2)
900027d8:	00400513          	li	a0,4
900027dc:	aaaab5b7          	lui	a1,0xaaaab
900027e0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900027e4:	02b51633          	mulh	a2,a0,a1
900027e8:	6ec0a023          	sw	a2,1760(ra)

900027ec <inst_472>:

inst_472:
// rs1_val==4 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0x6, x1, 1764, x2)
900027ec:	00400513          	li	a0,4
900027f0:	00600593          	li	a1,6
900027f4:	02b51633          	mulh	a2,a0,a1
900027f8:	6ec0a223          	sw	a2,1764(ra)

900027fc <inst_473>:

inst_473:
// rs1_val==4 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0x33333334, x1, 1768, x2)
900027fc:	00400513          	li	a0,4
90002800:	333335b7          	lui	a1,0x33333
90002804:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90002808:	02b51633          	mulh	a2,a0,a1
9000280c:	6ec0a423          	sw	a2,1768(ra)

90002810 <inst_474>:

inst_474:
// rs1_val==4 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x4, 0x66666667, x1, 1772, x2)
90002810:	00400513          	li	a0,4
90002814:	666665b7          	lui	a1,0x66666
90002818:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
9000281c:	02b51633          	mulh	a2,a0,a1
90002820:	6ec0a623          	sw	a2,1772(ra)

90002824 <inst_475>:

inst_475:
// rs1_val==4 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x4, -0xb503, x1, 1776, x2)
90002824:	00400513          	li	a0,4
90002828:	ffff55b7          	lui	a1,0xffff5
9000282c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002830:	02b51633          	mulh	a2,a0,a1
90002834:	6ec0a823          	sw	a2,1776(ra)

90002838 <inst_476>:

inst_476:
// rs1_val==4 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x4, 0xb505, x1, 1780, x2)
90002838:	00400513          	li	a0,4
9000283c:	0000b5b7          	lui	a1,0xb
90002840:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90002844:	02b51633          	mulh	a2,a0,a1
90002848:	6ec0aa23          	sw	a2,1780(ra)

9000284c <inst_477>:

inst_477:
// rs1_val==858993458 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333332, 0x3, x1, 1784, x2)
9000284c:	33333537          	lui	a0,0x33333
90002850:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002854:	00300593          	li	a1,3
90002858:	02b51633          	mulh	a2,a0,a1
9000285c:	6ec0ac23          	sw	a2,1784(ra)

90002860 <inst_478>:

inst_478:
// rs1_val==858993458 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x11111110, 0x33333332, 0x55555555, x1, 1788, x2)
90002860:	33333537          	lui	a0,0x33333
90002864:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002868:	555555b7          	lui	a1,0x55555
9000286c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90002870:	02b51633          	mulh	a2,a0,a1
90002874:	6ec0ae23          	sw	a2,1788(ra)

90002878 <inst_479>:

inst_479:
// rs1_val==858993458 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeef, 0x33333332, -0x55555556, x1, 1792, x2)
90002878:	33333537          	lui	a0,0x33333
9000287c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002880:	aaaab5b7          	lui	a1,0xaaaab
90002884:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002888:	02b51633          	mulh	a2,a0,a1
9000288c:	70c0a023          	sw	a2,1792(ra)

90002890 <inst_480>:

inst_480:
// rs1_val==858993458 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333332, 0x5, x1, 1796, x2)
90002890:	33333537          	lui	a0,0x33333
90002894:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002898:	00500593          	li	a1,5
9000289c:	02b51633          	mulh	a2,a0,a1
900028a0:	70c0a223          	sw	a2,1796(ra)

900028a4 <inst_481>:

inst_481:
// rs1_val==858993458 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0xa3d70a3, 0x33333332, 0x33333333, x1, 1800, x2)
900028a4:	33333537          	lui	a0,0x33333
900028a8:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
900028ac:	333335b7          	lui	a1,0x33333
900028b0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
900028b4:	02b51633          	mulh	a2,a0,a1
900028b8:	70c0a423          	sw	a2,1800(ra)

900028bc <inst_482>:

inst_482:
// rs1_val==858993458 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x33333332, 0x66666666, x1, 1804, x2)
900028bc:	33333537          	lui	a0,0x33333
900028c0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
900028c4:	666665b7          	lui	a1,0x66666
900028c8:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
900028cc:	02b51633          	mulh	a2,a0,a1
900028d0:	70c0a623          	sw	a2,1804(ra)

900028d4 <inst_483>:

inst_483:
// rs1_val==858993458 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcc, 0x33333332, -0xb504, x1, 1808, x2)
900028d4:	33333537          	lui	a0,0x33333
900028d8:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
900028dc:	ffff55b7          	lui	a1,0xffff5
900028e0:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
900028e4:	02b51633          	mulh	a2,a0,a1
900028e8:	70c0a823          	sw	a2,1808(ra)

900028ec <inst_484>:

inst_484:
// rs1_val==858993458 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x2433, 0x33333332, 0xb504, x1, 1812, x2)
900028ec:	33333537          	lui	a0,0x33333
900028f0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
900028f4:	0000b5b7          	lui	a1,0xb
900028f8:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
900028fc:	02b51633          	mulh	a2,a0,a1
90002900:	70c0aa23          	sw	a2,1812(ra)

90002904 <inst_485>:

inst_485:
// rs1_val==858993458 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333332, 0x2, x1, 1816, x2)
90002904:	33333537          	lui	a0,0x33333
90002908:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
9000290c:	00200593          	li	a1,2
90002910:	02b51633          	mulh	a2,a0,a1
90002914:	70c0ac23          	sw	a2,1816(ra)

90002918 <inst_486>:

inst_486:
// rs1_val==858993458 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x11111110, 0x33333332, 0x55555554, x1, 1820, x2)
90002918:	33333537          	lui	a0,0x33333
9000291c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002920:	555555b7          	lui	a1,0x55555
90002924:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90002928:	02b51633          	mulh	a2,a0,a1
9000292c:	70c0ae23          	sw	a2,1820(ra)

90002930 <inst_487>:

inst_487:
// rs1_val==858993458 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333332, 0x0, x1, 1824, x2)
90002930:	33333537          	lui	a0,0x33333
90002934:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002938:	00000593          	li	a1,0
9000293c:	02b51633          	mulh	a2,a0,a1
90002940:	72c0a023          	sw	a2,1824(ra)

90002944 <inst_488>:

inst_488:
// rs1_val==858993458 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x33333332, 0x4, x1, 1828, x2)
90002944:	33333537          	lui	a0,0x33333
90002948:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
9000294c:	00400593          	li	a1,4
90002950:	02b51633          	mulh	a2,a0,a1
90002954:	72c0a223          	sw	a2,1828(ra)

90002958 <inst_489>:

inst_489:
// rs1_val==858993458 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0xa3d70a3, 0x33333332, 0x33333332, x1, 1832, x2)
90002958:	33333537          	lui	a0,0x33333
9000295c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002960:	333335b7          	lui	a1,0x33333
90002964:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90002968:	02b51633          	mulh	a2,a0,a1
9000296c:	72c0a423          	sw	a2,1832(ra)

90002970 <inst_490>:

inst_490:
// rs1_val==858993458 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae146, 0x33333332, 0x66666665, x1, 1836, x2)
90002970:	33333537          	lui	a0,0x33333
90002974:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002978:	666665b7          	lui	a1,0x66666
9000297c:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90002980:	02b51633          	mulh	a2,a0,a1
90002984:	72c0a623          	sw	a2,1836(ra)

90002988 <inst_491>:

inst_491:
// rs1_val==858993458 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x2433, 0x33333332, 0xb503, x1, 1840, x2)
90002988:	33333537          	lui	a0,0x33333
9000298c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002990:	0000b5b7          	lui	a1,0xb
90002994:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90002998:	02b51633          	mulh	a2,a0,a1
9000299c:	72c0a823          	sw	a2,1840(ra)

900029a0 <inst_492>:

inst_492:
// rs1_val==858993458 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x11111110, 0x33333332, 0x55555556, x1, 1844, x2)
900029a0:	33333537          	lui	a0,0x33333
900029a4:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
900029a8:	555555b7          	lui	a1,0x55555
900029ac:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
900029b0:	02b51633          	mulh	a2,a0,a1
900029b4:	72c0aa23          	sw	a2,1844(ra)

900029b8 <inst_493>:

inst_493:
// rs1_val==858993458 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeef, 0x33333332, -0x55555555, x1, 1848, x2)
900029b8:	33333537          	lui	a0,0x33333
900029bc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
900029c0:	aaaab5b7          	lui	a1,0xaaaab
900029c4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900029c8:	02b51633          	mulh	a2,a0,a1
900029cc:	72c0ac23          	sw	a2,1848(ra)

900029d0 <inst_494>:

inst_494:
// rs1_val==858993458 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x33333332, 0x6, x1, 1852, x2)
900029d0:	33333537          	lui	a0,0x33333
900029d4:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
900029d8:	00600593          	li	a1,6
900029dc:	02b51633          	mulh	a2,a0,a1
900029e0:	72c0ae23          	sw	a2,1852(ra)

900029e4 <inst_495>:

inst_495:
// rs1_val==858993458 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0xa3d70a3, 0x33333332, 0x33333334, x1, 1856, x2)
900029e4:	33333537          	lui	a0,0x33333
900029e8:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
900029ec:	333335b7          	lui	a1,0x33333
900029f0:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
900029f4:	02b51633          	mulh	a2,a0,a1
900029f8:	74c0a023          	sw	a2,1856(ra)

900029fc <inst_496>:

inst_496:
// rs1_val==858993458 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x33333332, 0x66666667, x1, 1860, x2)
900029fc:	33333537          	lui	a0,0x33333
90002a00:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002a04:	666665b7          	lui	a1,0x66666
90002a08:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90002a0c:	02b51633          	mulh	a2,a0,a1
90002a10:	74c0a223          	sw	a2,1860(ra)

90002a14 <inst_497>:

inst_497:
// rs1_val==858993458 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffdbcc, 0x33333332, -0xb503, x1, 1864, x2)
90002a14:	33333537          	lui	a0,0x33333
90002a18:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002a1c:	ffff55b7          	lui	a1,0xffff5
90002a20:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002a24:	02b51633          	mulh	a2,a0,a1
90002a28:	74c0a423          	sw	a2,1864(ra)

90002a2c <inst_498>:

inst_498:
// rs1_val==858993458 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x2434, 0x33333332, 0xb505, x1, 1868, x2)
90002a2c:	33333537          	lui	a0,0x33333
90002a30:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
90002a34:	0000b5b7          	lui	a1,0xb
90002a38:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90002a3c:	02b51633          	mulh	a2,a0,a1
90002a40:	74c0a623          	sw	a2,1868(ra)

90002a44 <inst_499>:

inst_499:
// rs1_val==1717986917 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x66666665, 0x3, x1, 1872, x2)
90002a44:	66666537          	lui	a0,0x66666
90002a48:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002a4c:	00300593          	li	a1,3
90002a50:	02b51633          	mulh	a2,a0,a1
90002a54:	74c0a823          	sw	a2,1872(ra)

90002a58 <inst_500>:

inst_500:
// rs1_val==1717986917 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x66666665, 0x55555555, x1, 1876, x2)
90002a58:	66666537          	lui	a0,0x66666
90002a5c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002a60:	555555b7          	lui	a1,0x55555
90002a64:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90002a68:	02b51633          	mulh	a2,a0,a1
90002a6c:	74c0aa23          	sw	a2,1876(ra)

90002a70 <inst_501>:

inst_501:
// rs1_val==1717986917 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xddddddde, 0x66666665, -0x55555556, x1, 1880, x2)
90002a70:	66666537          	lui	a0,0x66666
90002a74:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002a78:	aaaab5b7          	lui	a1,0xaaaab
90002a7c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002a80:	02b51633          	mulh	a2,a0,a1
90002a84:	74c0ac23          	sw	a2,1880(ra)

90002a88 <inst_502>:

inst_502:
// rs1_val==1717986917 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x66666665, 0x5, x1, 1884, x2)
90002a88:	66666537          	lui	a0,0x66666
90002a8c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002a90:	00500593          	li	a1,5
90002a94:	02b51633          	mulh	a2,a0,a1
90002a98:	74c0ae23          	sw	a2,1884(ra)

90002a9c <inst_503>:

inst_503:
// rs1_val==1717986917 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x66666665, 0x33333333, x1, 1888, x2)
90002a9c:	66666537          	lui	a0,0x66666
90002aa0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002aa4:	333335b7          	lui	a1,0x33333
90002aa8:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90002aac:	02b51633          	mulh	a2,a0,a1
90002ab0:	76c0a023          	sw	a2,1888(ra)

90002ab4 <inst_504>:

inst_504:
// rs1_val==1717986917 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x28f5c28e, 0x66666665, 0x66666666, x1, 1892, x2)
90002ab4:	66666537          	lui	a0,0x66666
90002ab8:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002abc:	666665b7          	lui	a1,0x66666
90002ac0:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90002ac4:	02b51633          	mulh	a2,a0,a1
90002ac8:	76c0a223          	sw	a2,1892(ra)

90002acc <inst_505>:

inst_505:
// rs1_val==1717986917 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb798, 0x66666665, -0xb504, x1, 1896, x2)
90002acc:	66666537          	lui	a0,0x66666
90002ad0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002ad4:	ffff55b7          	lui	a1,0xffff5
90002ad8:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002adc:	02b51633          	mulh	a2,a0,a1
90002ae0:	76c0a423          	sw	a2,1896(ra)

90002ae4 <inst_506>:

inst_506:
// rs1_val==1717986917 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x4867, 0x66666665, 0xb504, x1, 1900, x2)
90002ae4:	66666537          	lui	a0,0x66666
90002ae8:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002aec:	0000b5b7          	lui	a1,0xb
90002af0:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90002af4:	02b51633          	mulh	a2,a0,a1
90002af8:	76c0a623          	sw	a2,1900(ra)

90002afc <inst_507>:

inst_507:
// rs1_val==1717986917 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x66666665, 0x2, x1, 1904, x2)
90002afc:	66666537          	lui	a0,0x66666
90002b00:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002b04:	00200593          	li	a1,2
90002b08:	02b51633          	mulh	a2,a0,a1
90002b0c:	76c0a823          	sw	a2,1904(ra)

90002b10 <inst_508>:

inst_508:
// rs1_val==1717986917 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x66666665, 0x55555554, x1, 1908, x2)
90002b10:	66666537          	lui	a0,0x66666
90002b14:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002b18:	555555b7          	lui	a1,0x55555
90002b1c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90002b20:	02b51633          	mulh	a2,a0,a1
90002b24:	76c0aa23          	sw	a2,1908(ra)

90002b28 <inst_509>:

inst_509:
// rs1_val==1717986917 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x66666665, 0x0, x1, 1912, x2)
90002b28:	66666537          	lui	a0,0x66666
90002b2c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002b30:	00000593          	li	a1,0
90002b34:	02b51633          	mulh	a2,a0,a1
90002b38:	76c0ac23          	sw	a2,1912(ra)

90002b3c <inst_510>:

inst_510:
// rs1_val==1717986917 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x66666665, 0x4, x1, 1916, x2)
90002b3c:	66666537          	lui	a0,0x66666
90002b40:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002b44:	00400593          	li	a1,4
90002b48:	02b51633          	mulh	a2,a0,a1
90002b4c:	76c0ae23          	sw	a2,1916(ra)

90002b50 <inst_511>:

inst_511:
// rs1_val==1717986917 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae146, 0x66666665, 0x33333332, x1, 1920, x2)
90002b50:	66666537          	lui	a0,0x66666
90002b54:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002b58:	333335b7          	lui	a1,0x33333
90002b5c:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90002b60:	02b51633          	mulh	a2,a0,a1
90002b64:	78c0a023          	sw	a2,1920(ra)

90002b68 <inst_512>:

inst_512:
// rs1_val==1717986917 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x28f5c28e, 0x66666665, 0x66666665, x1, 1924, x2)
90002b68:	66666537          	lui	a0,0x66666
90002b6c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002b70:	666665b7          	lui	a1,0x66666
90002b74:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90002b78:	02b51633          	mulh	a2,a0,a1
90002b7c:	78c0a223          	sw	a2,1924(ra)

90002b80 <inst_513>:

inst_513:
// rs1_val==1717986917 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x4867, 0x66666665, 0xb503, x1, 1928, x2)
90002b80:	66666537          	lui	a0,0x66666
90002b84:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002b88:	0000b5b7          	lui	a1,0xb
90002b8c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90002b90:	02b51633          	mulh	a2,a0,a1
90002b94:	78c0a423          	sw	a2,1928(ra)

90002b98 <inst_514>:

inst_514:
// rs1_val==1717986917 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x66666665, 0x55555556, x1, 1932, x2)
90002b98:	66666537          	lui	a0,0x66666
90002b9c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002ba0:	555555b7          	lui	a1,0x55555
90002ba4:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90002ba8:	02b51633          	mulh	a2,a0,a1
90002bac:	78c0a623          	sw	a2,1932(ra)

90002bb0 <inst_515>:

inst_515:
// rs1_val==1717986917 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xddddddde, 0x66666665, -0x55555555, x1, 1936, x2)
90002bb0:	66666537          	lui	a0,0x66666
90002bb4:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002bb8:	aaaab5b7          	lui	a1,0xaaaab
90002bbc:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002bc0:	02b51633          	mulh	a2,a0,a1
90002bc4:	78c0a823          	sw	a2,1936(ra)

90002bc8 <inst_516>:

inst_516:
// rs1_val==1717986917 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x2, 0x66666665, 0x6, x1, 1940, x2)
90002bc8:	66666537          	lui	a0,0x66666
90002bcc:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002bd0:	00600593          	li	a1,6
90002bd4:	02b51633          	mulh	a2,a0,a1
90002bd8:	78c0aa23          	sw	a2,1940(ra)

90002bdc <inst_517>:

inst_517:
// rs1_val==1717986917 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x147ae147, 0x66666665, 0x33333334, x1, 1944, x2)
90002bdc:	66666537          	lui	a0,0x66666
90002be0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002be4:	333335b7          	lui	a1,0x33333
90002be8:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90002bec:	02b51633          	mulh	a2,a0,a1
90002bf0:	78c0ac23          	sw	a2,1944(ra)

90002bf4 <inst_518>:

inst_518:
// rs1_val==1717986917 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x28f5c28f, 0x66666665, 0x66666667, x1, 1948, x2)
90002bf4:	66666537          	lui	a0,0x66666
90002bf8:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002bfc:	666665b7          	lui	a1,0x66666
90002c00:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90002c04:	02b51633          	mulh	a2,a0,a1
90002c08:	78c0ae23          	sw	a2,1948(ra)

90002c0c <inst_519>:

inst_519:
// rs1_val==1717986917 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffb798, 0x66666665, -0xb503, x1, 1952, x2)
90002c0c:	66666537          	lui	a0,0x66666
90002c10:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002c14:	ffff55b7          	lui	a1,0xffff5
90002c18:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002c1c:	02b51633          	mulh	a2,a0,a1
90002c20:	7ac0a023          	sw	a2,1952(ra)

90002c24 <inst_520>:

inst_520:
// rs1_val==1717986917 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x4868, 0x66666665, 0xb505, x1, 1956, x2)
90002c24:	66666537          	lui	a0,0x66666
90002c28:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665bd>
90002c2c:	0000b5b7          	lui	a1,0xb
90002c30:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90002c34:	02b51633          	mulh	a2,a0,a1
90002c38:	7ac0a223          	sw	a2,1956(ra)

90002c3c <inst_521>:

inst_521:
// rs1_val==46339 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb503, 0x3, x1, 1960, x2)
90002c3c:	0000b537          	lui	a0,0xb
90002c40:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002c44:	00300593          	li	a1,3
90002c48:	02b51633          	mulh	a2,a0,a1
90002c4c:	7ac0a423          	sw	a2,1960(ra)

90002c50 <inst_522>:

inst_522:
// rs1_val==46339 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0xb503, 0x55555555, x1, 1964, x2)
90002c50:	0000b537          	lui	a0,0xb
90002c54:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002c58:	555555b7          	lui	a1,0x55555
90002c5c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90002c60:	02b51633          	mulh	a2,a0,a1
90002c64:	7ac0a623          	sw	a2,1964(ra)

90002c68 <inst_523>:

inst_523:
// rs1_val==46339 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, 0xb503, -0x55555556, x1, 1968, x2)
90002c68:	0000b537          	lui	a0,0xb
90002c6c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002c70:	aaaab5b7          	lui	a1,0xaaaab
90002c74:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002c78:	02b51633          	mulh	a2,a0,a1
90002c7c:	7ac0a823          	sw	a2,1968(ra)

90002c80 <inst_524>:

inst_524:
// rs1_val==46339 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb503, 0x5, x1, 1972, x2)
90002c80:	0000b537          	lui	a0,0xb
90002c84:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002c88:	00500593          	li	a1,5
90002c8c:	02b51633          	mulh	a2,a0,a1
90002c90:	7ac0aa23          	sw	a2,1972(ra)

90002c94 <inst_525>:

inst_525:
// rs1_val==46339 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x2433, 0xb503, 0x33333333, x1, 1976, x2)
90002c94:	0000b537          	lui	a0,0xb
90002c98:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002c9c:	333335b7          	lui	a1,0x33333
90002ca0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90002ca4:	02b51633          	mulh	a2,a0,a1
90002ca8:	7ac0ac23          	sw	a2,1976(ra)

90002cac <inst_526>:

inst_526:
// rs1_val==46339 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x4867, 0xb503, 0x66666666, x1, 1980, x2)
90002cac:	0000b537          	lui	a0,0xb
90002cb0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002cb4:	666665b7          	lui	a1,0x66666
90002cb8:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90002cbc:	02b51633          	mulh	a2,a0,a1
90002cc0:	7ac0ae23          	sw	a2,1980(ra)

90002cc4 <inst_527>:

inst_527:
// rs1_val==46339 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0xb503, -0xb504, x1, 1984, x2)
90002cc4:	0000b537          	lui	a0,0xb
90002cc8:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002ccc:	ffff55b7          	lui	a1,0xffff5
90002cd0:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002cd4:	02b51633          	mulh	a2,a0,a1
90002cd8:	7cc0a023          	sw	a2,1984(ra)

90002cdc <inst_528>:

inst_528:
// rs1_val==46339 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb503, 0xb504, x1, 1988, x2)
90002cdc:	0000b537          	lui	a0,0xb
90002ce0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002ce4:	0000b5b7          	lui	a1,0xb
90002ce8:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90002cec:	02b51633          	mulh	a2,a0,a1
90002cf0:	7cc0a223          	sw	a2,1988(ra)

90002cf4 <inst_529>:

inst_529:
// rs1_val==46339 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb503, 0x2, x1, 1992, x2)
90002cf4:	0000b537          	lui	a0,0xb
90002cf8:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002cfc:	00200593          	li	a1,2
90002d00:	02b51633          	mulh	a2,a0,a1
90002d04:	7cc0a423          	sw	a2,1992(ra)

90002d08 <inst_530>:

inst_530:
// rs1_val==46339 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0xb503, 0x55555554, x1, 1996, x2)
90002d08:	0000b537          	lui	a0,0xb
90002d0c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002d10:	555555b7          	lui	a1,0x55555
90002d14:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90002d18:	02b51633          	mulh	a2,a0,a1
90002d1c:	7cc0a623          	sw	a2,1996(ra)

90002d20 <inst_531>:

inst_531:
// rs1_val==46339 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb503, 0x0, x1, 2000, x2)
90002d20:	0000b537          	lui	a0,0xb
90002d24:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002d28:	00000593          	li	a1,0
90002d2c:	02b51633          	mulh	a2,a0,a1
90002d30:	7cc0a823          	sw	a2,2000(ra)

90002d34 <inst_532>:

inst_532:
// rs1_val==46339 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb503, 0x4, x1, 2004, x2)
90002d34:	0000b537          	lui	a0,0xb
90002d38:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002d3c:	00400593          	li	a1,4
90002d40:	02b51633          	mulh	a2,a0,a1
90002d44:	7cc0aa23          	sw	a2,2004(ra)

90002d48 <inst_533>:

inst_533:
// rs1_val==46339 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x2433, 0xb503, 0x33333332, x1, 2008, x2)
90002d48:	0000b537          	lui	a0,0xb
90002d4c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002d50:	333335b7          	lui	a1,0x33333
90002d54:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90002d58:	02b51633          	mulh	a2,a0,a1
90002d5c:	7cc0ac23          	sw	a2,2008(ra)

90002d60 <inst_534>:

inst_534:
// rs1_val==46339 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x4867, 0xb503, 0x66666665, x1, 2012, x2)
90002d60:	0000b537          	lui	a0,0xb
90002d64:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002d68:	666665b7          	lui	a1,0x66666
90002d6c:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90002d70:	02b51633          	mulh	a2,a0,a1
90002d74:	7cc0ae23          	sw	a2,2012(ra)

90002d78 <inst_535>:

inst_535:
// rs1_val==46339 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb503, 0xb503, x1, 2016, x2)
90002d78:	0000b537          	lui	a0,0xb
90002d7c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002d80:	0000b5b7          	lui	a1,0xb
90002d84:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90002d88:	02b51633          	mulh	a2,a0,a1
90002d8c:	7ec0a023          	sw	a2,2016(ra)

90002d90 <inst_536>:

inst_536:
// rs1_val==46339 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0xb503, 0x55555556, x1, 2020, x2)
90002d90:	0000b537          	lui	a0,0xb
90002d94:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002d98:	555555b7          	lui	a1,0x55555
90002d9c:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90002da0:	02b51633          	mulh	a2,a0,a1
90002da4:	7ec0a223          	sw	a2,2020(ra)

90002da8 <inst_537>:

inst_537:
// rs1_val==46339 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, 0xb503, -0x55555555, x1, 2024, x2)
90002da8:	0000b537          	lui	a0,0xb
90002dac:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002db0:	aaaab5b7          	lui	a1,0xaaaab
90002db4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002db8:	02b51633          	mulh	a2,a0,a1
90002dbc:	7ec0a423          	sw	a2,2024(ra)

90002dc0 <inst_538>:

inst_538:
// rs1_val==46339 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb503, 0x6, x1, 2028, x2)
90002dc0:	0000b537          	lui	a0,0xb
90002dc4:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002dc8:	00600593          	li	a1,6
90002dcc:	02b51633          	mulh	a2,a0,a1
90002dd0:	7ec0a623          	sw	a2,2028(ra)

90002dd4 <inst_539>:

inst_539:
// rs1_val==46339 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x2433, 0xb503, 0x33333334, x1, 2032, x2)
90002dd4:	0000b537          	lui	a0,0xb
90002dd8:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002ddc:	333335b7          	lui	a1,0x33333
90002de0:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90002de4:	02b51633          	mulh	a2,a0,a1
90002de8:	7ec0a823          	sw	a2,2032(ra)

90002dec <inst_540>:

inst_540:
// rs1_val==46339 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x4867, 0xb503, 0x66666667, x1, 2036, x2)
90002dec:	0000b537          	lui	a0,0xb
90002df0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002df4:	666665b7          	lui	a1,0x66666
90002df8:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90002dfc:	02b51633          	mulh	a2,a0,a1
90002e00:	7ec0aa23          	sw	a2,2036(ra)

90002e04 <inst_541>:

inst_541:
// rs1_val==46339 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0xb503, -0xb503, x1, 2040, x2)
90002e04:	0000b537          	lui	a0,0xb
90002e08:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002e0c:	ffff55b7          	lui	a1,0xffff5
90002e10:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002e14:	02b51633          	mulh	a2,a0,a1
90002e18:	7ec0ac23          	sw	a2,2040(ra)

90002e1c <inst_542>:

inst_542:
// rs1_val==46339 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0xb503, 0xb505, x1, 2044, x2)
90002e1c:	0000b537          	lui	a0,0xb
90002e20:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb45b>
90002e24:	0000b5b7          	lui	a1,0xb
90002e28:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
90002e2c:	02b51633          	mulh	a2,a0,a1
90002e30:	7ec0ae23          	sw	a2,2044(ra)
RVTEST_SIGBASE( x1,signature_x1_1)
90002e34:	00003097          	auipc	ra,0x3
90002e38:	a5808093          	addi	ra,ra,-1448 # 9000588c <signature_x1_1>

90002e3c <inst_543>:

inst_543:
// rs1_val==1431655766 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x55555556, 0x3, x1, 0, x2)
90002e3c:	55555537          	lui	a0,0x55555
90002e40:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002e44:	00300593          	li	a1,3
90002e48:	02b51633          	mulh	a2,a0,a1
90002e4c:	00c0a023          	sw	a2,0(ra)

90002e50 <inst_544>:

inst_544:
// rs1_val==1431655766 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71c, 0x55555556, 0x55555555, x1, 4, x2)
90002e50:	55555537          	lui	a0,0x55555
90002e54:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002e58:	555555b7          	lui	a1,0x55555
90002e5c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90002e60:	02b51633          	mulh	a2,a0,a1
90002e64:	00c0a223          	sw	a2,4(ra)

90002e68 <inst_545>:

inst_545:
// rs1_val==1431655766 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e3, 0x55555556, -0x55555556, x1, 8, x2)
90002e68:	55555537          	lui	a0,0x55555
90002e6c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002e70:	aaaab5b7          	lui	a1,0xaaaab
90002e74:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002e78:	02b51633          	mulh	a2,a0,a1
90002e7c:	00c0a423          	sw	a2,8(ra)

90002e80 <inst_546>:

inst_546:
// rs1_val==1431655766 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x55555556, 0x5, x1, 12, x2)
90002e80:	55555537          	lui	a0,0x55555
90002e84:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002e88:	00500593          	li	a1,5
90002e8c:	02b51633          	mulh	a2,a0,a1
90002e90:	00c0a623          	sw	a2,12(ra)

90002e94 <inst_547>:

inst_547:
// rs1_val==1431655766 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0x11111111, 0x55555556, 0x33333333, x1, 16, x2)
90002e94:	55555537          	lui	a0,0x55555
90002e98:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002e9c:	333335b7          	lui	a1,0x33333
90002ea0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
90002ea4:	02b51633          	mulh	a2,a0,a1
90002ea8:	00c0a823          	sw	a2,16(ra)

90002eac <inst_548>:

inst_548:
// rs1_val==1431655766 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0x22222222, 0x55555556, 0x66666666, x1, 20, x2)
90002eac:	55555537          	lui	a0,0x55555
90002eb0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002eb4:	666665b7          	lui	a1,0x66666
90002eb8:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
90002ebc:	02b51633          	mulh	a2,a0,a1
90002ec0:	00c0aa23          	sw	a2,20(ra)

90002ec4 <inst_549>:

inst_549:
// rs1_val==1431655766 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, 0x55555556, -0xb504, x1, 24, x2)
90002ec4:	55555537          	lui	a0,0x55555
90002ec8:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002ecc:	ffff55b7          	lui	a1,0xffff5
90002ed0:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002ed4:	02b51633          	mulh	a2,a0,a1
90002ed8:	00c0ac23          	sw	a2,24(ra)

90002edc <inst_550>:

inst_550:
// rs1_val==1431655766 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0x55555556, 0xb504, x1, 28, x2)
90002edc:	55555537          	lui	a0,0x55555
90002ee0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002ee4:	0000b5b7          	lui	a1,0xb
90002ee8:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
90002eec:	02b51633          	mulh	a2,a0,a1
90002ef0:	00c0ae23          	sw	a2,28(ra)

90002ef4 <inst_551>:

inst_551:
// rs1_val==1431655766 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x55555556, 0x2, x1, 32, x2)
90002ef4:	55555537          	lui	a0,0x55555
90002ef8:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002efc:	00200593          	li	a1,2
90002f00:	02b51633          	mulh	a2,a0,a1
90002f04:	02c0a023          	sw	a2,32(ra)

90002f08 <inst_552>:

inst_552:
// rs1_val==1431655766 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71c, 0x55555556, 0x55555554, x1, 36, x2)
90002f08:	55555537          	lui	a0,0x55555
90002f0c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002f10:	555555b7          	lui	a1,0x55555
90002f14:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90002f18:	02b51633          	mulh	a2,a0,a1
90002f1c:	02c0a223          	sw	a2,36(ra)

90002f20 <inst_553>:

inst_553:
// rs1_val==1431655766 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x55555556, 0x0, x1, 40, x2)
90002f20:	55555537          	lui	a0,0x55555
90002f24:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002f28:	00000593          	li	a1,0
90002f2c:	02b51633          	mulh	a2,a0,a1
90002f30:	02c0a423          	sw	a2,40(ra)

90002f34 <inst_554>:

inst_554:
// rs1_val==1431655766 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0x1, 0x55555556, 0x4, x1, 44, x2)
90002f34:	55555537          	lui	a0,0x55555
90002f38:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002f3c:	00400593          	li	a1,4
90002f40:	02b51633          	mulh	a2,a0,a1
90002f44:	02c0a623          	sw	a2,44(ra)

90002f48 <inst_555>:

inst_555:
// rs1_val==1431655766 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0x11111110, 0x55555556, 0x33333332, x1, 48, x2)
90002f48:	55555537          	lui	a0,0x55555
90002f4c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002f50:	333335b7          	lui	a1,0x33333
90002f54:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90002f58:	02b51633          	mulh	a2,a0,a1
90002f5c:	02c0a823          	sw	a2,48(ra)

90002f60 <inst_556>:

inst_556:
// rs1_val==1431655766 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0x22222221, 0x55555556, 0x66666665, x1, 52, x2)
90002f60:	55555537          	lui	a0,0x55555
90002f64:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002f68:	666665b7          	lui	a1,0x66666
90002f6c:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90002f70:	02b51633          	mulh	a2,a0,a1
90002f74:	02c0aa23          	sw	a2,52(ra)

90002f78 <inst_557>:

inst_557:
// rs1_val==1431655766 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, 0x55555556, 0xb503, x1, 56, x2)
90002f78:	55555537          	lui	a0,0x55555
90002f7c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002f80:	0000b5b7          	lui	a1,0xb
90002f84:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90002f88:	02b51633          	mulh	a2,a0,a1
90002f8c:	02c0ac23          	sw	a2,56(ra)

90002f90 <inst_558>:

inst_558:
// rs1_val==1431655766 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71c, 0x55555556, 0x55555556, x1, 60, x2)
90002f90:	55555537          	lui	a0,0x55555
90002f94:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002f98:	555555b7          	lui	a1,0x55555
90002f9c:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90002fa0:	02b51633          	mulh	a2,a0,a1
90002fa4:	02c0ae23          	sw	a2,60(ra)

90002fa8 <inst_559>:

inst_559:
// rs1_val==1431655766 and rs2_val==-1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e3, 0x55555556, -0x55555555, x1, 64, x2)
90002fa8:	55555537          	lui	a0,0x55555
90002fac:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002fb0:	aaaab5b7          	lui	a1,0xaaaab
90002fb4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002fb8:	02b51633          	mulh	a2,a0,a1
90002fbc:	04c0a023          	sw	a2,64(ra)

90002fc0 <inst_560>:

inst_560:
// rs1_val==1431655766 and rs2_val==6, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x6
TEST_RR_OP(mulh, x12, x10, x11, 0x2, 0x55555556, 0x6, x1, 68, x2)
90002fc0:	55555537          	lui	a0,0x55555
90002fc4:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002fc8:	00600593          	li	a1,6
90002fcc:	02b51633          	mulh	a2,a0,a1
90002fd0:	04c0a223          	sw	a2,68(ra)

90002fd4 <inst_561>:

inst_561:
// rs1_val==1431655766 and rs2_val==858993460, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333334
TEST_RR_OP(mulh, x12, x10, x11, 0x11111111, 0x55555556, 0x33333334, x1, 72, x2)
90002fd4:	55555537          	lui	a0,0x55555
90002fd8:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002fdc:	333335b7          	lui	a1,0x33333
90002fe0:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x3333328c>
90002fe4:	02b51633          	mulh	a2,a0,a1
90002fe8:	04c0a423          	sw	a2,72(ra)

90002fec <inst_562>:

inst_562:
// rs1_val==1431655766 and rs2_val==1717986919, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666667
TEST_RR_OP(mulh, x12, x10, x11, 0x22222222, 0x55555556, 0x66666667, x1, 76, x2)
90002fec:	55555537          	lui	a0,0x55555
90002ff0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90002ff4:	666665b7          	lui	a1,0x66666
90002ff8:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x666665bf>
90002ffc:	02b51633          	mulh	a2,a0,a1
90003000:	04c0a623          	sw	a2,76(ra)

90003004 <inst_563>:

inst_563:
// rs1_val==1431655766 and rs2_val==-46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, 0x55555556, -0xb503, x1, 80, x2)
90003004:	55555537          	lui	a0,0x55555
90003008:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
9000300c:	ffff55b7          	lui	a1,0xffff5
90003010:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90003014:	02b51633          	mulh	a2,a0,a1
90003018:	04c0a823          	sw	a2,80(ra)

9000301c <inst_564>:

inst_564:
// rs1_val==1431655766 and rs2_val==46341, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb505
TEST_RR_OP(mulh, x12, x10, x11, 0x3c57, 0x55555556, 0xb505, x1, 84, x2)
9000301c:	55555537          	lui	a0,0x55555
90003020:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ae>
90003024:	0000b5b7          	lui	a1,0xb
90003028:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb45d>
9000302c:	02b51633          	mulh	a2,a0,a1
90003030:	04c0aa23          	sw	a2,84(ra)

90003034 <inst_565>:

inst_565:
// rs1_val==-1431655765 and rs2_val==3, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x3
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0x55555555, 0x3, x1, 88, x2)
90003034:	aaaab537          	lui	a0,0xaaaab
90003038:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000303c:	00300593          	li	a1,3
90003040:	02b51633          	mulh	a2,a0,a1
90003044:	04c0ac23          	sw	a2,88(ra)

90003048 <inst_566>:

inst_566:
// rs1_val==-1431655765 and rs2_val==1431655765, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555555
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e3, -0x55555555, 0x55555555, x1, 92, x2)
90003048:	aaaab537          	lui	a0,0xaaaab
9000304c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003050:	555555b7          	lui	a1,0x55555
90003054:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x555554ad>
90003058:	02b51633          	mulh	a2,a0,a1
9000305c:	04c0ae23          	sw	a2,92(ra)

90003060 <inst_567>:

inst_567:
// rs1_val==-1431655765 and rs2_val==-1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0x1c71c71c, -0x55555555, -0x55555556, x1, 96, x2)
90003060:	aaaab537          	lui	a0,0xaaaab
90003064:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003068:	aaaab5b7          	lui	a1,0xaaaab
9000306c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90003070:	02b51633          	mulh	a2,a0,a1
90003074:	06c0a023          	sw	a2,96(ra)

90003078 <inst_568>:

inst_568:
// rs1_val==-1431655765 and rs2_val==5, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x5
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, -0x55555555, 0x5, x1, 100, x2)
90003078:	aaaab537          	lui	a0,0xaaaab
9000307c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003080:	00500593          	li	a1,5
90003084:	02b51633          	mulh	a2,a0,a1
90003088:	06c0a223          	sw	a2,100(ra)

9000308c <inst_569>:

inst_569:
// rs1_val==-1431655765 and rs2_val==858993459, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333333
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeef, -0x55555555, 0x33333333, x1, 104, x2)
9000308c:	aaaab537          	lui	a0,0xaaaab
90003090:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003094:	333335b7          	lui	a1,0x33333
90003098:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333328b>
9000309c:	02b51633          	mulh	a2,a0,a1
900030a0:	06c0a423          	sw	a2,104(ra)

900030a4 <inst_570>:

inst_570:
// rs1_val==-1431655765 and rs2_val==1717986918, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666666
TEST_RR_OP(mulh, x12, x10, x11, 0xddddddde, -0x55555555, 0x66666666, x1, 108, x2)
900030a4:	aaaab537          	lui	a0,0xaaaab
900030a8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030ac:	666665b7          	lui	a1,0x66666
900030b0:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x666665be>
900030b4:	02b51633          	mulh	a2,a0,a1
900030b8:	06c0a623          	sw	a2,108(ra)

900030bc <inst_571>:

inst_571:
// rs1_val==-1431655765 and rs2_val==-46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0x3c56, -0x55555555, -0xb504, x1, 112, x2)
900030bc:	aaaab537          	lui	a0,0xaaaab
900030c0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030c4:	ffff55b7          	lui	a1,0xffff5
900030c8:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
900030cc:	02b51633          	mulh	a2,a0,a1
900030d0:	06c0a823          	sw	a2,112(ra)

900030d4 <inst_572>:

inst_572:
// rs1_val==-1431655765 and rs2_val==46340, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb504
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, -0x55555555, 0xb504, x1, 116, x2)
900030d4:	aaaab537          	lui	a0,0xaaaab
900030d8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030dc:	0000b5b7          	lui	a1,0xb
900030e0:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb45c>
900030e4:	02b51633          	mulh	a2,a0,a1
900030e8:	06c0aa23          	sw	a2,116(ra)

900030ec <inst_573>:

inst_573:
// rs1_val==-1431655765 and rs2_val==2, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x2
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, -0x55555555, 0x2, x1, 120, x2)
900030ec:	aaaab537          	lui	a0,0xaaaab
900030f0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030f4:	00200593          	li	a1,2
900030f8:	02b51633          	mulh	a2,a0,a1
900030fc:	06c0ac23          	sw	a2,120(ra)

90003100 <inst_574>:

inst_574:
// rs1_val==-1431655765 and rs2_val==1431655764, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555554
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e4, -0x55555555, 0x55555554, x1, 124, x2)
90003100:	aaaab537          	lui	a0,0xaaaab
90003104:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003108:	555555b7          	lui	a1,0x55555
9000310c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x555554ac>
90003110:	02b51633          	mulh	a2,a0,a1
90003114:	06c0ae23          	sw	a2,124(ra)

90003118 <inst_575>:

inst_575:
// rs1_val==-1431655765 and rs2_val==0, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x0
TEST_RR_OP(mulh, x12, x10, x11, 0x0, -0x55555555, 0x0, x1, 128, x2)
90003118:	aaaab537          	lui	a0,0xaaaab
9000311c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003120:	00000593          	li	a1,0
90003124:	02b51633          	mulh	a2,a0,a1
90003128:	08c0a023          	sw	a2,128(ra)

9000312c <inst_576>:

inst_576:
// rs1_val==-1431655765 and rs2_val==4, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x4
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffe, -0x55555555, 0x4, x1, 132, x2)
9000312c:	aaaab537          	lui	a0,0xaaaab
90003130:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003134:	00400593          	li	a1,4
90003138:	02b51633          	mulh	a2,a0,a1
9000313c:	08c0a223          	sw	a2,132(ra)

90003140 <inst_577>:

inst_577:
// rs1_val==-1431655765 and rs2_val==858993458, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333332
TEST_RR_OP(mulh, x12, x10, x11, 0xeeeeeeef, -0x55555555, 0x33333332, x1, 136, x2)
90003140:	aaaab537          	lui	a0,0xaaaab
90003144:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003148:	333335b7          	lui	a1,0x33333
9000314c:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333328a>
90003150:	02b51633          	mulh	a2,a0,a1
90003154:	08c0a423          	sw	a2,136(ra)

90003158 <inst_578>:

inst_578:
// rs1_val==-1431655765 and rs2_val==1717986917, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666665
TEST_RR_OP(mulh, x12, x10, x11, 0xddddddde, -0x55555555, 0x66666665, x1, 140, x2)
90003158:	aaaab537          	lui	a0,0xaaaab
9000315c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003160:	666665b7          	lui	a1,0x66666
90003164:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x666665bd>
90003168:	02b51633          	mulh	a2,a0,a1
9000316c:	08c0a623          	sw	a2,140(ra)

90003170 <inst_579>:

inst_579:
// rs1_val==-1431655765 and rs2_val==46339, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb503
TEST_RR_OP(mulh, x12, x10, x11, 0xffffc3a9, -0x55555555, 0xb503, x1, 144, x2)
90003170:	aaaab537          	lui	a0,0xaaaab
90003174:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003178:	0000b5b7          	lui	a1,0xb
9000317c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb45b>
90003180:	02b51633          	mulh	a2,a0,a1
90003184:	08c0a823          	sw	a2,144(ra)

90003188 <inst_580>:

inst_580:
// rs1_val==-1431655765 and rs2_val==1431655766, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555556
TEST_RR_OP(mulh, x12, x10, x11, 0xe38e38e3, -0x55555555, 0x55555556, x1, 148, x2)
90003188:	aaaab537          	lui	a0,0xaaaab
9000318c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003190:	555555b7          	lui	a1,0x55555
90003194:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x555554ae>
90003198:	02b51633          	mulh	a2,a0,a1
9000319c:	08c0aa23          	sw	a2,148(ra)

900031a0 <inst_581>:

inst_581:
// rs1_val > 0 and rs2_val < 0, rs2_val == -2
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0x2
TEST_RR_OP(mulh, x12, x10, x11, 0xffffffff, 0x33333332, -0x2, x1, 152, x2)
900031a0:	33333537          	lui	a0,0x33333
900031a4:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x3333328a>
900031a8:	ffe00593          	li	a1,-2
900031ac:	02b51633          	mulh	a2,a0,a1
900031b0:	08c0ac23          	sw	a2,152(ra)

900031b4 <inst_582>:

inst_582:
// rs2_val == (2**(xlen-1)-1), rs1_val == -5, rs2_val == 2147483647
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:-0x5;  op2val:0x7fffffff
TEST_RR_OP(mulh, x12, x10, x11, 0xfffffffd, -0x5, 0x7fffffff, x1, 156, x2)
900031b4:	ffb00513          	li	a0,-5
900031b8:	800005b7          	lui	a1,0x80000
900031bc:	fff58593          	addi	a1,a1,-1 # 7fffffff <_end+0xefffa4fb>
900031c0:	02b51633          	mulh	a2,a0,a1
900031c4:	08c0ae23          	sw	a2,156(ra)

900031c8 <inst_583>:

inst_583:
// rs2_val == 8192, 
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x2000
TEST_RR_OP(mulh, x12, x10, x11, 0x0, 0x5, 0x2000, x1, 160, x2)
900031c8:	00500513          	li	a0,5
900031cc:	000025b7          	lui	a1,0x2
900031d0:	02b51633          	mulh	a2,a0,a1
900031d4:	0ac0a023          	sw	a2,160(ra)

900031d8 <inst_584>:

inst_584:
// rs2_val == 131072, rs1_val == 33554432
// opcode: mulh ; op1:x10; op2:x11; dest:x12; op1val:0x2000000;  op2val:0x20000
TEST_RR_OP(mulh, x12, x10, x11, 0x400, 0x2000000, 0x20000, x1, 164, x2)
900031d8:	02000537          	lui	a0,0x2000
900031dc:	000205b7          	lui	a1,0x20
900031e0:	02b51633          	mulh	a2,a0,a1
900031e4:	0ac0a223          	sw	a2,164(ra)
900031e8:	00000013          	nop
900031ec:	00000013          	nop

900031f0 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
900031f0:	00408093          	addi	ra,ra,4
900031f4:	00100093          	li	ra,1

900031f8 <write_tohost>:
900031f8:	00001f17          	auipc	t5,0x1
900031fc:	e01f2423          	sw	ra,-504(t5) # 90004000 <tohost>

90003200 <self_loop>:
90003200:	0000006f          	j	90003200 <self_loop>
	...
