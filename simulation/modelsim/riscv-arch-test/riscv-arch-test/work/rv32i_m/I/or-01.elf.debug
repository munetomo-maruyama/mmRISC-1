
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/I/or-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed63a9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f768452>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6ecb>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd5cd1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00005317          	auipc	t1,0x5
9000002c:	fd830313          	addi	t1,t1,-40 # 90005000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb5bf6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfdda9d>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfe92ba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff75ff>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f606b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bf82b3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adf93d7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656f9c69>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7a0b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfcfb>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eada3e9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56a472>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7edb>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d564d9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4bea84ea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56f17>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa5cf7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d00f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe52fa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df561f>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f507b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db77abb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edb8fdb>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676d9a6b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb69fb3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*);def TEST_CASE_1=True;",or)

RVTEST_SIGBASE( x3,signature_x3_1)
900000f8:	00005197          	auipc	gp,0x5
900000fc:	f1818193          	addi	gp,gp,-232 # 90005010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rs2 == rd != rs1, rs1==x8, rs2==x26, rd==x26, rs1_val > 0 and rs2_val > 0, rs2_val == 16, rs1_val == 1048576, rs1_val != rs2_val
// opcode: or ; op1:x8; op2:x26; dest:x26; op1val:0x100000;  op2val:0x10
TEST_RR_OP(or, x26, x8, x26, 0x100010, 0x100000, 0x10, x3, 0, x5)
90000100:	00100437          	lui	s0,0x100
90000104:	01000d13          	li	s10,16
90000108:	01a46d33          	or	s10,s0,s10
9000010c:	01a1a023          	sw	s10,0(gp)

90000110 <inst_1>:

inst_1:
// rs1 == rs2 != rd, rs1==x6, rs2==x6, rd==x17, rs1_val > 0 and rs2_val < 0, rs2_val == -2049, rs1_val == 2
// opcode: or ; op1:x6; op2:x6; dest:x17; op1val:0x2;  op2val:0x2
TEST_RR_OP(or, x17, x6, x6, 0x2, 0x2, 0x2, x3, 4, x5)
90000110:	00200313          	li	t1,2
90000114:	00200313          	li	t1,2
90000118:	006368b3          	or	a7,t1,t1
9000011c:	0111a223          	sw	a7,4(gp)

90000120 <inst_2>:

inst_2:
// rs1 == rs2 == rd, rs1==x31, rs2==x31, rd==x31, rs1_val < 0 and rs2_val < 0, rs1_val == -268435457, rs2_val == -1025
// opcode: or ; op1:x31; op2:x31; dest:x31; op1val:-0x10000001;  op2val:-0x10000001
TEST_RR_OP(or, x31, x31, x31, 0xefffffff, -0x10000001, -0x10000001, x3, 8, x5)
90000120:	f0000fb7          	lui	t6,0xf0000
90000124:	ffff8f93          	addi	t6,t6,-1 # efffffff <_end+0x5fffa4fb>
90000128:	f0000fb7          	lui	t6,0xf0000
9000012c:	ffff8f93          	addi	t6,t6,-1 # efffffff <_end+0x5fffa4fb>
90000130:	01ffefb3          	or	t6,t6,t6
90000134:	01f1a423          	sw	t6,8(gp)

90000138 <inst_3>:

inst_3:
// rs1 == rd != rs2, rs1==x27, rs2==x29, rd==x27, rs1_val < 0 and rs2_val > 0, rs1_val == -2049, rs2_val == 4194304
// opcode: or ; op1:x27; op2:x29; dest:x27; op1val:-0x801;  op2val:0x400000
TEST_RR_OP(or, x27, x27, x29, 0xfffff7ff, -0x801, 0x400000, x3, 12, x5)
90000138:	fffffdb7          	lui	s11,0xfffff
9000013c:	7ffd8d93          	addi	s11,s11,2047 # fffff7ff <_end+0x6fff9cfb>
90000140:	00400eb7          	lui	t4,0x400
90000144:	01ddedb3          	or	s11,s11,t4
90000148:	01b1a623          	sw	s11,12(gp)

9000014c <inst_4>:

inst_4:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x30, rs2==x19, rd==x18, rs1_val == rs2_val, rs2_val == -1048577, rs1_val == -1048577
// opcode: or ; op1:x30; op2:x19; dest:x18; op1val:-0x100001;  op2val:-0x100001
TEST_RR_OP(or, x18, x30, x19, 0xffefffff, -0x100001, -0x100001, x3, 16, x5)
9000014c:	fff00f37          	lui	t5,0xfff00
90000150:	ffff0f13          	addi	t5,t5,-1 # ffefffff <_end+0x6fefa4fb>
90000154:	fff009b7          	lui	s3,0xfff00
90000158:	fff98993          	addi	s3,s3,-1 # ffefffff <_end+0x6fefa4fb>
9000015c:	013f6933          	or	s2,t5,s3
90000160:	0121a823          	sw	s2,16(gp)

90000164 <inst_5>:

inst_5:
// rs1==x21, rs2==x14, rd==x9, rs2_val == (-2**(xlen-1)), rs2_val == -2147483648, rs1_val == 131072
// opcode: or ; op1:x21; op2:x14; dest:x9; op1val:0x20000;  op2val:-0x80000000
TEST_RR_OP(or, x9, x21, x14, 0x80020000, 0x20000, -0x80000000, x3, 20, x5)
90000164:	00020ab7          	lui	s5,0x20
90000168:	80000737          	lui	a4,0x80000
9000016c:	00eae4b3          	or	s1,s5,a4
90000170:	0091aa23          	sw	s1,20(gp)

90000174 <inst_6>:

inst_6:
// rs1==x26, rs2==x24, rd==x4, rs2_val == 0, rs1_val == -8193
// opcode: or ; op1:x26; op2:x24; dest:x4; op1val:-0x2001;  op2val:0x0
TEST_RR_OP(or, x4, x26, x24, 0xffffdfff, -0x2001, 0x0, x3, 24, x5)
90000174:	ffffed37          	lui	s10,0xffffe
90000178:	fffd0d13          	addi	s10,s10,-1 # ffffdfff <_end+0x6fff84fb>
9000017c:	00000c13          	li	s8,0
90000180:	018d6233          	or	tp,s10,s8
90000184:	0041ac23          	sw	tp,24(gp)

90000188 <inst_7>:

inst_7:
// rs1==x9, rs2==x8, rd==x30, rs2_val == (2**(xlen-1)-1), rs1_val == 0, rs2_val == 2147483647
// opcode: or ; op1:x9; op2:x8; dest:x30; op1val:0x0;  op2val:0x7fffffff
TEST_RR_OP(or, x30, x9, x8, 0x7fffffff, 0x0, 0x7fffffff, x3, 28, x5)
90000188:	00000493          	li	s1,0
9000018c:	80000437          	lui	s0,0x80000
90000190:	fff40413          	addi	s0,s0,-1 # 7fffffff <_end+0xefffa4fb>
90000194:	0084ef33          	or	t5,s1,s0
90000198:	01e1ae23          	sw	t5,28(gp)

9000019c <inst_8>:

inst_8:
// rs1==x23, rs2==x7, rd==x8, rs2_val == 1, rs1_val == -8388609
// opcode: or ; op1:x23; op2:x7; dest:x8; op1val:-0x800001;  op2val:0x1
TEST_RR_OP(or, x8, x23, x7, 0xff7fffff, -0x800001, 0x1, x3, 32, x5)
9000019c:	ff800bb7          	lui	s7,0xff800
900001a0:	fffb8b93          	addi	s7,s7,-1 # ff7fffff <_end+0x6f7fa4fb>
900001a4:	00100393          	li	t2,1
900001a8:	007be433          	or	s0,s7,t2
900001ac:	0281a023          	sw	s0,32(gp)

900001b0 <inst_9>:

inst_9:
// rs1==x12, rs2==x0, rd==x22, rs1_val == (-2**(xlen-1)), rs1_val == -2147483648
// opcode: or ; op1:x12; op2:x0; dest:x22; op1val:-0x80000000;  op2val:0x0
TEST_RR_OP(or, x22, x12, x0, 0x80000000, -0x80000000, 0x0, x3, 36, x5)
900001b0:	80000637          	lui	a2,0x80000
900001b4:	00000013          	nop
900001b8:	00066b33          	or	s6,a2,zero
900001bc:	0361a223          	sw	s6,36(gp)

900001c0 <inst_10>:

inst_10:
// rs1==x10, rs2==x30, rd==x28, rs1_val == (2**(xlen-1)-1), rs2_val == 64, rs1_val == 2147483647
// opcode: or ; op1:x10; op2:x30; dest:x28; op1val:0x7fffffff;  op2val:0x40
TEST_RR_OP(or, x28, x10, x30, 0x7fffffff, 0x7fffffff, 0x40, x3, 40, x5)
900001c0:	80000537          	lui	a0,0x80000
900001c4:	fff50513          	addi	a0,a0,-1 # 7fffffff <_end+0xefffa4fb>
900001c8:	04000f13          	li	t5,64
900001cc:	01e56e33          	or	t3,a0,t5
900001d0:	03c1a423          	sw	t3,40(gp)

900001d4 <inst_11>:

inst_11:
// rs1==x18, rs2==x21, rd==x16, rs1_val == 1, 
// opcode: or ; op1:x18; op2:x21; dest:x16; op1val:0x1;  op2val:0x55555554
TEST_RR_OP(or, x16, x18, x21, 0x55555555, 0x1, 0x55555554, x3, 44, x5)
900001d4:	00100913          	li	s2,1
900001d8:	55555ab7          	lui	s5,0x55555
900001dc:	554a8a93          	addi	s5,s5,1364 # 55555554 <offset+0x55555474>
900001e0:	01596833          	or	a6,s2,s5
900001e4:	0301a623          	sw	a6,44(gp)

900001e8 <inst_12>:

inst_12:
// rs1==x14, rs2==x17, rd==x12, rs2_val == 2, rs1_val == 4096
// opcode: or ; op1:x14; op2:x17; dest:x12; op1val:0x1000;  op2val:0x2
TEST_RR_OP(or, x12, x14, x17, 0x1002, 0x1000, 0x2, x3, 48, x5)
900001e8:	00001737          	lui	a4,0x1
900001ec:	00200893          	li	a7,2
900001f0:	01176633          	or	a2,a4,a7
900001f4:	02c1a823          	sw	a2,48(gp)

900001f8 <inst_13>:

inst_13:
// rs1==x19, rs2==x16, rd==x15, rs2_val == 4, 
// opcode: or ; op1:x19; op2:x16; dest:x15; op1val:-0x800001;  op2val:0x4
TEST_RR_OP(or, x15, x19, x16, 0xff7fffff, -0x800001, 0x4, x3, 52, x5)
900001f8:	ff8009b7          	lui	s3,0xff800
900001fc:	fff98993          	addi	s3,s3,-1 # ff7fffff <_end+0x6f7fa4fb>
90000200:	00400813          	li	a6,4
90000204:	0109e7b3          	or	a5,s3,a6
90000208:	02f1aa23          	sw	a5,52(gp)

9000020c <inst_14>:

inst_14:
// rs1==x4, rs2==x2, rd==x7, rs2_val == 8, rs1_val == -1025
// opcode: or ; op1:x4; op2:x2; dest:x7; op1val:-0x401;  op2val:0x8
TEST_RR_OP(or, x7, x4, x2, 0xfffffbff, -0x401, 0x8, x3, 56, x5)
9000020c:	bff00213          	li	tp,-1025
90000210:	00800113          	li	sp,8
90000214:	002263b3          	or	t2,tp,sp
90000218:	0271ac23          	sw	t2,56(gp)

9000021c <inst_15>:

inst_15:
// rs1==x2, rs2==x22, rd==x11, rs2_val == 32, 
// opcode: or ; op1:x2; op2:x22; dest:x11; op1val:0x7fffffff;  op2val:0x20
TEST_RR_OP(or, x11, x2, x22, 0x7fffffff, 0x7fffffff, 0x20, x3, 60, x5)
9000021c:	80000137          	lui	sp,0x80000
90000220:	fff10113          	addi	sp,sp,-1 # 7fffffff <_end+0xefffa4fb>
90000224:	02000b13          	li	s6,32
90000228:	016165b3          	or	a1,sp,s6
9000022c:	02b1ae23          	sw	a1,60(gp)

90000230 <inst_16>:

inst_16:
// rs1==x28, rs2==x15, rd==x25, rs2_val == 128, rs1_val == -513
// opcode: or ; op1:x28; op2:x15; dest:x25; op1val:-0x201;  op2val:0x80
TEST_RR_OP(or, x25, x28, x15, 0xfffffdff, -0x201, 0x80, x3, 64, x5)
90000230:	dff00e13          	li	t3,-513
90000234:	08000793          	li	a5,128
90000238:	00fe6cb3          	or	s9,t3,a5
9000023c:	0591a023          	sw	s9,64(gp)

90000240 <inst_17>:

inst_17:
// rs1==x25, rs2==x1, rd==x6, rs2_val == 256, 
// opcode: or ; op1:x25; op2:x1; dest:x6; op1val:0xb504;  op2val:0x100
TEST_RR_OP(or, x6, x25, x1, 0xb504, 0xb504, 0x100, x3, 68, x5)
90000240:	0000bcb7          	lui	s9,0xb
90000244:	504c8c93          	addi	s9,s9,1284 # b504 <offset+0xb424>
90000248:	10000093          	li	ra,256
9000024c:	001ce333          	or	t1,s9,ra
90000250:	0461a223          	sw	t1,68(gp)

90000254 <inst_18>:

inst_18:
// rs1==x17, rs2==x10, rd==x20, rs2_val == 512, rs1_val == 4
// opcode: or ; op1:x17; op2:x10; dest:x20; op1val:0x4;  op2val:0x200
TEST_RR_OP(or, x20, x17, x10, 0x204, 0x4, 0x200, x3, 72, x8)
90000254:	00400893          	li	a7,4
90000258:	20000513          	li	a0,512
9000025c:	00a8ea33          	or	s4,a7,a0
90000260:	0541a423          	sw	s4,72(gp)
RVTEST_SIGBASE( x6,signature_x6_0)
90000264:	00005317          	auipc	t1,0x5
90000268:	df830313          	addi	t1,t1,-520 # 9000505c <signature_x6_0>

9000026c <inst_19>:

inst_19:
// rs1==x20, rs2==x23, rd==x5, rs2_val == 1024, 
// opcode: or ; op1:x20; op2:x23; dest:x5; op1val:-0x100001;  op2val:0x400
TEST_RR_OP(or, x5, x20, x23, 0xffefffff, -0x100001, 0x400, x6, 0, x8)
9000026c:	fff00a37          	lui	s4,0xfff00
90000270:	fffa0a13          	addi	s4,s4,-1 # ffefffff <_end+0x6fefa4fb>
90000274:	40000b93          	li	s7,1024
90000278:	017a62b3          	or	t0,s4,s7
9000027c:	00532023          	sw	t0,0(t1)

90000280 <inst_20>:

inst_20:
// rs1==x11, rs2==x12, rd==x2, rs2_val == 2048, 
// opcode: or ; op1:x11; op2:x12; dest:x2; op1val:0x0;  op2val:0x800
TEST_RR_OP(or, x2, x11, x12, 0x800, 0x0, 0x800, x6, 4, x8)
90000280:	00000593          	li	a1,0
90000284:	00001637          	lui	a2,0x1
90000288:	80060613          	addi	a2,a2,-2048 # 800 <offset+0x720>
9000028c:	00c5e133          	or	sp,a1,a2
90000290:	00232223          	sw	sp,4(t1)

90000294 <inst_21>:

inst_21:
// rs1==x13, rs2==x20, rd==x1, rs2_val == 4096, rs1_val == -67108865
// opcode: or ; op1:x13; op2:x20; dest:x1; op1val:-0x4000001;  op2val:0x1000
TEST_RR_OP(or, x1, x13, x20, 0xfbffffff, -0x4000001, 0x1000, x6, 8, x8)
90000294:	fc0006b7          	lui	a3,0xfc000
90000298:	fff68693          	addi	a3,a3,-1 # fbffffff <_end+0x6bffa4fb>
9000029c:	00001a37          	lui	s4,0x1
900002a0:	0146e0b3          	or	ra,a3,s4
900002a4:	00132423          	sw	ra,8(t1)

900002a8 <inst_22>:

inst_22:
// rs1==x15, rs2==x27, rd==x3, rs2_val == 8192, 
// opcode: or ; op1:x15; op2:x27; dest:x3; op1val:0x4;  op2val:0x2000
TEST_RR_OP(or, x3, x15, x27, 0x2004, 0x4, 0x2000, x6, 12, x8)
900002a8:	00400793          	li	a5,4
900002ac:	00002db7          	lui	s11,0x2
900002b0:	01b7e1b3          	or	gp,a5,s11
900002b4:	00332623          	sw	gp,12(t1)

900002b8 <inst_23>:

inst_23:
// rs1==x22, rs2==x4, rd==x21, rs2_val == 16384, rs1_val == -65537
// opcode: or ; op1:x22; op2:x4; dest:x21; op1val:-0x10001;  op2val:0x4000
TEST_RR_OP(or, x21, x22, x4, 0xfffeffff, -0x10001, 0x4000, x6, 16, x8)
900002b8:	ffff0b37          	lui	s6,0xffff0
900002bc:	fffb0b13          	addi	s6,s6,-1 # fffeffff <_end+0x6ffea4fb>
900002c0:	00004237          	lui	tp,0x4
900002c4:	004b6ab3          	or	s5,s6,tp
900002c8:	01532823          	sw	s5,16(t1)

900002cc <inst_24>:

inst_24:
// rs1==x7, rs2==x13, rd==x19, rs2_val == 32768, rs1_val == 524288
// opcode: or ; op1:x7; op2:x13; dest:x19; op1val:0x80000;  op2val:0x8000
TEST_RR_OP(or, x19, x7, x13, 0x88000, 0x80000, 0x8000, x6, 20, x8)
900002cc:	000803b7          	lui	t2,0x80
900002d0:	000086b7          	lui	a3,0x8
900002d4:	00d3e9b3          	or	s3,t2,a3
900002d8:	01332a23          	sw	s3,20(t1)

900002dc <inst_25>:

inst_25:
// rs1==x24, rs2==x5, rd==x14, rs2_val == 65536, 
// opcode: or ; op1:x24; op2:x5; dest:x14; op1val:-0x4;  op2val:0x10000
TEST_RR_OP(or, x14, x24, x5, 0xfffffffc, -0x4, 0x10000, x6, 24, x8)
900002dc:	ffc00c13          	li	s8,-4
900002e0:	000102b7          	lui	t0,0x10
900002e4:	005c6733          	or	a4,s8,t0
900002e8:	00e32c23          	sw	a4,24(t1)

900002ec <inst_26>:

inst_26:
// rs1==x16, rs2==x18, rd==x10, rs2_val == 131072, rs1_val == 1431655765
// opcode: or ; op1:x16; op2:x18; dest:x10; op1val:0x55555555;  op2val:0x20000
TEST_RR_OP(or, x10, x16, x18, 0x55575555, 0x55555555, 0x20000, x6, 28, x8)
900002ec:	55555837          	lui	a6,0x55555
900002f0:	55580813          	addi	a6,a6,1365 # 55555555 <offset+0x55555475>
900002f4:	00020937          	lui	s2,0x20
900002f8:	01286533          	or	a0,a6,s2
900002fc:	00a32e23          	sw	a0,28(t1)

90000300 <inst_27>:

inst_27:
// rs1==x1, rs2==x9, rd==x23, rs2_val == 262144, 
// opcode: or ; op1:x1; op2:x9; dest:x23; op1val:-0xb504;  op2val:0x40000
TEST_RR_OP(or, x23, x1, x9, 0xffff4afc, -0xb504, 0x40000, x6, 32, x8)
90000300:	ffff50b7          	lui	ra,0xffff5
90000304:	afc08093          	addi	ra,ra,-1284 # ffff4afc <_end+0x6ffeeff8>
90000308:	000404b7          	lui	s1,0x40
9000030c:	0090ebb3          	or	s7,ra,s1
90000310:	03732023          	sw	s7,32(t1)

90000314 <inst_28>:

inst_28:
// rs1==x3, rs2==x11, rd==x29, rs2_val == 524288, 
// opcode: or ; op1:x3; op2:x11; dest:x29; op1val:0x4;  op2val:0x80000
TEST_RR_OP(or, x29, x3, x11, 0x80004, 0x4, 0x80000, x6, 36, x8)
90000314:	00400193          	li	gp,4
90000318:	000805b7          	lui	a1,0x80
9000031c:	00b1eeb3          	or	t4,gp,a1
90000320:	03d32223          	sw	t4,36(t1)

90000324 <inst_29>:

inst_29:
// rs1==x29, rs2==x28, rd==x13, rs2_val == 1048576, rs1_val == -4097
// opcode: or ; op1:x29; op2:x28; dest:x13; op1val:-0x1001;  op2val:0x100000
TEST_RR_OP(or, x13, x29, x28, 0xffffefff, -0x1001, 0x100000, x6, 40, x8)
90000324:	fffffeb7          	lui	t4,0xfffff
90000328:	fffe8e93          	addi	t4,t4,-1 # ffffefff <_end+0x6fff94fb>
9000032c:	00100e37          	lui	t3,0x100
90000330:	01cee6b3          	or	a3,t4,t3
90000334:	02d32423          	sw	a3,40(t1)

90000338 <inst_30>:

inst_30:
// rs1==x5, rs2==x3, rd==x0, rs2_val == 2097152, 
// opcode: or ; op1:x5; op2:x3; dest:x0; op1val:0x33333332;  op2val:0x200000
TEST_RR_OP(or, x0, x5, x3, 0, 0x33333332, 0x200000, x6, 44, x8)
90000338:	333332b7          	lui	t0,0x33333
9000033c:	33228293          	addi	t0,t0,818 # 33333332 <offset+0x33333252>
90000340:	002001b7          	lui	gp,0x200
90000344:	0032e033          	or	zero,t0,gp
90000348:	02032623          	sw	zero,44(t1)

9000034c <inst_31>:

inst_31:
// rs1==x0, rs2==x25, rd==x24, rs2_val == 8388608, 
// opcode: or ; op1:x0; op2:x25; dest:x24; op1val:0x0;  op2val:0x800000
TEST_RR_OP(or, x24, x0, x25, 0x800000, 0x0, 0x800000, x6, 48, x8)
9000034c:	00000013          	nop
90000350:	00800cb7          	lui	s9,0x800
90000354:	01906c33          	or	s8,zero,s9
90000358:	03832823          	sw	s8,48(t1)

9000035c <inst_32>:

inst_32:
// rs2_val == 16777216, rs1_val == 64
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x40;  op2val:0x1000000
TEST_RR_OP(or, x12, x10, x11, 0x1000040, 0x40, 0x1000000, x6, 52, x8)
9000035c:	04000513          	li	a0,64
90000360:	010005b7          	lui	a1,0x1000
90000364:	00b56633          	or	a2,a0,a1
90000368:	02c32a23          	sw	a2,52(t1)

9000036c <inst_33>:

inst_33:
// rs2_val == 33554432, rs1_val == -9
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x9;  op2val:0x2000000
TEST_RR_OP(or, x12, x10, x11, 0xfffffff7, -0x9, 0x2000000, x6, 56, x8)
9000036c:	ff700513          	li	a0,-9
90000370:	020005b7          	lui	a1,0x2000
90000374:	00b56633          	or	a2,a0,a1
90000378:	02c32c23          	sw	a2,56(t1)

9000037c <inst_34>:

inst_34:
// rs2_val == 67108864, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x4000000
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x4000000, x6, 60, x8)
9000037c:	55555537          	lui	a0,0x55555
90000380:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90000384:	040005b7          	lui	a1,0x4000
90000388:	00b56633          	or	a2,a0,a1
9000038c:	02c32e23          	sw	a2,60(t1)

90000390 <inst_35>:

inst_35:
// rs2_val == 134217728, rs1_val == 16777216
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x1000000;  op2val:0x8000000
TEST_RR_OP(or, x12, x10, x11, 0x9000000, 0x1000000, 0x8000000, x6, 64, x8)
90000390:	01000537          	lui	a0,0x1000
90000394:	080005b7          	lui	a1,0x8000
90000398:	00b56633          	or	a2,a0,a1
9000039c:	04c32023          	sw	a2,64(t1)

900003a0 <inst_36>:

inst_36:
// rs2_val == 268435456, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x6;  op2val:0x10000000
TEST_RR_OP(or, x12, x10, x11, 0xfffffffa, -0x6, 0x10000000, x6, 68, x8)
900003a0:	ffa00513          	li	a0,-6
900003a4:	100005b7          	lui	a1,0x10000
900003a8:	00b56633          	or	a2,a0,a1
900003ac:	04c32223          	sw	a2,68(t1)

900003b0 <inst_37>:

inst_37:
// rs2_val == 536870912, rs1_val == -1431655766
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x20000000
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, -0x55555556, 0x20000000, x6, 72, x8)
900003b0:	aaaab537          	lui	a0,0xaaaab
900003b4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900003b8:	200005b7          	lui	a1,0x20000
900003bc:	00b56633          	or	a2,a0,a1
900003c0:	04c32423          	sw	a2,72(t1)

900003c4 <inst_38>:

inst_38:
// rs2_val == 1073741824, rs1_val == 8388608
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x800000;  op2val:0x40000000
TEST_RR_OP(or, x12, x10, x11, 0x40800000, 0x800000, 0x40000000, x6, 76, x8)
900003c4:	00800537          	lui	a0,0x800
900003c8:	400005b7          	lui	a1,0x40000
900003cc:	00b56633          	or	a2,a0,a1
900003d0:	04c32623          	sw	a2,76(t1)

900003d4 <inst_39>:

inst_39:
// rs2_val == -2, rs1_val == 32
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x20;  op2val:-0x2
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, 0x20, -0x2, x6, 80, x8)
900003d4:	02000513          	li	a0,32
900003d8:	ffe00593          	li	a1,-2
900003dc:	00b56633          	or	a2,a0,a1
900003e0:	04c32823          	sw	a2,80(t1)

900003e4 <inst_40>:

inst_40:
// rs2_val == -3, rs1_val == 268435456
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x10000000;  op2val:-0x3
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, 0x10000000, -0x3, x6, 84, x8)
900003e4:	10000537          	lui	a0,0x10000
900003e8:	ffd00593          	li	a1,-3
900003ec:	00b56633          	or	a2,a0,a1
900003f0:	04c32a23          	sw	a2,84(t1)

900003f4 <inst_41>:

inst_41:
// rs2_val == -5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:-0x5
TEST_RR_OP(or, x12, x10, x11, 0xfffffffb, 0x1, -0x5, x6, 88, x8)
900003f4:	00100513          	li	a0,1
900003f8:	ffb00593          	li	a1,-5
900003fc:	00b56633          	or	a2,a0,a1
90000400:	04c32c23          	sw	a2,88(t1)

90000404 <inst_42>:

inst_42:
// rs2_val == -9, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x80000;  op2val:-0x9
TEST_RR_OP(or, x12, x10, x11, 0xfffffff7, 0x80000, -0x9, x6, 92, x8)
90000404:	00080537          	lui	a0,0x80
90000408:	ff700593          	li	a1,-9
9000040c:	00b56633          	or	a2,a0,a1
90000410:	04c32e23          	sw	a2,92(t1)

90000414 <inst_43>:

inst_43:
// rs2_val == -17, rs1_val == 8
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x8;  op2val:-0x11
TEST_RR_OP(or, x12, x10, x11, 0xffffffef, 0x8, -0x11, x6, 96, x8)
90000414:	00800513          	li	a0,8
90000418:	fef00593          	li	a1,-17
9000041c:	00b56633          	or	a2,a0,a1
90000420:	06c32023          	sw	a2,96(t1)

90000424 <inst_44>:

inst_44:
// rs2_val == -33, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x21
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0xb504, -0x21, x6, 100, x8)
90000424:	ffff5537          	lui	a0,0xffff5
90000428:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
9000042c:	fdf00593          	li	a1,-33
90000430:	00b56633          	or	a2,a0,a1
90000434:	06c32223          	sw	a2,100(t1)

90000438 <inst_45>:

inst_45:
// rs2_val == -65, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x20000;  op2val:-0x41
TEST_RR_OP(or, x12, x10, x11, 0xffffffbf, 0x20000, -0x41, x6, 104, x8)
90000438:	00020537          	lui	a0,0x20
9000043c:	fbf00593          	li	a1,-65
90000440:	00b56633          	or	a2,a0,a1
90000444:	06c32423          	sw	a2,104(t1)

90000448 <inst_46>:

inst_46:
// rs2_val == -129, rs1_val == -2097153
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x200001;  op2val:-0x81
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x200001, -0x81, x6, 108, x8)
90000448:	ffe00537          	lui	a0,0xffe00
9000044c:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0x6fdfa4fb>
90000450:	f7f00593          	li	a1,-129
90000454:	00b56633          	or	a2,a0,a1
90000458:	06c32623          	sw	a2,108(t1)

9000045c <inst_47>:

inst_47:
// rs2_val == -257, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0x101
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x33333334, -0x101, x6, 112, x8)
9000045c:	33333537          	lui	a0,0x33333
90000460:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90000464:	eff00593          	li	a1,-257
90000468:	00b56633          	or	a2,a0,a1
9000046c:	06c32823          	sw	a2,112(t1)

90000470 <inst_48>:

inst_48:
// rs2_val == -513, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x7fffffff;  op2val:-0x201
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x7fffffff, -0x201, x6, 116, x8)
90000470:	80000537          	lui	a0,0x80000
90000474:	fff50513          	addi	a0,a0,-1 # 7fffffff <_end+0xefffa4fb>
90000478:	dff00593          	li	a1,-513
9000047c:	00b56633          	or	a2,a0,a1
90000480:	06c32a23          	sw	a2,116(t1)

90000484 <inst_49>:

inst_49:
// rs2_val == -4097, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x1001
TEST_RR_OP(or, x12, x10, x11, 0xffffefff, 0x3, -0x1001, x6, 120, x8)
90000484:	00300513          	li	a0,3
90000488:	fffff5b7          	lui	a1,0xfffff
9000048c:	fff58593          	addi	a1,a1,-1 # ffffefff <_end+0x6fff94fb>
90000490:	00b56633          	or	a2,a0,a1
90000494:	06c32c23          	sw	a2,120(t1)

90000498 <inst_50>:

inst_50:
// rs2_val == -8193, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x80000000;  op2val:-0x2001
TEST_RR_OP(or, x12, x10, x11, 0xffffdfff, -0x80000000, -0x2001, x6, 124, x8)
90000498:	80000537          	lui	a0,0x80000
9000049c:	ffffe5b7          	lui	a1,0xffffe
900004a0:	fff58593          	addi	a1,a1,-1 # ffffdfff <_end+0x6fff84fb>
900004a4:	00b56633          	or	a2,a0,a1
900004a8:	06c32e23          	sw	a2,124(t1)

900004ac <inst_51>:

inst_51:
// rs2_val == -16385, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x4001
TEST_RR_OP(or, x12, x10, x11, 0xffffbfff, 0x5, -0x4001, x6, 128, x8)
900004ac:	00500513          	li	a0,5
900004b0:	ffffc5b7          	lui	a1,0xffffc
900004b4:	fff58593          	addi	a1,a1,-1 # ffffbfff <_end+0x6fff64fb>
900004b8:	00b56633          	or	a2,a0,a1
900004bc:	08c32023          	sw	a2,128(t1)

900004c0 <inst_52>:

inst_52:
// rs2_val == -32769, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x800001;  op2val:-0x8001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x800001, -0x8001, x6, 132, x8)
900004c0:	ff800537          	lui	a0,0xff800
900004c4:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0x6f7fa4fb>
900004c8:	ffff85b7          	lui	a1,0xffff8
900004cc:	fff58593          	addi	a1,a1,-1 # ffff7fff <_end+0x6fff24fb>
900004d0:	00b56633          	or	a2,a0,a1
900004d4:	08c32223          	sw	a2,132(t1)

900004d8 <inst_53>:

inst_53:
// rs2_val == -65537, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x9;  op2val:-0x10001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x9, -0x10001, x6, 136, x8)
900004d8:	ff700513          	li	a0,-9
900004dc:	ffff05b7          	lui	a1,0xffff0
900004e0:	fff58593          	addi	a1,a1,-1 # fffeffff <_end+0x6ffea4fb>
900004e4:	00b56633          	or	a2,a0,a1
900004e8:	08c32423          	sw	a2,136(t1)

900004ec <inst_54>:

inst_54:
// rs2_val == -131073, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0x20001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0xb503, -0x20001, x6, 140, x8)
900004ec:	ffff5537          	lui	a0,0xffff5
900004f0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900004f4:	fffe05b7          	lui	a1,0xfffe0
900004f8:	fff58593          	addi	a1,a1,-1 # fffdffff <_end+0x6ffda4fb>
900004fc:	00b56633          	or	a2,a0,a1
90000500:	08c32623          	sw	a2,140(t1)

90000504 <inst_55>:

inst_55:
// rs2_val == -262145, rs1_val == -33
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x21;  op2val:-0x40001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x21, -0x40001, x6, 144, x8)
90000504:	fdf00513          	li	a0,-33
90000508:	fffc05b7          	lui	a1,0xfffc0
9000050c:	fff58593          	addi	a1,a1,-1 # fffbffff <_end+0x6ffba4fb>
90000510:	00b56633          	or	a2,a0,a1
90000514:	08c32823          	sw	a2,144(t1)

90000518 <inst_56>:

inst_56:
// rs2_val == -524289, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0x80001
TEST_RR_OP(or, x12, x10, x11, 0xfff7ffff, 0xb503, -0x80001, x6, 148, x8)
90000518:	0000b537          	lui	a0,0xb
9000051c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90000520:	fff805b7          	lui	a1,0xfff80
90000524:	fff58593          	addi	a1,a1,-1 # fff7ffff <_end+0x6ff7a4fb>
90000528:	00b56633          	or	a2,a0,a1
9000052c:	08c32a23          	sw	a2,148(t1)

90000530 <inst_57>:

inst_57:
// rs2_val == -2097153, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x200001
TEST_RR_OP(or, x12, x10, x11, 0xffdfffff, 0x55555555, -0x200001, x6, 152, x8)
90000530:	55555537          	lui	a0,0x55555
90000534:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000538:	ffe005b7          	lui	a1,0xffe00
9000053c:	fff58593          	addi	a1,a1,-1 # ffdfffff <_end+0x6fdfa4fb>
90000540:	00b56633          	or	a2,a0,a1
90000544:	08c32c23          	sw	a2,152(t1)

90000548 <inst_58>:

inst_58:
// rs2_val == -4194305, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x400001
TEST_RR_OP(or, x12, x10, x11, 0xffbfffff, 0x3, -0x400001, x6, 156, x8)
90000548:	00300513          	li	a0,3
9000054c:	ffc005b7          	lui	a1,0xffc00
90000550:	fff58593          	addi	a1,a1,-1 # ffbfffff <_end+0x6fbfa4fb>
90000554:	00b56633          	or	a2,a0,a1
90000558:	08c32e23          	sw	a2,156(t1)

9000055c <inst_59>:

inst_59:
// rs2_val == -8388609, rs1_val == -257
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x101;  op2val:-0x800001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x101, -0x800001, x6, 160, x8)
9000055c:	eff00513          	li	a0,-257
90000560:	ff8005b7          	lui	a1,0xff800
90000564:	fff58593          	addi	a1,a1,-1 # ff7fffff <_end+0x6f7fa4fb>
90000568:	00b56633          	or	a2,a0,a1
9000056c:	0ac32023          	sw	a2,160(t1)

90000570 <inst_60>:

inst_60:
// rs2_val == -16777217, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0x1000001
TEST_RR_OP(or, x12, x10, x11, 0xfeffffff, 0x66666666, -0x1000001, x6, 164, x8)
90000570:	66666537          	lui	a0,0x66666
90000574:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90000578:	ff0005b7          	lui	a1,0xff000
9000057c:	fff58593          	addi	a1,a1,-1 # feffffff <_end+0x6effa4fb>
90000580:	00b56633          	or	a2,a0,a1
90000584:	0ac32223          	sw	a2,164(t1)

90000588 <inst_61>:

inst_61:
// rs2_val == -33554433, rs1_val == -32769
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x8001;  op2val:-0x2000001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x8001, -0x2000001, x6, 168, x8)
90000588:	ffff8537          	lui	a0,0xffff8
9000058c:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0x6fff24fb>
90000590:	fe0005b7          	lui	a1,0xfe000
90000594:	fff58593          	addi	a1,a1,-1 # fdffffff <_end+0x6dffa4fb>
90000598:	00b56633          	or	a2,a0,a1
9000059c:	0ac32423          	sw	a2,168(t1)

900005a0 <inst_62>:

inst_62:
// rs2_val == -67108865, rs1_val == 65536
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x10000;  op2val:-0x4000001
TEST_RR_OP(or, x12, x10, x11, 0xfbffffff, 0x10000, -0x4000001, x6, 172, x8)
900005a0:	00010537          	lui	a0,0x10
900005a4:	fc0005b7          	lui	a1,0xfc000
900005a8:	fff58593          	addi	a1,a1,-1 # fbffffff <_end+0x6bffa4fb>
900005ac:	00b56633          	or	a2,a0,a1
900005b0:	0ac32623          	sw	a2,172(t1)

900005b4 <inst_63>:

inst_63:
// rs2_val == -134217729, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0x8000001
TEST_RR_OP(or, x12, x10, x11, 0xf7ffffff, 0x66666665, -0x8000001, x6, 176, x8)
900005b4:	66666537          	lui	a0,0x66666
900005b8:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
900005bc:	f80005b7          	lui	a1,0xf8000
900005c0:	fff58593          	addi	a1,a1,-1 # f7ffffff <_end+0x67ffa4fb>
900005c4:	00b56633          	or	a2,a0,a1
900005c8:	0ac32823          	sw	a2,176(t1)

900005cc <inst_64>:

inst_64:
// rs2_val == -268435457, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x40000000;  op2val:-0x10000001
TEST_RR_OP(or, x12, x10, x11, 0xefffffff, -0x40000000, -0x10000001, x6, 180, x8)
900005cc:	c0000537          	lui	a0,0xc0000
900005d0:	f00005b7          	lui	a1,0xf0000
900005d4:	fff58593          	addi	a1,a1,-1 # efffffff <_end+0x5fffa4fb>
900005d8:	00b56633          	or	a2,a0,a1
900005dc:	0ac32a23          	sw	a2,180(t1)

900005e0 <inst_65>:

inst_65:
// rs2_val == -536870913, rs1_val == 512
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x200;  op2val:-0x20000001
TEST_RR_OP(or, x12, x10, x11, 0xdfffffff, 0x200, -0x20000001, x6, 184, x8)
900005e0:	20000513          	li	a0,512
900005e4:	e00005b7          	lui	a1,0xe0000
900005e8:	fff58593          	addi	a1,a1,-1 # dfffffff <_end+0x4fffa4fb>
900005ec:	00b56633          	or	a2,a0,a1
900005f0:	0ac32c23          	sw	a2,184(t1)

900005f4 <inst_66>:

inst_66:
// rs2_val == -1073741825, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0x40000001
TEST_RR_OP(or, x12, x10, x11, 0xbfffffff, -0x55555555, -0x40000001, x6, 188, x8)
900005f4:	aaaab537          	lui	a0,0xaaaab
900005f8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900005fc:	c00005b7          	lui	a1,0xc0000
90000600:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0x2fffa4fb>
90000604:	00b56633          	or	a2,a0,a1
90000608:	0ac32e23          	sw	a2,188(t1)

9000060c <inst_67>:

inst_67:
// rs2_val == 1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x4;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, -0x4, 0x55555555, x6, 192, x8)
9000060c:	ffc00513          	li	a0,-4
90000610:	555555b7          	lui	a1,0x55555
90000614:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90000618:	00b56633          	or	a2,a0,a1
9000061c:	0cc32023          	sw	a2,192(t1)

90000620 <inst_68>:

inst_68:
// rs2_val == -1431655766, rs1_val == -536870913
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x20000001;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x20000001, -0x55555556, x6, 196, x8)
90000620:	e0000537          	lui	a0,0xe0000
90000624:	fff50513          	addi	a0,a0,-1 # dfffffff <_end+0x4fffa4fb>
90000628:	aaaab5b7          	lui	a1,0xaaaab
9000062c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000630:	00b56633          	or	a2,a0,a1
90000634:	0cc32223          	sw	a2,196(t1)

90000638 <inst_69>:

inst_69:
// rs1_val == 16, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x10;  op2val:-0x7
TEST_RR_OP(or, x12, x10, x11, 0xfffffff9, 0x10, -0x7, x6, 200, x8)
90000638:	01000513          	li	a0,16
9000063c:	ff900593          	li	a1,-7
90000640:	00b56633          	or	a2,a0,a1
90000644:	0cc32423          	sw	a2,200(t1)

90000648 <inst_70>:

inst_70:
// rs1_val == 128, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x80;  op2val:-0x7
TEST_RR_OP(or, x12, x10, x11, 0xfffffff9, 0x80, -0x7, x6, 204, x8)
90000648:	08000513          	li	a0,128
9000064c:	ff900593          	li	a1,-7
90000650:	00b56633          	or	a2,a0,a1
90000654:	0cc32623          	sw	a2,204(t1)

90000658 <inst_71>:

inst_71:
// rs1_val == 256, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x100;  op2val:-0x4000001
TEST_RR_OP(or, x12, x10, x11, 0xfbffffff, 0x100, -0x4000001, x6, 208, x8)
90000658:	10000513          	li	a0,256
9000065c:	fc0005b7          	lui	a1,0xfc000
90000660:	fff58593          	addi	a1,a1,-1 # fbffffff <_end+0x6bffa4fb>
90000664:	00b56633          	or	a2,a0,a1
90000668:	0cc32823          	sw	a2,208(t1)

9000066c <inst_72>:

inst_72:
// rs1_val == 1024, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x400;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaeaa, 0x400, -0x55555556, x6, 212, x8)
9000066c:	40000513          	li	a0,1024
90000670:	aaaab5b7          	lui	a1,0xaaaab
90000674:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000678:	00b56633          	or	a2,a0,a1
9000067c:	0cc32a23          	sw	a2,212(t1)

90000680 <inst_73>:

inst_73:
// rs1_val == 2048, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x800;  op2val:-0x200001
TEST_RR_OP(or, x12, x10, x11, 0xffdfffff, 0x800, -0x200001, x6, 216, x8)
90000680:	00001537          	lui	a0,0x1
90000684:	80050513          	addi	a0,a0,-2048 # 800 <offset+0x720>
90000688:	ffe005b7          	lui	a1,0xffe00
9000068c:	fff58593          	addi	a1,a1,-1 # ffdfffff <_end+0x6fdfa4fb>
90000690:	00b56633          	or	a2,a0,a1
90000694:	0cc32c23          	sw	a2,216(t1)

90000698 <inst_74>:

inst_74:
// rs1_val == 8192, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2000;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0x2000, 0xb503, x6, 220, x8)
90000698:	00002537          	lui	a0,0x2
9000069c:	0000b5b7          	lui	a1,0xb
900006a0:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900006a4:	00b56633          	or	a2,a0,a1
900006a8:	0cc32e23          	sw	a2,220(t1)

900006ac <inst_75>:

inst_75:
// rs1_val == 16384, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4000;  op2val:-0x6
TEST_RR_OP(or, x12, x10, x11, 0xfffffffa, 0x4000, -0x6, x6, 224, x8)
900006ac:	00004537          	lui	a0,0x4
900006b0:	ffa00593          	li	a1,-6
900006b4:	00b56633          	or	a2,a0,a1
900006b8:	0ec32023          	sw	a2,224(t1)

900006bc <inst_76>:

inst_76:
// rs1_val == 32768, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x8000;  op2val:0x800
TEST_RR_OP(or, x12, x10, x11, 0x8800, 0x8000, 0x800, x6, 228, x8)
900006bc:	00008537          	lui	a0,0x8
900006c0:	000015b7          	lui	a1,0x1
900006c4:	80058593          	addi	a1,a1,-2048 # 800 <offset+0x720>
900006c8:	00b56633          	or	a2,a0,a1
900006cc:	0ec32223          	sw	a2,228(t1)

900006d0 <inst_77>:

inst_77:
// rs1_val == 262144, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x40000;  op2val:-0x1000001
TEST_RR_OP(or, x12, x10, x11, 0xfeffffff, 0x40000, -0x1000001, x6, 232, x8)
900006d0:	00040537          	lui	a0,0x40
900006d4:	ff0005b7          	lui	a1,0xff000
900006d8:	fff58593          	addi	a1,a1,-1 # feffffff <_end+0x6effa4fb>
900006dc:	00b56633          	or	a2,a0,a1
900006e0:	0ec32423          	sw	a2,232(t1)

900006e4 <inst_78>:

inst_78:
// rs1_val == 2097152, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x200000;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x200000, 0x200000, 0x0, x6, 236, x8)
900006e4:	00200537          	lui	a0,0x200
900006e8:	00000593          	li	a1,0
900006ec:	00b56633          	or	a2,a0,a1
900006f0:	0ec32623          	sw	a2,236(t1)

900006f4 <inst_79>:

inst_79:
// rs1_val == 4194304, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x400000;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, 0x400000, -0xb503, x6, 240, x8)
900006f4:	00400537          	lui	a0,0x400
900006f8:	ffff55b7          	lui	a1,0xffff5
900006fc:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000700:	00b56633          	or	a2,a0,a1
90000704:	0ec32823          	sw	a2,240(t1)

90000708 <inst_80>:

inst_80:
// rs1_val == 33554432, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2000000;  op2val:0x3fffffff
TEST_RR_OP(or, x12, x10, x11, 0x3fffffff, 0x2000000, 0x3fffffff, x6, 244, x8)
90000708:	02000537          	lui	a0,0x2000
9000070c:	400005b7          	lui	a1,0x40000
90000710:	fff58593          	addi	a1,a1,-1 # 3fffffff <offset+0x3fffff1f>
90000714:	00b56633          	or	a2,a0,a1
90000718:	0ec32a23          	sw	a2,244(t1)

9000071c <inst_81>:

inst_81:
// rs1_val == 67108864, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4000000;  op2val:-0x80001
TEST_RR_OP(or, x12, x10, x11, 0xfff7ffff, 0x4000000, -0x80001, x6, 248, x8)
9000071c:	04000537          	lui	a0,0x4000
90000720:	fff805b7          	lui	a1,0xfff80
90000724:	fff58593          	addi	a1,a1,-1 # fff7ffff <_end+0x6ff7a4fb>
90000728:	00b56633          	or	a2,a0,a1
9000072c:	0ec32c23          	sw	a2,248(t1)

90000730 <inst_82>:

inst_82:
// rs1_val == 134217728, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x8000000;  op2val:0x20
TEST_RR_OP(or, x12, x10, x11, 0x8000020, 0x8000000, 0x20, x6, 252, x8)
90000730:	08000537          	lui	a0,0x8000
90000734:	02000593          	li	a1,32
90000738:	00b56633          	or	a2,a0,a1
9000073c:	0ec32e23          	sw	a2,252(t1)

90000740 <inst_83>:

inst_83:
// rs1_val == 536870912, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x20000000;  op2val:-0x2001
TEST_RR_OP(or, x12, x10, x11, 0xffffdfff, 0x20000000, -0x2001, x6, 256, x8)
90000740:	20000537          	lui	a0,0x20000
90000744:	ffffe5b7          	lui	a1,0xffffe
90000748:	fff58593          	addi	a1,a1,-1 # ffffdfff <_end+0x6fff84fb>
9000074c:	00b56633          	or	a2,a0,a1
90000750:	10c32023          	sw	a2,256(t1)

90000754 <inst_84>:

inst_84:
// rs1_val == 1073741824, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:0x8
TEST_RR_OP(or, x12, x10, x11, 0x40000008, 0x40000000, 0x8, x6, 260, x8)
90000754:	40000537          	lui	a0,0x40000
90000758:	00800593          	li	a1,8
9000075c:	00b56633          	or	a2,a0,a1
90000760:	10c32223          	sw	a2,260(t1)

90000764 <inst_85>:

inst_85:
// rs1_val == -2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x2;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, -0x2, 0x4, x6, 264, x8)
90000764:	ffe00513          	li	a0,-2
90000768:	00400593          	li	a1,4
9000076c:	00b56633          	or	a2,a0,a1
90000770:	10c32423          	sw	a2,264(t1)

90000774 <inst_86>:

inst_86:
// rs1_val == -3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x3;  op2val:-0x8
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, -0x3, -0x8, x6, 268, x8)
90000774:	ffd00513          	li	a0,-3
90000778:	ff800593          	li	a1,-8
9000077c:	00b56633          	or	a2,a0,a1
90000780:	10c32623          	sw	a2,268(t1)

90000784 <inst_87>:

inst_87:
// rs1_val == -5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x5;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x5, -0xb503, x6, 272, x8)
90000784:	ffb00513          	li	a0,-5
90000788:	ffff55b7          	lui	a1,0xffff5
9000078c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000790:	00b56633          	or	a2,a0,a1
90000794:	10c32823          	sw	a2,272(t1)

90000798 <inst_88>:

inst_88:
// rs1_val == -17, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x11;  op2val:-0x400001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x11, -0x400001, x6, 276, x8)
90000798:	fef00513          	li	a0,-17
9000079c:	ffc005b7          	lui	a1,0xffc00
900007a0:	fff58593          	addi	a1,a1,-1 # ffbfffff <_end+0x6fbfa4fb>
900007a4:	00b56633          	or	a2,a0,a1
900007a8:	10c32a23          	sw	a2,276(t1)

900007ac <inst_89>:

inst_89:
// rs1_val == -65, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x41;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xffffffbf, -0x41, 0x5, x6, 280, x8)
900007ac:	fbf00513          	li	a0,-65
900007b0:	00500593          	li	a1,5
900007b4:	00b56633          	or	a2,a0,a1
900007b8:	10c32c23          	sw	a2,280(t1)

900007bc <inst_90>:

inst_90:
// rs1_val == -129, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x81;  op2val:0x800000
TEST_RR_OP(or, x12, x10, x11, 0xffffff7f, -0x81, 0x800000, x6, 284, x8)
900007bc:	f7f00513          	li	a0,-129
900007c0:	008005b7          	lui	a1,0x800
900007c4:	00b56633          	or	a2,a0,a1
900007c8:	10c32e23          	sw	a2,284(t1)

900007cc <inst_91>:

inst_91:
// rs1_val == -16385, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x4001;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffbfff, -0x4001, 0xb503, x6, 288, x8)
900007cc:	ffffc537          	lui	a0,0xffffc
900007d0:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0x6fff64fb>
900007d4:	0000b5b7          	lui	a1,0xb
900007d8:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900007dc:	00b56633          	or	a2,a0,a1
900007e0:	12c32023          	sw	a2,288(t1)

900007e4 <inst_92>:

inst_92:
// rs1_val == -131073, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x20001;  op2val:-0x4001
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x20001, -0x4001, x6, 292, x8)
900007e4:	fffe0537          	lui	a0,0xfffe0
900007e8:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0x6ffda4fb>
900007ec:	ffffc5b7          	lui	a1,0xffffc
900007f0:	fff58593          	addi	a1,a1,-1 # ffffbfff <_end+0x6fff64fb>
900007f4:	00b56633          	or	a2,a0,a1
900007f8:	12c32223          	sw	a2,292(t1)

900007fc <inst_93>:

inst_93:
// rs1_val == -262145, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x40001;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xfffbffff, -0x40001, -0x55555556, x6, 296, x8)
900007fc:	fffc0537          	lui	a0,0xfffc0
90000800:	fff50513          	addi	a0,a0,-1 # fffbffff <_end+0x6ffba4fb>
90000804:	aaaab5b7          	lui	a1,0xaaaab
90000808:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
9000080c:	00b56633          	or	a2,a0,a1
90000810:	12c32423          	sw	a2,296(t1)

90000814 <inst_94>:

inst_94:
// rs1_val == -524289, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x80001;  op2val:-0x41
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x80001, -0x41, x6, 300, x8)
90000814:	fff80537          	lui	a0,0xfff80
90000818:	fff50513          	addi	a0,a0,-1 # fff7ffff <_end+0x6ff7a4fb>
9000081c:	fbf00593          	li	a1,-65
90000820:	00b56633          	or	a2,a0,a1
90000824:	12c32623          	sw	a2,300(t1)

90000828 <inst_95>:

inst_95:
// rs1_val == -4194305, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x400001;  op2val:-0x101
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x400001, -0x101, x6, 304, x8)
90000828:	ffc00537          	lui	a0,0xffc00
9000082c:	fff50513          	addi	a0,a0,-1 # ffbfffff <_end+0x6fbfa4fb>
90000830:	eff00593          	li	a1,-257
90000834:	00b56633          	or	a2,a0,a1
90000838:	12c32823          	sw	a2,304(t1)

9000083c <inst_96>:

inst_96:
// rs1_val == -16777217, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x1000001;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xfeffffff, -0x1000001, 0x0, x6, 308, x8)
9000083c:	ff000537          	lui	a0,0xff000
90000840:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0x6effa4fb>
90000844:	00000593          	li	a1,0
90000848:	00b56633          	or	a2,a0,a1
9000084c:	12c32a23          	sw	a2,308(t1)

90000850 <inst_97>:

inst_97:
// rs1_val == -33554433, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x2000001;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xfdffffff, -0x2000001, 0x4, x6, 312, x8)
90000850:	fe000537          	lui	a0,0xfe000
90000854:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0x6dffa4fb>
90000858:	00400593          	li	a1,4
9000085c:	00b56633          	or	a2,a0,a1
90000860:	12c32c23          	sw	a2,312(t1)

90000864 <inst_98>:

inst_98:
// rs1_val == -134217729, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x8000001;  op2val:-0x5
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x8000001, -0x5, x6, 316, x8)
90000864:	f8000537          	lui	a0,0xf8000
90000868:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0x67ffa4fb>
9000086c:	ffb00593          	li	a1,-5
90000870:	00b56633          	or	a2,a0,a1
90000874:	12c32e23          	sw	a2,316(t1)

90000878 <inst_99>:

inst_99:
// rs1_val == -1073741825, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x40000001;  op2val:-0x40000001
TEST_RR_OP(or, x12, x10, x11, 0xbfffffff, -0x40000001, -0x40000001, x6, 320, x8)
90000878:	c0000537          	lui	a0,0xc0000
9000087c:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0x2fffa4fb>
90000880:	c00005b7          	lui	a1,0xc0000
90000884:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0x2fffa4fb>
90000888:	00b56633          	or	a2,a0,a1
9000088c:	14c32023          	sw	a2,320(t1)

90000890 <inst_100>:

inst_100:
// rs1_val==3 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x3, 0x3, 0x3, x6, 324, x8)
90000890:	00300513          	li	a0,3
90000894:	00300593          	li	a1,3
90000898:	00b56633          	or	a2,a0,a1
9000089c:	14c32223          	sw	a2,324(t1)

900008a0 <inst_101>:

inst_101:
// rs1_val==3 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x3, 0x55555555, x6, 328, x8)
900008a0:	00300513          	li	a0,3
900008a4:	555555b7          	lui	a1,0x55555
900008a8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900008ac:	00b56633          	or	a2,a0,a1
900008b0:	14c32423          	sw	a2,328(t1)

900008b4 <inst_102>:

inst_102:
// rs1_val==3 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, 0x3, -0x55555556, x6, 332, x8)
900008b4:	00300513          	li	a0,3
900008b8:	aaaab5b7          	lui	a1,0xaaaab
900008bc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900008c0:	00b56633          	or	a2,a0,a1
900008c4:	14c32623          	sw	a2,332(t1)

900008c8 <inst_103>:

inst_103:
// rs1_val==3 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x3, 0x5, x6, 336, x8)
900008c8:	00300513          	li	a0,3
900008cc:	00500593          	li	a1,5
900008d0:	00b56633          	or	a2,a0,a1
900008d4:	14c32823          	sw	a2,336(t1)

900008d8 <inst_104>:

inst_104:
// rs1_val==3 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x3, 0x33333333, x6, 340, x8)
900008d8:	00300513          	li	a0,3
900008dc:	333335b7          	lui	a1,0x33333
900008e0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
900008e4:	00b56633          	or	a2,a0,a1
900008e8:	14c32a23          	sw	a2,340(t1)

900008ec <inst_105>:

inst_105:
// rs1_val==3 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x3, 0x66666666, x6, 344, x8)
900008ec:	00300513          	li	a0,3
900008f0:	666665b7          	lui	a1,0x66666
900008f4:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
900008f8:	00b56633          	or	a2,a0,a1
900008fc:	14c32c23          	sw	a2,344(t1)

90000900 <inst_106>:

inst_106:
// rs1_val==3 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, 0x3, -0xb504, x6, 348, x8)
90000900:	00300513          	li	a0,3
90000904:	ffff55b7          	lui	a1,0xffff5
90000908:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000090c:	00b56633          	or	a2,a0,a1
90000910:	14c32e23          	sw	a2,348(t1)

90000914 <inst_107>:

inst_107:
// rs1_val==3 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x3, 0xb504, x6, 352, x8)
90000914:	00300513          	li	a0,3
90000918:	0000b5b7          	lui	a1,0xb
9000091c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90000920:	00b56633          	or	a2,a0,a1
90000924:	16c32023          	sw	a2,352(t1)

90000928 <inst_108>:

inst_108:
// rs1_val==3 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x3, 0x3, 0x2, x6, 356, x8)
90000928:	00300513          	li	a0,3
9000092c:	00200593          	li	a1,2
90000930:	00b56633          	or	a2,a0,a1
90000934:	16c32223          	sw	a2,356(t1)

90000938 <inst_109>:

inst_109:
// rs1_val==3 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x3, 0x55555554, x6, 360, x8)
90000938:	00300513          	li	a0,3
9000093c:	555555b7          	lui	a1,0x55555
90000940:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90000944:	00b56633          	or	a2,a0,a1
90000948:	16c32423          	sw	a2,360(t1)

9000094c <inst_110>:

inst_110:
// rs1_val==3 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x3, 0x3, 0x0, x6, 364, x8)
9000094c:	00300513          	li	a0,3
90000950:	00000593          	li	a1,0
90000954:	00b56633          	or	a2,a0,a1
90000958:	16c32623          	sw	a2,364(t1)

9000095c <inst_111>:

inst_111:
// rs1_val==3 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x3, 0x4, x6, 368, x8)
9000095c:	00300513          	li	a0,3
90000960:	00400593          	li	a1,4
90000964:	00b56633          	or	a2,a0,a1
90000968:	16c32823          	sw	a2,368(t1)

9000096c <inst_112>:

inst_112:
// rs1_val==3 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x3, 0x33333332, x6, 372, x8)
9000096c:	00300513          	li	a0,3
90000970:	333335b7          	lui	a1,0x33333
90000974:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90000978:	00b56633          	or	a2,a0,a1
9000097c:	16c32a23          	sw	a2,372(t1)

90000980 <inst_113>:

inst_113:
// rs1_val==3 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x3, 0x66666665, x6, 376, x8)
90000980:	00300513          	li	a0,3
90000984:	666665b7          	lui	a1,0x66666
90000988:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
9000098c:	00b56633          	or	a2,a0,a1
90000990:	16c32c23          	sw	a2,376(t1)

90000994 <inst_114>:

inst_114:
// rs1_val==3 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0x3, 0xb503, x6, 380, x8)
90000994:	00300513          	li	a0,3
90000998:	0000b5b7          	lui	a1,0xb
9000099c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900009a0:	00b56633          	or	a2,a0,a1
900009a4:	16c32e23          	sw	a2,380(t1)

900009a8 <inst_115>:

inst_115:
// rs1_val==3 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x3, 0x55555556, x6, 384, x8)
900009a8:	00300513          	li	a0,3
900009ac:	555555b7          	lui	a1,0x55555
900009b0:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
900009b4:	00b56633          	or	a2,a0,a1
900009b8:	18c32023          	sw	a2,384(t1)

900009bc <inst_116>:

inst_116:
// rs1_val==3 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, 0x3, -0x55555555, x6, 388, x8)
900009bc:	00300513          	li	a0,3
900009c0:	aaaab5b7          	lui	a1,0xaaaab
900009c4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900009c8:	00b56633          	or	a2,a0,a1
900009cc:	18c32223          	sw	a2,388(t1)

900009d0 <inst_117>:

inst_117:
// rs1_val==3 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x3, 0x6, x6, 392, x8)
900009d0:	00300513          	li	a0,3
900009d4:	00600593          	li	a1,6
900009d8:	00b56633          	or	a2,a0,a1
900009dc:	18c32423          	sw	a2,392(t1)

900009e0 <inst_118>:

inst_118:
// rs1_val==3 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x3, 0x33333334, x6, 396, x8)
900009e0:	00300513          	li	a0,3
900009e4:	333335b7          	lui	a1,0x33333
900009e8:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
900009ec:	00b56633          	or	a2,a0,a1
900009f0:	18c32623          	sw	a2,396(t1)

900009f4 <inst_119>:

inst_119:
// rs1_val==3 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x3, 0x66666667, x6, 400, x8)
900009f4:	00300513          	li	a0,3
900009f8:	666665b7          	lui	a1,0x66666
900009fc:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90000a00:	00b56633          	or	a2,a0,a1
90000a04:	18c32823          	sw	a2,400(t1)

90000a08 <inst_120>:

inst_120:
// rs1_val==3 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, 0x3, -0xb503, x6, 404, x8)
90000a08:	00300513          	li	a0,3
90000a0c:	ffff55b7          	lui	a1,0xffff5
90000a10:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000a14:	00b56633          	or	a2,a0,a1
90000a18:	18c32a23          	sw	a2,404(t1)

90000a1c <inst_121>:

inst_121:
// rs1_val==3 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x3, 0xb505, x6, 408, x8)
90000a1c:	00300513          	li	a0,3
90000a20:	0000b5b7          	lui	a1,0xb
90000a24:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90000a28:	00b56633          	or	a2,a0,a1
90000a2c:	18c32c23          	sw	a2,408(t1)

90000a30 <inst_122>:

inst_122:
// rs1_val==1431655765 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555555, 0x3, x6, 412, x8)
90000a30:	55555537          	lui	a0,0x55555
90000a34:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000a38:	00300593          	li	a1,3
90000a3c:	00b56633          	or	a2,a0,a1
90000a40:	18c32e23          	sw	a2,412(t1)

90000a44 <inst_123>:

inst_123:
// rs1_val==1431655765 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555555, 0x55555555, x6, 416, x8)
90000a44:	55555537          	lui	a0,0x55555
90000a48:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000a4c:	555555b7          	lui	a1,0x55555
90000a50:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90000a54:	00b56633          	or	a2,a0,a1
90000a58:	1ac32023          	sw	a2,416(t1)

90000a5c <inst_124>:

inst_124:
// rs1_val==1431655765 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x55555555, -0x55555556, x6, 420, x8)
90000a5c:	55555537          	lui	a0,0x55555
90000a60:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000a64:	aaaab5b7          	lui	a1,0xaaaab
90000a68:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000a6c:	00b56633          	or	a2,a0,a1
90000a70:	1ac32223          	sw	a2,420(t1)

90000a74 <inst_125>:

inst_125:
// rs1_val==1431655765 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555555, 0x5, x6, 424, x8)
90000a74:	55555537          	lui	a0,0x55555
90000a78:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000a7c:	00500593          	li	a1,5
90000a80:	00b56633          	or	a2,a0,a1
90000a84:	1ac32423          	sw	a2,424(t1)

90000a88 <inst_126>:

inst_126:
// rs1_val==1431655765 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555555, 0x33333333, x6, 428, x8)
90000a88:	55555537          	lui	a0,0x55555
90000a8c:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000a90:	333335b7          	lui	a1,0x33333
90000a94:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90000a98:	00b56633          	or	a2,a0,a1
90000a9c:	1ac32623          	sw	a2,428(t1)

90000aa0 <inst_127>:

inst_127:
// rs1_val==1431655765 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555555, 0x66666666, x6, 432, x8)
90000aa0:	55555537          	lui	a0,0x55555
90000aa4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000aa8:	666665b7          	lui	a1,0x66666
90000aac:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90000ab0:	00b56633          	or	a2,a0,a1
90000ab4:	1ac32823          	sw	a2,432(t1)

90000ab8 <inst_128>:

inst_128:
// rs1_val==1431655765 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, 0x55555555, -0xb504, x6, 436, x8)
90000ab8:	55555537          	lui	a0,0x55555
90000abc:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000ac0:	ffff55b7          	lui	a1,0xffff5
90000ac4:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90000ac8:	00b56633          	or	a2,a0,a1
90000acc:	1ac32a23          	sw	a2,436(t1)

90000ad0 <inst_129>:

inst_129:
// rs1_val==1431655765 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0x55555555, 0xb504, x6, 440, x8)
90000ad0:	55555537          	lui	a0,0x55555
90000ad4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000ad8:	0000b5b7          	lui	a1,0xb
90000adc:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90000ae0:	00b56633          	or	a2,a0,a1
90000ae4:	1ac32c23          	sw	a2,440(t1)

90000ae8 <inst_130>:

inst_130:
// rs1_val==1431655765 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555555, 0x2, x6, 444, x8)
90000ae8:	55555537          	lui	a0,0x55555
90000aec:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000af0:	00200593          	li	a1,2
90000af4:	00b56633          	or	a2,a0,a1
90000af8:	1ac32e23          	sw	a2,444(t1)

90000afc <inst_131>:

inst_131:
// rs1_val==1431655765 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555555, 0x55555554, x6, 448, x8)
90000afc:	55555537          	lui	a0,0x55555
90000b00:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b04:	555555b7          	lui	a1,0x55555
90000b08:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90000b0c:	00b56633          	or	a2,a0,a1
90000b10:	1cc32023          	sw	a2,448(t1)

90000b14 <inst_132>:

inst_132:
// rs1_val==1431655765 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555555, 0x0, x6, 452, x8)
90000b14:	55555537          	lui	a0,0x55555
90000b18:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b1c:	00000593          	li	a1,0
90000b20:	00b56633          	or	a2,a0,a1
90000b24:	1cc32223          	sw	a2,452(t1)

90000b28 <inst_133>:

inst_133:
// rs1_val==1431655765 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555555, 0x4, x6, 456, x8)
90000b28:	55555537          	lui	a0,0x55555
90000b2c:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b30:	00400593          	li	a1,4
90000b34:	00b56633          	or	a2,a0,a1
90000b38:	1cc32423          	sw	a2,456(t1)

90000b3c <inst_134>:

inst_134:
// rs1_val==1431655765 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555555, 0x33333332, x6, 460, x8)
90000b3c:	55555537          	lui	a0,0x55555
90000b40:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b44:	333335b7          	lui	a1,0x33333
90000b48:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90000b4c:	00b56633          	or	a2,a0,a1
90000b50:	1cc32623          	sw	a2,460(t1)

90000b54 <inst_135>:

inst_135:
// rs1_val==1431655765 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x55555555, 0x66666665, x6, 464, x8)
90000b54:	55555537          	lui	a0,0x55555
90000b58:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b5c:	666665b7          	lui	a1,0x66666
90000b60:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90000b64:	00b56633          	or	a2,a0,a1
90000b68:	1cc32823          	sw	a2,464(t1)

90000b6c <inst_136>:

inst_136:
// rs1_val==1431655765 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0x55555555, 0xb503, x6, 468, x8)
90000b6c:	55555537          	lui	a0,0x55555
90000b70:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b74:	0000b5b7          	lui	a1,0xb
90000b78:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90000b7c:	00b56633          	or	a2,a0,a1
90000b80:	1cc32a23          	sw	a2,468(t1)

90000b84 <inst_137>:

inst_137:
// rs1_val==1431655765 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555555, 0x55555556, x6, 472, x8)
90000b84:	55555537          	lui	a0,0x55555
90000b88:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000b8c:	555555b7          	lui	a1,0x55555
90000b90:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90000b94:	00b56633          	or	a2,a0,a1
90000b98:	1cc32c23          	sw	a2,472(t1)

90000b9c <inst_138>:

inst_138:
// rs1_val==1431655765 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x55555555, -0x55555555, x6, 476, x8)
90000b9c:	55555537          	lui	a0,0x55555
90000ba0:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000ba4:	aaaab5b7          	lui	a1,0xaaaab
90000ba8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90000bac:	00b56633          	or	a2,a0,a1
90000bb0:	1cc32e23          	sw	a2,476(t1)

90000bb4 <inst_139>:

inst_139:
// rs1_val==1431655765 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555555, 0x6, x6, 480, x8)
90000bb4:	55555537          	lui	a0,0x55555
90000bb8:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000bbc:	00600593          	li	a1,6
90000bc0:	00b56633          	or	a2,a0,a1
90000bc4:	1ec32023          	sw	a2,480(t1)

90000bc8 <inst_140>:

inst_140:
// rs1_val==1431655765 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x55555555, 0x33333334, x6, 484, x8)
90000bc8:	55555537          	lui	a0,0x55555
90000bcc:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000bd0:	333335b7          	lui	a1,0x33333
90000bd4:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90000bd8:	00b56633          	or	a2,a0,a1
90000bdc:	1ec32223          	sw	a2,484(t1)

90000be0 <inst_141>:

inst_141:
// rs1_val==1431655765 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555555, 0x66666667, x6, 488, x8)
90000be0:	55555537          	lui	a0,0x55555
90000be4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000be8:	666665b7          	lui	a1,0x66666
90000bec:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90000bf0:	00b56633          	or	a2,a0,a1
90000bf4:	1ec32423          	sw	a2,488(t1)

90000bf8 <inst_142>:

inst_142:
// rs1_val==1431655765 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, 0x55555555, -0xb503, x6, 492, x8)
90000bf8:	55555537          	lui	a0,0x55555
90000bfc:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000c00:	ffff55b7          	lui	a1,0xffff5
90000c04:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000c08:	00b56633          	or	a2,a0,a1
90000c0c:	1ec32623          	sw	a2,492(t1)

90000c10 <inst_143>:

inst_143:
// rs1_val==1431655765 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555555;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0x55555555, 0xb505, x6, 496, x8)
90000c10:	55555537          	lui	a0,0x55555
90000c14:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555475>
90000c18:	0000b5b7          	lui	a1,0xb
90000c1c:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90000c20:	00b56633          	or	a2,a0,a1
90000c24:	1ec32823          	sw	a2,496(t1)

90000c28 <inst_144>:

inst_144:
// rs1_val==-1431655766 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555556, 0x3, x6, 500, x8)
90000c28:	aaaab537          	lui	a0,0xaaaab
90000c2c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c30:	00300593          	li	a1,3
90000c34:	00b56633          	or	a2,a0,a1
90000c38:	1ec32a23          	sw	a2,500(t1)

90000c3c <inst_145>:

inst_145:
// rs1_val==-1431655766 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x55555556, 0x55555555, x6, 504, x8)
90000c3c:	aaaab537          	lui	a0,0xaaaab
90000c40:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c44:	555555b7          	lui	a1,0x55555
90000c48:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90000c4c:	00b56633          	or	a2,a0,a1
90000c50:	1ec32c23          	sw	a2,504(t1)

90000c54 <inst_146>:

inst_146:
// rs1_val==-1431655766 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, -0x55555556, -0x55555556, x6, 508, x8)
90000c54:	aaaab537          	lui	a0,0xaaaab
90000c58:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c5c:	aaaab5b7          	lui	a1,0xaaaab
90000c60:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c64:	00b56633          	or	a2,a0,a1
90000c68:	1ec32e23          	sw	a2,508(t1)

90000c6c <inst_147>:

inst_147:
// rs1_val==-1431655766 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, -0x55555556, 0x5, x6, 512, x8)
90000c6c:	aaaab537          	lui	a0,0xaaaab
90000c70:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c74:	00500593          	li	a1,5
90000c78:	00b56633          	or	a2,a0,a1
90000c7c:	20c32023          	sw	a2,512(t1)

90000c80 <inst_148>:

inst_148:
// rs1_val==-1431655766 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, -0x55555556, 0x33333333, x6, 516, x8)
90000c80:	aaaab537          	lui	a0,0xaaaab
90000c84:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000c88:	333335b7          	lui	a1,0x33333
90000c8c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90000c90:	00b56633          	or	a2,a0,a1
90000c94:	20c32223          	sw	a2,516(t1)

90000c98 <inst_149>:

inst_149:
// rs1_val==-1431655766 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeee, -0x55555556, 0x66666666, x6, 520, x8)
90000c98:	aaaab537          	lui	a0,0xaaaab
90000c9c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000ca0:	666665b7          	lui	a1,0x66666
90000ca4:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90000ca8:	00b56633          	or	a2,a0,a1
90000cac:	20c32423          	sw	a2,520(t1)

90000cb0 <inst_150>:

inst_150:
// rs1_val==-1431655766 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffffeafe, -0x55555556, -0xb504, x6, 524, x8)
90000cb0:	aaaab537          	lui	a0,0xaaaab
90000cb4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000cb8:	ffff55b7          	lui	a1,0xffff5
90000cbc:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90000cc0:	00b56633          	or	a2,a0,a1
90000cc4:	20c32623          	sw	a2,524(t1)

90000cc8 <inst_151>:

inst_151:
// rs1_val==-1431655766 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfae, -0x55555556, 0xb504, x6, 528, x8)
90000cc8:	aaaab537          	lui	a0,0xaaaab
90000ccc:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000cd0:	0000b5b7          	lui	a1,0xb
90000cd4:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90000cd8:	00b56633          	or	a2,a0,a1
90000cdc:	20c32823          	sw	a2,528(t1)

90000ce0 <inst_152>:

inst_152:
// rs1_val==-1431655766 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, -0x55555556, 0x2, x6, 532, x8)
90000ce0:	aaaab537          	lui	a0,0xaaaab
90000ce4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000ce8:	00200593          	li	a1,2
90000cec:	00b56633          	or	a2,a0,a1
90000cf0:	20c32a23          	sw	a2,532(t1)

90000cf4 <inst_153>:

inst_153:
// rs1_val==-1431655766 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, -0x55555556, 0x55555554, x6, 536, x8)
90000cf4:	aaaab537          	lui	a0,0xaaaab
90000cf8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000cfc:	555555b7          	lui	a1,0x55555
90000d00:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90000d04:	00b56633          	or	a2,a0,a1
90000d08:	20c32c23          	sw	a2,536(t1)

90000d0c <inst_154>:

inst_154:
// rs1_val==-1431655766 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, -0x55555556, 0x0, x6, 540, x8)
90000d0c:	aaaab537          	lui	a0,0xaaaab
90000d10:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d14:	00000593          	li	a1,0
90000d18:	00b56633          	or	a2,a0,a1
90000d1c:	20c32e23          	sw	a2,540(t1)

90000d20 <inst_155>:

inst_155:
// rs1_val==-1431655766 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaae, -0x55555556, 0x4, x6, 544, x8)
90000d20:	aaaab537          	lui	a0,0xaaaab
90000d24:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d28:	00400593          	li	a1,4
90000d2c:	00b56633          	or	a2,a0,a1
90000d30:	22c32023          	sw	a2,544(t1)

90000d34 <inst_156>:

inst_156:
// rs1_val==-1431655766 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbba, -0x55555556, 0x33333332, x6, 548, x8)
90000d34:	aaaab537          	lui	a0,0xaaaab
90000d38:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d3c:	333335b7          	lui	a1,0x33333
90000d40:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90000d44:	00b56633          	or	a2,a0,a1
90000d48:	22c32223          	sw	a2,548(t1)

90000d4c <inst_157>:

inst_157:
// rs1_val==-1431655766 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, -0x55555556, 0x66666665, x6, 552, x8)
90000d4c:	aaaab537          	lui	a0,0xaaaab
90000d50:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d54:	666665b7          	lui	a1,0x66666
90000d58:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90000d5c:	00b56633          	or	a2,a0,a1
90000d60:	22c32423          	sw	a2,552(t1)

90000d64 <inst_158>:

inst_158:
// rs1_val==-1431655766 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfab, -0x55555556, 0xb503, x6, 556, x8)
90000d64:	aaaab537          	lui	a0,0xaaaab
90000d68:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d6c:	0000b5b7          	lui	a1,0xb
90000d70:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90000d74:	00b56633          	or	a2,a0,a1
90000d78:	22c32623          	sw	a2,556(t1)

90000d7c <inst_159>:

inst_159:
// rs1_val==-1431655766 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, -0x55555556, 0x55555556, x6, 560, x8)
90000d7c:	aaaab537          	lui	a0,0xaaaab
90000d80:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d84:	555555b7          	lui	a1,0x55555
90000d88:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90000d8c:	00b56633          	or	a2,a0,a1
90000d90:	22c32823          	sw	a2,560(t1)

90000d94 <inst_160>:

inst_160:
// rs1_val==-1431655766 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555556, -0x55555555, x6, 564, x8)
90000d94:	aaaab537          	lui	a0,0xaaaab
90000d98:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000d9c:	aaaab5b7          	lui	a1,0xaaaab
90000da0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90000da4:	00b56633          	or	a2,a0,a1
90000da8:	22c32a23          	sw	a2,564(t1)

90000dac <inst_161>:

inst_161:
// rs1_val==-1431655766 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaae, -0x55555556, 0x6, x6, 568, x8)
90000dac:	aaaab537          	lui	a0,0xaaaab
90000db0:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000db4:	00600593          	li	a1,6
90000db8:	00b56633          	or	a2,a0,a1
90000dbc:	22c32c23          	sw	a2,568(t1)

90000dc0 <inst_162>:

inst_162:
// rs1_val==-1431655766 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbe, -0x55555556, 0x33333334, x6, 572, x8)
90000dc0:	aaaab537          	lui	a0,0xaaaab
90000dc4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000dc8:	333335b7          	lui	a1,0x33333
90000dcc:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90000dd0:	00b56633          	or	a2,a0,a1
90000dd4:	22c32e23          	sw	a2,572(t1)

90000dd8 <inst_163>:

inst_163:
// rs1_val==-1431655766 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, -0x55555556, 0x66666667, x6, 576, x8)
90000dd8:	aaaab537          	lui	a0,0xaaaab
90000ddc:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000de0:	666665b7          	lui	a1,0x66666
90000de4:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90000de8:	00b56633          	or	a2,a0,a1
90000dec:	24c32023          	sw	a2,576(t1)

90000df0 <inst_164>:

inst_164:
// rs1_val==-1431655766 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0x55555556, -0xb503, x6, 580, x8)
90000df0:	aaaab537          	lui	a0,0xaaaab
90000df4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000df8:	ffff55b7          	lui	a1,0xffff5
90000dfc:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000e00:	00b56633          	or	a2,a0,a1
90000e04:	24c32223          	sw	a2,580(t1)

90000e08 <inst_165>:

inst_165:
// rs1_val==-1431655766 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555556;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, -0x55555556, 0xb505, x6, 584, x8)
90000e08:	aaaab537          	lui	a0,0xaaaab
90000e0c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000e10:	0000b5b7          	lui	a1,0xb
90000e14:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90000e18:	00b56633          	or	a2,a0,a1
90000e1c:	24c32423          	sw	a2,584(t1)

90000e20 <inst_166>:

inst_166:
// rs1_val==5 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x5, 0x3, x6, 588, x8)
90000e20:	00500513          	li	a0,5
90000e24:	00300593          	li	a1,3
90000e28:	00b56633          	or	a2,a0,a1
90000e2c:	24c32623          	sw	a2,588(t1)

90000e30 <inst_167>:

inst_167:
// rs1_val==5 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x5, 0x55555555, x6, 592, x8)
90000e30:	00500513          	li	a0,5
90000e34:	555555b7          	lui	a1,0x55555
90000e38:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90000e3c:	00b56633          	or	a2,a0,a1
90000e40:	24c32823          	sw	a2,592(t1)

90000e44 <inst_168>:

inst_168:
// rs1_val==5 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, 0x5, -0x55555556, x6, 596, x8)
90000e44:	00500513          	li	a0,5
90000e48:	aaaab5b7          	lui	a1,0xaaaab
90000e4c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000e50:	00b56633          	or	a2,a0,a1
90000e54:	24c32a23          	sw	a2,596(t1)

90000e58 <inst_169>:

inst_169:
// rs1_val==5 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x5, 0x5, 0x5, x6, 600, x8)
90000e58:	00500513          	li	a0,5
90000e5c:	00500593          	li	a1,5
90000e60:	00b56633          	or	a2,a0,a1
90000e64:	24c32c23          	sw	a2,600(t1)

90000e68 <inst_170>:

inst_170:
// rs1_val==5 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x5, 0x33333333, x6, 604, x8)
90000e68:	00500513          	li	a0,5
90000e6c:	333335b7          	lui	a1,0x33333
90000e70:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90000e74:	00b56633          	or	a2,a0,a1
90000e78:	24c32e23          	sw	a2,604(t1)

90000e7c <inst_171>:

inst_171:
// rs1_val==5 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x5, 0x66666666, x6, 608, x8)
90000e7c:	00500513          	li	a0,5
90000e80:	666665b7          	lui	a1,0x66666
90000e84:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90000e88:	00b56633          	or	a2,a0,a1
90000e8c:	26c32023          	sw	a2,608(t1)

90000e90 <inst_172>:

inst_172:
// rs1_val==5 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, 0x5, -0xb504, x6, 612, x8)
90000e90:	00500513          	li	a0,5
90000e94:	ffff55b7          	lui	a1,0xffff5
90000e98:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90000e9c:	00b56633          	or	a2,a0,a1
90000ea0:	26c32223          	sw	a2,612(t1)

90000ea4 <inst_173>:

inst_173:
// rs1_val==5 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0x5, 0xb504, x6, 616, x8)
90000ea4:	00500513          	li	a0,5
90000ea8:	0000b5b7          	lui	a1,0xb
90000eac:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90000eb0:	00b56633          	or	a2,a0,a1
90000eb4:	26c32423          	sw	a2,616(t1)

90000eb8 <inst_174>:

inst_174:
// rs1_val==5 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x5, 0x2, x6, 620, x8)
90000eb8:	00500513          	li	a0,5
90000ebc:	00200593          	li	a1,2
90000ec0:	00b56633          	or	a2,a0,a1
90000ec4:	26c32623          	sw	a2,620(t1)

90000ec8 <inst_175>:

inst_175:
// rs1_val==5 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x5, 0x55555554, x6, 624, x8)
90000ec8:	00500513          	li	a0,5
90000ecc:	555555b7          	lui	a1,0x55555
90000ed0:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90000ed4:	00b56633          	or	a2,a0,a1
90000ed8:	26c32823          	sw	a2,624(t1)

90000edc <inst_176>:

inst_176:
// rs1_val==5 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x5, 0x5, 0x0, x6, 628, x8)
90000edc:	00500513          	li	a0,5
90000ee0:	00000593          	li	a1,0
90000ee4:	00b56633          	or	a2,a0,a1
90000ee8:	26c32a23          	sw	a2,628(t1)

90000eec <inst_177>:

inst_177:
// rs1_val==5 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x5, 0x5, 0x4, x6, 632, x8)
90000eec:	00500513          	li	a0,5
90000ef0:	00400593          	li	a1,4
90000ef4:	00b56633          	or	a2,a0,a1
90000ef8:	26c32c23          	sw	a2,632(t1)

90000efc <inst_178>:

inst_178:
// rs1_val==5 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x5, 0x33333332, x6, 636, x8)
90000efc:	00500513          	li	a0,5
90000f00:	333335b7          	lui	a1,0x33333
90000f04:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90000f08:	00b56633          	or	a2,a0,a1
90000f0c:	26c32e23          	sw	a2,636(t1)

90000f10 <inst_179>:

inst_179:
// rs1_val==5 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x5, 0x66666665, x6, 640, x8)
90000f10:	00500513          	li	a0,5
90000f14:	666665b7          	lui	a1,0x66666
90000f18:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90000f1c:	00b56633          	or	a2,a0,a1
90000f20:	28c32023          	sw	a2,640(t1)

90000f24 <inst_180>:

inst_180:
// rs1_val==5 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x5, 0xb503, x6, 644, x8)
90000f24:	00500513          	li	a0,5
90000f28:	0000b5b7          	lui	a1,0xb
90000f2c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90000f30:	00b56633          	or	a2,a0,a1
90000f34:	28c32223          	sw	a2,644(t1)

90000f38 <inst_181>:

inst_181:
// rs1_val==5 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x5, 0x55555556, x6, 648, x8)
90000f38:	00500513          	li	a0,5
90000f3c:	555555b7          	lui	a1,0x55555
90000f40:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90000f44:	00b56633          	or	a2,a0,a1
90000f48:	28c32423          	sw	a2,648(t1)

90000f4c <inst_182>:

inst_182:
// rs1_val==5 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, 0x5, -0x55555555, x6, 652, x8)
90000f4c:	00500513          	li	a0,5
90000f50:	aaaab5b7          	lui	a1,0xaaaab
90000f54:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90000f58:	00b56633          	or	a2,a0,a1
90000f5c:	28c32623          	sw	a2,652(t1)

90000f60 <inst_183>:

inst_183:
// rs1_val==5 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x5, 0x6, x6, 656, x8)
90000f60:	00500513          	li	a0,5
90000f64:	00600593          	li	a1,6
90000f68:	00b56633          	or	a2,a0,a1
90000f6c:	28c32823          	sw	a2,656(t1)

90000f70 <inst_184>:

inst_184:
// rs1_val==5 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333335, 0x5, 0x33333334, x6, 660, x8)
90000f70:	00500513          	li	a0,5
90000f74:	333335b7          	lui	a1,0x33333
90000f78:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90000f7c:	00b56633          	or	a2,a0,a1
90000f80:	28c32a23          	sw	a2,660(t1)

90000f84 <inst_185>:

inst_185:
// rs1_val==5 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x5, 0x66666667, x6, 664, x8)
90000f84:	00500513          	li	a0,5
90000f88:	666665b7          	lui	a1,0x66666
90000f8c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90000f90:	00b56633          	or	a2,a0,a1
90000f94:	28c32c23          	sw	a2,664(t1)

90000f98 <inst_186>:

inst_186:
// rs1_val==5 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, 0x5, -0xb503, x6, 668, x8)
90000f98:	00500513          	li	a0,5
90000f9c:	ffff55b7          	lui	a1,0xffff5
90000fa0:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90000fa4:	00b56633          	or	a2,a0,a1
90000fa8:	28c32e23          	sw	a2,668(t1)

90000fac <inst_187>:

inst_187:
// rs1_val==5 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x5;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0x5, 0xb505, x6, 672, x8)
90000fac:	00500513          	li	a0,5
90000fb0:	0000b5b7          	lui	a1,0xb
90000fb4:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90000fb8:	00b56633          	or	a2,a0,a1
90000fbc:	2ac32023          	sw	a2,672(t1)

90000fc0 <inst_188>:

inst_188:
// rs1_val==858993459 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333333, 0x3, x6, 676, x8)
90000fc0:	33333537          	lui	a0,0x33333
90000fc4:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90000fc8:	00300593          	li	a1,3
90000fcc:	00b56633          	or	a2,a0,a1
90000fd0:	2ac32223          	sw	a2,676(t1)

90000fd4 <inst_189>:

inst_189:
// rs1_val==858993459 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x55555555, x6, 680, x8)
90000fd4:	33333537          	lui	a0,0x33333
90000fd8:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90000fdc:	555555b7          	lui	a1,0x55555
90000fe0:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90000fe4:	00b56633          	or	a2,a0,a1
90000fe8:	2ac32423          	sw	a2,680(t1)

90000fec <inst_190>:

inst_190:
// rs1_val==858993459 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, 0x33333333, -0x55555556, x6, 684, x8)
90000fec:	33333537          	lui	a0,0x33333
90000ff0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90000ff4:	aaaab5b7          	lui	a1,0xaaaab
90000ff8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90000ffc:	00b56633          	or	a2,a0,a1
90001000:	2ac32623          	sw	a2,684(t1)

90001004 <inst_191>:

inst_191:
// rs1_val==858993459 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333333, 0x5, x6, 688, x8)
90001004:	33333537          	lui	a0,0x33333
90001008:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
9000100c:	00500593          	li	a1,5
90001010:	00b56633          	or	a2,a0,a1
90001014:	2ac32823          	sw	a2,688(t1)

90001018 <inst_192>:

inst_192:
// rs1_val==858993459 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333333, 0x33333333, x6, 692, x8)
90001018:	33333537          	lui	a0,0x33333
9000101c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001020:	333335b7          	lui	a1,0x33333
90001024:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001028:	00b56633          	or	a2,a0,a1
9000102c:	2ac32a23          	sw	a2,692(t1)

90001030 <inst_193>:

inst_193:
// rs1_val==858993459 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x66666666, x6, 696, x8)
90001030:	33333537          	lui	a0,0x33333
90001034:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001038:	666665b7          	lui	a1,0x66666
9000103c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001040:	00b56633          	or	a2,a0,a1
90001044:	2ac32c23          	sw	a2,696(t1)

90001048 <inst_194>:

inst_194:
// rs1_val==858993459 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, 0x33333333, -0xb504, x6, 700, x8)
90001048:	33333537          	lui	a0,0x33333
9000104c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001050:	ffff55b7          	lui	a1,0xffff5
90001054:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001058:	00b56633          	or	a2,a0,a1
9000105c:	2ac32e23          	sw	a2,700(t1)

90001060 <inst_195>:

inst_195:
// rs1_val==858993459 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0x33333333, 0xb504, x6, 704, x8)
90001060:	33333537          	lui	a0,0x33333
90001064:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001068:	0000b5b7          	lui	a1,0xb
9000106c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001070:	00b56633          	or	a2,a0,a1
90001074:	2cc32023          	sw	a2,704(t1)

90001078 <inst_196>:

inst_196:
// rs1_val==858993459 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333333, 0x2, x6, 708, x8)
90001078:	33333537          	lui	a0,0x33333
9000107c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001080:	00200593          	li	a1,2
90001084:	00b56633          	or	a2,a0,a1
90001088:	2cc32223          	sw	a2,708(t1)

9000108c <inst_197>:

inst_197:
// rs1_val==858993459 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x55555554, x6, 712, x8)
9000108c:	33333537          	lui	a0,0x33333
90001090:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001094:	555555b7          	lui	a1,0x55555
90001098:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
9000109c:	00b56633          	or	a2,a0,a1
900010a0:	2cc32423          	sw	a2,712(t1)

900010a4 <inst_198>:

inst_198:
// rs1_val==858993459 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333333, 0x0, x6, 716, x8)
900010a4:	33333537          	lui	a0,0x33333
900010a8:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
900010ac:	00000593          	li	a1,0
900010b0:	00b56633          	or	a2,a0,a1
900010b4:	2cc32623          	sw	a2,716(t1)

900010b8 <inst_199>:

inst_199:
// rs1_val==858993459 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333333, 0x4, x6, 720, x8)
900010b8:	33333537          	lui	a0,0x33333
900010bc:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
900010c0:	00400593          	li	a1,4
900010c4:	00b56633          	or	a2,a0,a1
900010c8:	2cc32823          	sw	a2,720(t1)

900010cc <inst_200>:

inst_200:
// rs1_val==858993459 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333333, 0x33333332, x6, 724, x8)
900010cc:	33333537          	lui	a0,0x33333
900010d0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
900010d4:	333335b7          	lui	a1,0x33333
900010d8:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900010dc:	00b56633          	or	a2,a0,a1
900010e0:	2cc32a23          	sw	a2,724(t1)

900010e4 <inst_201>:

inst_201:
// rs1_val==858993459 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x66666665, x6, 728, x8)
900010e4:	33333537          	lui	a0,0x33333
900010e8:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
900010ec:	666665b7          	lui	a1,0x66666
900010f0:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900010f4:	00b56633          	or	a2,a0,a1
900010f8:	2cc32c23          	sw	a2,728(t1)

900010fc <inst_202>:

inst_202:
// rs1_val==858993459 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x3333b733, 0x33333333, 0xb503, x6, 732, x8)
900010fc:	33333537          	lui	a0,0x33333
90001100:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001104:	0000b5b7          	lui	a1,0xb
90001108:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
9000110c:	00b56633          	or	a2,a0,a1
90001110:	2cc32e23          	sw	a2,732(t1)

90001114 <inst_203>:

inst_203:
// rs1_val==858993459 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x55555556, x6, 736, x8)
90001114:	33333537          	lui	a0,0x33333
90001118:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
9000111c:	555555b7          	lui	a1,0x55555
90001120:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90001124:	00b56633          	or	a2,a0,a1
90001128:	2ec32023          	sw	a2,736(t1)

9000112c <inst_204>:

inst_204:
// rs1_val==858993459 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, 0x33333333, -0x55555555, x6, 740, x8)
9000112c:	33333537          	lui	a0,0x33333
90001130:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001134:	aaaab5b7          	lui	a1,0xaaaab
90001138:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000113c:	00b56633          	or	a2,a0,a1
90001140:	2ec32223          	sw	a2,740(t1)

90001144 <inst_205>:

inst_205:
// rs1_val==858993459 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333333, 0x6, x6, 744, x8)
90001144:	33333537          	lui	a0,0x33333
90001148:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
9000114c:	00600593          	li	a1,6
90001150:	00b56633          	or	a2,a0,a1
90001154:	2ec32423          	sw	a2,744(t1)

90001158 <inst_206>:

inst_206:
// rs1_val==858993459 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333333, 0x33333334, x6, 748, x8)
90001158:	33333537          	lui	a0,0x33333
9000115c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001160:	333335b7          	lui	a1,0x33333
90001164:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001168:	00b56633          	or	a2,a0,a1
9000116c:	2ec32623          	sw	a2,748(t1)

90001170 <inst_207>:

inst_207:
// rs1_val==858993459 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333333, 0x66666667, x6, 752, x8)
90001170:	33333537          	lui	a0,0x33333
90001174:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001178:	666665b7          	lui	a1,0x66666
9000117c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001180:	00b56633          	or	a2,a0,a1
90001184:	2ec32823          	sw	a2,752(t1)

90001188 <inst_208>:

inst_208:
// rs1_val==858993459 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, 0x33333333, -0xb503, x6, 756, x8)
90001188:	33333537          	lui	a0,0x33333
9000118c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
90001190:	ffff55b7          	lui	a1,0xffff5
90001194:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001198:	00b56633          	or	a2,a0,a1
9000119c:	2ec32a23          	sw	a2,756(t1)

900011a0 <inst_209>:

inst_209:
// rs1_val==858993459 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333333;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0x33333333, 0xb505, x6, 760, x8)
900011a0:	33333537          	lui	a0,0x33333
900011a4:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333253>
900011a8:	0000b5b7          	lui	a1,0xb
900011ac:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900011b0:	00b56633          	or	a2,a0,a1
900011b4:	2ec32c23          	sw	a2,760(t1)

900011b8 <inst_210>:

inst_210:
// rs1_val==1717986918 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666666, 0x3, x6, 764, x8)
900011b8:	66666537          	lui	a0,0x66666
900011bc:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900011c0:	00300593          	li	a1,3
900011c4:	00b56633          	or	a2,a0,a1
900011c8:	2ec32e23          	sw	a2,764(t1)

900011cc <inst_211>:

inst_211:
// rs1_val==1717986918 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666666, 0x55555555, x6, 768, x8)
900011cc:	66666537          	lui	a0,0x66666
900011d0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900011d4:	555555b7          	lui	a1,0x55555
900011d8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900011dc:	00b56633          	or	a2,a0,a1
900011e0:	30c32023          	sw	a2,768(t1)

900011e4 <inst_212>:

inst_212:
// rs1_val==1717986918 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeee, 0x66666666, -0x55555556, x6, 772, x8)
900011e4:	66666537          	lui	a0,0x66666
900011e8:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900011ec:	aaaab5b7          	lui	a1,0xaaaab
900011f0:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900011f4:	00b56633          	or	a2,a0,a1
900011f8:	30c32223          	sw	a2,772(t1)

900011fc <inst_213>:

inst_213:
// rs1_val==1717986918 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666666, 0x5, x6, 776, x8)
900011fc:	66666537          	lui	a0,0x66666
90001200:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001204:	00500593          	li	a1,5
90001208:	00b56633          	or	a2,a0,a1
9000120c:	30c32423          	sw	a2,776(t1)

90001210 <inst_214>:

inst_214:
// rs1_val==1717986918 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666666, 0x33333333, x6, 780, x8)
90001210:	66666537          	lui	a0,0x66666
90001214:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001218:	333335b7          	lui	a1,0x33333
9000121c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001220:	00b56633          	or	a2,a0,a1
90001224:	30c32623          	sw	a2,780(t1)

90001228 <inst_215>:

inst_215:
// rs1_val==1717986918 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x66666666, 0x66666666, x6, 784, x8)
90001228:	66666537          	lui	a0,0x66666
9000122c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001230:	666665b7          	lui	a1,0x66666
90001234:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001238:	00b56633          	or	a2,a0,a1
9000123c:	30c32823          	sw	a2,784(t1)

90001240 <inst_216>:

inst_216:
// rs1_val==1717986918 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff6efe, 0x66666666, -0xb504, x6, 788, x8)
90001240:	66666537          	lui	a0,0x66666
90001244:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001248:	ffff55b7          	lui	a1,0xffff5
9000124c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001250:	00b56633          	or	a2,a0,a1
90001254:	30c32a23          	sw	a2,788(t1)

90001258 <inst_217>:

inst_217:
// rs1_val==1717986918 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x6666f766, 0x66666666, 0xb504, x6, 792, x8)
90001258:	66666537          	lui	a0,0x66666
9000125c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001260:	0000b5b7          	lui	a1,0xb
90001264:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001268:	00b56633          	or	a2,a0,a1
9000126c:	30c32c23          	sw	a2,792(t1)

90001270 <inst_218>:

inst_218:
// rs1_val==1717986918 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x66666666, 0x2, x6, 796, x8)
90001270:	66666537          	lui	a0,0x66666
90001274:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001278:	00200593          	li	a1,2
9000127c:	00b56633          	or	a2,a0,a1
90001280:	30c32e23          	sw	a2,796(t1)

90001284 <inst_219>:

inst_219:
// rs1_val==1717986918 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x66666666, 0x55555554, x6, 800, x8)
90001284:	66666537          	lui	a0,0x66666
90001288:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
9000128c:	555555b7          	lui	a1,0x55555
90001290:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001294:	00b56633          	or	a2,a0,a1
90001298:	32c32023          	sw	a2,800(t1)

9000129c <inst_220>:

inst_220:
// rs1_val==1717986918 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x66666666, 0x0, x6, 804, x8)
9000129c:	66666537          	lui	a0,0x66666
900012a0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900012a4:	00000593          	li	a1,0
900012a8:	00b56633          	or	a2,a0,a1
900012ac:	32c32223          	sw	a2,804(t1)

900012b0 <inst_221>:

inst_221:
// rs1_val==1717986918 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x66666666, 0x4, x6, 808, x8)
900012b0:	66666537          	lui	a0,0x66666
900012b4:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900012b8:	00400593          	li	a1,4
900012bc:	00b56633          	or	a2,a0,a1
900012c0:	32c32423          	sw	a2,808(t1)

900012c4 <inst_222>:

inst_222:
// rs1_val==1717986918 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x66666666, 0x33333332, x6, 812, x8)
900012c4:	66666537          	lui	a0,0x66666
900012c8:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900012cc:	333335b7          	lui	a1,0x33333
900012d0:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900012d4:	00b56633          	or	a2,a0,a1
900012d8:	32c32623          	sw	a2,812(t1)

900012dc <inst_223>:

inst_223:
// rs1_val==1717986918 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666666, 0x66666665, x6, 816, x8)
900012dc:	66666537          	lui	a0,0x66666
900012e0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900012e4:	666665b7          	lui	a1,0x66666
900012e8:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900012ec:	00b56633          	or	a2,a0,a1
900012f0:	32c32823          	sw	a2,816(t1)

900012f4 <inst_224>:

inst_224:
// rs1_val==1717986918 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666666, 0xb503, x6, 820, x8)
900012f4:	66666537          	lui	a0,0x66666
900012f8:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900012fc:	0000b5b7          	lui	a1,0xb
90001300:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90001304:	00b56633          	or	a2,a0,a1
90001308:	32c32a23          	sw	a2,820(t1)

9000130c <inst_225>:

inst_225:
// rs1_val==1717986918 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x66666666, 0x55555556, x6, 824, x8)
9000130c:	66666537          	lui	a0,0x66666
90001310:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001314:	555555b7          	lui	a1,0x55555
90001318:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
9000131c:	00b56633          	or	a2,a0,a1
90001320:	32c32c23          	sw	a2,824(t1)

90001324 <inst_226>:

inst_226:
// rs1_val==1717986918 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, 0x66666666, -0x55555555, x6, 828, x8)
90001324:	66666537          	lui	a0,0x66666
90001328:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
9000132c:	aaaab5b7          	lui	a1,0xaaaab
90001330:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001334:	00b56633          	or	a2,a0,a1
90001338:	32c32e23          	sw	a2,828(t1)

9000133c <inst_227>:

inst_227:
// rs1_val==1717986918 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x66666666, 0x6, x6, 832, x8)
9000133c:	66666537          	lui	a0,0x66666
90001340:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001344:	00600593          	li	a1,6
90001348:	00b56633          	or	a2,a0,a1
9000134c:	34c32023          	sw	a2,832(t1)

90001350 <inst_228>:

inst_228:
// rs1_val==1717986918 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x66666666, 0x33333334, x6, 836, x8)
90001350:	66666537          	lui	a0,0x66666
90001354:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001358:	333335b7          	lui	a1,0x33333
9000135c:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001360:	00b56633          	or	a2,a0,a1
90001364:	34c32223          	sw	a2,836(t1)

90001368 <inst_229>:

inst_229:
// rs1_val==1717986918 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666666, 0x66666667, x6, 840, x8)
90001368:	66666537          	lui	a0,0x66666
9000136c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001370:	666665b7          	lui	a1,0x66666
90001374:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001378:	00b56633          	or	a2,a0,a1
9000137c:	34c32423          	sw	a2,840(t1)

90001380 <inst_230>:

inst_230:
// rs1_val==1717986918 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, 0x66666666, -0xb503, x6, 844, x8)
90001380:	66666537          	lui	a0,0x66666
90001384:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
90001388:	ffff55b7          	lui	a1,0xffff5
9000138c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001390:	00b56633          	or	a2,a0,a1
90001394:	34c32623          	sw	a2,844(t1)

90001398 <inst_231>:

inst_231:
// rs1_val==1717986918 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666666;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666666, 0xb505, x6, 848, x8)
90001398:	66666537          	lui	a0,0x66666
9000139c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666586>
900013a0:	0000b5b7          	lui	a1,0xb
900013a4:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900013a8:	00b56633          	or	a2,a0,a1
900013ac:	34c32823          	sw	a2,848(t1)

900013b0 <inst_232>:

inst_232:
// rs1_val==-46340 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, -0xb504, 0x3, x6, 852, x8)
900013b0:	ffff5537          	lui	a0,0xffff5
900013b4:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013b8:	00300593          	li	a1,3
900013bc:	00b56633          	or	a2,a0,a1
900013c0:	34c32a23          	sw	a2,852(t1)

900013c4 <inst_233>:

inst_233:
// rs1_val==-46340 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, -0xb504, 0x55555555, x6, 856, x8)
900013c4:	ffff5537          	lui	a0,0xffff5
900013c8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013cc:	555555b7          	lui	a1,0x55555
900013d0:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900013d4:	00b56633          	or	a2,a0,a1
900013d8:	34c32c23          	sw	a2,856(t1)

900013dc <inst_234>:

inst_234:
// rs1_val==-46340 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffffeafe, -0xb504, -0x55555556, x6, 860, x8)
900013dc:	ffff5537          	lui	a0,0xffff5
900013e0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013e4:	aaaab5b7          	lui	a1,0xaaaab
900013e8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900013ec:	00b56633          	or	a2,a0,a1
900013f0:	34c32e23          	sw	a2,860(t1)

900013f4 <inst_235>:

inst_235:
// rs1_val==-46340 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb504, 0x5, x6, 864, x8)
900013f4:	ffff5537          	lui	a0,0xffff5
900013f8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900013fc:	00500593          	li	a1,5
90001400:	00b56633          	or	a2,a0,a1
90001404:	36c32023          	sw	a2,864(t1)

90001408 <inst_236>:

inst_236:
// rs1_val==-46340 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, -0xb504, 0x33333333, x6, 868, x8)
90001408:	ffff5537          	lui	a0,0xffff5
9000140c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001410:	333335b7          	lui	a1,0x33333
90001414:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001418:	00b56633          	or	a2,a0,a1
9000141c:	36c32223          	sw	a2,868(t1)

90001420 <inst_237>:

inst_237:
// rs1_val==-46340 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0xffff6efe, -0xb504, 0x66666666, x6, 872, x8)
90001420:	ffff5537          	lui	a0,0xffff5
90001424:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001428:	666665b7          	lui	a1,0x66666
9000142c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001430:	00b56633          	or	a2,a0,a1
90001434:	36c32423          	sw	a2,872(t1)

90001438 <inst_238>:

inst_238:
// rs1_val==-46340 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afc, -0xb504, -0xb504, x6, 876, x8)
90001438:	ffff5537          	lui	a0,0xffff5
9000143c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001440:	ffff55b7          	lui	a1,0xffff5
90001444:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001448:	00b56633          	or	a2,a0,a1
9000144c:	36c32623          	sw	a2,876(t1)

90001450 <inst_239>:

inst_239:
// rs1_val==-46340 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xfffffffc, -0xb504, 0xb504, x6, 880, x8)
90001450:	ffff5537          	lui	a0,0xffff5
90001454:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001458:	0000b5b7          	lui	a1,0xb
9000145c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001460:	00b56633          	or	a2,a0,a1
90001464:	36c32823          	sw	a2,880(t1)

90001468 <inst_240>:

inst_240:
// rs1_val==-46340 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xffff4afe, -0xb504, 0x2, x6, 884, x8)
90001468:	ffff5537          	lui	a0,0xffff5
9000146c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001470:	00200593          	li	a1,2
90001474:	00b56633          	or	a2,a0,a1
90001478:	36c32a23          	sw	a2,884(t1)

9000147c <inst_241>:

inst_241:
// rs1_val==-46340 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffc, -0xb504, 0x55555554, x6, 888, x8)
9000147c:	ffff5537          	lui	a0,0xffff5
90001480:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001484:	555555b7          	lui	a1,0x55555
90001488:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
9000148c:	00b56633          	or	a2,a0,a1
90001490:	36c32c23          	sw	a2,888(t1)

90001494 <inst_242>:

inst_242:
// rs1_val==-46340 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xffff4afc, -0xb504, 0x0, x6, 892, x8)
90001494:	ffff5537          	lui	a0,0xffff5
90001498:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
9000149c:	00000593          	li	a1,0
900014a0:	00b56633          	or	a2,a0,a1
900014a4:	36c32e23          	sw	a2,892(t1)

900014a8 <inst_243>:

inst_243:
// rs1_val==-46340 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xffff4afc, -0xb504, 0x4, x6, 896, x8)
900014a8:	ffff5537          	lui	a0,0xffff5
900014ac:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014b0:	00400593          	li	a1,4
900014b4:	00b56633          	or	a2,a0,a1
900014b8:	38c32023          	sw	a2,896(t1)

900014bc <inst_244>:

inst_244:
// rs1_val==-46340 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfe, -0xb504, 0x33333332, x6, 900, x8)
900014bc:	ffff5537          	lui	a0,0xffff5
900014c0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014c4:	333335b7          	lui	a1,0x33333
900014c8:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900014cc:	00b56633          	or	a2,a0,a1
900014d0:	38c32223          	sw	a2,900(t1)

900014d4 <inst_245>:

inst_245:
// rs1_val==-46340 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0xffff6efd, -0xb504, 0x66666665, x6, 904, x8)
900014d4:	ffff5537          	lui	a0,0xffff5
900014d8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014dc:	666665b7          	lui	a1,0x66666
900014e0:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900014e4:	00b56633          	or	a2,a0,a1
900014e8:	38c32423          	sw	a2,904(t1)

900014ec <inst_246>:

inst_246:
// rs1_val==-46340 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0xb504, 0xb503, x6, 908, x8)
900014ec:	ffff5537          	lui	a0,0xffff5
900014f0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
900014f4:	0000b5b7          	lui	a1,0xb
900014f8:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900014fc:	00b56633          	or	a2,a0,a1
90001500:	38c32623          	sw	a2,908(t1)

90001504 <inst_247>:

inst_247:
// rs1_val==-46340 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffe, -0xb504, 0x55555556, x6, 912, x8)
90001504:	ffff5537          	lui	a0,0xffff5
90001508:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
9000150c:	555555b7          	lui	a1,0x55555
90001510:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90001514:	00b56633          	or	a2,a0,a1
90001518:	38c32823          	sw	a2,912(t1)

9000151c <inst_248>:

inst_248:
// rs1_val==-46340 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0xb504, -0x55555555, x6, 916, x8)
9000151c:	ffff5537          	lui	a0,0xffff5
90001520:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001524:	aaaab5b7          	lui	a1,0xaaaab
90001528:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000152c:	00b56633          	or	a2,a0,a1
90001530:	38c32a23          	sw	a2,916(t1)

90001534 <inst_249>:

inst_249:
// rs1_val==-46340 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xffff4afe, -0xb504, 0x6, x6, 920, x8)
90001534:	ffff5537          	lui	a0,0xffff5
90001538:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
9000153c:	00600593          	li	a1,6
90001540:	00b56633          	or	a2,a0,a1
90001544:	38c32c23          	sw	a2,920(t1)

90001548 <inst_250>:

inst_250:
// rs1_val==-46340 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfc, -0xb504, 0x33333334, x6, 924, x8)
90001548:	ffff5537          	lui	a0,0xffff5
9000154c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001550:	333335b7          	lui	a1,0x33333
90001554:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001558:	00b56633          	or	a2,a0,a1
9000155c:	38c32e23          	sw	a2,924(t1)

90001560 <inst_251>:

inst_251:
// rs1_val==-46340 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, -0xb504, 0x66666667, x6, 928, x8)
90001560:	ffff5537          	lui	a0,0xffff5
90001564:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001568:	666665b7          	lui	a1,0x66666
9000156c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001570:	00b56633          	or	a2,a0,a1
90001574:	3ac32023          	sw	a2,928(t1)

90001578 <inst_252>:

inst_252:
// rs1_val==-46340 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb504, -0xb503, x6, 932, x8)
90001578:	ffff5537          	lui	a0,0xffff5
9000157c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001580:	ffff55b7          	lui	a1,0xffff5
90001584:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001588:	00b56633          	or	a2,a0,a1
9000158c:	3ac32223          	sw	a2,932(t1)

90001590 <inst_253>:

inst_253:
// rs1_val==-46340 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb504;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, -0xb504, 0xb505, x6, 936, x8)
90001590:	ffff5537          	lui	a0,0xffff5
90001594:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffeeff8>
90001598:	0000b5b7          	lui	a1,0xb
9000159c:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900015a0:	00b56633          	or	a2,a0,a1
900015a4:	3ac32423          	sw	a2,936(t1)

900015a8 <inst_254>:

inst_254:
// rs1_val==46340 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb504, 0x3, x6, 940, x8)
900015a8:	0000b537          	lui	a0,0xb
900015ac:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900015b0:	00300593          	li	a1,3
900015b4:	00b56633          	or	a2,a0,a1
900015b8:	3ac32623          	sw	a2,940(t1)

900015bc <inst_255>:

inst_255:
// rs1_val==46340 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0xb504, 0x55555555, x6, 944, x8)
900015bc:	0000b537          	lui	a0,0xb
900015c0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900015c4:	555555b7          	lui	a1,0x55555
900015c8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900015cc:	00b56633          	or	a2,a0,a1
900015d0:	3ac32823          	sw	a2,944(t1)

900015d4 <inst_256>:

inst_256:
// rs1_val==46340 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfae, 0xb504, -0x55555556, x6, 948, x8)
900015d4:	0000b537          	lui	a0,0xb
900015d8:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900015dc:	aaaab5b7          	lui	a1,0xaaaab
900015e0:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900015e4:	00b56633          	or	a2,a0,a1
900015e8:	3ac32a23          	sw	a2,948(t1)

900015ec <inst_257>:

inst_257:
// rs1_val==46340 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb504, 0x5, x6, 952, x8)
900015ec:	0000b537          	lui	a0,0xb
900015f0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900015f4:	00500593          	li	a1,5
900015f8:	00b56633          	or	a2,a0,a1
900015fc:	3ac32c23          	sw	a2,952(t1)

90001600 <inst_258>:

inst_258:
// rs1_val==46340 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0xb504, 0x33333333, x6, 956, x8)
90001600:	0000b537          	lui	a0,0xb
90001604:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001608:	333335b7          	lui	a1,0x33333
9000160c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001610:	00b56633          	or	a2,a0,a1
90001614:	3ac32e23          	sw	a2,956(t1)

90001618 <inst_259>:

inst_259:
// rs1_val==46340 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x6666f766, 0xb504, 0x66666666, x6, 960, x8)
90001618:	0000b537          	lui	a0,0xb
9000161c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001620:	666665b7          	lui	a1,0x66666
90001624:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001628:	00b56633          	or	a2,a0,a1
9000162c:	3cc32023          	sw	a2,960(t1)

90001630 <inst_260>:

inst_260:
// rs1_val==46340 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xfffffffc, 0xb504, -0xb504, x6, 964, x8)
90001630:	0000b537          	lui	a0,0xb
90001634:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001638:	ffff55b7          	lui	a1,0xffff5
9000163c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001640:	00b56633          	or	a2,a0,a1
90001644:	3cc32223          	sw	a2,964(t1)

90001648 <inst_261>:

inst_261:
// rs1_val==46340 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb504, 0xb504, 0xb504, x6, 968, x8)
90001648:	0000b537          	lui	a0,0xb
9000164c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001650:	0000b5b7          	lui	a1,0xb
90001654:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001658:	00b56633          	or	a2,a0,a1
9000165c:	3cc32423          	sw	a2,968(t1)

90001660 <inst_262>:

inst_262:
// rs1_val==46340 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xb506, 0xb504, 0x2, x6, 972, x8)
90001660:	0000b537          	lui	a0,0xb
90001664:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001668:	00200593          	li	a1,2
9000166c:	00b56633          	or	a2,a0,a1
90001670:	3cc32623          	sw	a2,972(t1)

90001674 <inst_263>:

inst_263:
// rs1_val==46340 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x5555f554, 0xb504, 0x55555554, x6, 976, x8)
90001674:	0000b537          	lui	a0,0xb
90001678:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
9000167c:	555555b7          	lui	a1,0x55555
90001680:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001684:	00b56633          	or	a2,a0,a1
90001688:	3cc32823          	sw	a2,976(t1)

9000168c <inst_264>:

inst_264:
// rs1_val==46340 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xb504, 0xb504, 0x0, x6, 980, x8)
9000168c:	0000b537          	lui	a0,0xb
90001690:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001694:	00000593          	li	a1,0
90001698:	00b56633          	or	a2,a0,a1
9000169c:	3cc32a23          	sw	a2,980(t1)

900016a0 <inst_265>:

inst_265:
// rs1_val==46340 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xb504, 0xb504, 0x4, x6, 984, x8)
900016a0:	0000b537          	lui	a0,0xb
900016a4:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900016a8:	00400593          	li	a1,4
900016ac:	00b56633          	or	a2,a0,a1
900016b0:	3cc32c23          	sw	a2,984(t1)

900016b4 <inst_266>:

inst_266:
// rs1_val==46340 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x3333b736, 0xb504, 0x33333332, x6, 988, x8)
900016b4:	0000b537          	lui	a0,0xb
900016b8:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900016bc:	333335b7          	lui	a1,0x33333
900016c0:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900016c4:	00b56633          	or	a2,a0,a1
900016c8:	3cc32e23          	sw	a2,988(t1)

900016cc <inst_267>:

inst_267:
// rs1_val==46340 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x6666f765, 0xb504, 0x66666665, x6, 992, x8)
900016cc:	0000b537          	lui	a0,0xb
900016d0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900016d4:	666665b7          	lui	a1,0x66666
900016d8:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900016dc:	00b56633          	or	a2,a0,a1
900016e0:	3ec32023          	sw	a2,992(t1)

900016e4 <inst_268>:

inst_268:
// rs1_val==46340 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb504, 0xb503, x6, 996, x8)
900016e4:	0000b537          	lui	a0,0xb
900016e8:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
900016ec:	0000b5b7          	lui	a1,0xb
900016f0:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900016f4:	00b56633          	or	a2,a0,a1
900016f8:	3ec32223          	sw	a2,996(t1)

900016fc <inst_269>:

inst_269:
// rs1_val==46340 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x5555f556, 0xb504, 0x55555556, x6, 1000, x8)
900016fc:	0000b537          	lui	a0,0xb
90001700:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001704:	555555b7          	lui	a1,0x55555
90001708:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
9000170c:	00b56633          	or	a2,a0,a1
90001710:	3ec32423          	sw	a2,1000(t1)

90001714 <inst_270>:

inst_270:
// rs1_val==46340 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, 0xb504, -0x55555555, x6, 1004, x8)
90001714:	0000b537          	lui	a0,0xb
90001718:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
9000171c:	aaaab5b7          	lui	a1,0xaaaab
90001720:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001724:	00b56633          	or	a2,a0,a1
90001728:	3ec32623          	sw	a2,1004(t1)

9000172c <inst_271>:

inst_271:
// rs1_val==46340 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xb506, 0xb504, 0x6, x6, 1008, x8)
9000172c:	0000b537          	lui	a0,0xb
90001730:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001734:	00600593          	li	a1,6
90001738:	00b56633          	or	a2,a0,a1
9000173c:	3ec32823          	sw	a2,1008(t1)

90001740 <inst_272>:

inst_272:
// rs1_val==46340 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x3333b734, 0xb504, 0x33333334, x6, 1012, x8)
90001740:	0000b537          	lui	a0,0xb
90001744:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001748:	333335b7          	lui	a1,0x33333
9000174c:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001750:	00b56633          	or	a2,a0,a1
90001754:	3ec32a23          	sw	a2,1012(t1)

90001758 <inst_273>:

inst_273:
// rs1_val==46340 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb504, 0x66666667, x6, 1016, x8)
90001758:	0000b537          	lui	a0,0xb
9000175c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001760:	666665b7          	lui	a1,0x66666
90001764:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001768:	00b56633          	or	a2,a0,a1
9000176c:	3ec32c23          	sw	a2,1016(t1)

90001770 <inst_274>:

inst_274:
// rs1_val==46340 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, 0xb504, -0xb503, x6, 1020, x8)
90001770:	0000b537          	lui	a0,0xb
90001774:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001778:	ffff55b7          	lui	a1,0xffff5
9000177c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001780:	00b56633          	or	a2,a0,a1
90001784:	3ec32e23          	sw	a2,1020(t1)

90001788 <inst_275>:

inst_275:
// rs1_val==46340 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb504;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb504, 0xb505, x6, 1024, x8)
90001788:	0000b537          	lui	a0,0xb
9000178c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb424>
90001790:	0000b5b7          	lui	a1,0xb
90001794:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001798:	00b56633          	or	a2,a0,a1
9000179c:	40c32023          	sw	a2,1024(t1)

900017a0 <inst_276>:

inst_276:
// rs1_val==2 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x3, 0x2, 0x3, x6, 1028, x8)
900017a0:	00200513          	li	a0,2
900017a4:	00300593          	li	a1,3
900017a8:	00b56633          	or	a2,a0,a1
900017ac:	40c32223          	sw	a2,1028(t1)

900017b0 <inst_277>:

inst_277:
// rs1_val==2 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x2, 0x55555555, x6, 1032, x8)
900017b0:	00200513          	li	a0,2
900017b4:	555555b7          	lui	a1,0x55555
900017b8:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900017bc:	00b56633          	or	a2,a0,a1
900017c0:	40c32423          	sw	a2,1032(t1)

900017c4 <inst_278>:

inst_278:
// rs1_val==2 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, 0x2, -0x55555556, x6, 1036, x8)
900017c4:	00200513          	li	a0,2
900017c8:	aaaab5b7          	lui	a1,0xaaaab
900017cc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900017d0:	00b56633          	or	a2,a0,a1
900017d4:	40c32623          	sw	a2,1036(t1)

900017d8 <inst_279>:

inst_279:
// rs1_val==2 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x2, 0x5, x6, 1040, x8)
900017d8:	00200513          	li	a0,2
900017dc:	00500593          	li	a1,5
900017e0:	00b56633          	or	a2,a0,a1
900017e4:	40c32823          	sw	a2,1040(t1)

900017e8 <inst_280>:

inst_280:
// rs1_val==2 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x2, 0x33333333, x6, 1044, x8)
900017e8:	00200513          	li	a0,2
900017ec:	333335b7          	lui	a1,0x33333
900017f0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
900017f4:	00b56633          	or	a2,a0,a1
900017f8:	40c32a23          	sw	a2,1044(t1)

900017fc <inst_281>:

inst_281:
// rs1_val==2 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x2, 0x66666666, x6, 1048, x8)
900017fc:	00200513          	li	a0,2
90001800:	666665b7          	lui	a1,0x66666
90001804:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001808:	00b56633          	or	a2,a0,a1
9000180c:	40c32c23          	sw	a2,1048(t1)

90001810 <inst_282>:

inst_282:
// rs1_val==2 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afe, 0x2, -0xb504, x6, 1052, x8)
90001810:	00200513          	li	a0,2
90001814:	ffff55b7          	lui	a1,0xffff5
90001818:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000181c:	00b56633          	or	a2,a0,a1
90001820:	40c32e23          	sw	a2,1052(t1)

90001824 <inst_283>:

inst_283:
// rs1_val==2 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb506, 0x2, 0xb504, x6, 1056, x8)
90001824:	00200513          	li	a0,2
90001828:	0000b5b7          	lui	a1,0xb
9000182c:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001830:	00b56633          	or	a2,a0,a1
90001834:	42c32023          	sw	a2,1056(t1)

90001838 <inst_284>:

inst_284:
// rs1_val==2 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x2, 0x2, 0x2, x6, 1060, x8)
90001838:	00200513          	li	a0,2
9000183c:	00200593          	li	a1,2
90001840:	00b56633          	or	a2,a0,a1
90001844:	42c32223          	sw	a2,1060(t1)

90001848 <inst_285>:

inst_285:
// rs1_val==2 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x2, 0x55555554, x6, 1064, x8)
90001848:	00200513          	li	a0,2
9000184c:	555555b7          	lui	a1,0x55555
90001850:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001854:	00b56633          	or	a2,a0,a1
90001858:	42c32423          	sw	a2,1064(t1)

9000185c <inst_286>:

inst_286:
// rs1_val==2 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x2, 0x2, 0x0, x6, 1068, x8)
9000185c:	00200513          	li	a0,2
90001860:	00000593          	li	a1,0
90001864:	00b56633          	or	a2,a0,a1
90001868:	42c32623          	sw	a2,1068(t1)

9000186c <inst_287>:

inst_287:
// rs1_val==2 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x2, 0x4, x6, 1072, x8)
9000186c:	00200513          	li	a0,2
90001870:	00400593          	li	a1,4
90001874:	00b56633          	or	a2,a0,a1
90001878:	42c32823          	sw	a2,1072(t1)

9000187c <inst_288>:

inst_288:
// rs1_val==2 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x2, 0x33333332, x6, 1076, x8)
9000187c:	00200513          	li	a0,2
90001880:	333335b7          	lui	a1,0x33333
90001884:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90001888:	00b56633          	or	a2,a0,a1
9000188c:	42c32a23          	sw	a2,1076(t1)

90001890 <inst_289>:

inst_289:
// rs1_val==2 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x2, 0x66666665, x6, 1080, x8)
90001890:	00200513          	li	a0,2
90001894:	666665b7          	lui	a1,0x66666
90001898:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
9000189c:	00b56633          	or	a2,a0,a1
900018a0:	42c32c23          	sw	a2,1080(t1)

900018a4 <inst_290>:

inst_290:
// rs1_val==2 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0x2, 0xb503, x6, 1084, x8)
900018a4:	00200513          	li	a0,2
900018a8:	0000b5b7          	lui	a1,0xb
900018ac:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900018b0:	00b56633          	or	a2,a0,a1
900018b4:	42c32e23          	sw	a2,1084(t1)

900018b8 <inst_291>:

inst_291:
// rs1_val==2 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x2, 0x55555556, x6, 1088, x8)
900018b8:	00200513          	li	a0,2
900018bc:	555555b7          	lui	a1,0x55555
900018c0:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
900018c4:	00b56633          	or	a2,a0,a1
900018c8:	44c32023          	sw	a2,1088(t1)

900018cc <inst_292>:

inst_292:
// rs1_val==2 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, 0x2, -0x55555555, x6, 1092, x8)
900018cc:	00200513          	li	a0,2
900018d0:	aaaab5b7          	lui	a1,0xaaaab
900018d4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900018d8:	00b56633          	or	a2,a0,a1
900018dc:	44c32223          	sw	a2,1092(t1)

900018e0 <inst_293>:

inst_293:
// rs1_val==2 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x2, 0x6, x6, 1096, x8)
900018e0:	00200513          	li	a0,2
900018e4:	00600593          	li	a1,6
900018e8:	00b56633          	or	a2,a0,a1
900018ec:	44c32423          	sw	a2,1096(t1)

900018f0 <inst_294>:

inst_294:
// rs1_val==2 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x2, 0x33333334, x6, 1100, x8)
900018f0:	00200513          	li	a0,2
900018f4:	333335b7          	lui	a1,0x33333
900018f8:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
900018fc:	00b56633          	or	a2,a0,a1
90001900:	44c32623          	sw	a2,1100(t1)

90001904 <inst_295>:

inst_295:
// rs1_val==2 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x2, 0x66666667, x6, 1104, x8)
90001904:	00200513          	li	a0,2
90001908:	666665b7          	lui	a1,0x66666
9000190c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001910:	00b56633          	or	a2,a0,a1
90001914:	44c32823          	sw	a2,1104(t1)

90001918 <inst_296>:

inst_296:
// rs1_val==2 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, 0x2, -0xb503, x6, 1108, x8)
90001918:	00200513          	li	a0,2
9000191c:	ffff55b7          	lui	a1,0xffff5
90001920:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001924:	00b56633          	or	a2,a0,a1
90001928:	44c32a23          	sw	a2,1108(t1)

9000192c <inst_297>:

inst_297:
// rs1_val==2 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x2, 0xb505, x6, 1112, x8)
9000192c:	00200513          	li	a0,2
90001930:	0000b5b7          	lui	a1,0xb
90001934:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001938:	00b56633          	or	a2,a0,a1
9000193c:	44c32c23          	sw	a2,1112(t1)

90001940 <inst_298>:

inst_298:
// rs1_val==1431655764 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555554, 0x3, x6, 1116, x8)
90001940:	55555537          	lui	a0,0x55555
90001944:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001948:	00300593          	li	a1,3
9000194c:	00b56633          	or	a2,a0,a1
90001950:	44c32e23          	sw	a2,1116(t1)

90001954 <inst_299>:

inst_299:
// rs1_val==1431655764 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555554, 0x55555555, x6, 1120, x8)
90001954:	55555537          	lui	a0,0x55555
90001958:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
9000195c:	555555b7          	lui	a1,0x55555
90001960:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90001964:	00b56633          	or	a2,a0,a1
90001968:	46c32023          	sw	a2,1120(t1)

9000196c <inst_300>:

inst_300:
// rs1_val==1431655764 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, 0x55555554, -0x55555556, x6, 1124, x8)
9000196c:	55555537          	lui	a0,0x55555
90001970:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001974:	aaaab5b7          	lui	a1,0xaaaab
90001978:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
9000197c:	00b56633          	or	a2,a0,a1
90001980:	46c32223          	sw	a2,1124(t1)

90001984 <inst_301>:

inst_301:
// rs1_val==1431655764 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x55555554, 0x5, x6, 1128, x8)
90001984:	55555537          	lui	a0,0x55555
90001988:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
9000198c:	00500593          	li	a1,5
90001990:	00b56633          	or	a2,a0,a1
90001994:	46c32423          	sw	a2,1128(t1)

90001998 <inst_302>:

inst_302:
// rs1_val==1431655764 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555554, 0x33333333, x6, 1132, x8)
90001998:	55555537          	lui	a0,0x55555
9000199c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
900019a0:	333335b7          	lui	a1,0x33333
900019a4:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
900019a8:	00b56633          	or	a2,a0,a1
900019ac:	46c32623          	sw	a2,1132(t1)

900019b0 <inst_303>:

inst_303:
// rs1_val==1431655764 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x55555554, 0x66666666, x6, 1136, x8)
900019b0:	55555537          	lui	a0,0x55555
900019b4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
900019b8:	666665b7          	lui	a1,0x66666
900019bc:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
900019c0:	00b56633          	or	a2,a0,a1
900019c4:	46c32823          	sw	a2,1136(t1)

900019c8 <inst_304>:

inst_304:
// rs1_val==1431655764 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffc, 0x55555554, -0xb504, x6, 1140, x8)
900019c8:	55555537          	lui	a0,0x55555
900019cc:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
900019d0:	ffff55b7          	lui	a1,0xffff5
900019d4:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
900019d8:	00b56633          	or	a2,a0,a1
900019dc:	46c32a23          	sw	a2,1140(t1)

900019e0 <inst_305>:

inst_305:
// rs1_val==1431655764 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x5555f554, 0x55555554, 0xb504, x6, 1144, x8)
900019e0:	55555537          	lui	a0,0x55555
900019e4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
900019e8:	0000b5b7          	lui	a1,0xb
900019ec:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
900019f0:	00b56633          	or	a2,a0,a1
900019f4:	46c32c23          	sw	a2,1144(t1)

900019f8 <inst_306>:

inst_306:
// rs1_val==1431655764 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555554, 0x2, x6, 1148, x8)
900019f8:	55555537          	lui	a0,0x55555
900019fc:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a00:	00200593          	li	a1,2
90001a04:	00b56633          	or	a2,a0,a1
90001a08:	46c32e23          	sw	a2,1148(t1)

90001a0c <inst_307>:

inst_307:
// rs1_val==1431655764 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555554, 0x55555554, 0x55555554, x6, 1152, x8)
90001a0c:	55555537          	lui	a0,0x55555
90001a10:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a14:	555555b7          	lui	a1,0x55555
90001a18:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001a1c:	00b56633          	or	a2,a0,a1
90001a20:	48c32023          	sw	a2,1152(t1)

90001a24 <inst_308>:

inst_308:
// rs1_val==1431655764 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x55555554, 0x55555554, 0x0, x6, 1156, x8)
90001a24:	55555537          	lui	a0,0x55555
90001a28:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a2c:	00000593          	li	a1,0
90001a30:	00b56633          	or	a2,a0,a1
90001a34:	48c32223          	sw	a2,1156(t1)

90001a38 <inst_309>:

inst_309:
// rs1_val==1431655764 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x55555554, 0x55555554, 0x4, x6, 1160, x8)
90001a38:	55555537          	lui	a0,0x55555
90001a3c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a40:	00400593          	li	a1,4
90001a44:	00b56633          	or	a2,a0,a1
90001a48:	48c32423          	sw	a2,1160(t1)

90001a4c <inst_310>:

inst_310:
// rs1_val==1431655764 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x55555554, 0x33333332, x6, 1164, x8)
90001a4c:	55555537          	lui	a0,0x55555
90001a50:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a54:	333335b7          	lui	a1,0x33333
90001a58:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90001a5c:	00b56633          	or	a2,a0,a1
90001a60:	48c32623          	sw	a2,1164(t1)

90001a64 <inst_311>:

inst_311:
// rs1_val==1431655764 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x55555554, 0x66666665, x6, 1168, x8)
90001a64:	55555537          	lui	a0,0x55555
90001a68:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a6c:	666665b7          	lui	a1,0x66666
90001a70:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90001a74:	00b56633          	or	a2,a0,a1
90001a78:	48c32823          	sw	a2,1168(t1)

90001a7c <inst_312>:

inst_312:
// rs1_val==1431655764 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0x55555554, 0xb503, x6, 1172, x8)
90001a7c:	55555537          	lui	a0,0x55555
90001a80:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a84:	0000b5b7          	lui	a1,0xb
90001a88:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90001a8c:	00b56633          	or	a2,a0,a1
90001a90:	48c32a23          	sw	a2,1172(t1)

90001a94 <inst_313>:

inst_313:
// rs1_val==1431655764 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555554, 0x55555556, x6, 1176, x8)
90001a94:	55555537          	lui	a0,0x55555
90001a98:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001a9c:	555555b7          	lui	a1,0x55555
90001aa0:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90001aa4:	00b56633          	or	a2,a0,a1
90001aa8:	48c32c23          	sw	a2,1176(t1)

90001aac <inst_314>:

inst_314:
// rs1_val==1431655764 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x55555554, -0x55555555, x6, 1180, x8)
90001aac:	55555537          	lui	a0,0x55555
90001ab0:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001ab4:	aaaab5b7          	lui	a1,0xaaaab
90001ab8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001abc:	00b56633          	or	a2,a0,a1
90001ac0:	48c32e23          	sw	a2,1180(t1)

90001ac4 <inst_315>:

inst_315:
// rs1_val==1431655764 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555554, 0x6, x6, 1184, x8)
90001ac4:	55555537          	lui	a0,0x55555
90001ac8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001acc:	00600593          	li	a1,6
90001ad0:	00b56633          	or	a2,a0,a1
90001ad4:	4ac32023          	sw	a2,1184(t1)

90001ad8 <inst_316>:

inst_316:
// rs1_val==1431655764 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777774, 0x55555554, 0x33333334, x6, 1188, x8)
90001ad8:	55555537          	lui	a0,0x55555
90001adc:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001ae0:	333335b7          	lui	a1,0x33333
90001ae4:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001ae8:	00b56633          	or	a2,a0,a1
90001aec:	4ac32223          	sw	a2,1188(t1)

90001af0 <inst_317>:

inst_317:
// rs1_val==1431655764 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555554, 0x66666667, x6, 1192, x8)
90001af0:	55555537          	lui	a0,0x55555
90001af4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001af8:	666665b7          	lui	a1,0x66666
90001afc:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001b00:	00b56633          	or	a2,a0,a1
90001b04:	4ac32423          	sw	a2,1192(t1)

90001b08 <inst_318>:

inst_318:
// rs1_val==1431655764 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, 0x55555554, -0xb503, x6, 1196, x8)
90001b08:	55555537          	lui	a0,0x55555
90001b0c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001b10:	ffff55b7          	lui	a1,0xffff5
90001b14:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001b18:	00b56633          	or	a2,a0,a1
90001b1c:	4ac32623          	sw	a2,1196(t1)

90001b20 <inst_319>:

inst_319:
// rs1_val==1431655764 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555554;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0x55555554, 0xb505, x6, 1200, x8)
90001b20:	55555537          	lui	a0,0x55555
90001b24:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555474>
90001b28:	0000b5b7          	lui	a1,0xb
90001b2c:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001b30:	00b56633          	or	a2,a0,a1
90001b34:	4ac32823          	sw	a2,1200(t1)

90001b38 <inst_320>:

inst_320:
// rs1_val==0 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x3, 0x0, 0x3, x6, 1204, x8)
90001b38:	00000513          	li	a0,0
90001b3c:	00300593          	li	a1,3
90001b40:	00b56633          	or	a2,a0,a1
90001b44:	4ac32a23          	sw	a2,1204(t1)

90001b48 <inst_321>:

inst_321:
// rs1_val==0 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x0, 0x55555555, x6, 1208, x8)
90001b48:	00000513          	li	a0,0
90001b4c:	555555b7          	lui	a1,0x55555
90001b50:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90001b54:	00b56633          	or	a2,a0,a1
90001b58:	4ac32c23          	sw	a2,1208(t1)

90001b5c <inst_322>:

inst_322:
// rs1_val==0 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaa, 0x0, -0x55555556, x6, 1212, x8)
90001b5c:	00000513          	li	a0,0
90001b60:	aaaab5b7          	lui	a1,0xaaaab
90001b64:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90001b68:	00b56633          	or	a2,a0,a1
90001b6c:	4ac32e23          	sw	a2,1212(t1)

90001b70 <inst_323>:

inst_323:
// rs1_val==0 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x5, 0x0, 0x5, x6, 1216, x8)
90001b70:	00000513          	li	a0,0
90001b74:	00500593          	li	a1,5
90001b78:	00b56633          	or	a2,a0,a1
90001b7c:	4cc32023          	sw	a2,1216(t1)

90001b80 <inst_324>:

inst_324:
// rs1_val==0 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x0, 0x33333333, x6, 1220, x8)
90001b80:	00000513          	li	a0,0
90001b84:	333335b7          	lui	a1,0x33333
90001b88:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001b8c:	00b56633          	or	a2,a0,a1
90001b90:	4cc32223          	sw	a2,1220(t1)

90001b94 <inst_325>:

inst_325:
// rs1_val==0 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x0, 0x66666666, x6, 1224, x8)
90001b94:	00000513          	li	a0,0
90001b98:	666665b7          	lui	a1,0x66666
90001b9c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001ba0:	00b56633          	or	a2,a0,a1
90001ba4:	4cc32423          	sw	a2,1224(t1)

90001ba8 <inst_326>:

inst_326:
// rs1_val==0 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afc, 0x0, -0xb504, x6, 1228, x8)
90001ba8:	00000513          	li	a0,0
90001bac:	ffff55b7          	lui	a1,0xffff5
90001bb0:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001bb4:	00b56633          	or	a2,a0,a1
90001bb8:	4cc32623          	sw	a2,1228(t1)

90001bbc <inst_327>:

inst_327:
// rs1_val==0 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb504, 0x0, 0xb504, x6, 1232, x8)
90001bbc:	00000513          	li	a0,0
90001bc0:	0000b5b7          	lui	a1,0xb
90001bc4:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001bc8:	00b56633          	or	a2,a0,a1
90001bcc:	4cc32823          	sw	a2,1232(t1)

90001bd0 <inst_328>:

inst_328:
// rs1_val==0 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x2, 0x0, 0x2, x6, 1236, x8)
90001bd0:	00000513          	li	a0,0
90001bd4:	00200593          	li	a1,2
90001bd8:	00b56633          	or	a2,a0,a1
90001bdc:	4cc32a23          	sw	a2,1236(t1)

90001be0 <inst_329>:

inst_329:
// rs1_val==-1431655765 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555555, -0x55555555, x6, 1240, x8)
90001be0:	aaaab537          	lui	a0,0xaaaab
90001be4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001be8:	aaaab5b7          	lui	a1,0xaaaab
90001bec:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001bf0:	00b56633          	or	a2,a0,a1
90001bf4:	4cc32c23          	sw	a2,1240(t1)

90001bf8 <inst_330>:

inst_330:
// rs1_val==-1431655765 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, -0x55555555, 0x6, x6, 1244, x8)
90001bf8:	aaaab537          	lui	a0,0xaaaab
90001bfc:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001c00:	00600593          	li	a1,6
90001c04:	00b56633          	or	a2,a0,a1
90001c08:	4cc32e23          	sw	a2,1244(t1)

90001c0c <inst_331>:

inst_331:
// rs1_val==-1431655765 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbf, -0x55555555, 0x33333334, x6, 1248, x8)
90001c0c:	aaaab537          	lui	a0,0xaaaab
90001c10:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001c14:	333335b7          	lui	a1,0x33333
90001c18:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001c1c:	00b56633          	or	a2,a0,a1
90001c20:	4ec32023          	sw	a2,1248(t1)

90001c24 <inst_332>:

inst_332:
// rs1_val==-1431655765 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, -0x55555555, 0x66666667, x6, 1252, x8)
90001c24:	aaaab537          	lui	a0,0xaaaab
90001c28:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001c2c:	666665b7          	lui	a1,0x66666
90001c30:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001c34:	00b56633          	or	a2,a0,a1
90001c38:	4ec32223          	sw	a2,1252(t1)

90001c3c <inst_333>:

inst_333:
// rs1_val==-1431655765 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0x55555555, -0xb503, x6, 1256, x8)
90001c3c:	aaaab537          	lui	a0,0xaaaab
90001c40:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001c44:	ffff55b7          	lui	a1,0xffff5
90001c48:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001c4c:	00b56633          	or	a2,a0,a1
90001c50:	4ec32423          	sw	a2,1256(t1)

90001c54 <inst_334>:

inst_334:
// rs1_val==-1431655765 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, -0x55555555, 0xb505, x6, 1260, x8)
90001c54:	aaaab537          	lui	a0,0xaaaab
90001c58:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001c5c:	0000b5b7          	lui	a1,0xb
90001c60:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001c64:	00b56633          	or	a2,a0,a1
90001c68:	4ec32623          	sw	a2,1260(t1)

90001c6c <inst_335>:

inst_335:
// rs1_val==6 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x6, 0x3, x6, 1264, x8)
90001c6c:	00600513          	li	a0,6
90001c70:	00300593          	li	a1,3
90001c74:	00b56633          	or	a2,a0,a1
90001c78:	4ec32823          	sw	a2,1264(t1)

90001c7c <inst_336>:

inst_336:
// rs1_val==6 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x6, 0x55555555, x6, 1268, x8)
90001c7c:	00600513          	li	a0,6
90001c80:	555555b7          	lui	a1,0x55555
90001c84:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90001c88:	00b56633          	or	a2,a0,a1
90001c8c:	4ec32a23          	sw	a2,1268(t1)

90001c90 <inst_337>:

inst_337:
// rs1_val==6 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaae, 0x6, -0x55555556, x6, 1272, x8)
90001c90:	00600513          	li	a0,6
90001c94:	aaaab5b7          	lui	a1,0xaaaab
90001c98:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90001c9c:	00b56633          	or	a2,a0,a1
90001ca0:	4ec32c23          	sw	a2,1272(t1)

90001ca4 <inst_338>:

inst_338:
// rs1_val==6 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x6, 0x5, x6, 1276, x8)
90001ca4:	00600513          	li	a0,6
90001ca8:	00500593          	li	a1,5
90001cac:	00b56633          	or	a2,a0,a1
90001cb0:	4ec32e23          	sw	a2,1276(t1)

90001cb4 <inst_339>:

inst_339:
// rs1_val==6 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x6, 0x33333333, x6, 1280, x8)
90001cb4:	00600513          	li	a0,6
90001cb8:	333335b7          	lui	a1,0x33333
90001cbc:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001cc0:	00b56633          	or	a2,a0,a1
90001cc4:	50c32023          	sw	a2,1280(t1)

90001cc8 <inst_340>:

inst_340:
// rs1_val==6 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x6, 0x66666666, x6, 1284, x8)
90001cc8:	00600513          	li	a0,6
90001ccc:	666665b7          	lui	a1,0x66666
90001cd0:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001cd4:	00b56633          	or	a2,a0,a1
90001cd8:	50c32223          	sw	a2,1284(t1)

90001cdc <inst_341>:

inst_341:
// rs1_val==6 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afe, 0x6, -0xb504, x6, 1288, x8)
90001cdc:	00600513          	li	a0,6
90001ce0:	ffff55b7          	lui	a1,0xffff5
90001ce4:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001ce8:	00b56633          	or	a2,a0,a1
90001cec:	50c32423          	sw	a2,1288(t1)

90001cf0 <inst_342>:

inst_342:
// rs1_val==6 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb506, 0x6, 0xb504, x6, 1292, x8)
90001cf0:	00600513          	li	a0,6
90001cf4:	0000b5b7          	lui	a1,0xb
90001cf8:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001cfc:	00b56633          	or	a2,a0,a1
90001d00:	50c32623          	sw	a2,1292(t1)

90001d04 <inst_343>:

inst_343:
// rs1_val==6 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x6, 0x2, x6, 1296, x8)
90001d04:	00600513          	li	a0,6
90001d08:	00200593          	li	a1,2
90001d0c:	00b56633          	or	a2,a0,a1
90001d10:	50c32823          	sw	a2,1296(t1)

90001d14 <inst_344>:

inst_344:
// rs1_val==6 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x6, 0x55555554, x6, 1300, x8)
90001d14:	00600513          	li	a0,6
90001d18:	555555b7          	lui	a1,0x55555
90001d1c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001d20:	00b56633          	or	a2,a0,a1
90001d24:	50c32a23          	sw	a2,1300(t1)

90001d28 <inst_345>:

inst_345:
// rs1_val==6 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x6, 0x0, x6, 1304, x8)
90001d28:	00600513          	li	a0,6
90001d2c:	00000593          	li	a1,0
90001d30:	00b56633          	or	a2,a0,a1
90001d34:	50c32c23          	sw	a2,1304(t1)

90001d38 <inst_346>:

inst_346:
// rs1_val==6 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x6, 0x4, x6, 1308, x8)
90001d38:	00600513          	li	a0,6
90001d3c:	00400593          	li	a1,4
90001d40:	00b56633          	or	a2,a0,a1
90001d44:	50c32e23          	sw	a2,1308(t1)

90001d48 <inst_347>:

inst_347:
// rs1_val==6 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x6, 0x33333332, x6, 1312, x8)
90001d48:	00600513          	li	a0,6
90001d4c:	333335b7          	lui	a1,0x33333
90001d50:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90001d54:	00b56633          	or	a2,a0,a1
90001d58:	52c32023          	sw	a2,1312(t1)

90001d5c <inst_348>:

inst_348:
// rs1_val==6 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x6, 0x66666665, x6, 1316, x8)
90001d5c:	00600513          	li	a0,6
90001d60:	666665b7          	lui	a1,0x66666
90001d64:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90001d68:	00b56633          	or	a2,a0,a1
90001d6c:	52c32223          	sw	a2,1316(t1)

90001d70 <inst_349>:

inst_349:
// rs1_val==6 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x6, 0xb503, x6, 1320, x8)
90001d70:	00600513          	li	a0,6
90001d74:	0000b5b7          	lui	a1,0xb
90001d78:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90001d7c:	00b56633          	or	a2,a0,a1
90001d80:	52c32423          	sw	a2,1320(t1)

90001d84 <inst_350>:

inst_350:
// rs1_val==6 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x6, 0x55555556, x6, 1324, x8)
90001d84:	00600513          	li	a0,6
90001d88:	555555b7          	lui	a1,0x55555
90001d8c:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90001d90:	00b56633          	or	a2,a0,a1
90001d94:	52c32623          	sw	a2,1324(t1)

90001d98 <inst_351>:

inst_351:
// rs1_val==6 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, 0x6, -0x55555555, x6, 1328, x8)
90001d98:	00600513          	li	a0,6
90001d9c:	aaaab5b7          	lui	a1,0xaaaab
90001da0:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001da4:	00b56633          	or	a2,a0,a1
90001da8:	52c32823          	sw	a2,1328(t1)

90001dac <inst_352>:

inst_352:
// rs1_val==6 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x6, 0x6, x6, 1332, x8)
90001dac:	00600513          	li	a0,6
90001db0:	00600593          	li	a1,6
90001db4:	00b56633          	or	a2,a0,a1
90001db8:	52c32a23          	sw	a2,1332(t1)

90001dbc <inst_353>:

inst_353:
// rs1_val==6 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x6, 0x33333334, x6, 1336, x8)
90001dbc:	00600513          	li	a0,6
90001dc0:	333335b7          	lui	a1,0x33333
90001dc4:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001dc8:	00b56633          	or	a2,a0,a1
90001dcc:	52c32c23          	sw	a2,1336(t1)

90001dd0 <inst_354>:

inst_354:
// rs1_val==6 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x6, 0x66666667, x6, 1340, x8)
90001dd0:	00600513          	li	a0,6
90001dd4:	666665b7          	lui	a1,0x66666
90001dd8:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001ddc:	00b56633          	or	a2,a0,a1
90001de0:	52c32e23          	sw	a2,1340(t1)

90001de4 <inst_355>:

inst_355:
// rs1_val==6 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, 0x6, -0xb503, x6, 1344, x8)
90001de4:	00600513          	li	a0,6
90001de8:	ffff55b7          	lui	a1,0xffff5
90001dec:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001df0:	00b56633          	or	a2,a0,a1
90001df4:	54c32023          	sw	a2,1344(t1)

90001df8 <inst_356>:

inst_356:
// rs1_val==6 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x6;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x6, 0xb505, x6, 1348, x8)
90001df8:	00600513          	li	a0,6
90001dfc:	0000b5b7          	lui	a1,0xb
90001e00:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001e04:	00b56633          	or	a2,a0,a1
90001e08:	54c32223          	sw	a2,1348(t1)

90001e0c <inst_357>:

inst_357:
// rs1_val==858993460 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333334, 0x3, x6, 1352, x8)
90001e0c:	33333537          	lui	a0,0x33333
90001e10:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e14:	00300593          	li	a1,3
90001e18:	00b56633          	or	a2,a0,a1
90001e1c:	54c32423          	sw	a2,1352(t1)

90001e20 <inst_358>:

inst_358:
// rs1_val==858993460 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x33333334, 0x55555555, x6, 1356, x8)
90001e20:	33333537          	lui	a0,0x33333
90001e24:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e28:	555555b7          	lui	a1,0x55555
90001e2c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90001e30:	00b56633          	or	a2,a0,a1
90001e34:	54c32623          	sw	a2,1356(t1)

90001e38 <inst_359>:

inst_359:
// rs1_val==858993460 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbe, 0x33333334, -0x55555556, x6, 1360, x8)
90001e38:	33333537          	lui	a0,0x33333
90001e3c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e40:	aaaab5b7          	lui	a1,0xaaaab
90001e44:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90001e48:	00b56633          	or	a2,a0,a1
90001e4c:	54c32823          	sw	a2,1360(t1)

90001e50 <inst_360>:

inst_360:
// rs1_val==858993460 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x33333335, 0x33333334, 0x5, x6, 1364, x8)
90001e50:	33333537          	lui	a0,0x33333
90001e54:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e58:	00500593          	li	a1,5
90001e5c:	00b56633          	or	a2,a0,a1
90001e60:	54c32a23          	sw	a2,1364(t1)

90001e64 <inst_361>:

inst_361:
// rs1_val==858993460 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333334, 0x33333333, x6, 1368, x8)
90001e64:	33333537          	lui	a0,0x33333
90001e68:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e6c:	333335b7          	lui	a1,0x33333
90001e70:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90001e74:	00b56633          	or	a2,a0,a1
90001e78:	54c32c23          	sw	a2,1368(t1)

90001e7c <inst_362>:

inst_362:
// rs1_val==858993460 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x33333334, 0x66666666, x6, 1372, x8)
90001e7c:	33333537          	lui	a0,0x33333
90001e80:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e84:	666665b7          	lui	a1,0x66666
90001e88:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90001e8c:	00b56633          	or	a2,a0,a1
90001e90:	54c32e23          	sw	a2,1372(t1)

90001e94 <inst_363>:

inst_363:
// rs1_val==858993460 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfc, 0x33333334, -0xb504, x6, 1376, x8)
90001e94:	33333537          	lui	a0,0x33333
90001e98:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001e9c:	ffff55b7          	lui	a1,0xffff5
90001ea0:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90001ea4:	00b56633          	or	a2,a0,a1
90001ea8:	56c32023          	sw	a2,1376(t1)

90001eac <inst_364>:

inst_364:
// rs1_val==858993460 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x3333b734, 0x33333334, 0xb504, x6, 1380, x8)
90001eac:	33333537          	lui	a0,0x33333
90001eb0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001eb4:	0000b5b7          	lui	a1,0xb
90001eb8:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90001ebc:	00b56633          	or	a2,a0,a1
90001ec0:	56c32223          	sw	a2,1380(t1)

90001ec4 <inst_365>:

inst_365:
// rs1_val==858993460 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333334, 0x2, x6, 1384, x8)
90001ec4:	33333537          	lui	a0,0x33333
90001ec8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001ecc:	00200593          	li	a1,2
90001ed0:	00b56633          	or	a2,a0,a1
90001ed4:	56c32423          	sw	a2,1384(t1)

90001ed8 <inst_366>:

inst_366:
// rs1_val==858993460 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777774, 0x33333334, 0x55555554, x6, 1388, x8)
90001ed8:	33333537          	lui	a0,0x33333
90001edc:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001ee0:	555555b7          	lui	a1,0x55555
90001ee4:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90001ee8:	00b56633          	or	a2,a0,a1
90001eec:	56c32623          	sw	a2,1388(t1)

90001ef0 <inst_367>:

inst_367:
// rs1_val==858993460 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x33333334, 0x33333334, 0x0, x6, 1392, x8)
90001ef0:	33333537          	lui	a0,0x33333
90001ef4:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001ef8:	00000593          	li	a1,0
90001efc:	00b56633          	or	a2,a0,a1
90001f00:	56c32823          	sw	a2,1392(t1)

90001f04 <inst_368>:

inst_368:
// rs1_val==858993460 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x33333334, 0x33333334, 0x4, x6, 1396, x8)
90001f04:	33333537          	lui	a0,0x33333
90001f08:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f0c:	00400593          	li	a1,4
90001f10:	00b56633          	or	a2,a0,a1
90001f14:	56c32a23          	sw	a2,1396(t1)

90001f18 <inst_369>:

inst_369:
// rs1_val==858993460 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333334, 0x33333332, x6, 1400, x8)
90001f18:	33333537          	lui	a0,0x33333
90001f1c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f20:	333335b7          	lui	a1,0x33333
90001f24:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90001f28:	00b56633          	or	a2,a0,a1
90001f2c:	56c32c23          	sw	a2,1400(t1)

90001f30 <inst_370>:

inst_370:
// rs1_val==858993460 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x33333334, 0x66666665, x6, 1404, x8)
90001f30:	33333537          	lui	a0,0x33333
90001f34:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f38:	666665b7          	lui	a1,0x66666
90001f3c:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90001f40:	00b56633          	or	a2,a0,a1
90001f44:	56c32e23          	sw	a2,1404(t1)

90001f48 <inst_371>:

inst_371:
// rs1_val==858993460 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0x33333334, 0xb503, x6, 1408, x8)
90001f48:	33333537          	lui	a0,0x33333
90001f4c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f50:	0000b5b7          	lui	a1,0xb
90001f54:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90001f58:	00b56633          	or	a2,a0,a1
90001f5c:	58c32023          	sw	a2,1408(t1)

90001f60 <inst_372>:

inst_372:
// rs1_val==858993460 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x33333334, 0x55555556, x6, 1412, x8)
90001f60:	33333537          	lui	a0,0x33333
90001f64:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f68:	555555b7          	lui	a1,0x55555
90001f6c:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90001f70:	00b56633          	or	a2,a0,a1
90001f74:	58c32223          	sw	a2,1412(t1)

90001f78 <inst_373>:

inst_373:
// rs1_val==858993460 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbf, 0x33333334, -0x55555555, x6, 1416, x8)
90001f78:	33333537          	lui	a0,0x33333
90001f7c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f80:	aaaab5b7          	lui	a1,0xaaaab
90001f84:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90001f88:	00b56633          	or	a2,a0,a1
90001f8c:	58c32423          	sw	a2,1416(t1)

90001f90 <inst_374>:

inst_374:
// rs1_val==858993460 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333334, 0x6, x6, 1420, x8)
90001f90:	33333537          	lui	a0,0x33333
90001f94:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001f98:	00600593          	li	a1,6
90001f9c:	00b56633          	or	a2,a0,a1
90001fa0:	58c32623          	sw	a2,1420(t1)

90001fa4 <inst_375>:

inst_375:
// rs1_val==858993460 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333334, 0x33333334, 0x33333334, x6, 1424, x8)
90001fa4:	33333537          	lui	a0,0x33333
90001fa8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001fac:	333335b7          	lui	a1,0x33333
90001fb0:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90001fb4:	00b56633          	or	a2,a0,a1
90001fb8:	58c32823          	sw	a2,1424(t1)

90001fbc <inst_376>:

inst_376:
// rs1_val==858993460 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333334, 0x66666667, x6, 1428, x8)
90001fbc:	33333537          	lui	a0,0x33333
90001fc0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001fc4:	666665b7          	lui	a1,0x66666
90001fc8:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90001fcc:	00b56633          	or	a2,a0,a1
90001fd0:	58c32a23          	sw	a2,1428(t1)

90001fd4 <inst_377>:

inst_377:
// rs1_val==858993460 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfd, 0x33333334, -0xb503, x6, 1432, x8)
90001fd4:	33333537          	lui	a0,0x33333
90001fd8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001fdc:	ffff55b7          	lui	a1,0xffff5
90001fe0:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90001fe4:	00b56633          	or	a2,a0,a1
90001fe8:	58c32c23          	sw	a2,1432(t1)

90001fec <inst_378>:

inst_378:
// rs1_val==858993460 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333334;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x3333b735, 0x33333334, 0xb505, x6, 1436, x8)
90001fec:	33333537          	lui	a0,0x33333
90001ff0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333254>
90001ff4:	0000b5b7          	lui	a1,0xb
90001ff8:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90001ffc:	00b56633          	or	a2,a0,a1
90002000:	58c32e23          	sw	a2,1436(t1)

90002004 <inst_379>:

inst_379:
// rs1_val==1717986919 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x3, x6, 1440, x8)
90002004:	66666537          	lui	a0,0x66666
90002008:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
9000200c:	00300593          	li	a1,3
90002010:	00b56633          	or	a2,a0,a1
90002014:	5ac32023          	sw	a2,1440(t1)

90002018 <inst_380>:

inst_380:
// rs1_val==1717986919 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x55555555, x6, 1444, x8)
90002018:	66666537          	lui	a0,0x66666
9000201c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002020:	555555b7          	lui	a1,0x55555
90002024:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90002028:	00b56633          	or	a2,a0,a1
9000202c:	5ac32223          	sw	a2,1444(t1)

90002030 <inst_381>:

inst_381:
// rs1_val==1717986919 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, 0x66666667, -0x55555556, x6, 1448, x8)
90002030:	66666537          	lui	a0,0x66666
90002034:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002038:	aaaab5b7          	lui	a1,0xaaaab
9000203c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002040:	00b56633          	or	a2,a0,a1
90002044:	5ac32423          	sw	a2,1448(t1)

90002048 <inst_382>:

inst_382:
// rs1_val==1717986919 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x5, x6, 1452, x8)
90002048:	66666537          	lui	a0,0x66666
9000204c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002050:	00500593          	li	a1,5
90002054:	00b56633          	or	a2,a0,a1
90002058:	5ac32623          	sw	a2,1452(t1)

9000205c <inst_383>:

inst_383:
// rs1_val==1717986919 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x33333333, x6, 1456, x8)
9000205c:	66666537          	lui	a0,0x66666
90002060:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002064:	333335b7          	lui	a1,0x33333
90002068:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
9000206c:	00b56633          	or	a2,a0,a1
90002070:	5ac32823          	sw	a2,1456(t1)

90002074 <inst_384>:

inst_384:
// rs1_val==1717986919 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x66666666, x6, 1460, x8)
90002074:	66666537          	lui	a0,0x66666
90002078:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
9000207c:	666665b7          	lui	a1,0x66666
90002080:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002084:	00b56633          	or	a2,a0,a1
90002088:	5ac32a23          	sw	a2,1460(t1)

9000208c <inst_385>:

inst_385:
// rs1_val==1717986919 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, 0x66666667, -0xb504, x6, 1464, x8)
9000208c:	66666537          	lui	a0,0x66666
90002090:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002094:	ffff55b7          	lui	a1,0xffff5
90002098:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000209c:	00b56633          	or	a2,a0,a1
900020a0:	5ac32c23          	sw	a2,1464(t1)

900020a4 <inst_386>:

inst_386:
// rs1_val==1717986919 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666667, 0xb504, x6, 1468, x8)
900020a4:	66666537          	lui	a0,0x66666
900020a8:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900020ac:	0000b5b7          	lui	a1,0xb
900020b0:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
900020b4:	00b56633          	or	a2,a0,a1
900020b8:	5ac32e23          	sw	a2,1468(t1)

900020bc <inst_387>:

inst_387:
// rs1_val==1717986919 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x2, x6, 1472, x8)
900020bc:	66666537          	lui	a0,0x66666
900020c0:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900020c4:	00200593          	li	a1,2
900020c8:	00b56633          	or	a2,a0,a1
900020cc:	5cc32023          	sw	a2,1472(t1)

900020d0 <inst_388>:

inst_388:
// rs1_val==1717986919 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x55555554, x6, 1476, x8)
900020d0:	66666537          	lui	a0,0x66666
900020d4:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900020d8:	555555b7          	lui	a1,0x55555
900020dc:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
900020e0:	00b56633          	or	a2,a0,a1
900020e4:	5cc32223          	sw	a2,1476(t1)

900020e8 <inst_389>:

inst_389:
// rs1_val==1717986919 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x0, x6, 1480, x8)
900020e8:	66666537          	lui	a0,0x66666
900020ec:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900020f0:	00000593          	li	a1,0
900020f4:	00b56633          	or	a2,a0,a1
900020f8:	5cc32423          	sw	a2,1480(t1)

900020fc <inst_390>:

inst_390:
// rs1_val==1717986919 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x4, x6, 1484, x8)
900020fc:	66666537          	lui	a0,0x66666
90002100:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002104:	00400593          	li	a1,4
90002108:	00b56633          	or	a2,a0,a1
9000210c:	5cc32623          	sw	a2,1484(t1)

90002110 <inst_391>:

inst_391:
// rs1_val==1717986919 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x33333332, x6, 1488, x8)
90002110:	66666537          	lui	a0,0x66666
90002114:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002118:	333335b7          	lui	a1,0x33333
9000211c:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002120:	00b56633          	or	a2,a0,a1
90002124:	5cc32823          	sw	a2,1488(t1)

90002128 <inst_392>:

inst_392:
// rs1_val==1717986919 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x66666665, x6, 1492, x8)
90002128:	66666537          	lui	a0,0x66666
9000212c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002130:	666665b7          	lui	a1,0x66666
90002134:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90002138:	00b56633          	or	a2,a0,a1
9000213c:	5cc32a23          	sw	a2,1492(t1)

90002140 <inst_393>:

inst_393:
// rs1_val==1717986919 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666667, 0xb503, x6, 1496, x8)
90002140:	66666537          	lui	a0,0x66666
90002144:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002148:	0000b5b7          	lui	a1,0xb
9000214c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002150:	00b56633          	or	a2,a0,a1
90002154:	5cc32c23          	sw	a2,1496(t1)

90002158 <inst_394>:

inst_394:
// rs1_val==1717986919 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x55555556, x6, 1500, x8)
90002158:	66666537          	lui	a0,0x66666
9000215c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002160:	555555b7          	lui	a1,0x55555
90002164:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002168:	00b56633          	or	a2,a0,a1
9000216c:	5cc32e23          	sw	a2,1500(t1)

90002170 <inst_395>:

inst_395:
// rs1_val==1717986919 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, 0x66666667, -0x55555555, x6, 1504, x8)
90002170:	66666537          	lui	a0,0x66666
90002174:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002178:	aaaab5b7          	lui	a1,0xaaaab
9000217c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002180:	00b56633          	or	a2,a0,a1
90002184:	5ec32023          	sw	a2,1504(t1)

90002188 <inst_396>:

inst_396:
// rs1_val==1717986919 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x6, x6, 1508, x8)
90002188:	66666537          	lui	a0,0x66666
9000218c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
90002190:	00600593          	li	a1,6
90002194:	00b56633          	or	a2,a0,a1
90002198:	5ec32223          	sw	a2,1508(t1)

9000219c <inst_397>:

inst_397:
// rs1_val==1717986919 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666667, 0x33333334, x6, 1512, x8)
9000219c:	66666537          	lui	a0,0x66666
900021a0:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900021a4:	333335b7          	lui	a1,0x33333
900021a8:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
900021ac:	00b56633          	or	a2,a0,a1
900021b0:	5ec32423          	sw	a2,1512(t1)

900021b4 <inst_398>:

inst_398:
// rs1_val==1717986919 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666667, 0x66666667, x6, 1516, x8)
900021b4:	66666537          	lui	a0,0x66666
900021b8:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900021bc:	666665b7          	lui	a1,0x66666
900021c0:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
900021c4:	00b56633          	or	a2,a0,a1
900021c8:	5ec32623          	sw	a2,1516(t1)

900021cc <inst_399>:

inst_399:
// rs1_val==1717986919 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, 0x66666667, -0xb503, x6, 1520, x8)
900021cc:	66666537          	lui	a0,0x66666
900021d0:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900021d4:	ffff55b7          	lui	a1,0xffff5
900021d8:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
900021dc:	00b56633          	or	a2,a0,a1
900021e0:	5ec32823          	sw	a2,1520(t1)

900021e4 <inst_400>:

inst_400:
// rs1_val==1717986919 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666667;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666667, 0xb505, x6, 1524, x8)
900021e4:	66666537          	lui	a0,0x66666
900021e8:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666587>
900021ec:	0000b5b7          	lui	a1,0xb
900021f0:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900021f4:	00b56633          	or	a2,a0,a1
900021f8:	5ec32a23          	sw	a2,1524(t1)

900021fc <inst_401>:

inst_401:
// rs1_val==-46339 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, -0xb503, 0x3, x6, 1528, x8)
900021fc:	ffff5537          	lui	a0,0xffff5
90002200:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002204:	00300593          	li	a1,3
90002208:	00b56633          	or	a2,a0,a1
9000220c:	5ec32c23          	sw	a2,1528(t1)

90002210 <inst_402>:

inst_402:
// rs1_val==-46339 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, -0xb503, 0x55555555, x6, 1532, x8)
90002210:	ffff5537          	lui	a0,0xffff5
90002214:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002218:	555555b7          	lui	a1,0x55555
9000221c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90002220:	00b56633          	or	a2,a0,a1
90002224:	5ec32e23          	sw	a2,1532(t1)

90002228 <inst_403>:

inst_403:
// rs1_val==-46339 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0xb503, -0x55555556, x6, 1536, x8)
90002228:	ffff5537          	lui	a0,0xffff5
9000222c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002230:	aaaab5b7          	lui	a1,0xaaaab
90002234:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002238:	00b56633          	or	a2,a0,a1
9000223c:	60c32023          	sw	a2,1536(t1)

90002240 <inst_404>:

inst_404:
// rs1_val==-46339 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb503, 0x5, x6, 1540, x8)
90002240:	ffff5537          	lui	a0,0xffff5
90002244:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002248:	00500593          	li	a1,5
9000224c:	00b56633          	or	a2,a0,a1
90002250:	60c32223          	sw	a2,1540(t1)

90002254 <inst_405>:

inst_405:
// rs1_val==-46339 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, -0xb503, 0x33333333, x6, 1544, x8)
90002254:	ffff5537          	lui	a0,0xffff5
90002258:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
9000225c:	333335b7          	lui	a1,0x33333
90002260:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90002264:	00b56633          	or	a2,a0,a1
90002268:	60c32423          	sw	a2,1544(t1)

9000226c <inst_406>:

inst_406:
// rs1_val==-46339 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, -0xb503, 0x66666666, x6, 1548, x8)
9000226c:	ffff5537          	lui	a0,0xffff5
90002270:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002274:	666665b7          	lui	a1,0x66666
90002278:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
9000227c:	00b56633          	or	a2,a0,a1
90002280:	60c32623          	sw	a2,1548(t1)

90002284 <inst_407>:

inst_407:
// rs1_val==-46339 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb503, -0xb504, x6, 1552, x8)
90002284:	ffff5537          	lui	a0,0xffff5
90002288:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
9000228c:	ffff55b7          	lui	a1,0xffff5
90002290:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002294:	00b56633          	or	a2,a0,a1
90002298:	60c32823          	sw	a2,1552(t1)

9000229c <inst_408>:

inst_408:
// rs1_val==-46339 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, -0xb503, 0xb504, x6, 1556, x8)
9000229c:	ffff5537          	lui	a0,0xffff5
900022a0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022a4:	0000b5b7          	lui	a1,0xb
900022a8:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
900022ac:	00b56633          	or	a2,a0,a1
900022b0:	60c32a23          	sw	a2,1556(t1)

900022b4 <inst_409>:

inst_409:
// rs1_val==-46339 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, -0xb503, 0x2, x6, 1560, x8)
900022b4:	ffff5537          	lui	a0,0xffff5
900022b8:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022bc:	00200593          	li	a1,2
900022c0:	00b56633          	or	a2,a0,a1
900022c4:	60c32c23          	sw	a2,1560(t1)

900022c8 <inst_410>:

inst_410:
// rs1_val==-46339 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffd, -0xb503, 0x55555554, x6, 1564, x8)
900022c8:	ffff5537          	lui	a0,0xffff5
900022cc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022d0:	555555b7          	lui	a1,0x55555
900022d4:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
900022d8:	00b56633          	or	a2,a0,a1
900022dc:	60c32e23          	sw	a2,1564(t1)

900022e0 <inst_411>:

inst_411:
// rs1_val==-46339 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb503, 0x0, x6, 1568, x8)
900022e0:	ffff5537          	lui	a0,0xffff5
900022e4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022e8:	00000593          	li	a1,0
900022ec:	00b56633          	or	a2,a0,a1
900022f0:	62c32023          	sw	a2,1568(t1)

900022f4 <inst_412>:

inst_412:
// rs1_val==-46339 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb503, 0x4, x6, 1572, x8)
900022f4:	ffff5537          	lui	a0,0xffff5
900022f8:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900022fc:	00400593          	li	a1,4
90002300:	00b56633          	or	a2,a0,a1
90002304:	62c32223          	sw	a2,1572(t1)

90002308 <inst_413>:

inst_413:
// rs1_val==-46339 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, -0xb503, 0x33333332, x6, 1576, x8)
90002308:	ffff5537          	lui	a0,0xffff5
9000230c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002310:	333335b7          	lui	a1,0x33333
90002314:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002318:	00b56633          	or	a2,a0,a1
9000231c:	62c32423          	sw	a2,1576(t1)

90002320 <inst_414>:

inst_414:
// rs1_val==-46339 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0xffff6efd, -0xb503, 0x66666665, x6, 1580, x8)
90002320:	ffff5537          	lui	a0,0xffff5
90002324:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002328:	666665b7          	lui	a1,0x66666
9000232c:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90002330:	00b56633          	or	a2,a0,a1
90002334:	62c32623          	sw	a2,1580(t1)

90002338 <inst_415>:

inst_415:
// rs1_val==-46339 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0xb503, 0xb503, x6, 1584, x8)
90002338:	ffff5537          	lui	a0,0xffff5
9000233c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002340:	0000b5b7          	lui	a1,0xb
90002344:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002348:	00b56633          	or	a2,a0,a1
9000234c:	62c32823          	sw	a2,1584(t1)

90002350 <inst_416>:

inst_416:
// rs1_val==-46339 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffff5fff, -0xb503, 0x55555556, x6, 1588, x8)
90002350:	ffff5537          	lui	a0,0xffff5
90002354:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002358:	555555b7          	lui	a1,0x55555
9000235c:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002360:	00b56633          	or	a2,a0,a1
90002364:	62c32a23          	sw	a2,1588(t1)

90002368 <inst_417>:

inst_417:
// rs1_val==-46339 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0xb503, -0x55555555, x6, 1592, x8)
90002368:	ffff5537          	lui	a0,0xffff5
9000236c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002370:	aaaab5b7          	lui	a1,0xaaaab
90002374:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002378:	00b56633          	or	a2,a0,a1
9000237c:	62c32c23          	sw	a2,1592(t1)

90002380 <inst_418>:

inst_418:
// rs1_val==-46339 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xffff4aff, -0xb503, 0x6, x6, 1596, x8)
90002380:	ffff5537          	lui	a0,0xffff5
90002384:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
90002388:	00600593          	li	a1,6
9000238c:	00b56633          	or	a2,a0,a1
90002390:	62c32e23          	sw	a2,1596(t1)

90002394 <inst_419>:

inst_419:
// rs1_val==-46339 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfd, -0xb503, 0x33333334, x6, 1600, x8)
90002394:	ffff5537          	lui	a0,0xffff5
90002398:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
9000239c:	333335b7          	lui	a1,0x33333
900023a0:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
900023a4:	00b56633          	or	a2,a0,a1
900023a8:	64c32023          	sw	a2,1600(t1)

900023ac <inst_420>:

inst_420:
// rs1_val==-46339 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0xffff6eff, -0xb503, 0x66666667, x6, 1604, x8)
900023ac:	ffff5537          	lui	a0,0xffff5
900023b0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900023b4:	666665b7          	lui	a1,0x66666
900023b8:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
900023bc:	00b56633          	or	a2,a0,a1
900023c0:	64c32223          	sw	a2,1604(t1)

900023c4 <inst_421>:

inst_421:
// rs1_val==-46339 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, -0xb503, -0xb503, x6, 1608, x8)
900023c4:	ffff5537          	lui	a0,0xffff5
900023c8:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900023cc:	ffff55b7          	lui	a1,0xffff5
900023d0:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
900023d4:	00b56633          	or	a2,a0,a1
900023d8:	64c32423          	sw	a2,1608(t1)

900023dc <inst_422>:

inst_422:
// rs1_val==-46339 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0xb503;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, -0xb503, 0xb505, x6, 1612, x8)
900023dc:	ffff5537          	lui	a0,0xffff5
900023e0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffeeff9>
900023e4:	0000b5b7          	lui	a1,0xb
900023e8:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900023ec:	00b56633          	or	a2,a0,a1
900023f0:	64c32623          	sw	a2,1612(t1)

900023f4 <inst_423>:

inst_423:
// rs1_val==46341 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb505, 0x3, x6, 1616, x8)
900023f4:	0000b537          	lui	a0,0xb
900023f8:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900023fc:	00300593          	li	a1,3
90002400:	00b56633          	or	a2,a0,a1
90002404:	64c32823          	sw	a2,1616(t1)

90002408 <inst_424>:

inst_424:
// rs1_val==46341 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0xb505, 0x55555555, x6, 1620, x8)
90002408:	0000b537          	lui	a0,0xb
9000240c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002410:	555555b7          	lui	a1,0x55555
90002414:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90002418:	00b56633          	or	a2,a0,a1
9000241c:	64c32a23          	sw	a2,1620(t1)

90002420 <inst_425>:

inst_425:
// rs1_val==46341 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, 0xb505, -0x55555556, x6, 1624, x8)
90002420:	0000b537          	lui	a0,0xb
90002424:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002428:	aaaab5b7          	lui	a1,0xaaaab
9000242c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002430:	00b56633          	or	a2,a0,a1
90002434:	64c32c23          	sw	a2,1624(t1)

90002438 <inst_426>:

inst_426:
// rs1_val==46341 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb505, 0x5, x6, 1628, x8)
90002438:	0000b537          	lui	a0,0xb
9000243c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002440:	00500593          	li	a1,5
90002444:	00b56633          	or	a2,a0,a1
90002448:	64c32e23          	sw	a2,1628(t1)

9000244c <inst_427>:

inst_427:
// rs1_val==46341 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0xb505, 0x33333333, x6, 1632, x8)
9000244c:	0000b537          	lui	a0,0xb
90002450:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002454:	333335b7          	lui	a1,0x33333
90002458:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
9000245c:	00b56633          	or	a2,a0,a1
90002460:	66c32023          	sw	a2,1632(t1)

90002464 <inst_428>:

inst_428:
// rs1_val==46341 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb505, 0x66666666, x6, 1636, x8)
90002464:	0000b537          	lui	a0,0xb
90002468:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
9000246c:	666665b7          	lui	a1,0x66666
90002470:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002474:	00b56633          	or	a2,a0,a1
90002478:	66c32223          	sw	a2,1636(t1)

9000247c <inst_429>:

inst_429:
// rs1_val==46341 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, 0xb505, -0xb504, x6, 1640, x8)
9000247c:	0000b537          	lui	a0,0xb
90002480:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002484:	ffff55b7          	lui	a1,0xffff5
90002488:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000248c:	00b56633          	or	a2,a0,a1
90002490:	66c32423          	sw	a2,1640(t1)

90002494 <inst_430>:

inst_430:
// rs1_val==46341 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb505, 0xb504, x6, 1644, x8)
90002494:	0000b537          	lui	a0,0xb
90002498:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
9000249c:	0000b5b7          	lui	a1,0xb
900024a0:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
900024a4:	00b56633          	or	a2,a0,a1
900024a8:	66c32623          	sw	a2,1644(t1)

900024ac <inst_431>:

inst_431:
// rs1_val==46341 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb505, 0x2, x6, 1648, x8)
900024ac:	0000b537          	lui	a0,0xb
900024b0:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900024b4:	00200593          	li	a1,2
900024b8:	00b56633          	or	a2,a0,a1
900024bc:	66c32823          	sw	a2,1648(t1)

900024c0 <inst_432>:

inst_432:
// rs1_val==46341 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x5555f555, 0xb505, 0x55555554, x6, 1652, x8)
900024c0:	0000b537          	lui	a0,0xb
900024c4:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900024c8:	555555b7          	lui	a1,0x55555
900024cc:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
900024d0:	00b56633          	or	a2,a0,a1
900024d4:	66c32a23          	sw	a2,1652(t1)

900024d8 <inst_433>:

inst_433:
// rs1_val==46341 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb505, 0x0, x6, 1656, x8)
900024d8:	0000b537          	lui	a0,0xb
900024dc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900024e0:	00000593          	li	a1,0
900024e4:	00b56633          	or	a2,a0,a1
900024e8:	66c32c23          	sw	a2,1656(t1)

900024ec <inst_434>:

inst_434:
// rs1_val==46341 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb505, 0x4, x6, 1660, x8)
900024ec:	0000b537          	lui	a0,0xb
900024f0:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900024f4:	00400593          	li	a1,4
900024f8:	00b56633          	or	a2,a0,a1
900024fc:	66c32e23          	sw	a2,1660(t1)

90002500 <inst_435>:

inst_435:
// rs1_val==46341 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0xb505, 0x33333332, x6, 1664, x8)
90002500:	0000b537          	lui	a0,0xb
90002504:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002508:	333335b7          	lui	a1,0x33333
9000250c:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002510:	00b56633          	or	a2,a0,a1
90002514:	68c32023          	sw	a2,1664(t1)

90002518 <inst_436>:

inst_436:
// rs1_val==46341 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x6666f765, 0xb505, 0x66666665, x6, 1668, x8)
90002518:	0000b537          	lui	a0,0xb
9000251c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002520:	666665b7          	lui	a1,0x66666
90002524:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90002528:	00b56633          	or	a2,a0,a1
9000252c:	68c32223          	sw	a2,1668(t1)

90002530 <inst_437>:

inst_437:
// rs1_val==46341 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb505, 0xb503, x6, 1672, x8)
90002530:	0000b537          	lui	a0,0xb
90002534:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002538:	0000b5b7          	lui	a1,0xb
9000253c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002540:	00b56633          	or	a2,a0,a1
90002544:	68c32423          	sw	a2,1672(t1)

90002548 <inst_438>:

inst_438:
// rs1_val==46341 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0xb505, 0x55555556, x6, 1676, x8)
90002548:	0000b537          	lui	a0,0xb
9000254c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002550:	555555b7          	lui	a1,0x55555
90002554:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002558:	00b56633          	or	a2,a0,a1
9000255c:	68c32623          	sw	a2,1676(t1)

90002560 <inst_439>:

inst_439:
// rs1_val==46341 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, 0xb505, -0x55555555, x6, 1680, x8)
90002560:	0000b537          	lui	a0,0xb
90002564:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002568:	aaaab5b7          	lui	a1,0xaaaab
9000256c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002570:	00b56633          	or	a2,a0,a1
90002574:	68c32823          	sw	a2,1680(t1)

90002578 <inst_440>:

inst_440:
// rs1_val==46341 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb505, 0x6, x6, 1684, x8)
90002578:	0000b537          	lui	a0,0xb
9000257c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002580:	00600593          	li	a1,6
90002584:	00b56633          	or	a2,a0,a1
90002588:	68c32a23          	sw	a2,1684(t1)

9000258c <inst_441>:

inst_441:
// rs1_val==46341 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x3333b735, 0xb505, 0x33333334, x6, 1688, x8)
9000258c:	0000b537          	lui	a0,0xb
90002590:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
90002594:	333335b7          	lui	a1,0x33333
90002598:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
9000259c:	00b56633          	or	a2,a0,a1
900025a0:	68c32c23          	sw	a2,1688(t1)

900025a4 <inst_442>:

inst_442:
// rs1_val==46341 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb505, 0x66666667, x6, 1692, x8)
900025a4:	0000b537          	lui	a0,0xb
900025a8:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900025ac:	666665b7          	lui	a1,0x66666
900025b0:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
900025b4:	00b56633          	or	a2,a0,a1
900025b8:	68c32e23          	sw	a2,1692(t1)

900025bc <inst_443>:

inst_443:
// rs1_val==46341 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xfffffffd, 0xb505, -0xb503, x6, 1696, x8)
900025bc:	0000b537          	lui	a0,0xb
900025c0:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900025c4:	ffff55b7          	lui	a1,0xffff5
900025c8:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
900025cc:	00b56633          	or	a2,a0,a1
900025d0:	6ac32023          	sw	a2,1696(t1)

900025d4 <inst_444>:

inst_444:
// rs1_val==46341 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb505;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0xb505, 0xb505, x6, 1700, x8)
900025d4:	0000b537          	lui	a0,0xb
900025d8:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb425>
900025dc:	0000b5b7          	lui	a1,0xb
900025e0:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900025e4:	00b56633          	or	a2,a0,a1
900025e8:	6ac32223          	sw	a2,1700(t1)

900025ec <inst_445>:

inst_445:
// rs1_val==0 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555554, 0x0, 0x55555554, x6, 1704, x8)
900025ec:	00000513          	li	a0,0
900025f0:	555555b7          	lui	a1,0x55555
900025f4:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
900025f8:	00b56633          	or	a2,a0,a1
900025fc:	6ac32423          	sw	a2,1704(t1)

90002600 <inst_446>:

inst_446:
// rs1_val==0 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x0, 0x0, 0x0, x6, 1708, x8)
90002600:	00000513          	li	a0,0
90002604:	00000593          	li	a1,0
90002608:	00b56633          	or	a2,a0,a1
9000260c:	6ac32623          	sw	a2,1708(t1)

90002610 <inst_447>:

inst_447:
// rs1_val==0 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x4, 0x0, 0x4, x6, 1712, x8)
90002610:	00000513          	li	a0,0
90002614:	00400593          	li	a1,4
90002618:	00b56633          	or	a2,a0,a1
9000261c:	6ac32823          	sw	a2,1712(t1)

90002620 <inst_448>:

inst_448:
// rs1_val==0 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x0, 0x33333332, x6, 1716, x8)
90002620:	00000513          	li	a0,0
90002624:	333335b7          	lui	a1,0x33333
90002628:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
9000262c:	00b56633          	or	a2,a0,a1
90002630:	6ac32a23          	sw	a2,1716(t1)

90002634 <inst_449>:

inst_449:
// rs1_val==0 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x0, 0x66666665, x6, 1720, x8)
90002634:	00000513          	li	a0,0
90002638:	666665b7          	lui	a1,0x66666
9000263c:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90002640:	00b56633          	or	a2,a0,a1
90002644:	6ac32c23          	sw	a2,1720(t1)

90002648 <inst_450>:

inst_450:
// rs1_val==0 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0x0, 0xb503, x6, 1724, x8)
90002648:	00000513          	li	a0,0
9000264c:	0000b5b7          	lui	a1,0xb
90002650:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002654:	00b56633          	or	a2,a0,a1
90002658:	6ac32e23          	sw	a2,1724(t1)

9000265c <inst_451>:

inst_451:
// rs1_val==0 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x0, 0x55555556, x6, 1728, x8)
9000265c:	00000513          	li	a0,0
90002660:	555555b7          	lui	a1,0x55555
90002664:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002668:	00b56633          	or	a2,a0,a1
9000266c:	6cc32023          	sw	a2,1728(t1)

90002670 <inst_452>:

inst_452:
// rs1_val==0 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, 0x0, -0x55555555, x6, 1732, x8)
90002670:	00000513          	li	a0,0
90002674:	aaaab5b7          	lui	a1,0xaaaab
90002678:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000267c:	00b56633          	or	a2,a0,a1
90002680:	6cc32223          	sw	a2,1732(t1)

90002684 <inst_453>:

inst_453:
// rs1_val==0 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x0, 0x6, x6, 1736, x8)
90002684:	00000513          	li	a0,0
90002688:	00600593          	li	a1,6
9000268c:	00b56633          	or	a2,a0,a1
90002690:	6cc32423          	sw	a2,1736(t1)

90002694 <inst_454>:

inst_454:
// rs1_val==0 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333334, 0x0, 0x33333334, x6, 1740, x8)
90002694:	00000513          	li	a0,0
90002698:	333335b7          	lui	a1,0x33333
9000269c:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
900026a0:	00b56633          	or	a2,a0,a1
900026a4:	6cc32623          	sw	a2,1740(t1)

900026a8 <inst_455>:

inst_455:
// rs1_val==0 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x0, 0x66666667, x6, 1744, x8)
900026a8:	00000513          	li	a0,0
900026ac:	666665b7          	lui	a1,0x66666
900026b0:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
900026b4:	00b56633          	or	a2,a0,a1
900026b8:	6cc32823          	sw	a2,1744(t1)

900026bc <inst_456>:

inst_456:
// rs1_val==0 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, 0x0, -0xb503, x6, 1748, x8)
900026bc:	00000513          	li	a0,0
900026c0:	ffff55b7          	lui	a1,0xffff5
900026c4:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
900026c8:	00b56633          	or	a2,a0,a1
900026cc:	6cc32a23          	sw	a2,1748(t1)

900026d0 <inst_457>:

inst_457:
// rs1_val==0 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0x0, 0xb505, x6, 1752, x8)
900026d0:	00000513          	li	a0,0
900026d4:	0000b5b7          	lui	a1,0xb
900026d8:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
900026dc:	00b56633          	or	a2,a0,a1
900026e0:	6cc32c23          	sw	a2,1752(t1)

900026e4 <inst_458>:

inst_458:
// rs1_val==4 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x7, 0x4, 0x3, x6, 1756, x8)
900026e4:	00400513          	li	a0,4
900026e8:	00300593          	li	a1,3
900026ec:	00b56633          	or	a2,a0,a1
900026f0:	6cc32e23          	sw	a2,1756(t1)

900026f4 <inst_459>:

inst_459:
// rs1_val==4 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555555, 0x4, 0x55555555, x6, 1760, x8)
900026f4:	00400513          	li	a0,4
900026f8:	555555b7          	lui	a1,0x55555
900026fc:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90002700:	00b56633          	or	a2,a0,a1
90002704:	6ec32023          	sw	a2,1760(t1)

90002708 <inst_460>:

inst_460:
// rs1_val==4 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaae, 0x4, -0x55555556, x6, 1764, x8)
90002708:	00400513          	li	a0,4
9000270c:	aaaab5b7          	lui	a1,0xaaaab
90002710:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002714:	00b56633          	or	a2,a0,a1
90002718:	6ec32223          	sw	a2,1764(t1)

9000271c <inst_461>:

inst_461:
// rs1_val==4 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x5, 0x4, 0x5, x6, 1768, x8)
9000271c:	00400513          	li	a0,4
90002720:	00500593          	li	a1,5
90002724:	00b56633          	or	a2,a0,a1
90002728:	6ec32423          	sw	a2,1768(t1)

9000272c <inst_462>:

inst_462:
// rs1_val==4 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x4, 0x33333333, x6, 1772, x8)
9000272c:	00400513          	li	a0,4
90002730:	333335b7          	lui	a1,0x33333
90002734:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90002738:	00b56633          	or	a2,a0,a1
9000273c:	6ec32623          	sw	a2,1772(t1)

90002740 <inst_463>:

inst_463:
// rs1_val==4 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666666, 0x4, 0x66666666, x6, 1776, x8)
90002740:	00400513          	li	a0,4
90002744:	666665b7          	lui	a1,0x66666
90002748:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
9000274c:	00b56633          	or	a2,a0,a1
90002750:	6ec32823          	sw	a2,1776(t1)

90002754 <inst_464>:

inst_464:
// rs1_val==4 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff4afc, 0x4, -0xb504, x6, 1780, x8)
90002754:	00400513          	li	a0,4
90002758:	ffff55b7          	lui	a1,0xffff5
9000275c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002760:	00b56633          	or	a2,a0,a1
90002764:	6ec32a23          	sw	a2,1780(t1)

90002768 <inst_465>:

inst_465:
// rs1_val==4 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb504, 0x4, 0xb504, x6, 1784, x8)
90002768:	00400513          	li	a0,4
9000276c:	0000b5b7          	lui	a1,0xb
90002770:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002774:	00b56633          	or	a2,a0,a1
90002778:	6ec32c23          	sw	a2,1784(t1)

9000277c <inst_466>:

inst_466:
// rs1_val==4 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x4, 0x2, x6, 1788, x8)
9000277c:	00400513          	li	a0,4
90002780:	00200593          	li	a1,2
90002784:	00b56633          	or	a2,a0,a1
90002788:	6ec32e23          	sw	a2,1788(t1)

9000278c <inst_467>:

inst_467:
// rs1_val==4 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555554, 0x4, 0x55555554, x6, 1792, x8)
9000278c:	00400513          	li	a0,4
90002790:	555555b7          	lui	a1,0x55555
90002794:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90002798:	00b56633          	or	a2,a0,a1
9000279c:	70c32023          	sw	a2,1792(t1)

900027a0 <inst_468>:

inst_468:
// rs1_val==4 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x4, 0x4, 0x0, x6, 1796, x8)
900027a0:	00400513          	li	a0,4
900027a4:	00000593          	li	a1,0
900027a8:	00b56633          	or	a2,a0,a1
900027ac:	70c32223          	sw	a2,1796(t1)

900027b0 <inst_469>:

inst_469:
// rs1_val==4 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x4, 0x4, 0x4, x6, 1800, x8)
900027b0:	00400513          	li	a0,4
900027b4:	00400593          	li	a1,4
900027b8:	00b56633          	or	a2,a0,a1
900027bc:	70c32423          	sw	a2,1800(t1)

900027c0 <inst_470>:

inst_470:
// rs1_val==4 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x4, 0x33333332, x6, 1804, x8)
900027c0:	00400513          	li	a0,4
900027c4:	333335b7          	lui	a1,0x33333
900027c8:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900027cc:	00b56633          	or	a2,a0,a1
900027d0:	70c32623          	sw	a2,1804(t1)

900027d4 <inst_471>:

inst_471:
// rs1_val==4 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x4, 0x66666665, x6, 1808, x8)
900027d4:	00400513          	li	a0,4
900027d8:	666665b7          	lui	a1,0x66666
900027dc:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900027e0:	00b56633          	or	a2,a0,a1
900027e4:	70c32823          	sw	a2,1808(t1)

900027e8 <inst_472>:

inst_472:
// rs1_val==4 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0x4, 0xb503, x6, 1812, x8)
900027e8:	00400513          	li	a0,4
900027ec:	0000b5b7          	lui	a1,0xb
900027f0:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900027f4:	00b56633          	or	a2,a0,a1
900027f8:	70c32a23          	sw	a2,1812(t1)

900027fc <inst_473>:

inst_473:
// rs1_val==4 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x4, 0x55555556, x6, 1816, x8)
900027fc:	00400513          	li	a0,4
90002800:	555555b7          	lui	a1,0x55555
90002804:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002808:	00b56633          	or	a2,a0,a1
9000280c:	70c32c23          	sw	a2,1816(t1)

90002810 <inst_474>:

inst_474:
// rs1_val==4 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, 0x4, -0x55555555, x6, 1820, x8)
90002810:	00400513          	li	a0,4
90002814:	aaaab5b7          	lui	a1,0xaaaab
90002818:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000281c:	00b56633          	or	a2,a0,a1
90002820:	70c32e23          	sw	a2,1820(t1)

90002824 <inst_475>:

inst_475:
// rs1_val==4 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x6, 0x4, 0x6, x6, 1824, x8)
90002824:	00400513          	li	a0,4
90002828:	00600593          	li	a1,6
9000282c:	00b56633          	or	a2,a0,a1
90002830:	72c32023          	sw	a2,1824(t1)

90002834 <inst_476>:

inst_476:
// rs1_val==4 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333334, 0x4, 0x33333334, x6, 1828, x8)
90002834:	00400513          	li	a0,4
90002838:	333335b7          	lui	a1,0x33333
9000283c:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90002840:	00b56633          	or	a2,a0,a1
90002844:	72c32223          	sw	a2,1828(t1)

90002848 <inst_477>:

inst_477:
// rs1_val==4 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x4, 0x66666667, x6, 1832, x8)
90002848:	00400513          	li	a0,4
9000284c:	666665b7          	lui	a1,0x66666
90002850:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90002854:	00b56633          	or	a2,a0,a1
90002858:	72c32423          	sw	a2,1832(t1)

9000285c <inst_478>:

inst_478:
// rs1_val==4 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff4afd, 0x4, -0xb503, x6, 1836, x8)
9000285c:	00400513          	li	a0,4
90002860:	ffff55b7          	lui	a1,0xffff5
90002864:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002868:	00b56633          	or	a2,a0,a1
9000286c:	72c32623          	sw	a2,1836(t1)

90002870 <inst_479>:

inst_479:
// rs1_val==4 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x4;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb505, 0x4, 0xb505, x6, 1840, x8)
90002870:	00400513          	li	a0,4
90002874:	0000b5b7          	lui	a1,0xb
90002878:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
9000287c:	00b56633          	or	a2,a0,a1
90002880:	72c32823          	sw	a2,1840(t1)

90002884 <inst_480>:

inst_480:
// rs1_val==858993458 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333332, 0x3, x6, 1844, x8)
90002884:	33333537          	lui	a0,0x33333
90002888:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
9000288c:	00300593          	li	a1,3
90002890:	00b56633          	or	a2,a0,a1
90002894:	72c32a23          	sw	a2,1844(t1)

90002898 <inst_481>:

inst_481:
// rs1_val==858993458 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333332, 0x55555555, x6, 1848, x8)
90002898:	33333537          	lui	a0,0x33333
9000289c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900028a0:	555555b7          	lui	a1,0x55555
900028a4:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
900028a8:	00b56633          	or	a2,a0,a1
900028ac:	72c32c23          	sw	a2,1848(t1)

900028b0 <inst_482>:

inst_482:
// rs1_val==858993458 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbba, 0x33333332, -0x55555556, x6, 1852, x8)
900028b0:	33333537          	lui	a0,0x33333
900028b4:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900028b8:	aaaab5b7          	lui	a1,0xaaaab
900028bc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900028c0:	00b56633          	or	a2,a0,a1
900028c4:	72c32e23          	sw	a2,1852(t1)

900028c8 <inst_483>:

inst_483:
// rs1_val==858993458 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x33333337, 0x33333332, 0x5, x6, 1856, x8)
900028c8:	33333537          	lui	a0,0x33333
900028cc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900028d0:	00500593          	li	a1,5
900028d4:	00b56633          	or	a2,a0,a1
900028d8:	74c32023          	sw	a2,1856(t1)

900028dc <inst_484>:

inst_484:
// rs1_val==858993458 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x33333333, 0x33333332, 0x33333333, x6, 1860, x8)
900028dc:	33333537          	lui	a0,0x33333
900028e0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900028e4:	333335b7          	lui	a1,0x33333
900028e8:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
900028ec:	00b56633          	or	a2,a0,a1
900028f0:	74c32223          	sw	a2,1860(t1)

900028f4 <inst_485>:

inst_485:
// rs1_val==858993458 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x33333332, 0x66666666, x6, 1864, x8)
900028f4:	33333537          	lui	a0,0x33333
900028f8:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900028fc:	666665b7          	lui	a1,0x66666
90002900:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002904:	00b56633          	or	a2,a0,a1
90002908:	74c32423          	sw	a2,1864(t1)

9000290c <inst_486>:

inst_486:
// rs1_val==858993458 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff7bfe, 0x33333332, -0xb504, x6, 1868, x8)
9000290c:	33333537          	lui	a0,0x33333
90002910:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002914:	ffff55b7          	lui	a1,0xffff5
90002918:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
9000291c:	00b56633          	or	a2,a0,a1
90002920:	74c32623          	sw	a2,1868(t1)

90002924 <inst_487>:

inst_487:
// rs1_val==858993458 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x3333b736, 0x33333332, 0xb504, x6, 1872, x8)
90002924:	33333537          	lui	a0,0x33333
90002928:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
9000292c:	0000b5b7          	lui	a1,0xb
90002930:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002934:	00b56633          	or	a2,a0,a1
90002938:	74c32823          	sw	a2,1872(t1)

9000293c <inst_488>:

inst_488:
// rs1_val==858993458 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x33333332, 0x2, x6, 1876, x8)
9000293c:	33333537          	lui	a0,0x33333
90002940:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002944:	00200593          	li	a1,2
90002948:	00b56633          	or	a2,a0,a1
9000294c:	74c32a23          	sw	a2,1876(t1)

90002950 <inst_489>:

inst_489:
// rs1_val==858993458 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x33333332, 0x55555554, x6, 1880, x8)
90002950:	33333537          	lui	a0,0x33333
90002954:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002958:	555555b7          	lui	a1,0x55555
9000295c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90002960:	00b56633          	or	a2,a0,a1
90002964:	74c32c23          	sw	a2,1880(t1)

90002968 <inst_490>:

inst_490:
// rs1_val==858993458 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x33333332, 0x0, x6, 1884, x8)
90002968:	33333537          	lui	a0,0x33333
9000296c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002970:	00000593          	li	a1,0
90002974:	00b56633          	or	a2,a0,a1
90002978:	74c32e23          	sw	a2,1884(t1)

9000297c <inst_491>:

inst_491:
// rs1_val==858993458 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333332, 0x4, x6, 1888, x8)
9000297c:	33333537          	lui	a0,0x33333
90002980:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002984:	00400593          	li	a1,4
90002988:	00b56633          	or	a2,a0,a1
9000298c:	76c32023          	sw	a2,1888(t1)

90002990 <inst_492>:

inst_492:
// rs1_val==858993458 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x33333332, 0x33333332, x6, 1892, x8)
90002990:	33333537          	lui	a0,0x33333
90002994:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002998:	333335b7          	lui	a1,0x33333
9000299c:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
900029a0:	00b56633          	or	a2,a0,a1
900029a4:	76c32223          	sw	a2,1892(t1)

900029a8 <inst_493>:

inst_493:
// rs1_val==858993458 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333332, 0x66666665, x6, 1896, x8)
900029a8:	33333537          	lui	a0,0x33333
900029ac:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900029b0:	666665b7          	lui	a1,0x66666
900029b4:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900029b8:	00b56633          	or	a2,a0,a1
900029bc:	76c32423          	sw	a2,1896(t1)

900029c0 <inst_494>:

inst_494:
// rs1_val==858993458 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x3333b733, 0x33333332, 0xb503, x6, 1900, x8)
900029c0:	33333537          	lui	a0,0x33333
900029c4:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900029c8:	0000b5b7          	lui	a1,0xb
900029cc:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900029d0:	00b56633          	or	a2,a0,a1
900029d4:	76c32623          	sw	a2,1900(t1)

900029d8 <inst_495>:

inst_495:
// rs1_val==858993458 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x33333332, 0x55555556, x6, 1904, x8)
900029d8:	33333537          	lui	a0,0x33333
900029dc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900029e0:	555555b7          	lui	a1,0x55555
900029e4:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
900029e8:	00b56633          	or	a2,a0,a1
900029ec:	76c32823          	sw	a2,1904(t1)

900029f0 <inst_496>:

inst_496:
// rs1_val==858993458 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, 0x33333332, -0x55555555, x6, 1908, x8)
900029f0:	33333537          	lui	a0,0x33333
900029f4:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
900029f8:	aaaab5b7          	lui	a1,0xaaaab
900029fc:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002a00:	00b56633          	or	a2,a0,a1
90002a04:	76c32a23          	sw	a2,1908(t1)

90002a08 <inst_497>:

inst_497:
// rs1_val==858993458 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333332, 0x6, x6, 1912, x8)
90002a08:	33333537          	lui	a0,0x33333
90002a0c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002a10:	00600593          	li	a1,6
90002a14:	00b56633          	or	a2,a0,a1
90002a18:	76c32c23          	sw	a2,1912(t1)

90002a1c <inst_498>:

inst_498:
// rs1_val==858993458 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x33333336, 0x33333332, 0x33333334, x6, 1916, x8)
90002a1c:	33333537          	lui	a0,0x33333
90002a20:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002a24:	333335b7          	lui	a1,0x33333
90002a28:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90002a2c:	00b56633          	or	a2,a0,a1
90002a30:	76c32e23          	sw	a2,1916(t1)

90002a34 <inst_499>:

inst_499:
// rs1_val==858993458 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x33333332, 0x66666667, x6, 1920, x8)
90002a34:	33333537          	lui	a0,0x33333
90002a38:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002a3c:	666665b7          	lui	a1,0x66666
90002a40:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90002a44:	00b56633          	or	a2,a0,a1
90002a48:	78c32023          	sw	a2,1920(t1)

90002a4c <inst_500>:

inst_500:
// rs1_val==858993458 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff7bff, 0x33333332, -0xb503, x6, 1924, x8)
90002a4c:	33333537          	lui	a0,0x33333
90002a50:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002a54:	ffff55b7          	lui	a1,0xffff5
90002a58:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002a5c:	00b56633          	or	a2,a0,a1
90002a60:	78c32223          	sw	a2,1924(t1)

90002a64 <inst_501>:

inst_501:
// rs1_val==858993458 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0x33333332, 0xb505, x6, 1928, x8)
90002a64:	33333537          	lui	a0,0x33333
90002a68:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90002a6c:	0000b5b7          	lui	a1,0xb
90002a70:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90002a74:	00b56633          	or	a2,a0,a1
90002a78:	78c32423          	sw	a2,1928(t1)

90002a7c <inst_502>:

inst_502:
// rs1_val==1717986917 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666665, 0x3, x6, 1932, x8)
90002a7c:	66666537          	lui	a0,0x66666
90002a80:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002a84:	00300593          	li	a1,3
90002a88:	00b56633          	or	a2,a0,a1
90002a8c:	78c32623          	sw	a2,1932(t1)

90002a90 <inst_503>:

inst_503:
// rs1_val==1717986917 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x66666665, 0x55555555, x6, 1936, x8)
90002a90:	66666537          	lui	a0,0x66666
90002a94:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002a98:	555555b7          	lui	a1,0x55555
90002a9c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90002aa0:	00b56633          	or	a2,a0,a1
90002aa4:	78c32823          	sw	a2,1936(t1)

90002aa8 <inst_504>:

inst_504:
// rs1_val==1717986917 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, 0x66666665, -0x55555556, x6, 1940, x8)
90002aa8:	66666537          	lui	a0,0x66666
90002aac:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002ab0:	aaaab5b7          	lui	a1,0xaaaab
90002ab4:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002ab8:	00b56633          	or	a2,a0,a1
90002abc:	78c32a23          	sw	a2,1940(t1)

90002ac0 <inst_505>:

inst_505:
// rs1_val==1717986917 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x66666665, 0x5, x6, 1944, x8)
90002ac0:	66666537          	lui	a0,0x66666
90002ac4:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002ac8:	00500593          	li	a1,5
90002acc:	00b56633          	or	a2,a0,a1
90002ad0:	78c32c23          	sw	a2,1944(t1)

90002ad4 <inst_506>:

inst_506:
// rs1_val==1717986917 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666665, 0x33333333, x6, 1948, x8)
90002ad4:	66666537          	lui	a0,0x66666
90002ad8:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002adc:	333335b7          	lui	a1,0x33333
90002ae0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90002ae4:	00b56633          	or	a2,a0,a1
90002ae8:	78c32e23          	sw	a2,1948(t1)

90002aec <inst_507>:

inst_507:
// rs1_val==1717986917 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666665, 0x66666666, x6, 1952, x8)
90002aec:	66666537          	lui	a0,0x66666
90002af0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002af4:	666665b7          	lui	a1,0x66666
90002af8:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002afc:	00b56633          	or	a2,a0,a1
90002b00:	7ac32023          	sw	a2,1952(t1)

90002b04 <inst_508>:

inst_508:
// rs1_val==1717986917 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff6efd, 0x66666665, -0xb504, x6, 1956, x8)
90002b04:	66666537          	lui	a0,0x66666
90002b08:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b0c:	ffff55b7          	lui	a1,0xffff5
90002b10:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002b14:	00b56633          	or	a2,a0,a1
90002b18:	7ac32223          	sw	a2,1956(t1)

90002b1c <inst_509>:

inst_509:
// rs1_val==1717986917 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x6666f765, 0x66666665, 0xb504, x6, 1960, x8)
90002b1c:	66666537          	lui	a0,0x66666
90002b20:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b24:	0000b5b7          	lui	a1,0xb
90002b28:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002b2c:	00b56633          	or	a2,a0,a1
90002b30:	7ac32423          	sw	a2,1960(t1)

90002b34 <inst_510>:

inst_510:
// rs1_val==1717986917 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666665, 0x2, x6, 1964, x8)
90002b34:	66666537          	lui	a0,0x66666
90002b38:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b3c:	00200593          	li	a1,2
90002b40:	00b56633          	or	a2,a0,a1
90002b44:	7ac32623          	sw	a2,1964(t1)

90002b48 <inst_511>:

inst_511:
// rs1_val==1717986917 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x66666665, 0x55555554, x6, 1968, x8)
90002b48:	66666537          	lui	a0,0x66666
90002b4c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b50:	555555b7          	lui	a1,0x55555
90002b54:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90002b58:	00b56633          	or	a2,a0,a1
90002b5c:	7ac32823          	sw	a2,1968(t1)

90002b60 <inst_512>:

inst_512:
// rs1_val==1717986917 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x66666665, 0x0, x6, 1972, x8)
90002b60:	66666537          	lui	a0,0x66666
90002b64:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b68:	00000593          	li	a1,0
90002b6c:	00b56633          	or	a2,a0,a1
90002b70:	7ac32a23          	sw	a2,1972(t1)

90002b74 <inst_513>:

inst_513:
// rs1_val==1717986917 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x66666665, 0x4, x6, 1976, x8)
90002b74:	66666537          	lui	a0,0x66666
90002b78:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b7c:	00400593          	li	a1,4
90002b80:	00b56633          	or	a2,a0,a1
90002b84:	7ac32c23          	sw	a2,1976(t1)

90002b88 <inst_514>:

inst_514:
// rs1_val==1717986917 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666665, 0x33333332, x6, 1980, x8)
90002b88:	66666537          	lui	a0,0x66666
90002b8c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002b90:	333335b7          	lui	a1,0x33333
90002b94:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002b98:	00b56633          	or	a2,a0,a1
90002b9c:	7ac32e23          	sw	a2,1980(t1)

90002ba0 <inst_515>:

inst_515:
// rs1_val==1717986917 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x66666665, 0x66666665, 0x66666665, x6, 1984, x8)
90002ba0:	66666537          	lui	a0,0x66666
90002ba4:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002ba8:	666665b7          	lui	a1,0x66666
90002bac:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90002bb0:	00b56633          	or	a2,a0,a1
90002bb4:	7cc32023          	sw	a2,1984(t1)

90002bb8 <inst_516>:

inst_516:
// rs1_val==1717986917 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0x66666665, 0xb503, x6, 1988, x8)
90002bb8:	66666537          	lui	a0,0x66666
90002bbc:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002bc0:	0000b5b7          	lui	a1,0xb
90002bc4:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002bc8:	00b56633          	or	a2,a0,a1
90002bcc:	7cc32223          	sw	a2,1988(t1)

90002bd0 <inst_517>:

inst_517:
// rs1_val==1717986917 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x66666665, 0x55555556, x6, 1992, x8)
90002bd0:	66666537          	lui	a0,0x66666
90002bd4:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002bd8:	555555b7          	lui	a1,0x55555
90002bdc:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002be0:	00b56633          	or	a2,a0,a1
90002be4:	7cc32423          	sw	a2,1992(t1)

90002be8 <inst_518>:

inst_518:
// rs1_val==1717986917 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, 0x66666665, -0x55555555, x6, 1996, x8)
90002be8:	66666537          	lui	a0,0x66666
90002bec:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002bf0:	aaaab5b7          	lui	a1,0xaaaab
90002bf4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002bf8:	00b56633          	or	a2,a0,a1
90002bfc:	7cc32623          	sw	a2,1996(t1)

90002c00 <inst_519>:

inst_519:
// rs1_val==1717986917 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666665, 0x6, x6, 2000, x8)
90002c00:	66666537          	lui	a0,0x66666
90002c04:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002c08:	00600593          	li	a1,6
90002c0c:	00b56633          	or	a2,a0,a1
90002c10:	7cc32823          	sw	a2,2000(t1)

90002c14 <inst_520>:

inst_520:
// rs1_val==1717986917 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777775, 0x66666665, 0x33333334, x6, 2004, x8)
90002c14:	66666537          	lui	a0,0x66666
90002c18:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002c1c:	333335b7          	lui	a1,0x33333
90002c20:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90002c24:	00b56633          	or	a2,a0,a1
90002c28:	7cc32a23          	sw	a2,2004(t1)

90002c2c <inst_521>:

inst_521:
// rs1_val==1717986917 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x66666667, 0x66666665, 0x66666667, x6, 2008, x8)
90002c2c:	66666537          	lui	a0,0x66666
90002c30:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002c34:	666665b7          	lui	a1,0x66666
90002c38:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90002c3c:	00b56633          	or	a2,a0,a1
90002c40:	7cc32c23          	sw	a2,2008(t1)

90002c44 <inst_522>:

inst_522:
// rs1_val==1717986917 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff6efd, 0x66666665, -0xb503, x6, 2012, x8)
90002c44:	66666537          	lui	a0,0x66666
90002c48:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002c4c:	ffff55b7          	lui	a1,0xffff5
90002c50:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002c54:	00b56633          	or	a2,a0,a1
90002c58:	7cc32e23          	sw	a2,2012(t1)

90002c5c <inst_523>:

inst_523:
// rs1_val==1717986917 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x66666665;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x6666f765, 0x66666665, 0xb505, x6, 2016, x8)
90002c5c:	66666537          	lui	a0,0x66666
90002c60:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666585>
90002c64:	0000b5b7          	lui	a1,0xb
90002c68:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90002c6c:	00b56633          	or	a2,a0,a1
90002c70:	7ec32023          	sw	a2,2016(t1)

90002c74 <inst_524>:

inst_524:
// rs1_val==46339 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0xb503, 0x3, x6, 2020, x8)
90002c74:	0000b537          	lui	a0,0xb
90002c78:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002c7c:	00300593          	li	a1,3
90002c80:	00b56633          	or	a2,a0,a1
90002c84:	7ec32223          	sw	a2,2020(t1)

90002c88 <inst_525>:

inst_525:
// rs1_val==46339 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0xb503, 0x55555555, x6, 2024, x8)
90002c88:	0000b537          	lui	a0,0xb
90002c8c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002c90:	555555b7          	lui	a1,0x55555
90002c94:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90002c98:	00b56633          	or	a2,a0,a1
90002c9c:	7ec32423          	sw	a2,2024(t1)

90002ca0 <inst_526>:

inst_526:
// rs1_val==46339 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfab, 0xb503, -0x55555556, x6, 2028, x8)
90002ca0:	0000b537          	lui	a0,0xb
90002ca4:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002ca8:	aaaab5b7          	lui	a1,0xaaaab
90002cac:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002cb0:	00b56633          	or	a2,a0,a1
90002cb4:	7ec32623          	sw	a2,2028(t1)

90002cb8 <inst_527>:

inst_527:
// rs1_val==46339 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb503, 0x5, x6, 2032, x8)
90002cb8:	0000b537          	lui	a0,0xb
90002cbc:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002cc0:	00500593          	li	a1,5
90002cc4:	00b56633          	or	a2,a0,a1
90002cc8:	7ec32823          	sw	a2,2032(t1)

90002ccc <inst_528>:

inst_528:
// rs1_val==46339 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x3333b733, 0xb503, 0x33333333, x6, 2036, x8)
90002ccc:	0000b537          	lui	a0,0xb
90002cd0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002cd4:	333335b7          	lui	a1,0x33333
90002cd8:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90002cdc:	00b56633          	or	a2,a0,a1
90002ce0:	7ec32a23          	sw	a2,2036(t1)

90002ce4 <inst_529>:

inst_529:
// rs1_val==46339 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb503, 0x66666666, x6, 2040, x8)
90002ce4:	0000b537          	lui	a0,0xb
90002ce8:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002cec:	666665b7          	lui	a1,0x66666
90002cf0:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002cf4:	00b56633          	or	a2,a0,a1
90002cf8:	7ec32c23          	sw	a2,2040(t1)

90002cfc <inst_530>:

inst_530:
// rs1_val==46339 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0xb503, -0xb504, x6, 2044, x8)
90002cfc:	0000b537          	lui	a0,0xb
90002d00:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d04:	ffff55b7          	lui	a1,0xffff5
90002d08:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002d0c:	00b56633          	or	a2,a0,a1
90002d10:	7ec32e23          	sw	a2,2044(t1)
RVTEST_SIGBASE( x6,signature_x6_1)
90002d14:	00003317          	auipc	t1,0x3
90002d18:	b4830313          	addi	t1,t1,-1208 # 9000585c <signature_x6_1>

90002d1c <inst_531>:

inst_531:
// rs1_val==46339 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb503, 0xb504, x6, 0, x8)
90002d1c:	0000b537          	lui	a0,0xb
90002d20:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d24:	0000b5b7          	lui	a1,0xb
90002d28:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002d2c:	00b56633          	or	a2,a0,a1
90002d30:	00c32023          	sw	a2,0(t1)

90002d34 <inst_532>:

inst_532:
// rs1_val==46339 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0xb503, 0x2, x6, 4, x8)
90002d34:	0000b537          	lui	a0,0xb
90002d38:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d3c:	00200593          	li	a1,2
90002d40:	00b56633          	or	a2,a0,a1
90002d44:	00c32223          	sw	a2,4(t1)

90002d48 <inst_533>:

inst_533:
// rs1_val==46339 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0xb503, 0x55555554, x6, 8, x8)
90002d48:	0000b537          	lui	a0,0xb
90002d4c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d50:	555555b7          	lui	a1,0x55555
90002d54:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90002d58:	00b56633          	or	a2,a0,a1
90002d5c:	00c32423          	sw	a2,8(t1)

90002d60 <inst_534>:

inst_534:
// rs1_val==46339 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0xb503, 0x0, x6, 12, x8)
90002d60:	0000b537          	lui	a0,0xb
90002d64:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d68:	00000593          	li	a1,0
90002d6c:	00b56633          	or	a2,a0,a1
90002d70:	00c32623          	sw	a2,12(t1)

90002d74 <inst_535>:

inst_535:
// rs1_val==46339 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb503, 0x4, x6, 16, x8)
90002d74:	0000b537          	lui	a0,0xb
90002d78:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d7c:	00400593          	li	a1,4
90002d80:	00b56633          	or	a2,a0,a1
90002d84:	00c32823          	sw	a2,16(t1)

90002d88 <inst_536>:

inst_536:
// rs1_val==46339 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x3333b733, 0xb503, 0x33333332, x6, 20, x8)
90002d88:	0000b537          	lui	a0,0xb
90002d8c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002d90:	333335b7          	lui	a1,0x33333
90002d94:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002d98:	00b56633          	or	a2,a0,a1
90002d9c:	00c32a23          	sw	a2,20(t1)

90002da0 <inst_537>:

inst_537:
// rs1_val==46339 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb503, 0x66666665, x6, 24, x8)
90002da0:	0000b537          	lui	a0,0xb
90002da4:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002da8:	666665b7          	lui	a1,0x66666
90002dac:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90002db0:	00b56633          	or	a2,a0,a1
90002db4:	00c32c23          	sw	a2,24(t1)

90002db8 <inst_538>:

inst_538:
// rs1_val==46339 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xb503, 0xb503, 0xb503, x6, 28, x8)
90002db8:	0000b537          	lui	a0,0xb
90002dbc:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002dc0:	0000b5b7          	lui	a1,0xb
90002dc4:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002dc8:	00b56633          	or	a2,a0,a1
90002dcc:	00c32e23          	sw	a2,28(t1)

90002dd0 <inst_539>:

inst_539:
// rs1_val==46339 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0xb503, 0x55555556, x6, 32, x8)
90002dd0:	0000b537          	lui	a0,0xb
90002dd4:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002dd8:	555555b7          	lui	a1,0x55555
90002ddc:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002de0:	00b56633          	or	a2,a0,a1
90002de4:	02c32023          	sw	a2,32(t1)

90002de8 <inst_540>:

inst_540:
// rs1_val==46339 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfab, 0xb503, -0x55555555, x6, 36, x8)
90002de8:	0000b537          	lui	a0,0xb
90002dec:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002df0:	aaaab5b7          	lui	a1,0xaaaab
90002df4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002df8:	00b56633          	or	a2,a0,a1
90002dfc:	02c32223          	sw	a2,36(t1)

90002e00 <inst_541>:

inst_541:
// rs1_val==46339 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb503, 0x6, x6, 40, x8)
90002e00:	0000b537          	lui	a0,0xb
90002e04:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002e08:	00600593          	li	a1,6
90002e0c:	00b56633          	or	a2,a0,a1
90002e10:	02c32423          	sw	a2,40(t1)

90002e14 <inst_542>:

inst_542:
// rs1_val==46339 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x3333b737, 0xb503, 0x33333334, x6, 44, x8)
90002e14:	0000b537          	lui	a0,0xb
90002e18:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002e1c:	333335b7          	lui	a1,0x33333
90002e20:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
90002e24:	00b56633          	or	a2,a0,a1
90002e28:	02c32623          	sw	a2,44(t1)

90002e2c <inst_543>:

inst_543:
// rs1_val==46339 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x6666f767, 0xb503, 0x66666667, x6, 48, x8)
90002e2c:	0000b537          	lui	a0,0xb
90002e30:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002e34:	666665b7          	lui	a1,0x66666
90002e38:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90002e3c:	00b56633          	or	a2,a0,a1
90002e40:	02c32823          	sw	a2,48(t1)

90002e44 <inst_544>:

inst_544:
// rs1_val==46339 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0xb503, -0xb503, x6, 52, x8)
90002e44:	0000b537          	lui	a0,0xb
90002e48:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002e4c:	ffff55b7          	lui	a1,0xffff5
90002e50:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
90002e54:	00b56633          	or	a2,a0,a1
90002e58:	02c32a23          	sw	a2,52(t1)

90002e5c <inst_545>:

inst_545:
// rs1_val==46339 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0xb503;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0xb507, 0xb503, 0xb505, x6, 56, x8)
90002e5c:	0000b537          	lui	a0,0xb
90002e60:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb423>
90002e64:	0000b5b7          	lui	a1,0xb
90002e68:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90002e6c:	00b56633          	or	a2,a0,a1
90002e70:	02c32c23          	sw	a2,56(t1)

90002e74 <inst_546>:

inst_546:
// rs1_val==1431655766 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555556, 0x3, x6, 60, x8)
90002e74:	55555537          	lui	a0,0x55555
90002e78:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002e7c:	00300593          	li	a1,3
90002e80:	00b56633          	or	a2,a0,a1
90002e84:	02c32e23          	sw	a2,60(t1)

90002e88 <inst_547>:

inst_547:
// rs1_val==1431655766 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555556, 0x55555555, x6, 64, x8)
90002e88:	55555537          	lui	a0,0x55555
90002e8c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002e90:	555555b7          	lui	a1,0x55555
90002e94:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90002e98:	00b56633          	or	a2,a0,a1
90002e9c:	04c32023          	sw	a2,64(t1)

90002ea0 <inst_548>:

inst_548:
// rs1_val==1431655766 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xfffffffe, 0x55555556, -0x55555556, x6, 68, x8)
90002ea0:	55555537          	lui	a0,0x55555
90002ea4:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002ea8:	aaaab5b7          	lui	a1,0xaaaab
90002eac:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
90002eb0:	00b56633          	or	a2,a0,a1
90002eb4:	04c32223          	sw	a2,68(t1)

90002eb8 <inst_549>:

inst_549:
// rs1_val==1431655766 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0x55555557, 0x55555556, 0x5, x6, 72, x8)
90002eb8:	55555537          	lui	a0,0x55555
90002ebc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002ec0:	00500593          	li	a1,5
90002ec4:	00b56633          	or	a2,a0,a1
90002ec8:	04c32423          	sw	a2,72(t1)

90002ecc <inst_550>:

inst_550:
// rs1_val==1431655766 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555556, 0x33333333, x6, 76, x8)
90002ecc:	55555537          	lui	a0,0x55555
90002ed0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002ed4:	333335b7          	lui	a1,0x33333
90002ed8:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
90002edc:	00b56633          	or	a2,a0,a1
90002ee0:	04c32623          	sw	a2,76(t1)

90002ee4 <inst_551>:

inst_551:
// rs1_val==1431655766 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x55555556, 0x66666666, x6, 80, x8)
90002ee4:	55555537          	lui	a0,0x55555
90002ee8:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002eec:	666665b7          	lui	a1,0x66666
90002ef0:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
90002ef4:	00b56633          	or	a2,a0,a1
90002ef8:	04c32823          	sw	a2,80(t1)

90002efc <inst_552>:

inst_552:
// rs1_val==1431655766 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffff5ffe, 0x55555556, -0xb504, x6, 84, x8)
90002efc:	55555537          	lui	a0,0x55555
90002f00:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f04:	ffff55b7          	lui	a1,0xffff5
90002f08:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90002f0c:	00b56633          	or	a2,a0,a1
90002f10:	04c32a23          	sw	a2,84(t1)

90002f14 <inst_553>:

inst_553:
// rs1_val==1431655766 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0x5555f556, 0x55555556, 0xb504, x6, 88, x8)
90002f14:	55555537          	lui	a0,0x55555
90002f18:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f1c:	0000b5b7          	lui	a1,0xb
90002f20:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
90002f24:	00b56633          	or	a2,a0,a1
90002f28:	04c32c23          	sw	a2,88(t1)

90002f2c <inst_554>:

inst_554:
// rs1_val==1431655766 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x2, x6, 92, x8)
90002f2c:	55555537          	lui	a0,0x55555
90002f30:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f34:	00200593          	li	a1,2
90002f38:	00b56633          	or	a2,a0,a1
90002f3c:	04c32e23          	sw	a2,92(t1)

90002f40 <inst_555>:

inst_555:
// rs1_val==1431655766 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x55555554, x6, 96, x8)
90002f40:	55555537          	lui	a0,0x55555
90002f44:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f48:	555555b7          	lui	a1,0x55555
90002f4c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90002f50:	00b56633          	or	a2,a0,a1
90002f54:	06c32023          	sw	a2,96(t1)

90002f58 <inst_556>:

inst_556:
// rs1_val==1431655766 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x0, x6, 100, x8)
90002f58:	55555537          	lui	a0,0x55555
90002f5c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f60:	00000593          	li	a1,0
90002f64:	00b56633          	or	a2,a0,a1
90002f68:	06c32223          	sw	a2,100(t1)

90002f6c <inst_557>:

inst_557:
// rs1_val==1431655766 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x4, x6, 104, x8)
90002f6c:	55555537          	lui	a0,0x55555
90002f70:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f74:	00400593          	li	a1,4
90002f78:	00b56633          	or	a2,a0,a1
90002f7c:	06c32423          	sw	a2,104(t1)

90002f80 <inst_558>:

inst_558:
// rs1_val==1431655766 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x55555556, 0x33333332, x6, 108, x8)
90002f80:	55555537          	lui	a0,0x55555
90002f84:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002f88:	333335b7          	lui	a1,0x33333
90002f8c:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90002f90:	00b56633          	or	a2,a0,a1
90002f94:	06c32623          	sw	a2,108(t1)

90002f98 <inst_559>:

inst_559:
// rs1_val==1431655766 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555556, 0x66666665, x6, 112, x8)
90002f98:	55555537          	lui	a0,0x55555
90002f9c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002fa0:	666665b7          	lui	a1,0x66666
90002fa4:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
90002fa8:	00b56633          	or	a2,a0,a1
90002fac:	06c32823          	sw	a2,112(t1)

90002fb0 <inst_560>:

inst_560:
// rs1_val==1431655766 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0x55555556, 0xb503, x6, 116, x8)
90002fb0:	55555537          	lui	a0,0x55555
90002fb4:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002fb8:	0000b5b7          	lui	a1,0xb
90002fbc:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
90002fc0:	00b56633          	or	a2,a0,a1
90002fc4:	06c32a23          	sw	a2,116(t1)

90002fc8 <inst_561>:

inst_561:
// rs1_val==1431655766 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x55555556, x6, 120, x8)
90002fc8:	55555537          	lui	a0,0x55555
90002fcc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002fd0:	555555b7          	lui	a1,0x55555
90002fd4:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
90002fd8:	00b56633          	or	a2,a0,a1
90002fdc:	06c32c23          	sw	a2,120(t1)

90002fe0 <inst_562>:

inst_562:
// rs1_val==1431655766 and rs2_val==-1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, 0x55555556, -0x55555555, x6, 124, x8)
90002fe0:	55555537          	lui	a0,0x55555
90002fe4:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90002fe8:	aaaab5b7          	lui	a1,0xaaaab
90002fec:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90002ff0:	00b56633          	or	a2,a0,a1
90002ff4:	06c32e23          	sw	a2,124(t1)

90002ff8 <inst_563>:

inst_563:
// rs1_val==1431655766 and rs2_val==6, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x6
TEST_RR_OP(or, x12, x10, x11, 0x55555556, 0x55555556, 0x6, x6, 128, x8)
90002ff8:	55555537          	lui	a0,0x55555
90002ffc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90003000:	00600593          	li	a1,6
90003004:	00b56633          	or	a2,a0,a1
90003008:	08c32023          	sw	a2,128(t1)

9000300c <inst_564>:

inst_564:
// rs1_val==1431655766 and rs2_val==858993460, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x33333334
TEST_RR_OP(or, x12, x10, x11, 0x77777776, 0x55555556, 0x33333334, x6, 132, x8)
9000300c:	55555537          	lui	a0,0x55555
90003010:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90003014:	333335b7          	lui	a1,0x33333
90003018:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333254>
9000301c:	00b56633          	or	a2,a0,a1
90003020:	08c32223          	sw	a2,132(t1)

90003024 <inst_565>:

inst_565:
// rs1_val==1431655766 and rs2_val==1717986919, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0x66666667
TEST_RR_OP(or, x12, x10, x11, 0x77777777, 0x55555556, 0x66666667, x6, 136, x8)
90003024:	55555537          	lui	a0,0x55555
90003028:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
9000302c:	666665b7          	lui	a1,0x66666
90003030:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666587>
90003034:	00b56633          	or	a2,a0,a1
90003038:	08c32423          	sw	a2,136(t1)

9000303c <inst_566>:

inst_566:
// rs1_val==1431655766 and rs2_val==-46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:-0xb503
TEST_RR_OP(or, x12, x10, x11, 0xffff5fff, 0x55555556, -0xb503, x6, 140, x8)
9000303c:	55555537          	lui	a0,0x55555
90003040:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
90003044:	ffff55b7          	lui	a1,0xffff5
90003048:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffeeff9>
9000304c:	00b56633          	or	a2,a0,a1
90003050:	08c32623          	sw	a2,140(t1)

90003054 <inst_567>:

inst_567:
// rs1_val==1431655766 and rs2_val==46341, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x55555556;  op2val:0xb505
TEST_RR_OP(or, x12, x10, x11, 0x5555f557, 0x55555556, 0xb505, x6, 144, x8)
90003054:	55555537          	lui	a0,0x55555
90003058:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555476>
9000305c:	0000b5b7          	lui	a1,0xb
90003060:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb425>
90003064:	00b56633          	or	a2,a0,a1
90003068:	08c32823          	sw	a2,144(t1)

9000306c <inst_568>:

inst_568:
// rs1_val==-1431655765 and rs2_val==3, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x3
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555555, 0x3, x6, 148, x8)
9000306c:	aaaab537          	lui	a0,0xaaaab
90003070:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003074:	00300593          	li	a1,3
90003078:	00b56633          	or	a2,a0,a1
9000307c:	08c32a23          	sw	a2,148(t1)

90003080 <inst_569>:

inst_569:
// rs1_val==-1431655765 and rs2_val==1431655765, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555555
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x55555555, 0x55555555, x6, 152, x8)
90003080:	aaaab537          	lui	a0,0xaaaab
90003084:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003088:	555555b7          	lui	a1,0x55555
9000308c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555475>
90003090:	00b56633          	or	a2,a0,a1
90003094:	08c32c23          	sw	a2,152(t1)

90003098 <inst_570>:

inst_570:
// rs1_val==-1431655765 and rs2_val==-1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555555, -0x55555556, x6, 156, x8)
90003098:	aaaab537          	lui	a0,0xaaaab
9000309c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030a0:	aaaab5b7          	lui	a1,0xaaaab
900030a4:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa4fa6>
900030a8:	00b56633          	or	a2,a0,a1
900030ac:	08c32e23          	sw	a2,156(t1)

900030b0 <inst_571>:

inst_571:
// rs1_val==-1431655765 and rs2_val==5, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x5
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, -0x55555555, 0x5, x6, 160, x8)
900030b0:	aaaab537          	lui	a0,0xaaaab
900030b4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030b8:	00500593          	li	a1,5
900030bc:	00b56633          	or	a2,a0,a1
900030c0:	0ac32023          	sw	a2,160(t1)

900030c4 <inst_572>:

inst_572:
// rs1_val==-1431655765 and rs2_val==858993459, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333333
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, -0x55555555, 0x33333333, x6, 164, x8)
900030c4:	aaaab537          	lui	a0,0xaaaab
900030c8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030cc:	333335b7          	lui	a1,0x33333
900030d0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333253>
900030d4:	00b56633          	or	a2,a0,a1
900030d8:	0ac32223          	sw	a2,164(t1)

900030dc <inst_573>:

inst_573:
// rs1_val==-1431655765 and rs2_val==1717986918, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666666
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, -0x55555555, 0x66666666, x6, 168, x8)
900030dc:	aaaab537          	lui	a0,0xaaaab
900030e0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030e4:	666665b7          	lui	a1,0x66666
900030e8:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666586>
900030ec:	00b56633          	or	a2,a0,a1
900030f0:	0ac32423          	sw	a2,168(t1)

900030f4 <inst_574>:

inst_574:
// rs1_val==-1431655765 and rs2_val==-46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:-0xb504
TEST_RR_OP(or, x12, x10, x11, 0xffffeaff, -0x55555555, -0xb504, x6, 172, x8)
900030f4:	aaaab537          	lui	a0,0xaaaab
900030f8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900030fc:	ffff55b7          	lui	a1,0xffff5
90003100:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffeeff8>
90003104:	00b56633          	or	a2,a0,a1
90003108:	0ac32623          	sw	a2,172(t1)

9000310c <inst_575>:

inst_575:
// rs1_val==-1431655765 and rs2_val==46340, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb504
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfaf, -0x55555555, 0xb504, x6, 176, x8)
9000310c:	aaaab537          	lui	a0,0xaaaab
90003110:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003114:	0000b5b7          	lui	a1,0xb
90003118:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb424>
9000311c:	00b56633          	or	a2,a0,a1
90003120:	0ac32823          	sw	a2,176(t1)

90003124 <inst_576>:

inst_576:
// rs1_val==-1431655765 and rs2_val==2, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x2
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555555, 0x2, x6, 180, x8)
90003124:	aaaab537          	lui	a0,0xaaaab
90003128:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000312c:	00200593          	li	a1,2
90003130:	00b56633          	or	a2,a0,a1
90003134:	0ac32a23          	sw	a2,180(t1)

90003138 <inst_577>:

inst_577:
// rs1_val==-1431655765 and rs2_val==1431655764, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555554
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x55555555, 0x55555554, x6, 184, x8)
90003138:	aaaab537          	lui	a0,0xaaaab
9000313c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003140:	555555b7          	lui	a1,0x55555
90003144:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555474>
90003148:	00b56633          	or	a2,a0,a1
9000314c:	0ac32c23          	sw	a2,184(t1)

90003150 <inst_578>:

inst_578:
// rs1_val==-1431655765 and rs2_val==0, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x0
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaab, -0x55555555, 0x0, x6, 188, x8)
90003150:	aaaab537          	lui	a0,0xaaaab
90003154:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003158:	00000593          	li	a1,0
9000315c:	00b56633          	or	a2,a0,a1
90003160:	0ac32e23          	sw	a2,188(t1)

90003164 <inst_579>:

inst_579:
// rs1_val==-1431655765 and rs2_val==4, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x4
TEST_RR_OP(or, x12, x10, x11, 0xaaaaaaaf, -0x55555555, 0x4, x6, 192, x8)
90003164:	aaaab537          	lui	a0,0xaaaab
90003168:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
9000316c:	00400593          	li	a1,4
90003170:	00b56633          	or	a2,a0,a1
90003174:	0cc32023          	sw	a2,192(t1)

90003178 <inst_580>:

inst_580:
// rs1_val==-1431655765 and rs2_val==858993458, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x33333332
TEST_RR_OP(or, x12, x10, x11, 0xbbbbbbbb, -0x55555555, 0x33333332, x6, 196, x8)
90003178:	aaaab537          	lui	a0,0xaaaab
9000317c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003180:	333335b7          	lui	a1,0x33333
90003184:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333252>
90003188:	00b56633          	or	a2,a0,a1
9000318c:	0cc32223          	sw	a2,196(t1)

90003190 <inst_581>:

inst_581:
// rs1_val==-1431655765 and rs2_val==1717986917, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x66666665
TEST_RR_OP(or, x12, x10, x11, 0xeeeeeeef, -0x55555555, 0x66666665, x6, 200, x8)
90003190:	aaaab537          	lui	a0,0xaaaab
90003194:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
90003198:	666665b7          	lui	a1,0x66666
9000319c:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666585>
900031a0:	00b56633          	or	a2,a0,a1
900031a4:	0cc32423          	sw	a2,200(t1)

900031a8 <inst_582>:

inst_582:
// rs1_val==-1431655765 and rs2_val==46339, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0xb503
TEST_RR_OP(or, x12, x10, x11, 0xaaaabfab, -0x55555555, 0xb503, x6, 204, x8)
900031a8:	aaaab537          	lui	a0,0xaaaab
900031ac:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900031b0:	0000b5b7          	lui	a1,0xb
900031b4:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb423>
900031b8:	00b56633          	or	a2,a0,a1
900031bc:	0cc32623          	sw	a2,204(t1)

900031c0 <inst_583>:

inst_583:
// rs1_val==-1431655765 and rs2_val==1431655766, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x55555555;  op2val:0x55555556
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x55555555, 0x55555556, x6, 208, x8)
900031c0:	aaaab537          	lui	a0,0xaaaab
900031c4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa4fa7>
900031c8:	555555b7          	lui	a1,0x55555
900031cc:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555476>
900031d0:	00b56633          	or	a2,a0,a1
900031d4:	0cc32823          	sw	a2,208(t1)

900031d8 <inst_584>:

inst_584:
// rs1_val > 0 and rs2_val < 0, rs2_val == -2049, rs1_val == 2
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x2;  op2val:-0x801
TEST_RR_OP(or, x12, x10, x11, 0xfffff7ff, 0x2, -0x801, x6, 212, x8)
900031d8:	00200513          	li	a0,2
900031dc:	fffff5b7          	lui	a1,0xfffff
900031e0:	7ff58593          	addi	a1,a1,2047 # fffff7ff <_end+0x6fff9cfb>
900031e4:	00b56633          	or	a2,a0,a1
900031e8:	0cc32a23          	sw	a2,212(t1)

900031ec <inst_585>:

inst_585:
// rs1_val < 0 and rs2_val < 0, rs1_val == -268435457, rs2_val == -1025
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:-0x10000001;  op2val:-0x401
TEST_RR_OP(or, x12, x10, x11, 0xffffffff, -0x10000001, -0x401, x6, 216, x8)
900031ec:	f0000537          	lui	a0,0xf0000
900031f0:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0x5fffa4fb>
900031f4:	bff00593          	li	a1,-1025
900031f8:	00b56633          	or	a2,a0,a1
900031fc:	0cc32c23          	sw	a2,216(t1)

90003200 <inst_586>:

inst_586:
// rs2_val == 2097152, 
// opcode: or ; op1:x10; op2:x11; dest:x12; op1val:0x33333332;  op2val:0x200000
TEST_RR_OP(or, x12, x10, x11, 0x33333332, 0x33333332, 0x200000, x6, 220, x8)
90003200:	33333537          	lui	a0,0x33333
90003204:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333252>
90003208:	002005b7          	lui	a1,0x200
9000320c:	00b56633          	or	a2,a0,a1
90003210:	0cc32e23          	sw	a2,220(t1)
90003214:	00000013          	nop
90003218:	00000013          	nop
9000321c:	00000013          	nop

90003220 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
90003220:	00408093          	addi	ra,ra,4
90003224:	00100093          	li	ra,1

90003228 <write_tohost>:
90003228:	00001f17          	auipc	t5,0x1
9000322c:	dc1f2c23          	sw	ra,-552(t5) # 90004000 <tohost>

90003230 <self_loop>:
90003230:	0000006f          	j	90003230 <self_loop>
	...
