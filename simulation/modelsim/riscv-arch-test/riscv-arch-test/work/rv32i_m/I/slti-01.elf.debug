
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/I/slti-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed74a9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f769552>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6f47>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd6dd1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00004317          	auipc	t1,0x4
9000002c:	fd830313          	addi	t1,t1,-40 # 90004000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb6cf6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfddb19>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfea3ba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff767b>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f716b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bf93b3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adfa4d7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656fad69>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7b1b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfd77>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eadb4e9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56b572>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7f57>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d575d9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4bea95ea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56f93>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa6df7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d11f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe63fa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df569b>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f617b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db78bbb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edba0db>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676dab6b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb6b0b3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*);def TEST_CASE_1=True;",slti)

RVTEST_SIGBASE( x2,signature_x2_1)
900000f8:	00004117          	auipc	sp,0x4
900000fc:	f1810113          	addi	sp,sp,-232 # 90004010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rs1 != rd, rs1==x25, rd==x12, imm_val == (-2**(12-1)), imm_val == -2048, rs1_val != imm_val, rs1_val == -129, rs1_val < 0 and imm_val < 0
// opcode: slti ; op1:x25; dest:x12; op1val:-0x81;  immval:-0x800
TEST_IMM_OP( slti, x12, x25, 0x0, -0x81, -0x800, x2, 0, x19)
90000100:	f7f00c93          	li	s9,-129
90000104:	800ca613          	slti	a2,s9,-2048
90000108:	00c12023          	sw	a2,0(sp)

9000010c <inst_1>:

inst_1:
// rs1 == rd, rs1==x5, rd==x5, imm_val == 0, rs1_val == -4097
// opcode: slti ; op1:x5; dest:x5; op1val:-0x1001;  immval:0x0
TEST_IMM_OP( slti, x5, x5, 0x1, -0x1001, 0x0, x2, 4, x19)
9000010c:	fffff2b7          	lui	t0,0xfffff
90000110:	fff28293          	addi	t0,t0,-1 # ffffefff <_end+0x6fffa5fb>
90000114:	0002a293          	slti	t0,t0,0
90000118:	00512223          	sw	t0,4(sp)

9000011c <inst_2>:

inst_2:
// rs1==x4, rd==x28, imm_val == (2**(12-1)-1), rs1_val < 0 and imm_val > 0, imm_val == 2047
// opcode: slti ; op1:x4; dest:x28; op1val:-0x40000000;  immval:0x7ff
TEST_IMM_OP( slti, x28, x4, 0x1, -0x40000000, 0x7ff, x2, 8, x19)
9000011c:	c0000237          	lui	tp,0xc0000
90000120:	7ff22e13          	slti	t3,tp,2047
90000124:	01c12423          	sw	t3,8(sp)

90000128 <inst_3>:

inst_3:
// rs1==x31, rd==x15, imm_val == 1, rs1_val == -17
// opcode: slti ; op1:x31; dest:x15; op1val:-0x11;  immval:0x1
TEST_IMM_OP( slti, x15, x31, 0x1, -0x11, 0x1, x2, 12, x19)
90000128:	fef00f93          	li	t6,-17
9000012c:	001fa793          	slti	a5,t6,1
90000130:	00f12623          	sw	a5,12(sp)

90000134 <inst_4>:

inst_4:
// rs1==x1, rd==x13, rs1_val == (-2**(xlen-1)), rs1_val == -2147483648
// opcode: slti ; op1:x1; dest:x13; op1val:-0x80000000;  immval:0x3
TEST_IMM_OP( slti, x13, x1, 0x1, -0x80000000, 0x3, x2, 16, x19)
90000134:	800000b7          	lui	ra,0x80000
90000138:	0030a693          	slti	a3,ra,3
9000013c:	00d12823          	sw	a3,16(sp)

90000140 <inst_5>:

inst_5:
// rs1==x15, rd==x1, rs1_val == 0, rs1_val==0 and imm_val==2, imm_val == 2
// opcode: slti ; op1:x15; dest:x1; op1val:0x0;  immval:0x2
TEST_IMM_OP( slti, x1, x15, 0x1, 0x0, 0x2, x2, 20, x19)
90000140:	00000793          	li	a5,0
90000144:	0027a093          	slti	ra,a5,2
90000148:	00112a23          	sw	ra,20(sp)

9000014c <inst_6>:

inst_6:
// rs1==x16, rd==x9, rs1_val == (2**(xlen-1)-1), rs1_val > 0 and imm_val < 0, rs1_val == 2147483647
// opcode: slti ; op1:x16; dest:x9; op1val:0x7fffffff;  immval:-0x8
TEST_IMM_OP( slti, x9, x16, 0x0, 0x7fffffff, -0x8, x2, 24, x19)
9000014c:	80000837          	lui	a6,0x80000
90000150:	fff80813          	addi	a6,a6,-1 # 7fffffff <_end+0xefffb5fb>
90000154:	ff882493          	slti	s1,a6,-8
90000158:	00912c23          	sw	s1,24(sp)

9000015c <inst_7>:

inst_7:
// rs1==x11, rd==x31, rs1_val == 1, 
// opcode: slti ; op1:x11; dest:x31; op1val:0x1;  immval:-0x400
TEST_IMM_OP( slti, x31, x11, 0x0, 0x1, -0x400, x2, 28, x19)
9000015c:	00100593          	li	a1,1
90000160:	c005af93          	slti	t6,a1,-1024
90000164:	01f12e23          	sw	t6,28(sp)

90000168 <inst_8>:

inst_8:
// rs1==x14, rd==x27, rs1_val == imm_val, imm_val == 16, rs1_val > 0 and imm_val > 0, rs1_val == 16
// opcode: slti ; op1:x14; dest:x27; op1val:0x10;  immval:0x10
TEST_IMM_OP( slti, x27, x14, 0x0, 0x10, 0x10, x2, 32, x19)
90000168:	01000713          	li	a4,16
9000016c:	01072d93          	slti	s11,a4,16
90000170:	03b12023          	sw	s11,32(sp)

90000174 <inst_9>:

inst_9:
// rs1==x12, rd==x26, imm_val == 4, rs1_val==858993460 and imm_val==4
// opcode: slti ; op1:x12; dest:x26; op1val:0x33333334;  immval:0x4
TEST_IMM_OP( slti, x26, x12, 0x0, 0x33333334, 0x4, x2, 36, x19)
90000174:	33333637          	lui	a2,0x33333
90000178:	33460613          	addi	a2,a2,820 # 33333334 <offset+0x333332d0>
9000017c:	00462d13          	slti	s10,a2,4
90000180:	03a12223          	sw	s10,36(sp)

90000184 <inst_10>:

inst_10:
// rs1==x17, rd==x4, imm_val == 8, 
// opcode: slti ; op1:x17; dest:x4; op1val:0x3fffffff;  immval:0x8
TEST_IMM_OP( slti, x4, x17, 0x0, 0x3fffffff, 0x8, x2, 40, x19)
90000184:	400008b7          	lui	a7,0x40000
90000188:	fff88893          	addi	a7,a7,-1 # 3fffffff <offset+0x3fffff9b>
9000018c:	0088a213          	slti	tp,a7,8
90000190:	02412423          	sw	tp,40(sp)

90000194 <inst_11>:

inst_11:
// rs1==x18, rd==x10, imm_val == 32, rs1_val == -8193
// opcode: slti ; op1:x18; dest:x10; op1val:-0x2001;  immval:0x20
TEST_IMM_OP( slti, x10, x18, 0x1, -0x2001, 0x20, x2, 44, x19)
90000194:	ffffe937          	lui	s2,0xffffe
90000198:	fff90913          	addi	s2,s2,-1 # ffffdfff <_end+0x6fff95fb>
9000019c:	02092513          	slti	a0,s2,32
900001a0:	02a12623          	sw	a0,44(sp)

900001a4 <inst_12>:

inst_12:
// rs1==x27, rd==x21, imm_val == 64, 
// opcode: slti ; op1:x27; dest:x21; op1val:0x3;  immval:0x40
TEST_IMM_OP( slti, x21, x27, 0x1, 0x3, 0x40, x2, 48, x19)
900001a4:	00300d93          	li	s11,3
900001a8:	040daa93          	slti	s5,s11,64
900001ac:	03512823          	sw	s5,48(sp)

900001b0 <inst_13>:

inst_13:
// rs1==x3, rd==x8, imm_val == 128, 
// opcode: slti ; op1:x3; dest:x8; op1val:0x55555554;  immval:0x80
TEST_IMM_OP( slti, x8, x3, 0x0, 0x55555554, 0x80, x2, 52, x19)
900001b0:	555551b7          	lui	gp,0x55555
900001b4:	55418193          	addi	gp,gp,1364 # 55555554 <offset+0x555554f0>
900001b8:	0801a413          	slti	s0,gp,128
900001bc:	02812a23          	sw	s0,52(sp)

900001c0 <inst_14>:

inst_14:
// rs1==x7, rd==x0, imm_val == 256, 
// opcode: slti ; op1:x7; dest:x0; op1val:0x55555554;  immval:0x100
TEST_IMM_OP( slti, x0, x7, 0, 0x55555554, 0x100, x2, 56, x19)
900001c0:	555553b7          	lui	t2,0x55555
900001c4:	55438393          	addi	t2,t2,1364 # 55555554 <offset+0x555554f0>
900001c8:	1003a013          	slti	zero,t2,256
900001cc:	02012c23          	sw	zero,56(sp)

900001d0 <inst_15>:

inst_15:
// rs1==x22, rd==x24, imm_val == 512, rs1_val == -1431655766
// opcode: slti ; op1:x22; dest:x24; op1val:-0x55555556;  immval:0x200
TEST_IMM_OP( slti, x24, x22, 0x1, -0x55555556, 0x200, x2, 60, x19)
900001d0:	aaaabb37          	lui	s6,0xaaaab
900001d4:	aaab0b13          	addi	s6,s6,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900001d8:	200b2c13          	slti	s8,s6,512
900001dc:	03812e23          	sw	s8,60(sp)

900001e0 <inst_16>:

inst_16:
// rs1==x24, rd==x18, imm_val == 1024, rs1_val == 16384
// opcode: slti ; op1:x24; dest:x18; op1val:0x4000;  immval:0x400
TEST_IMM_OP( slti, x18, x24, 0x0, 0x4000, 0x400, x2, 64, x19)
900001e0:	00004c37          	lui	s8,0x4
900001e4:	400c2913          	slti	s2,s8,1024
900001e8:	05212023          	sw	s2,64(sp)

900001ec <inst_17>:

inst_17:
// rs1==x6, rd==x25, imm_val == -2, rs1_val == -1025
// opcode: slti ; op1:x6; dest:x25; op1val:-0x401;  immval:-0x2
TEST_IMM_OP( slti, x25, x6, 0x1, -0x401, -0x2, x2, 68, x19)
900001ec:	bff00313          	li	t1,-1025
900001f0:	ffe32c93          	slti	s9,t1,-2
900001f4:	05912223          	sw	s9,68(sp)

900001f8 <inst_18>:

inst_18:
// rs1==x21, rd==x23, imm_val == -3, 
// opcode: slti ; op1:x21; dest:x23; op1val:0x66666667;  immval:-0x3
TEST_IMM_OP( slti, x23, x21, 0x0, 0x66666667, -0x3, x2, 72, x19)
900001f8:	66666ab7          	lui	s5,0x66666
900001fc:	667a8a93          	addi	s5,s5,1639 # 66666667 <offset+0x66666603>
90000200:	ffdaab93          	slti	s7,s5,-3
90000204:	05712423          	sw	s7,72(sp)

90000208 <inst_19>:

inst_19:
// rs1==x0, rd==x7, imm_val == -5, rs1_val == -1048577
// opcode: slti ; op1:x0; dest:x7; op1val:0x0;  immval:-0x5
TEST_IMM_OP( slti, x7, x0, 0x0, 0x0, -0x5, x2, 76, x19)
90000208:	00000013          	nop
9000020c:	ffb02393          	slti	t2,zero,-5
90000210:	04712623          	sw	t2,76(sp)

90000214 <inst_20>:

inst_20:
// rs1==x10, rd==x20, imm_val == -9, 
// opcode: slti ; op1:x10; dest:x20; op1val:-0xb504;  immval:-0x9
TEST_IMM_OP( slti, x20, x10, 0x1, -0xb504, -0x9, x2, 80, x19)
90000214:	ffff5537          	lui	a0,0xffff5
90000218:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
9000021c:	ff752a13          	slti	s4,a0,-9
90000220:	05412823          	sw	s4,80(sp)

90000224 <inst_21>:

inst_21:
// rs1==x26, rd==x16, imm_val == -17, 
// opcode: slti ; op1:x26; dest:x16; op1val:0x3fffffff;  immval:-0x11
TEST_IMM_OP( slti, x16, x26, 0x0, 0x3fffffff, -0x11, x2, 84, x4)
90000224:	40000d37          	lui	s10,0x40000
90000228:	fffd0d13          	addi	s10,s10,-1 # 3fffffff <offset+0x3fffff9b>
9000022c:	fefd2813          	slti	a6,s10,-17
90000230:	05012a23          	sw	a6,84(sp)

90000234 <inst_22>:

inst_22:
// rs1==x20, rd==x29, imm_val == -33, rs1_val == -524289
// opcode: slti ; op1:x20; dest:x29; op1val:-0x80001;  immval:-0x21
TEST_IMM_OP( slti, x29, x20, 0x1, -0x80001, -0x21, x2, 88, x4)
90000234:	fff80a37          	lui	s4,0xfff80
90000238:	fffa0a13          	addi	s4,s4,-1 # fff7ffff <_end+0x6ff7b5fb>
9000023c:	fdfa2e93          	slti	t4,s4,-33
90000240:	05d12c23          	sw	t4,88(sp)
RVTEST_SIGBASE( x1,signature_x1_0)
90000244:	00004097          	auipc	ra,0x4
90000248:	e2808093          	addi	ra,ra,-472 # 9000406c <signature_x1_0>

9000024c <inst_23>:

inst_23:
// rs1==x13, rd==x3, imm_val == -65, rs1_val == -268435457
// opcode: slti ; op1:x13; dest:x3; op1val:-0x10000001;  immval:-0x41
TEST_IMM_OP( slti, x3, x13, 0x1, -0x10000001, -0x41, x1, 0, x4)
9000024c:	f00006b7          	lui	a3,0xf0000
90000250:	fff68693          	addi	a3,a3,-1 # efffffff <_end+0x5fffb5fb>
90000254:	fbf6a193          	slti	gp,a3,-65
90000258:	0030a023          	sw	gp,0(ra)

9000025c <inst_24>:

inst_24:
// rs1==x29, rd==x14, imm_val == -129, rs1_val == 8388608
// opcode: slti ; op1:x29; dest:x14; op1val:0x800000;  immval:-0x81
TEST_IMM_OP( slti, x14, x29, 0x0, 0x800000, -0x81, x1, 4, x4)
9000025c:	00800eb7          	lui	t4,0x800
90000260:	f7fea713          	slti	a4,t4,-129
90000264:	00e0a223          	sw	a4,4(ra)

90000268 <inst_25>:

inst_25:
// rs1==x23, rd==x2, imm_val == -257, 
// opcode: slti ; op1:x23; dest:x2; op1val:-0x10000001;  immval:-0x101
TEST_IMM_OP( slti, x2, x23, 0x1, -0x10000001, -0x101, x1, 8, x4)
90000268:	f0000bb7          	lui	s7,0xf0000
9000026c:	fffb8b93          	addi	s7,s7,-1 # efffffff <_end+0x5fffb5fb>
90000270:	effba113          	slti	sp,s7,-257
90000274:	0020a423          	sw	sp,8(ra)

90000278 <inst_26>:

inst_26:
// rs1==x2, rd==x22, imm_val == -513, 
// opcode: slti ; op1:x2; dest:x22; op1val:0x0;  immval:-0x201
TEST_IMM_OP( slti, x22, x2, 0x0, 0x0, -0x201, x1, 12, x4)
90000278:	00000113          	li	sp,0
9000027c:	dff12b13          	slti	s6,sp,-513
90000280:	0160a623          	sw	s6,12(ra)

90000284 <inst_27>:

inst_27:
// rs1==x30, rd==x19, imm_val == -1025, rs1_val == -262145
// opcode: slti ; op1:x30; dest:x19; op1val:-0x40001;  immval:-0x401
TEST_IMM_OP( slti, x19, x30, 0x1, -0x40001, -0x401, x1, 16, x4)
90000284:	fffc0f37          	lui	t5,0xfffc0
90000288:	ffff0f13          	addi	t5,t5,-1 # fffbffff <_end+0x6ffbb5fb>
9000028c:	bfff2993          	slti	s3,t5,-1025
90000290:	0130a823          	sw	s3,16(ra)

90000294 <inst_28>:

inst_28:
// rs1==x19, rd==x11, imm_val == 1365, rs1_val == 4, rs1_val==4 and imm_val==1365
// opcode: slti ; op1:x19; dest:x11; op1val:0x4;  immval:0x555
TEST_IMM_OP( slti, x11, x19, 0x1, 0x4, 0x555, x1, 20, x4)
90000294:	00400993          	li	s3,4
90000298:	5559a593          	slti	a1,s3,1365
9000029c:	00b0aa23          	sw	a1,20(ra)

900002a0 <inst_29>:

inst_29:
// rs1==x8, rd==x30, imm_val == -1366, 
// opcode: slti ; op1:x8; dest:x30; op1val:-0x40000000;  immval:-0x556
TEST_IMM_OP( slti, x30, x8, 0x1, -0x40000000, -0x556, x1, 24, x4)
900002a0:	c0000437          	lui	s0,0xc0000
900002a4:	aaa42f13          	slti	t5,s0,-1366
900002a8:	01e0ac23          	sw	t5,24(ra)

900002ac <inst_30>:

inst_30:
// rs1==x9, rd==x17, rs1_val == 2, 
// opcode: slti ; op1:x9; dest:x17; op1val:0x2;  immval:0x7ff
TEST_IMM_OP( slti, x17, x9, 0x1, 0x2, 0x7ff, x1, 28, x4)
900002ac:	00200493          	li	s1,2
900002b0:	7ff4a893          	slti	a7,s1,2047
900002b4:	0110ae23          	sw	a7,28(ra)

900002b8 <inst_31>:

inst_31:
// rs1==x28, rd==x6, rs1_val == 8, 
// opcode: slti ; op1:x28; dest:x6; op1val:0x8;  immval:-0x555
TEST_IMM_OP( slti, x6, x28, 0x0, 0x8, -0x555, x1, 32, x4)
900002b8:	00800e13          	li	t3,8
900002bc:	aabe2313          	slti	t1,t3,-1365
900002c0:	0260a023          	sw	t1,32(ra)

900002c4 <inst_32>:

inst_32:
// rs1_val == 32, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x20;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, 0x20, 0x555, x1, 36, x4)
900002c4:	02000513          	li	a0,32
900002c8:	55552593          	slti	a1,a0,1365
900002cc:	02b0a223          	sw	a1,36(ra)

900002d0 <inst_33>:

inst_33:
// rs1_val == 64, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x40;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, 0x40, 0x555, x1, 40, x4)
900002d0:	04000513          	li	a0,64
900002d4:	55552593          	slti	a1,a0,1365
900002d8:	02b0a423          	sw	a1,40(ra)

900002dc <inst_34>:

inst_34:
// rs1_val == 128, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x80;  immval:0x200
TEST_IMM_OP( slti, x11, x10, 0x1, 0x80, 0x200, x1, 44, x4)
900002dc:	08000513          	li	a0,128
900002e0:	20052593          	slti	a1,a0,512
900002e4:	02b0a623          	sw	a1,44(ra)

900002e8 <inst_35>:

inst_35:
// rs1_val == 256, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x100;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0x100, 0x2e, x1, 48, x4)
900002e8:	10000513          	li	a0,256
900002ec:	02e52593          	slti	a1,a0,46
900002f0:	02b0a823          	sw	a1,48(ra)

900002f4 <inst_36>:

inst_36:
// rs1_val == 512, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x200;  immval:-0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x200, -0x3, x1, 52, x4)
900002f4:	20000513          	li	a0,512
900002f8:	ffd52593          	slti	a1,a0,-3
900002fc:	02b0aa23          	sw	a1,52(ra)

90000300 <inst_37>:

inst_37:
// rs1_val == 1024, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x400;  immval:-0x101
TEST_IMM_OP( slti, x11, x10, 0x0, 0x400, -0x101, x1, 56, x4)
90000300:	40000513          	li	a0,1024
90000304:	eff52593          	slti	a1,a0,-257
90000308:	02b0ac23          	sw	a1,56(ra)

9000030c <inst_38>:

inst_38:
// rs1_val == 2048, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x800;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x800, 0x2d, x1, 60, x4)
9000030c:	00001537          	lui	a0,0x1
90000310:	80050513          	addi	a0,a0,-2048 # 800 <offset+0x79c>
90000314:	02d52593          	slti	a1,a0,45
90000318:	02b0ae23          	sw	a1,60(ra)

9000031c <inst_39>:

inst_39:
// rs1_val == 4096, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x1000;  immval:-0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x1000, -0x5, x1, 64, x4)
9000031c:	00001537          	lui	a0,0x1
90000320:	ffb52593          	slti	a1,a0,-5
90000324:	04b0a023          	sw	a1,64(ra)

90000328 <inst_40>:

inst_40:
// rs1_val == 8192, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2000;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x2000, 0x0, x1, 68, x4)
90000328:	00002537          	lui	a0,0x2
9000032c:	00052593          	slti	a1,a0,0
90000330:	04b0a223          	sw	a1,68(ra)

90000334 <inst_41>:

inst_41:
// rs1_val == 32768, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x8000;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x8000, -0x556, x1, 72, x4)
90000334:	00008537          	lui	a0,0x8
90000338:	aaa52593          	slti	a1,a0,-1366
9000033c:	04b0a423          	sw	a1,72(ra)

90000340 <inst_42>:

inst_42:
// rs1_val == 65536, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x10000;  immval:-0x1
TEST_IMM_OP( slti, x11, x10, 0x0, 0x10000, -0x1, x1, 76, x4)
90000340:	00010537          	lui	a0,0x10
90000344:	fff52593          	slti	a1,a0,-1
90000348:	04b0a623          	sw	a1,76(ra)

9000034c <inst_43>:

inst_43:
// rs1_val == 131072, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x20000;  immval:-0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x20000, -0x2, x1, 80, x4)
9000034c:	00020537          	lui	a0,0x20
90000350:	ffe52593          	slti	a1,a0,-2
90000354:	04b0a823          	sw	a1,80(ra)

90000358 <inst_44>:

inst_44:
// rs1_val == 262144, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x40000;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0x40000, 0x6, x1, 84, x4)
90000358:	00040537          	lui	a0,0x40
9000035c:	00652593          	slti	a1,a0,6
90000360:	04b0aa23          	sw	a1,84(ra)

90000364 <inst_45>:

inst_45:
// rs1_val == 524288, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x80000;  immval:-0x41
TEST_IMM_OP( slti, x11, x10, 0x0, 0x80000, -0x41, x1, 88, x4)
90000364:	00080537          	lui	a0,0x80
90000368:	fbf52593          	slti	a1,a0,-65
9000036c:	04b0ac23          	sw	a1,88(ra)

90000370 <inst_46>:

inst_46:
// rs1_val == 1048576, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x100000;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x100000, -0x556, x1, 92, x4)
90000370:	00100537          	lui	a0,0x100
90000374:	aaa52593          	slti	a1,a0,-1366
90000378:	04b0ae23          	sw	a1,92(ra)

9000037c <inst_47>:

inst_47:
// rs1_val == 2097152, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x200000;  immval:-0x11
TEST_IMM_OP( slti, x11, x10, 0x0, 0x200000, -0x11, x1, 96, x4)
9000037c:	00200537          	lui	a0,0x200
90000380:	fef52593          	slti	a1,a0,-17
90000384:	06b0a023          	sw	a1,96(ra)

90000388 <inst_48>:

inst_48:
// rs1_val == 4194304, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x400000;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0x400000, 0x2e, x1, 100, x4)
90000388:	00400537          	lui	a0,0x400
9000038c:	02e52593          	slti	a1,a0,46
90000390:	06b0a223          	sw	a1,100(ra)

90000394 <inst_49>:

inst_49:
// rs1_val == 16777216, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x1000000;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x1000000, -0x2c, x1, 104, x4)
90000394:	01000537          	lui	a0,0x1000
90000398:	fd452593          	slti	a1,a0,-44
9000039c:	06b0a423          	sw	a1,104(ra)

900003a0 <inst_50>:

inst_50:
// rs1_val == 33554432, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2000000;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x2000000, 0x555, x1, 108, x4)
900003a0:	02000537          	lui	a0,0x2000
900003a4:	55552593          	slti	a1,a0,1365
900003a8:	06b0a623          	sw	a1,108(ra)

900003ac <inst_51>:

inst_51:
// rs1_val == 67108864, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4000000;  immval:-0x41
TEST_IMM_OP( slti, x11, x10, 0x0, 0x4000000, -0x41, x1, 112, x4)
900003ac:	04000537          	lui	a0,0x4000
900003b0:	fbf52593          	slti	a1,a0,-65
900003b4:	06b0a823          	sw	a1,112(ra)

900003b8 <inst_52>:

inst_52:
// rs1_val == 134217728, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x8000000;  immval:0x7ff
TEST_IMM_OP( slti, x11, x10, 0x0, 0x8000000, 0x7ff, x1, 116, x4)
900003b8:	08000537          	lui	a0,0x8000
900003bc:	7ff52593          	slti	a1,a0,2047
900003c0:	06b0aa23          	sw	a1,116(ra)

900003c4 <inst_53>:

inst_53:
// rs1_val == 268435456, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x10000000;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x10000000, 0x2d, x1, 120, x4)
900003c4:	10000537          	lui	a0,0x10000
900003c8:	02d52593          	slti	a1,a0,45
900003cc:	06b0ac23          	sw	a1,120(ra)

900003d0 <inst_54>:

inst_54:
// rs1_val == 536870912, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x20000000;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x20000000, 0x0, x1, 124, x4)
900003d0:	20000537          	lui	a0,0x20000
900003d4:	00052593          	slti	a1,a0,0
900003d8:	06b0ae23          	sw	a1,124(ra)

900003dc <inst_55>:

inst_55:
// rs1_val == 1073741824, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x40000000;  immval:-0x11
TEST_IMM_OP( slti, x11, x10, 0x0, 0x40000000, -0x11, x1, 128, x4)
900003dc:	40000537          	lui	a0,0x40000
900003e0:	fef52593          	slti	a1,a0,-17
900003e4:	08b0a023          	sw	a1,128(ra)

900003e8 <inst_56>:

inst_56:
// rs1_val == -2, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x2;  immval:0x1
TEST_IMM_OP( slti, x11, x10, 0x1, -0x2, 0x1, x1, 132, x4)
900003e8:	ffe00513          	li	a0,-2
900003ec:	00152593          	slti	a1,a0,1
900003f0:	08b0a223          	sw	a1,132(ra)

900003f4 <inst_57>:

inst_57:
// rs1_val == -3, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x3;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, -0x3, -0x555, x1, 136, x4)
900003f4:	ffd00513          	li	a0,-3
900003f8:	aab52593          	slti	a1,a0,-1365
900003fc:	08b0a423          	sw	a1,136(ra)

90000400 <inst_58>:

inst_58:
// rs1_val == -5, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x5;  immval:0x100
TEST_IMM_OP( slti, x11, x10, 0x1, -0x5, 0x100, x1, 140, x4)
90000400:	ffb00513          	li	a0,-5
90000404:	10052593          	slti	a1,a0,256
90000408:	08b0a623          	sw	a1,140(ra)

9000040c <inst_59>:

inst_59:
// rs1_val == -9, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x9;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x1, -0x9, 0x2, x1, 144, x4)
9000040c:	ff700513          	li	a0,-9
90000410:	00252593          	slti	a1,a0,2
90000414:	08b0a823          	sw	a1,144(ra)

90000418 <inst_60>:

inst_60:
// rs1_val == -33, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x21;  immval:0x1
TEST_IMM_OP( slti, x11, x10, 0x1, -0x21, 0x1, x1, 148, x4)
90000418:	fdf00513          	li	a0,-33
9000041c:	00152593          	slti	a1,a0,1
90000420:	08b0aa23          	sw	a1,148(ra)

90000424 <inst_61>:

inst_61:
// rs1_val == -65, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x41;  immval:-0x4
TEST_IMM_OP( slti, x11, x10, 0x1, -0x41, -0x4, x1, 152, x4)
90000424:	fbf00513          	li	a0,-65
90000428:	ffc52593          	slti	a1,a0,-4
9000042c:	08b0ac23          	sw	a1,152(ra)

90000430 <inst_62>:

inst_62:
// rs1_val == -257, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x101;  immval:-0x800
TEST_IMM_OP( slti, x11, x10, 0x0, -0x101, -0x800, x1, 156, x4)
90000430:	eff00513          	li	a0,-257
90000434:	80052593          	slti	a1,a0,-2048
90000438:	08b0ae23          	sw	a1,156(ra)

9000043c <inst_63>:

inst_63:
// rs1_val == -513, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x201;  immval:0x9
TEST_IMM_OP( slti, x11, x10, 0x1, -0x201, 0x9, x1, 160, x4)
9000043c:	dff00513          	li	a0,-513
90000440:	00952593          	slti	a1,a0,9
90000444:	0ab0a023          	sw	a1,160(ra)

90000448 <inst_64>:

inst_64:
// rs1_val == -2049, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x801;  immval:-0x8
TEST_IMM_OP( slti, x11, x10, 0x1, -0x801, -0x8, x1, 164, x4)
90000448:	fffff537          	lui	a0,0xfffff
9000044c:	7ff50513          	addi	a0,a0,2047 # fffff7ff <_end+0x6fffadfb>
90000450:	ff852593          	slti	a1,a0,-8
90000454:	0ab0a223          	sw	a1,164(ra)

90000458 <inst_65>:

inst_65:
// rs1_val == -16385, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x4001;  immval:0x400
TEST_IMM_OP( slti, x11, x10, 0x1, -0x4001, 0x400, x1, 168, x4)
90000458:	ffffc537          	lui	a0,0xffffc
9000045c:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0x6fff75fb>
90000460:	40052593          	slti	a1,a0,1024
90000464:	0ab0a423          	sw	a1,168(ra)

90000468 <inst_66>:

inst_66:
// rs1_val == -32769, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x8001;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x1, -0x8001, 0x333, x1, 172, x4)
90000468:	ffff8537          	lui	a0,0xffff8
9000046c:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0x6fff35fb>
90000470:	33352593          	slti	a1,a0,819
90000474:	0ab0a623          	sw	a1,172(ra)

90000478 <inst_67>:

inst_67:
// rs1_val == -65537, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x10001;  immval:-0x101
TEST_IMM_OP( slti, x11, x10, 0x1, -0x10001, -0x101, x1, 176, x4)
90000478:	ffff0537          	lui	a0,0xffff0
9000047c:	fff50513          	addi	a0,a0,-1 # fffeffff <_end+0x6ffeb5fb>
90000480:	eff52593          	slti	a1,a0,-257
90000484:	0ab0a823          	sw	a1,176(ra)

90000488 <inst_68>:

inst_68:
// rs1_val == -131073, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x20001;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x1, -0x20001, 0x3, x1, 180, x4)
90000488:	fffe0537          	lui	a0,0xfffe0
9000048c:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0x6ffdb5fb>
90000490:	00352593          	slti	a1,a0,3
90000494:	0ab0aa23          	sw	a1,180(ra)

90000498 <inst_69>:

inst_69:
// rs1_val == -2097153, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x200001;  immval:-0x6
TEST_IMM_OP( slti, x11, x10, 0x1, -0x200001, -0x6, x1, 184, x4)
90000498:	ffe00537          	lui	a0,0xffe00
9000049c:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0x6fdfb5fb>
900004a0:	ffa52593          	slti	a1,a0,-6
900004a4:	0ab0ac23          	sw	a1,184(ra)

900004a8 <inst_70>:

inst_70:
// rs1_val == -4194305, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x400001;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, -0x400001, 0x555, x1, 188, x4)
900004a8:	ffc00537          	lui	a0,0xffc00
900004ac:	fff50513          	addi	a0,a0,-1 # ffbfffff <_end+0x6fbfb5fb>
900004b0:	55552593          	slti	a1,a0,1365
900004b4:	0ab0ae23          	sw	a1,188(ra)

900004b8 <inst_71>:

inst_71:
// rs1_val == -8388609, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x800001;  immval:0x7
TEST_IMM_OP( slti, x11, x10, 0x1, -0x800001, 0x7, x1, 192, x4)
900004b8:	ff800537          	lui	a0,0xff800
900004bc:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0x6f7fb5fb>
900004c0:	00752593          	slti	a1,a0,7
900004c4:	0cb0a023          	sw	a1,192(ra)

900004c8 <inst_72>:

inst_72:
// rs1_val == -16777217, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x1000001;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, -0x1000001, -0x2d, x1, 196, x4)
900004c8:	ff000537          	lui	a0,0xff000
900004cc:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0x6effb5fb>
900004d0:	fd352593          	slti	a1,a0,-45
900004d4:	0cb0a223          	sw	a1,196(ra)

900004d8 <inst_73>:

inst_73:
// rs1_val == -33554433, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x2000001;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x1, -0x2000001, 0x334, x1, 200, x4)
900004d8:	fe000537          	lui	a0,0xfe000
900004dc:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0x6dffb5fb>
900004e0:	33452593          	slti	a1,a0,820
900004e4:	0cb0a423          	sw	a1,200(ra)

900004e8 <inst_74>:

inst_74:
// rs1_val == -67108865, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x4000001;  immval:-0x4
TEST_IMM_OP( slti, x11, x10, 0x1, -0x4000001, -0x4, x1, 204, x4)
900004e8:	fc000537          	lui	a0,0xfc000
900004ec:	fff50513          	addi	a0,a0,-1 # fbffffff <_end+0x6bffb5fb>
900004f0:	ffc52593          	slti	a1,a0,-4
900004f4:	0cb0a623          	sw	a1,204(ra)

900004f8 <inst_75>:

inst_75:
// rs1_val == -134217729, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x8000001;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, -0x8000001, 0x2d, x1, 208, x4)
900004f8:	f8000537          	lui	a0,0xf8000
900004fc:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0x67ffb5fb>
90000500:	02d52593          	slti	a1,a0,45
90000504:	0cb0a823          	sw	a1,208(ra)

90000508 <inst_76>:

inst_76:
// rs1_val == -536870913, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x20000001;  immval:0x10
TEST_IMM_OP( slti, x11, x10, 0x1, -0x20000001, 0x10, x1, 212, x4)
90000508:	e0000537          	lui	a0,0xe0000
9000050c:	fff50513          	addi	a0,a0,-1 # dfffffff <_end+0x4fffb5fb>
90000510:	01052593          	slti	a1,a0,16
90000514:	0cb0aa23          	sw	a1,212(ra)

90000518 <inst_77>:

inst_77:
// rs1_val == -1073741825, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x40000001;  immval:-0x101
TEST_IMM_OP( slti, x11, x10, 0x1, -0x40000001, -0x101, x1, 216, x4)
90000518:	c0000537          	lui	a0,0xc0000
9000051c:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0x2fffb5fb>
90000520:	eff52593          	slti	a1,a0,-257
90000524:	0cb0ac23          	sw	a1,216(ra)

90000528 <inst_78>:

inst_78:
// rs1_val == 1431655765, rs1_val==1431655765 and imm_val==0
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x0, x1, 220, x4)
90000528:	55555537          	lui	a0,0x55555
9000052c:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000530:	00052593          	slti	a1,a0,0
90000534:	0cb0ae23          	sw	a1,220(ra)

90000538 <inst_79>:

inst_79:
// rs1_val==3 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x3, 0x3, x1, 224, x4)
90000538:	00300513          	li	a0,3
9000053c:	00352593          	slti	a1,a0,3
90000540:	0eb0a023          	sw	a1,224(ra)

90000544 <inst_80>:

inst_80:
// rs1_val==3 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x555, x1, 228, x4)
90000544:	00300513          	li	a0,3
90000548:	55552593          	slti	a1,a0,1365
9000054c:	0eb0a223          	sw	a1,228(ra)

90000550 <inst_81>:

inst_81:
// rs1_val==3 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x3, -0x556, x1, 232, x4)
90000550:	00300513          	li	a0,3
90000554:	aaa52593          	slti	a1,a0,-1366
90000558:	0eb0a423          	sw	a1,232(ra)

9000055c <inst_82>:

inst_82:
// rs1_val==3 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x5, x1, 236, x4)
9000055c:	00300513          	li	a0,3
90000560:	00552593          	slti	a1,a0,5
90000564:	0eb0a623          	sw	a1,236(ra)

90000568 <inst_83>:

inst_83:
// rs1_val==3 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x333, x1, 240, x4)
90000568:	00300513          	li	a0,3
9000056c:	33352593          	slti	a1,a0,819
90000570:	0eb0a823          	sw	a1,240(ra)

90000574 <inst_84>:

inst_84:
// rs1_val==3 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x666, x1, 244, x4)
90000574:	00300513          	li	a0,3
90000578:	66652593          	slti	a1,a0,1638
9000057c:	0eb0aa23          	sw	a1,244(ra)

90000580 <inst_85>:

inst_85:
// rs1_val==3 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x3, -0x2d, x1, 248, x4)
90000580:	00300513          	li	a0,3
90000584:	fd352593          	slti	a1,a0,-45
90000588:	0eb0ac23          	sw	a1,248(ra)

9000058c <inst_86>:

inst_86:
// rs1_val==3 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x2d, x1, 252, x4)
9000058c:	00300513          	li	a0,3
90000590:	02d52593          	slti	a1,a0,45
90000594:	0eb0ae23          	sw	a1,252(ra)

90000598 <inst_87>:

inst_87:
// rs1_val==3 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x3, 0x2, x1, 256, x4)
90000598:	00300513          	li	a0,3
9000059c:	00252593          	slti	a1,a0,2
900005a0:	10b0a023          	sw	a1,256(ra)

900005a4 <inst_88>:

inst_88:
// rs1_val==3 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x554, x1, 260, x4)
900005a4:	00300513          	li	a0,3
900005a8:	55452593          	slti	a1,a0,1364
900005ac:	10b0a223          	sw	a1,260(ra)

900005b0 <inst_89>:

inst_89:
// rs1_val==3 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x3, 0x0, x1, 264, x4)
900005b0:	00300513          	li	a0,3
900005b4:	00052593          	slti	a1,a0,0
900005b8:	10b0a423          	sw	a1,264(ra)

900005bc <inst_90>:

inst_90:
// rs1_val==3 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x4, x1, 268, x4)
900005bc:	00300513          	li	a0,3
900005c0:	00452593          	slti	a1,a0,4
900005c4:	10b0a623          	sw	a1,268(ra)

900005c8 <inst_91>:

inst_91:
// rs1_val==3 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x332, x1, 272, x4)
900005c8:	00300513          	li	a0,3
900005cc:	33252593          	slti	a1,a0,818
900005d0:	10b0a823          	sw	a1,272(ra)

900005d4 <inst_92>:

inst_92:
// rs1_val==3 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x665, x1, 276, x4)
900005d4:	00300513          	li	a0,3
900005d8:	66552593          	slti	a1,a0,1637
900005dc:	10b0aa23          	sw	a1,276(ra)

900005e0 <inst_93>:

inst_93:
// rs1_val==3 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x2c, x1, 280, x4)
900005e0:	00300513          	li	a0,3
900005e4:	02c52593          	slti	a1,a0,44
900005e8:	10b0ac23          	sw	a1,280(ra)

900005ec <inst_94>:

inst_94:
// rs1_val==3 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x556, x1, 284, x4)
900005ec:	00300513          	li	a0,3
900005f0:	55652593          	slti	a1,a0,1366
900005f4:	10b0ae23          	sw	a1,284(ra)

900005f8 <inst_95>:

inst_95:
// rs1_val==3 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x3, -0x555, x1, 288, x4)
900005f8:	00300513          	li	a0,3
900005fc:	aab52593          	slti	a1,a0,-1365
90000600:	12b0a023          	sw	a1,288(ra)

90000604 <inst_96>:

inst_96:
// rs1_val==3 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x6, x1, 292, x4)
90000604:	00300513          	li	a0,3
90000608:	00652593          	slti	a1,a0,6
9000060c:	12b0a223          	sw	a1,292(ra)

90000610 <inst_97>:

inst_97:
// rs1_val==3 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x334, x1, 296, x4)
90000610:	00300513          	li	a0,3
90000614:	33452593          	slti	a1,a0,820
90000618:	12b0a423          	sw	a1,296(ra)

9000061c <inst_98>:

inst_98:
// rs1_val==3 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x667, x1, 300, x4)
9000061c:	00300513          	li	a0,3
90000620:	66752593          	slti	a1,a0,1639
90000624:	12b0a623          	sw	a1,300(ra)

90000628 <inst_99>:

inst_99:
// rs1_val==3 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x3, -0x2c, x1, 304, x4)
90000628:	00300513          	li	a0,3
9000062c:	fd452593          	slti	a1,a0,-44
90000630:	12b0a823          	sw	a1,304(ra)

90000634 <inst_100>:

inst_100:
// rs1_val==3 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x3;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x1, 0x3, 0x2e, x1, 308, x4)
90000634:	00300513          	li	a0,3
90000638:	02e52593          	slti	a1,a0,46
9000063c:	12b0aa23          	sw	a1,308(ra)

90000640 <inst_101>:

inst_101:
// rs1_val==1431655765 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x3, x1, 312, x4)
90000640:	55555537          	lui	a0,0x55555
90000644:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000648:	00352593          	slti	a1,a0,3
9000064c:	12b0ac23          	sw	a1,312(ra)

90000650 <inst_102>:

inst_102:
// rs1_val==1431655765 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x555, x1, 316, x4)
90000650:	55555537          	lui	a0,0x55555
90000654:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000658:	55552593          	slti	a1,a0,1365
9000065c:	12b0ae23          	sw	a1,316(ra)

90000660 <inst_103>:

inst_103:
// rs1_val==1431655765 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, -0x556, x1, 320, x4)
90000660:	55555537          	lui	a0,0x55555
90000664:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000668:	aaa52593          	slti	a1,a0,-1366
9000066c:	14b0a023          	sw	a1,320(ra)

90000670 <inst_104>:

inst_104:
// rs1_val==1431655765 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x5, x1, 324, x4)
90000670:	55555537          	lui	a0,0x55555
90000674:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000678:	00552593          	slti	a1,a0,5
9000067c:	14b0a223          	sw	a1,324(ra)

90000680 <inst_105>:

inst_105:
// rs1_val==1431655765 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x333, x1, 328, x4)
90000680:	55555537          	lui	a0,0x55555
90000684:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000688:	33352593          	slti	a1,a0,819
9000068c:	14b0a423          	sw	a1,328(ra)

90000690 <inst_106>:

inst_106:
// rs1_val==1431655765 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x666, x1, 332, x4)
90000690:	55555537          	lui	a0,0x55555
90000694:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000698:	66652593          	slti	a1,a0,1638
9000069c:	14b0a623          	sw	a1,332(ra)

900006a0 <inst_107>:

inst_107:
// rs1_val==1431655765 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, -0x2d, x1, 336, x4)
900006a0:	55555537          	lui	a0,0x55555
900006a4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
900006a8:	fd352593          	slti	a1,a0,-45
900006ac:	14b0a823          	sw	a1,336(ra)

900006b0 <inst_108>:

inst_108:
// rs1_val==1431655765 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x2d, x1, 340, x4)
900006b0:	55555537          	lui	a0,0x55555
900006b4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
900006b8:	02d52593          	slti	a1,a0,45
900006bc:	14b0aa23          	sw	a1,340(ra)

900006c0 <inst_109>:

inst_109:
// rs1_val==1431655765 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x2, x1, 344, x4)
900006c0:	55555537          	lui	a0,0x55555
900006c4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
900006c8:	00252593          	slti	a1,a0,2
900006cc:	14b0ac23          	sw	a1,344(ra)

900006d0 <inst_110>:

inst_110:
// rs1_val==1431655765 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x554, x1, 348, x4)
900006d0:	55555537          	lui	a0,0x55555
900006d4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
900006d8:	55452593          	slti	a1,a0,1364
900006dc:	14b0ae23          	sw	a1,348(ra)

900006e0 <inst_111>:

inst_111:
// rs1_val==1431655765 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x4, x1, 352, x4)
900006e0:	55555537          	lui	a0,0x55555
900006e4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
900006e8:	00452593          	slti	a1,a0,4
900006ec:	16b0a023          	sw	a1,352(ra)

900006f0 <inst_112>:

inst_112:
// rs1_val==1431655765 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x332, x1, 356, x4)
900006f0:	55555537          	lui	a0,0x55555
900006f4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
900006f8:	33252593          	slti	a1,a0,818
900006fc:	16b0a223          	sw	a1,356(ra)

90000700 <inst_113>:

inst_113:
// rs1_val==1431655765 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x665, x1, 360, x4)
90000700:	55555537          	lui	a0,0x55555
90000704:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000708:	66552593          	slti	a1,a0,1637
9000070c:	16b0a423          	sw	a1,360(ra)

90000710 <inst_114>:

inst_114:
// rs1_val==1431655765 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x2c, x1, 364, x4)
90000710:	55555537          	lui	a0,0x55555
90000714:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000718:	02c52593          	slti	a1,a0,44
9000071c:	16b0a623          	sw	a1,364(ra)

90000720 <inst_115>:

inst_115:
// rs1_val==1431655765 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x556, x1, 368, x4)
90000720:	55555537          	lui	a0,0x55555
90000724:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000728:	55652593          	slti	a1,a0,1366
9000072c:	16b0a823          	sw	a1,368(ra)

90000730 <inst_116>:

inst_116:
// rs1_val==1431655765 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, -0x555, x1, 372, x4)
90000730:	55555537          	lui	a0,0x55555
90000734:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000738:	aab52593          	slti	a1,a0,-1365
9000073c:	16b0aa23          	sw	a1,372(ra)

90000740 <inst_117>:

inst_117:
// rs1_val==1431655765 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x6, x1, 376, x4)
90000740:	55555537          	lui	a0,0x55555
90000744:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000748:	00652593          	slti	a1,a0,6
9000074c:	16b0ac23          	sw	a1,376(ra)

90000750 <inst_118>:

inst_118:
// rs1_val==1431655765 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x334, x1, 380, x4)
90000750:	55555537          	lui	a0,0x55555
90000754:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000758:	33452593          	slti	a1,a0,820
9000075c:	16b0ae23          	sw	a1,380(ra)

90000760 <inst_119>:

inst_119:
// rs1_val==1431655765 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x667, x1, 384, x4)
90000760:	55555537          	lui	a0,0x55555
90000764:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000768:	66752593          	slti	a1,a0,1639
9000076c:	18b0a023          	sw	a1,384(ra)

90000770 <inst_120>:

inst_120:
// rs1_val==1431655765 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, -0x2c, x1, 388, x4)
90000770:	55555537          	lui	a0,0x55555
90000774:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000778:	fd452593          	slti	a1,a0,-44
9000077c:	18b0a223          	sw	a1,388(ra)

90000780 <inst_121>:

inst_121:
// rs1_val==1431655765 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555555, 0x2e, x1, 392, x4)
90000780:	55555537          	lui	a0,0x55555
90000784:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554f1>
90000788:	02e52593          	slti	a1,a0,46
9000078c:	18b0a423          	sw	a1,392(ra)

90000790 <inst_122>:

inst_122:
// rs1_val==-1431655766 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x3, x1, 396, x4)
90000790:	aaaab537          	lui	a0,0xaaaab
90000794:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000798:	00352593          	slti	a1,a0,3
9000079c:	18b0a623          	sw	a1,396(ra)

900007a0 <inst_123>:

inst_123:
// rs1_val==-1431655766 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x555, x1, 400, x4)
900007a0:	aaaab537          	lui	a0,0xaaaab
900007a4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007a8:	55552593          	slti	a1,a0,1365
900007ac:	18b0a823          	sw	a1,400(ra)

900007b0 <inst_124>:

inst_124:
// rs1_val==-1431655766 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, -0x556, x1, 404, x4)
900007b0:	aaaab537          	lui	a0,0xaaaab
900007b4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007b8:	aaa52593          	slti	a1,a0,-1366
900007bc:	18b0aa23          	sw	a1,404(ra)

900007c0 <inst_125>:

inst_125:
// rs1_val==-1431655766 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x5, x1, 408, x4)
900007c0:	aaaab537          	lui	a0,0xaaaab
900007c4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007c8:	00552593          	slti	a1,a0,5
900007cc:	18b0ac23          	sw	a1,408(ra)

900007d0 <inst_126>:

inst_126:
// rs1_val==-1431655766 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x333, x1, 412, x4)
900007d0:	aaaab537          	lui	a0,0xaaaab
900007d4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007d8:	33352593          	slti	a1,a0,819
900007dc:	18b0ae23          	sw	a1,412(ra)

900007e0 <inst_127>:

inst_127:
// rs1_val==-1431655766 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x666, x1, 416, x4)
900007e0:	aaaab537          	lui	a0,0xaaaab
900007e4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007e8:	66652593          	slti	a1,a0,1638
900007ec:	1ab0a023          	sw	a1,416(ra)

900007f0 <inst_128>:

inst_128:
// rs1_val==-1431655766 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, -0x2d, x1, 420, x4)
900007f0:	aaaab537          	lui	a0,0xaaaab
900007f4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007f8:	fd352593          	slti	a1,a0,-45
900007fc:	1ab0a223          	sw	a1,420(ra)

90000800 <inst_129>:

inst_129:
// rs1_val==-1431655766 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x2d, x1, 424, x4)
90000800:	aaaab537          	lui	a0,0xaaaab
90000804:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000808:	02d52593          	slti	a1,a0,45
9000080c:	1ab0a423          	sw	a1,424(ra)

90000810 <inst_130>:

inst_130:
// rs1_val==-1431655766 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x2, x1, 428, x4)
90000810:	aaaab537          	lui	a0,0xaaaab
90000814:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000818:	00252593          	slti	a1,a0,2
9000081c:	1ab0a623          	sw	a1,428(ra)

90000820 <inst_131>:

inst_131:
// rs1_val==-1431655766 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x554, x1, 432, x4)
90000820:	aaaab537          	lui	a0,0xaaaab
90000824:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000828:	55452593          	slti	a1,a0,1364
9000082c:	1ab0a823          	sw	a1,432(ra)

90000830 <inst_132>:

inst_132:
// rs1_val==-1431655766 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x0, x1, 436, x4)
90000830:	aaaab537          	lui	a0,0xaaaab
90000834:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000838:	00052593          	slti	a1,a0,0
9000083c:	1ab0aa23          	sw	a1,436(ra)

90000840 <inst_133>:

inst_133:
// rs1_val==-1431655766 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x4, x1, 440, x4)
90000840:	aaaab537          	lui	a0,0xaaaab
90000844:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000848:	00452593          	slti	a1,a0,4
9000084c:	1ab0ac23          	sw	a1,440(ra)

90000850 <inst_134>:

inst_134:
// rs1_val==-1431655766 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x332, x1, 444, x4)
90000850:	aaaab537          	lui	a0,0xaaaab
90000854:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000858:	33252593          	slti	a1,a0,818
9000085c:	1ab0ae23          	sw	a1,444(ra)

90000860 <inst_135>:

inst_135:
// rs1_val==-1431655766 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x665, x1, 448, x4)
90000860:	aaaab537          	lui	a0,0xaaaab
90000864:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000868:	66552593          	slti	a1,a0,1637
9000086c:	1cb0a023          	sw	a1,448(ra)

90000870 <inst_136>:

inst_136:
// rs1_val==-1431655766 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x2c, x1, 452, x4)
90000870:	aaaab537          	lui	a0,0xaaaab
90000874:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000878:	02c52593          	slti	a1,a0,44
9000087c:	1cb0a223          	sw	a1,452(ra)

90000880 <inst_137>:

inst_137:
// rs1_val==-1431655766 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x556, x1, 456, x4)
90000880:	aaaab537          	lui	a0,0xaaaab
90000884:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000888:	55652593          	slti	a1,a0,1366
9000088c:	1cb0a423          	sw	a1,456(ra)

90000890 <inst_138>:

inst_138:
// rs1_val==-1431655766 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, -0x555, x1, 460, x4)
90000890:	aaaab537          	lui	a0,0xaaaab
90000894:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000898:	aab52593          	slti	a1,a0,-1365
9000089c:	1cb0a623          	sw	a1,460(ra)

900008a0 <inst_139>:

inst_139:
// rs1_val==-1431655766 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x6, x1, 464, x4)
900008a0:	aaaab537          	lui	a0,0xaaaab
900008a4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900008a8:	00652593          	slti	a1,a0,6
900008ac:	1cb0a823          	sw	a1,464(ra)

900008b0 <inst_140>:

inst_140:
// rs1_val==-1431655766 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x334, x1, 468, x4)
900008b0:	aaaab537          	lui	a0,0xaaaab
900008b4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900008b8:	33452593          	slti	a1,a0,820
900008bc:	1cb0aa23          	sw	a1,468(ra)

900008c0 <inst_141>:

inst_141:
// rs1_val==-1431655766 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x667, x1, 472, x4)
900008c0:	aaaab537          	lui	a0,0xaaaab
900008c4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900008c8:	66752593          	slti	a1,a0,1639
900008cc:	1cb0ac23          	sw	a1,472(ra)

900008d0 <inst_142>:

inst_142:
// rs1_val==-1431655766 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, -0x2c, x1, 476, x4)
900008d0:	aaaab537          	lui	a0,0xaaaab
900008d4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900008d8:	fd452593          	slti	a1,a0,-44
900008dc:	1cb0ae23          	sw	a1,476(ra)

900008e0 <inst_143>:

inst_143:
// rs1_val==-1431655766 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555556, 0x2e, x1, 480, x4)
900008e0:	aaaab537          	lui	a0,0xaaaab
900008e4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900008e8:	02e52593          	slti	a1,a0,46
900008ec:	1eb0a023          	sw	a1,480(ra)

900008f0 <inst_144>:

inst_144:
// rs1_val==5 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x5, 0x3, x1, 484, x4)
900008f0:	00500513          	li	a0,5
900008f4:	00352593          	slti	a1,a0,3
900008f8:	1eb0a223          	sw	a1,484(ra)

900008fc <inst_145>:

inst_145:
// rs1_val==5 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x555, x1, 488, x4)
900008fc:	00500513          	li	a0,5
90000900:	55552593          	slti	a1,a0,1365
90000904:	1eb0a423          	sw	a1,488(ra)

90000908 <inst_146>:

inst_146:
// rs1_val==5 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x5, -0x556, x1, 492, x4)
90000908:	00500513          	li	a0,5
9000090c:	aaa52593          	slti	a1,a0,-1366
90000910:	1eb0a623          	sw	a1,492(ra)

90000914 <inst_147>:

inst_147:
// rs1_val==5 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x5, 0x5, x1, 496, x4)
90000914:	00500513          	li	a0,5
90000918:	00552593          	slti	a1,a0,5
9000091c:	1eb0a823          	sw	a1,496(ra)

90000920 <inst_148>:

inst_148:
// rs1_val==5 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x333, x1, 500, x4)
90000920:	00500513          	li	a0,5
90000924:	33352593          	slti	a1,a0,819
90000928:	1eb0aa23          	sw	a1,500(ra)

9000092c <inst_149>:

inst_149:
// rs1_val==5 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x666, x1, 504, x4)
9000092c:	00500513          	li	a0,5
90000930:	66652593          	slti	a1,a0,1638
90000934:	1eb0ac23          	sw	a1,504(ra)

90000938 <inst_150>:

inst_150:
// rs1_val==5 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x5, -0x2d, x1, 508, x4)
90000938:	00500513          	li	a0,5
9000093c:	fd352593          	slti	a1,a0,-45
90000940:	1eb0ae23          	sw	a1,508(ra)

90000944 <inst_151>:

inst_151:
// rs1_val==5 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x2d, x1, 512, x4)
90000944:	00500513          	li	a0,5
90000948:	02d52593          	slti	a1,a0,45
9000094c:	20b0a023          	sw	a1,512(ra)

90000950 <inst_152>:

inst_152:
// rs1_val==5 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x5, 0x2, x1, 516, x4)
90000950:	00500513          	li	a0,5
90000954:	00252593          	slti	a1,a0,2
90000958:	20b0a223          	sw	a1,516(ra)

9000095c <inst_153>:

inst_153:
// rs1_val==5 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x554, x1, 520, x4)
9000095c:	00500513          	li	a0,5
90000960:	55452593          	slti	a1,a0,1364
90000964:	20b0a423          	sw	a1,520(ra)

90000968 <inst_154>:

inst_154:
// rs1_val==5 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x5, 0x0, x1, 524, x4)
90000968:	00500513          	li	a0,5
9000096c:	00052593          	slti	a1,a0,0
90000970:	20b0a623          	sw	a1,524(ra)

90000974 <inst_155>:

inst_155:
// rs1_val==5 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0x5, 0x4, x1, 528, x4)
90000974:	00500513          	li	a0,5
90000978:	00452593          	slti	a1,a0,4
9000097c:	20b0a823          	sw	a1,528(ra)

90000980 <inst_156>:

inst_156:
// rs1_val==5 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x332, x1, 532, x4)
90000980:	00500513          	li	a0,5
90000984:	33252593          	slti	a1,a0,818
90000988:	20b0aa23          	sw	a1,532(ra)

9000098c <inst_157>:

inst_157:
// rs1_val==5 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x665, x1, 536, x4)
9000098c:	00500513          	li	a0,5
90000990:	66552593          	slti	a1,a0,1637
90000994:	20b0ac23          	sw	a1,536(ra)

90000998 <inst_158>:

inst_158:
// rs1_val==5 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x2c, x1, 540, x4)
90000998:	00500513          	li	a0,5
9000099c:	02c52593          	slti	a1,a0,44
900009a0:	20b0ae23          	sw	a1,540(ra)

900009a4 <inst_159>:

inst_159:
// rs1_val==5 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x556, x1, 544, x4)
900009a4:	00500513          	li	a0,5
900009a8:	55652593          	slti	a1,a0,1366
900009ac:	22b0a023          	sw	a1,544(ra)

900009b0 <inst_160>:

inst_160:
// rs1_val==5 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x5, -0x555, x1, 548, x4)
900009b0:	00500513          	li	a0,5
900009b4:	aab52593          	slti	a1,a0,-1365
900009b8:	22b0a223          	sw	a1,548(ra)

900009bc <inst_161>:

inst_161:
// rs1_val==5 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x6, x1, 552, x4)
900009bc:	00500513          	li	a0,5
900009c0:	00652593          	slti	a1,a0,6
900009c4:	22b0a423          	sw	a1,552(ra)

900009c8 <inst_162>:

inst_162:
// rs1_val==5 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x334, x1, 556, x4)
900009c8:	00500513          	li	a0,5
900009cc:	33452593          	slti	a1,a0,820
900009d0:	22b0a623          	sw	a1,556(ra)

900009d4 <inst_163>:

inst_163:
// rs1_val==5 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x667, x1, 560, x4)
900009d4:	00500513          	li	a0,5
900009d8:	66752593          	slti	a1,a0,1639
900009dc:	22b0a823          	sw	a1,560(ra)

900009e0 <inst_164>:

inst_164:
// rs1_val==5 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x5, -0x2c, x1, 564, x4)
900009e0:	00500513          	li	a0,5
900009e4:	fd452593          	slti	a1,a0,-44
900009e8:	22b0aa23          	sw	a1,564(ra)

900009ec <inst_165>:

inst_165:
// rs1_val==5 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x5;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x1, 0x5, 0x2e, x1, 568, x4)
900009ec:	00500513          	li	a0,5
900009f0:	02e52593          	slti	a1,a0,46
900009f4:	22b0ac23          	sw	a1,568(ra)

900009f8 <inst_166>:

inst_166:
// rs1_val==858993459 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x3, x1, 572, x4)
900009f8:	33333537          	lui	a0,0x33333
900009fc:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000a00:	00352593          	slti	a1,a0,3
90000a04:	22b0ae23          	sw	a1,572(ra)

90000a08 <inst_167>:

inst_167:
// rs1_val==858993459 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x555, x1, 576, x4)
90000a08:	33333537          	lui	a0,0x33333
90000a0c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000a10:	55552593          	slti	a1,a0,1365
90000a14:	24b0a023          	sw	a1,576(ra)

90000a18 <inst_168>:

inst_168:
// rs1_val==858993459 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, -0x556, x1, 580, x4)
90000a18:	33333537          	lui	a0,0x33333
90000a1c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000a20:	aaa52593          	slti	a1,a0,-1366
90000a24:	24b0a223          	sw	a1,580(ra)

90000a28 <inst_169>:

inst_169:
// rs1_val==858993459 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x5, x1, 584, x4)
90000a28:	33333537          	lui	a0,0x33333
90000a2c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000a30:	00552593          	slti	a1,a0,5
90000a34:	24b0a423          	sw	a1,584(ra)

90000a38 <inst_170>:

inst_170:
// rs1_val==858993459 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x333, x1, 588, x4)
90000a38:	33333537          	lui	a0,0x33333
90000a3c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000a40:	33352593          	slti	a1,a0,819
90000a44:	24b0a623          	sw	a1,588(ra)

90000a48 <inst_171>:

inst_171:
// rs1_val==858993459 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x666, x1, 592, x4)
90000a48:	33333537          	lui	a0,0x33333
90000a4c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000a50:	66652593          	slti	a1,a0,1638
90000a54:	24b0a823          	sw	a1,592(ra)

90000a58 <inst_172>:

inst_172:
// rs1_val==858993459 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, -0x2d, x1, 596, x4)
90000a58:	33333537          	lui	a0,0x33333
90000a5c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000a60:	fd352593          	slti	a1,a0,-45
90000a64:	24b0aa23          	sw	a1,596(ra)

90000a68 <inst_173>:

inst_173:
// rs1_val==858993459 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x2d, x1, 600, x4)
90000a68:	33333537          	lui	a0,0x33333
90000a6c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000a70:	02d52593          	slti	a1,a0,45
90000a74:	24b0ac23          	sw	a1,600(ra)

90000a78 <inst_174>:

inst_174:
// rs1_val==858993459 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x2, x1, 604, x4)
90000a78:	33333537          	lui	a0,0x33333
90000a7c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000a80:	00252593          	slti	a1,a0,2
90000a84:	24b0ae23          	sw	a1,604(ra)

90000a88 <inst_175>:

inst_175:
// rs1_val==858993459 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x554, x1, 608, x4)
90000a88:	33333537          	lui	a0,0x33333
90000a8c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000a90:	55452593          	slti	a1,a0,1364
90000a94:	26b0a023          	sw	a1,608(ra)

90000a98 <inst_176>:

inst_176:
// rs1_val==858993459 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x0, x1, 612, x4)
90000a98:	33333537          	lui	a0,0x33333
90000a9c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000aa0:	00052593          	slti	a1,a0,0
90000aa4:	26b0a223          	sw	a1,612(ra)

90000aa8 <inst_177>:

inst_177:
// rs1_val==858993459 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x4, x1, 616, x4)
90000aa8:	33333537          	lui	a0,0x33333
90000aac:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000ab0:	00452593          	slti	a1,a0,4
90000ab4:	26b0a423          	sw	a1,616(ra)

90000ab8 <inst_178>:

inst_178:
// rs1_val==858993459 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x332, x1, 620, x4)
90000ab8:	33333537          	lui	a0,0x33333
90000abc:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000ac0:	33252593          	slti	a1,a0,818
90000ac4:	26b0a623          	sw	a1,620(ra)

90000ac8 <inst_179>:

inst_179:
// rs1_val==858993459 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x665, x1, 624, x4)
90000ac8:	33333537          	lui	a0,0x33333
90000acc:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000ad0:	66552593          	slti	a1,a0,1637
90000ad4:	26b0a823          	sw	a1,624(ra)

90000ad8 <inst_180>:

inst_180:
// rs1_val==858993459 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x2c, x1, 628, x4)
90000ad8:	33333537          	lui	a0,0x33333
90000adc:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000ae0:	02c52593          	slti	a1,a0,44
90000ae4:	26b0aa23          	sw	a1,628(ra)

90000ae8 <inst_181>:

inst_181:
// rs1_val==858993459 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x556, x1, 632, x4)
90000ae8:	33333537          	lui	a0,0x33333
90000aec:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000af0:	55652593          	slti	a1,a0,1366
90000af4:	26b0ac23          	sw	a1,632(ra)

90000af8 <inst_182>:

inst_182:
// rs1_val==858993459 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, -0x555, x1, 636, x4)
90000af8:	33333537          	lui	a0,0x33333
90000afc:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000b00:	aab52593          	slti	a1,a0,-1365
90000b04:	26b0ae23          	sw	a1,636(ra)

90000b08 <inst_183>:

inst_183:
// rs1_val==858993459 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x6, x1, 640, x4)
90000b08:	33333537          	lui	a0,0x33333
90000b0c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000b10:	00652593          	slti	a1,a0,6
90000b14:	28b0a023          	sw	a1,640(ra)

90000b18 <inst_184>:

inst_184:
// rs1_val==858993459 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x334, x1, 644, x4)
90000b18:	33333537          	lui	a0,0x33333
90000b1c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000b20:	33452593          	slti	a1,a0,820
90000b24:	28b0a223          	sw	a1,644(ra)

90000b28 <inst_185>:

inst_185:
// rs1_val==858993459 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x667, x1, 648, x4)
90000b28:	33333537          	lui	a0,0x33333
90000b2c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000b30:	66752593          	slti	a1,a0,1639
90000b34:	28b0a423          	sw	a1,648(ra)

90000b38 <inst_186>:

inst_186:
// rs1_val==858993459 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, -0x2c, x1, 652, x4)
90000b38:	33333537          	lui	a0,0x33333
90000b3c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000b40:	fd452593          	slti	a1,a0,-44
90000b44:	28b0a623          	sw	a1,652(ra)

90000b48 <inst_187>:

inst_187:
// rs1_val==858993459 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333333, 0x2e, x1, 656, x4)
90000b48:	33333537          	lui	a0,0x33333
90000b4c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cf>
90000b50:	02e52593          	slti	a1,a0,46
90000b54:	28b0a823          	sw	a1,656(ra)

90000b58 <inst_188>:

inst_188:
// rs1_val==1717986918 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x3, x1, 660, x4)
90000b58:	66666537          	lui	a0,0x66666
90000b5c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000b60:	00352593          	slti	a1,a0,3
90000b64:	28b0aa23          	sw	a1,660(ra)

90000b68 <inst_189>:

inst_189:
// rs1_val==1717986918 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x555, x1, 664, x4)
90000b68:	66666537          	lui	a0,0x66666
90000b6c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000b70:	55552593          	slti	a1,a0,1365
90000b74:	28b0ac23          	sw	a1,664(ra)

90000b78 <inst_190>:

inst_190:
// rs1_val==1717986918 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, -0x556, x1, 668, x4)
90000b78:	66666537          	lui	a0,0x66666
90000b7c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000b80:	aaa52593          	slti	a1,a0,-1366
90000b84:	28b0ae23          	sw	a1,668(ra)

90000b88 <inst_191>:

inst_191:
// rs1_val==1717986918 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x5, x1, 672, x4)
90000b88:	66666537          	lui	a0,0x66666
90000b8c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000b90:	00552593          	slti	a1,a0,5
90000b94:	2ab0a023          	sw	a1,672(ra)

90000b98 <inst_192>:

inst_192:
// rs1_val==1717986918 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x333, x1, 676, x4)
90000b98:	66666537          	lui	a0,0x66666
90000b9c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000ba0:	33352593          	slti	a1,a0,819
90000ba4:	2ab0a223          	sw	a1,676(ra)

90000ba8 <inst_193>:

inst_193:
// rs1_val==1717986918 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x666, x1, 680, x4)
90000ba8:	66666537          	lui	a0,0x66666
90000bac:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000bb0:	66652593          	slti	a1,a0,1638
90000bb4:	2ab0a423          	sw	a1,680(ra)

90000bb8 <inst_194>:

inst_194:
// rs1_val==1717986918 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, -0x2d, x1, 684, x4)
90000bb8:	66666537          	lui	a0,0x66666
90000bbc:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000bc0:	fd352593          	slti	a1,a0,-45
90000bc4:	2ab0a623          	sw	a1,684(ra)

90000bc8 <inst_195>:

inst_195:
// rs1_val==1717986918 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x2d, x1, 688, x4)
90000bc8:	66666537          	lui	a0,0x66666
90000bcc:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000bd0:	02d52593          	slti	a1,a0,45
90000bd4:	2ab0a823          	sw	a1,688(ra)

90000bd8 <inst_196>:

inst_196:
// rs1_val==1717986918 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x2, x1, 692, x4)
90000bd8:	66666537          	lui	a0,0x66666
90000bdc:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000be0:	00252593          	slti	a1,a0,2
90000be4:	2ab0aa23          	sw	a1,692(ra)

90000be8 <inst_197>:

inst_197:
// rs1_val==1717986918 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x554, x1, 696, x4)
90000be8:	66666537          	lui	a0,0x66666
90000bec:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000bf0:	55452593          	slti	a1,a0,1364
90000bf4:	2ab0ac23          	sw	a1,696(ra)

90000bf8 <inst_198>:

inst_198:
// rs1_val==1717986918 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x0, x1, 700, x4)
90000bf8:	66666537          	lui	a0,0x66666
90000bfc:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000c00:	00052593          	slti	a1,a0,0
90000c04:	2ab0ae23          	sw	a1,700(ra)

90000c08 <inst_199>:

inst_199:
// rs1_val==1717986918 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x4, x1, 704, x4)
90000c08:	66666537          	lui	a0,0x66666
90000c0c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000c10:	00452593          	slti	a1,a0,4
90000c14:	2cb0a023          	sw	a1,704(ra)

90000c18 <inst_200>:

inst_200:
// rs1_val==1717986918 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x332, x1, 708, x4)
90000c18:	66666537          	lui	a0,0x66666
90000c1c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000c20:	33252593          	slti	a1,a0,818
90000c24:	2cb0a223          	sw	a1,708(ra)

90000c28 <inst_201>:

inst_201:
// rs1_val==1717986918 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x665, x1, 712, x4)
90000c28:	66666537          	lui	a0,0x66666
90000c2c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000c30:	66552593          	slti	a1,a0,1637
90000c34:	2cb0a423          	sw	a1,712(ra)

90000c38 <inst_202>:

inst_202:
// rs1_val==1717986918 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x2c, x1, 716, x4)
90000c38:	66666537          	lui	a0,0x66666
90000c3c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000c40:	02c52593          	slti	a1,a0,44
90000c44:	2cb0a623          	sw	a1,716(ra)

90000c48 <inst_203>:

inst_203:
// rs1_val==1717986918 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x556, x1, 720, x4)
90000c48:	66666537          	lui	a0,0x66666
90000c4c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000c50:	55652593          	slti	a1,a0,1366
90000c54:	2cb0a823          	sw	a1,720(ra)

90000c58 <inst_204>:

inst_204:
// rs1_val==1717986918 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, -0x555, x1, 724, x4)
90000c58:	66666537          	lui	a0,0x66666
90000c5c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000c60:	aab52593          	slti	a1,a0,-1365
90000c64:	2cb0aa23          	sw	a1,724(ra)

90000c68 <inst_205>:

inst_205:
// rs1_val==1717986918 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x6, x1, 728, x4)
90000c68:	66666537          	lui	a0,0x66666
90000c6c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000c70:	00652593          	slti	a1,a0,6
90000c74:	2cb0ac23          	sw	a1,728(ra)

90000c78 <inst_206>:

inst_206:
// rs1_val==1717986918 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x334, x1, 732, x4)
90000c78:	66666537          	lui	a0,0x66666
90000c7c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000c80:	33452593          	slti	a1,a0,820
90000c84:	2cb0ae23          	sw	a1,732(ra)

90000c88 <inst_207>:

inst_207:
// rs1_val==1717986918 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x667, x1, 736, x4)
90000c88:	66666537          	lui	a0,0x66666
90000c8c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000c90:	66752593          	slti	a1,a0,1639
90000c94:	2eb0a023          	sw	a1,736(ra)

90000c98 <inst_208>:

inst_208:
// rs1_val==1717986918 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, -0x2c, x1, 740, x4)
90000c98:	66666537          	lui	a0,0x66666
90000c9c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000ca0:	fd452593          	slti	a1,a0,-44
90000ca4:	2eb0a223          	sw	a1,740(ra)

90000ca8 <inst_209>:

inst_209:
// rs1_val==1717986918 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666666, 0x2e, x1, 744, x4)
90000ca8:	66666537          	lui	a0,0x66666
90000cac:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666602>
90000cb0:	02e52593          	slti	a1,a0,46
90000cb4:	2eb0a423          	sw	a1,744(ra)

90000cb8 <inst_210>:

inst_210:
// rs1_val==-46340 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x3, x1, 748, x4)
90000cb8:	ffff5537          	lui	a0,0xffff5
90000cbc:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000cc0:	00352593          	slti	a1,a0,3
90000cc4:	2eb0a623          	sw	a1,748(ra)

90000cc8 <inst_211>:

inst_211:
// rs1_val==-46340 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x555, x1, 752, x4)
90000cc8:	ffff5537          	lui	a0,0xffff5
90000ccc:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000cd0:	55552593          	slti	a1,a0,1365
90000cd4:	2eb0a823          	sw	a1,752(ra)

90000cd8 <inst_212>:

inst_212:
// rs1_val==-46340 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, -0x556, x1, 756, x4)
90000cd8:	ffff5537          	lui	a0,0xffff5
90000cdc:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000ce0:	aaa52593          	slti	a1,a0,-1366
90000ce4:	2eb0aa23          	sw	a1,756(ra)

90000ce8 <inst_213>:

inst_213:
// rs1_val==-46340 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x5, x1, 760, x4)
90000ce8:	ffff5537          	lui	a0,0xffff5
90000cec:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000cf0:	00552593          	slti	a1,a0,5
90000cf4:	2eb0ac23          	sw	a1,760(ra)

90000cf8 <inst_214>:

inst_214:
// rs1_val==-46340 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x333, x1, 764, x4)
90000cf8:	ffff5537          	lui	a0,0xffff5
90000cfc:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d00:	33352593          	slti	a1,a0,819
90000d04:	2eb0ae23          	sw	a1,764(ra)

90000d08 <inst_215>:

inst_215:
// rs1_val==-46340 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x666, x1, 768, x4)
90000d08:	ffff5537          	lui	a0,0xffff5
90000d0c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d10:	66652593          	slti	a1,a0,1638
90000d14:	30b0a023          	sw	a1,768(ra)

90000d18 <inst_216>:

inst_216:
// rs1_val==-46340 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, -0x2d, x1, 772, x4)
90000d18:	ffff5537          	lui	a0,0xffff5
90000d1c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d20:	fd352593          	slti	a1,a0,-45
90000d24:	30b0a223          	sw	a1,772(ra)

90000d28 <inst_217>:

inst_217:
// rs1_val==-46340 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x2d, x1, 776, x4)
90000d28:	ffff5537          	lui	a0,0xffff5
90000d2c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d30:	02d52593          	slti	a1,a0,45
90000d34:	30b0a423          	sw	a1,776(ra)

90000d38 <inst_218>:

inst_218:
// rs1_val==-46340 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x2, x1, 780, x4)
90000d38:	ffff5537          	lui	a0,0xffff5
90000d3c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d40:	00252593          	slti	a1,a0,2
90000d44:	30b0a623          	sw	a1,780(ra)

90000d48 <inst_219>:

inst_219:
// rs1_val==-46340 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x554, x1, 784, x4)
90000d48:	ffff5537          	lui	a0,0xffff5
90000d4c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d50:	55452593          	slti	a1,a0,1364
90000d54:	30b0a823          	sw	a1,784(ra)

90000d58 <inst_220>:

inst_220:
// rs1_val==-46340 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x0, x1, 788, x4)
90000d58:	ffff5537          	lui	a0,0xffff5
90000d5c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d60:	00052593          	slti	a1,a0,0
90000d64:	30b0aa23          	sw	a1,788(ra)

90000d68 <inst_221>:

inst_221:
// rs1_val==-46340 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x4, x1, 792, x4)
90000d68:	ffff5537          	lui	a0,0xffff5
90000d6c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d70:	00452593          	slti	a1,a0,4
90000d74:	30b0ac23          	sw	a1,792(ra)

90000d78 <inst_222>:

inst_222:
// rs1_val==-46340 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x332, x1, 796, x4)
90000d78:	ffff5537          	lui	a0,0xffff5
90000d7c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d80:	33252593          	slti	a1,a0,818
90000d84:	30b0ae23          	sw	a1,796(ra)

90000d88 <inst_223>:

inst_223:
// rs1_val==-46340 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x665, x1, 800, x4)
90000d88:	ffff5537          	lui	a0,0xffff5
90000d8c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d90:	66552593          	slti	a1,a0,1637
90000d94:	32b0a023          	sw	a1,800(ra)

90000d98 <inst_224>:

inst_224:
// rs1_val==-46340 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x2c, x1, 804, x4)
90000d98:	ffff5537          	lui	a0,0xffff5
90000d9c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000da0:	02c52593          	slti	a1,a0,44
90000da4:	32b0a223          	sw	a1,804(ra)

90000da8 <inst_225>:

inst_225:
// rs1_val==-46340 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x556, x1, 808, x4)
90000da8:	ffff5537          	lui	a0,0xffff5
90000dac:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000db0:	55652593          	slti	a1,a0,1366
90000db4:	32b0a423          	sw	a1,808(ra)

90000db8 <inst_226>:

inst_226:
// rs1_val==-46340 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, -0x555, x1, 812, x4)
90000db8:	ffff5537          	lui	a0,0xffff5
90000dbc:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000dc0:	aab52593          	slti	a1,a0,-1365
90000dc4:	32b0a623          	sw	a1,812(ra)

90000dc8 <inst_227>:

inst_227:
// rs1_val==-46340 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x6, x1, 816, x4)
90000dc8:	ffff5537          	lui	a0,0xffff5
90000dcc:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000dd0:	00652593          	slti	a1,a0,6
90000dd4:	32b0a823          	sw	a1,816(ra)

90000dd8 <inst_228>:

inst_228:
// rs1_val==-46340 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x334, x1, 820, x4)
90000dd8:	ffff5537          	lui	a0,0xffff5
90000ddc:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000de0:	33452593          	slti	a1,a0,820
90000de4:	32b0aa23          	sw	a1,820(ra)

90000de8 <inst_229>:

inst_229:
// rs1_val==-46340 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x667, x1, 824, x4)
90000de8:	ffff5537          	lui	a0,0xffff5
90000dec:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000df0:	66752593          	slti	a1,a0,1639
90000df4:	32b0ac23          	sw	a1,824(ra)

90000df8 <inst_230>:

inst_230:
// rs1_val==-46340 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, -0x2c, x1, 828, x4)
90000df8:	ffff5537          	lui	a0,0xffff5
90000dfc:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000e00:	fd452593          	slti	a1,a0,-44
90000e04:	32b0ae23          	sw	a1,828(ra)

90000e08 <inst_231>:

inst_231:
// rs1_val==-46340 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb504, 0x2e, x1, 832, x4)
90000e08:	ffff5537          	lui	a0,0xffff5
90000e0c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000e10:	02e52593          	slti	a1,a0,46
90000e14:	34b0a023          	sw	a1,832(ra)

90000e18 <inst_232>:

inst_232:
// rs1_val==46340 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x3, x1, 836, x4)
90000e18:	0000b537          	lui	a0,0xb
90000e1c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000e20:	00352593          	slti	a1,a0,3
90000e24:	34b0a223          	sw	a1,836(ra)

90000e28 <inst_233>:

inst_233:
// rs1_val==46340 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x555, x1, 840, x4)
90000e28:	0000b537          	lui	a0,0xb
90000e2c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000e30:	55552593          	slti	a1,a0,1365
90000e34:	34b0a423          	sw	a1,840(ra)

90000e38 <inst_234>:

inst_234:
// rs1_val==46340 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, -0x556, x1, 844, x4)
90000e38:	0000b537          	lui	a0,0xb
90000e3c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000e40:	aaa52593          	slti	a1,a0,-1366
90000e44:	34b0a623          	sw	a1,844(ra)

90000e48 <inst_235>:

inst_235:
// rs1_val==46340 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x5, x1, 848, x4)
90000e48:	0000b537          	lui	a0,0xb
90000e4c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000e50:	00552593          	slti	a1,a0,5
90000e54:	34b0a823          	sw	a1,848(ra)

90000e58 <inst_236>:

inst_236:
// rs1_val==46340 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x333, x1, 852, x4)
90000e58:	0000b537          	lui	a0,0xb
90000e5c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000e60:	33352593          	slti	a1,a0,819
90000e64:	34b0aa23          	sw	a1,852(ra)

90000e68 <inst_237>:

inst_237:
// rs1_val==46340 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x666, x1, 856, x4)
90000e68:	0000b537          	lui	a0,0xb
90000e6c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000e70:	66652593          	slti	a1,a0,1638
90000e74:	34b0ac23          	sw	a1,856(ra)

90000e78 <inst_238>:

inst_238:
// rs1_val==46340 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, -0x2d, x1, 860, x4)
90000e78:	0000b537          	lui	a0,0xb
90000e7c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000e80:	fd352593          	slti	a1,a0,-45
90000e84:	34b0ae23          	sw	a1,860(ra)

90000e88 <inst_239>:

inst_239:
// rs1_val==46340 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x2d, x1, 864, x4)
90000e88:	0000b537          	lui	a0,0xb
90000e8c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000e90:	02d52593          	slti	a1,a0,45
90000e94:	36b0a023          	sw	a1,864(ra)

90000e98 <inst_240>:

inst_240:
// rs1_val==46340 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x2, x1, 868, x4)
90000e98:	0000b537          	lui	a0,0xb
90000e9c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000ea0:	00252593          	slti	a1,a0,2
90000ea4:	36b0a223          	sw	a1,868(ra)

90000ea8 <inst_241>:

inst_241:
// rs1_val==46340 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x554, x1, 872, x4)
90000ea8:	0000b537          	lui	a0,0xb
90000eac:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000eb0:	55452593          	slti	a1,a0,1364
90000eb4:	36b0a423          	sw	a1,872(ra)

90000eb8 <inst_242>:

inst_242:
// rs1_val==46340 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x0, x1, 876, x4)
90000eb8:	0000b537          	lui	a0,0xb
90000ebc:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000ec0:	00052593          	slti	a1,a0,0
90000ec4:	36b0a623          	sw	a1,876(ra)

90000ec8 <inst_243>:

inst_243:
// rs1_val==46340 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x4, x1, 880, x4)
90000ec8:	0000b537          	lui	a0,0xb
90000ecc:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000ed0:	00452593          	slti	a1,a0,4
90000ed4:	36b0a823          	sw	a1,880(ra)

90000ed8 <inst_244>:

inst_244:
// rs1_val==46340 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x332, x1, 884, x4)
90000ed8:	0000b537          	lui	a0,0xb
90000edc:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000ee0:	33252593          	slti	a1,a0,818
90000ee4:	36b0aa23          	sw	a1,884(ra)

90000ee8 <inst_245>:

inst_245:
// rs1_val==46340 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x665, x1, 888, x4)
90000ee8:	0000b537          	lui	a0,0xb
90000eec:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000ef0:	66552593          	slti	a1,a0,1637
90000ef4:	36b0ac23          	sw	a1,888(ra)

90000ef8 <inst_246>:

inst_246:
// rs1_val==46340 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x2c, x1, 892, x4)
90000ef8:	0000b537          	lui	a0,0xb
90000efc:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000f00:	02c52593          	slti	a1,a0,44
90000f04:	36b0ae23          	sw	a1,892(ra)

90000f08 <inst_247>:

inst_247:
// rs1_val==46340 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x556, x1, 896, x4)
90000f08:	0000b537          	lui	a0,0xb
90000f0c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000f10:	55652593          	slti	a1,a0,1366
90000f14:	38b0a023          	sw	a1,896(ra)

90000f18 <inst_248>:

inst_248:
// rs1_val==46340 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, -0x555, x1, 900, x4)
90000f18:	0000b537          	lui	a0,0xb
90000f1c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000f20:	aab52593          	slti	a1,a0,-1365
90000f24:	38b0a223          	sw	a1,900(ra)

90000f28 <inst_249>:

inst_249:
// rs1_val==46340 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x6, x1, 904, x4)
90000f28:	0000b537          	lui	a0,0xb
90000f2c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000f30:	00652593          	slti	a1,a0,6
90000f34:	38b0a423          	sw	a1,904(ra)

90000f38 <inst_250>:

inst_250:
// rs1_val==46340 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x334, x1, 908, x4)
90000f38:	0000b537          	lui	a0,0xb
90000f3c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000f40:	33452593          	slti	a1,a0,820
90000f44:	38b0a623          	sw	a1,908(ra)

90000f48 <inst_251>:

inst_251:
// rs1_val==46340 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x667, x1, 912, x4)
90000f48:	0000b537          	lui	a0,0xb
90000f4c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000f50:	66752593          	slti	a1,a0,1639
90000f54:	38b0a823          	sw	a1,912(ra)

90000f58 <inst_252>:

inst_252:
// rs1_val==46340 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, -0x2c, x1, 916, x4)
90000f58:	0000b537          	lui	a0,0xb
90000f5c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000f60:	fd452593          	slti	a1,a0,-44
90000f64:	38b0aa23          	sw	a1,916(ra)

90000f68 <inst_253>:

inst_253:
// rs1_val==46340 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb504, 0x2e, x1, 920, x4)
90000f68:	0000b537          	lui	a0,0xb
90000f6c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb4a0>
90000f70:	02e52593          	slti	a1,a0,46
90000f74:	38b0ac23          	sw	a1,920(ra)

90000f78 <inst_254>:

inst_254:
// rs1_val==2 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x3, x1, 924, x4)
90000f78:	00200513          	li	a0,2
90000f7c:	00352593          	slti	a1,a0,3
90000f80:	38b0ae23          	sw	a1,924(ra)

90000f84 <inst_255>:

inst_255:
// rs1_val==2 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x555, x1, 928, x4)
90000f84:	00200513          	li	a0,2
90000f88:	55552593          	slti	a1,a0,1365
90000f8c:	3ab0a023          	sw	a1,928(ra)

90000f90 <inst_256>:

inst_256:
// rs1_val==2 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x2, -0x556, x1, 932, x4)
90000f90:	00200513          	li	a0,2
90000f94:	aaa52593          	slti	a1,a0,-1366
90000f98:	3ab0a223          	sw	a1,932(ra)

90000f9c <inst_257>:

inst_257:
// rs1_val==2 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x5, x1, 936, x4)
90000f9c:	00200513          	li	a0,2
90000fa0:	00552593          	slti	a1,a0,5
90000fa4:	3ab0a423          	sw	a1,936(ra)

90000fa8 <inst_258>:

inst_258:
// rs1_val==2 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x333, x1, 940, x4)
90000fa8:	00200513          	li	a0,2
90000fac:	33352593          	slti	a1,a0,819
90000fb0:	3ab0a623          	sw	a1,940(ra)

90000fb4 <inst_259>:

inst_259:
// rs1_val==2 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x666, x1, 944, x4)
90000fb4:	00200513          	li	a0,2
90000fb8:	66652593          	slti	a1,a0,1638
90000fbc:	3ab0a823          	sw	a1,944(ra)

90000fc0 <inst_260>:

inst_260:
// rs1_val==2 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x2, -0x2d, x1, 948, x4)
90000fc0:	00200513          	li	a0,2
90000fc4:	fd352593          	slti	a1,a0,-45
90000fc8:	3ab0aa23          	sw	a1,948(ra)

90000fcc <inst_261>:

inst_261:
// rs1_val==2 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x2d, x1, 952, x4)
90000fcc:	00200513          	li	a0,2
90000fd0:	02d52593          	slti	a1,a0,45
90000fd4:	3ab0ac23          	sw	a1,952(ra)

90000fd8 <inst_262>:

inst_262:
// rs1_val==2 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x2, 0x2, x1, 956, x4)
90000fd8:	00200513          	li	a0,2
90000fdc:	00252593          	slti	a1,a0,2
90000fe0:	3ab0ae23          	sw	a1,956(ra)

90000fe4 <inst_263>:

inst_263:
// rs1_val==2 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x554, x1, 960, x4)
90000fe4:	00200513          	li	a0,2
90000fe8:	55452593          	slti	a1,a0,1364
90000fec:	3cb0a023          	sw	a1,960(ra)

90000ff0 <inst_264>:

inst_264:
// rs1_val==2 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x2, 0x0, x1, 964, x4)
90000ff0:	00200513          	li	a0,2
90000ff4:	00052593          	slti	a1,a0,0
90000ff8:	3cb0a223          	sw	a1,964(ra)

90000ffc <inst_265>:

inst_265:
// rs1_val==2 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x4, x1, 968, x4)
90000ffc:	00200513          	li	a0,2
90001000:	00452593          	slti	a1,a0,4
90001004:	3cb0a423          	sw	a1,968(ra)

90001008 <inst_266>:

inst_266:
// rs1_val==2 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x332, x1, 972, x4)
90001008:	00200513          	li	a0,2
9000100c:	33252593          	slti	a1,a0,818
90001010:	3cb0a623          	sw	a1,972(ra)

90001014 <inst_267>:

inst_267:
// rs1_val==2 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x665, x1, 976, x4)
90001014:	00200513          	li	a0,2
90001018:	66552593          	slti	a1,a0,1637
9000101c:	3cb0a823          	sw	a1,976(ra)

90001020 <inst_268>:

inst_268:
// rs1_val==2 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x2c, x1, 980, x4)
90001020:	00200513          	li	a0,2
90001024:	02c52593          	slti	a1,a0,44
90001028:	3cb0aa23          	sw	a1,980(ra)

9000102c <inst_269>:

inst_269:
// rs1_val==2 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x556, x1, 984, x4)
9000102c:	00200513          	li	a0,2
90001030:	55652593          	slti	a1,a0,1366
90001034:	3cb0ac23          	sw	a1,984(ra)

90001038 <inst_270>:

inst_270:
// rs1_val==2 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x2, -0x555, x1, 988, x4)
90001038:	00200513          	li	a0,2
9000103c:	aab52593          	slti	a1,a0,-1365
90001040:	3cb0ae23          	sw	a1,988(ra)

90001044 <inst_271>:

inst_271:
// rs1_val==2 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x6, x1, 992, x4)
90001044:	00200513          	li	a0,2
90001048:	00652593          	slti	a1,a0,6
9000104c:	3eb0a023          	sw	a1,992(ra)

90001050 <inst_272>:

inst_272:
// rs1_val==2 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x334, x1, 996, x4)
90001050:	00200513          	li	a0,2
90001054:	33452593          	slti	a1,a0,820
90001058:	3eb0a223          	sw	a1,996(ra)

9000105c <inst_273>:

inst_273:
// rs1_val==2 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x667, x1, 1000, x4)
9000105c:	00200513          	li	a0,2
90001060:	66752593          	slti	a1,a0,1639
90001064:	3eb0a423          	sw	a1,1000(ra)

90001068 <inst_274>:

inst_274:
// rs1_val==2 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x2, -0x2c, x1, 1004, x4)
90001068:	00200513          	li	a0,2
9000106c:	fd452593          	slti	a1,a0,-44
90001070:	3eb0a623          	sw	a1,1004(ra)

90001074 <inst_275>:

inst_275:
// rs1_val==2 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x2;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x1, 0x2, 0x2e, x1, 1008, x4)
90001074:	00200513          	li	a0,2
90001078:	02e52593          	slti	a1,a0,46
9000107c:	3eb0a823          	sw	a1,1008(ra)

90001080 <inst_276>:

inst_276:
// rs1_val==1431655764 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x3, x1, 1012, x4)
90001080:	55555537          	lui	a0,0x55555
90001084:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001088:	00352593          	slti	a1,a0,3
9000108c:	3eb0aa23          	sw	a1,1012(ra)

90001090 <inst_277>:

inst_277:
// rs1_val==1431655764 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x555, x1, 1016, x4)
90001090:	55555537          	lui	a0,0x55555
90001094:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001098:	55552593          	slti	a1,a0,1365
9000109c:	3eb0ac23          	sw	a1,1016(ra)

900010a0 <inst_278>:

inst_278:
// rs1_val==1431655764 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, -0x556, x1, 1020, x4)
900010a0:	55555537          	lui	a0,0x55555
900010a4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
900010a8:	aaa52593          	slti	a1,a0,-1366
900010ac:	3eb0ae23          	sw	a1,1020(ra)

900010b0 <inst_279>:

inst_279:
// rs1_val==1431655764 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x5, x1, 1024, x4)
900010b0:	55555537          	lui	a0,0x55555
900010b4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
900010b8:	00552593          	slti	a1,a0,5
900010bc:	40b0a023          	sw	a1,1024(ra)

900010c0 <inst_280>:

inst_280:
// rs1_val==1431655764 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x333, x1, 1028, x4)
900010c0:	55555537          	lui	a0,0x55555
900010c4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
900010c8:	33352593          	slti	a1,a0,819
900010cc:	40b0a223          	sw	a1,1028(ra)

900010d0 <inst_281>:

inst_281:
// rs1_val==1431655764 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x666, x1, 1032, x4)
900010d0:	55555537          	lui	a0,0x55555
900010d4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
900010d8:	66652593          	slti	a1,a0,1638
900010dc:	40b0a423          	sw	a1,1032(ra)

900010e0 <inst_282>:

inst_282:
// rs1_val==1431655764 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, -0x2d, x1, 1036, x4)
900010e0:	55555537          	lui	a0,0x55555
900010e4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
900010e8:	fd352593          	slti	a1,a0,-45
900010ec:	40b0a623          	sw	a1,1036(ra)

900010f0 <inst_283>:

inst_283:
// rs1_val==1431655764 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x2d, x1, 1040, x4)
900010f0:	55555537          	lui	a0,0x55555
900010f4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
900010f8:	02d52593          	slti	a1,a0,45
900010fc:	40b0a823          	sw	a1,1040(ra)

90001100 <inst_284>:

inst_284:
// rs1_val==1431655764 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x2, x1, 1044, x4)
90001100:	55555537          	lui	a0,0x55555
90001104:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001108:	00252593          	slti	a1,a0,2
9000110c:	40b0aa23          	sw	a1,1044(ra)

90001110 <inst_285>:

inst_285:
// rs1_val==1431655764 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x554, x1, 1048, x4)
90001110:	55555537          	lui	a0,0x55555
90001114:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001118:	55452593          	slti	a1,a0,1364
9000111c:	40b0ac23          	sw	a1,1048(ra)

90001120 <inst_286>:

inst_286:
// rs1_val==1431655764 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x0, x1, 1052, x4)
90001120:	55555537          	lui	a0,0x55555
90001124:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001128:	00052593          	slti	a1,a0,0
9000112c:	40b0ae23          	sw	a1,1052(ra)

90001130 <inst_287>:

inst_287:
// rs1_val==1431655764 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x4, x1, 1056, x4)
90001130:	55555537          	lui	a0,0x55555
90001134:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001138:	00452593          	slti	a1,a0,4
9000113c:	42b0a023          	sw	a1,1056(ra)

90001140 <inst_288>:

inst_288:
// rs1_val==1431655764 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x332, x1, 1060, x4)
90001140:	55555537          	lui	a0,0x55555
90001144:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001148:	33252593          	slti	a1,a0,818
9000114c:	42b0a223          	sw	a1,1060(ra)

90001150 <inst_289>:

inst_289:
// rs1_val==1431655764 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x665, x1, 1064, x4)
90001150:	55555537          	lui	a0,0x55555
90001154:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001158:	66552593          	slti	a1,a0,1637
9000115c:	42b0a423          	sw	a1,1064(ra)

90001160 <inst_290>:

inst_290:
// rs1_val==1431655764 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x2c, x1, 1068, x4)
90001160:	55555537          	lui	a0,0x55555
90001164:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001168:	02c52593          	slti	a1,a0,44
9000116c:	42b0a623          	sw	a1,1068(ra)

90001170 <inst_291>:

inst_291:
// rs1_val==1431655764 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x556, x1, 1072, x4)
90001170:	55555537          	lui	a0,0x55555
90001174:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001178:	55652593          	slti	a1,a0,1366
9000117c:	42b0a823          	sw	a1,1072(ra)

90001180 <inst_292>:

inst_292:
// rs1_val==1431655764 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, -0x555, x1, 1076, x4)
90001180:	55555537          	lui	a0,0x55555
90001184:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001188:	aab52593          	slti	a1,a0,-1365
9000118c:	42b0aa23          	sw	a1,1076(ra)

90001190 <inst_293>:

inst_293:
// rs1_val==1431655764 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x6, x1, 1080, x4)
90001190:	55555537          	lui	a0,0x55555
90001194:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
90001198:	00652593          	slti	a1,a0,6
9000119c:	42b0ac23          	sw	a1,1080(ra)

900011a0 <inst_294>:

inst_294:
// rs1_val==1431655764 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x334, x1, 1084, x4)
900011a0:	55555537          	lui	a0,0x55555
900011a4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
900011a8:	33452593          	slti	a1,a0,820
900011ac:	42b0ae23          	sw	a1,1084(ra)

900011b0 <inst_295>:

inst_295:
// rs1_val==1431655764 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x667, x1, 1088, x4)
900011b0:	55555537          	lui	a0,0x55555
900011b4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
900011b8:	66752593          	slti	a1,a0,1639
900011bc:	44b0a023          	sw	a1,1088(ra)

900011c0 <inst_296>:

inst_296:
// rs1_val==1431655764 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, -0x2c, x1, 1092, x4)
900011c0:	55555537          	lui	a0,0x55555
900011c4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
900011c8:	fd452593          	slti	a1,a0,-44
900011cc:	44b0a223          	sw	a1,1092(ra)

900011d0 <inst_297>:

inst_297:
// rs1_val==1431655764 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555554, 0x2e, x1, 1096, x4)
900011d0:	55555537          	lui	a0,0x55555
900011d4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554f0>
900011d8:	02e52593          	slti	a1,a0,46
900011dc:	44b0a423          	sw	a1,1096(ra)

900011e0 <inst_298>:

inst_298:
// rs1_val==0 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x3, x1, 1100, x4)
900011e0:	00000513          	li	a0,0
900011e4:	00352593          	slti	a1,a0,3
900011e8:	44b0a623          	sw	a1,1100(ra)

900011ec <inst_299>:

inst_299:
// rs1_val==0 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x555, x1, 1104, x4)
900011ec:	00000513          	li	a0,0
900011f0:	55552593          	slti	a1,a0,1365
900011f4:	44b0a823          	sw	a1,1104(ra)

900011f8 <inst_300>:

inst_300:
// rs1_val==0 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x0, -0x556, x1, 1108, x4)
900011f8:	00000513          	li	a0,0
900011fc:	aaa52593          	slti	a1,a0,-1366
90001200:	44b0aa23          	sw	a1,1108(ra)

90001204 <inst_301>:

inst_301:
// rs1_val==0 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x5, x1, 1112, x4)
90001204:	00000513          	li	a0,0
90001208:	00552593          	slti	a1,a0,5
9000120c:	44b0ac23          	sw	a1,1112(ra)

90001210 <inst_302>:

inst_302:
// rs1_val==0 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x333, x1, 1116, x4)
90001210:	00000513          	li	a0,0
90001214:	33352593          	slti	a1,a0,819
90001218:	44b0ae23          	sw	a1,1116(ra)

9000121c <inst_303>:

inst_303:
// rs1_val==0 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x666, x1, 1120, x4)
9000121c:	00000513          	li	a0,0
90001220:	66652593          	slti	a1,a0,1638
90001224:	46b0a023          	sw	a1,1120(ra)

90001228 <inst_304>:

inst_304:
// rs1_val==858993460 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x332, x1, 1124, x4)
90001228:	33333537          	lui	a0,0x33333
9000122c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90001230:	33252593          	slti	a1,a0,818
90001234:	46b0a223          	sw	a1,1124(ra)

90001238 <inst_305>:

inst_305:
// rs1_val==858993460 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x665, x1, 1128, x4)
90001238:	33333537          	lui	a0,0x33333
9000123c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90001240:	66552593          	slti	a1,a0,1637
90001244:	46b0a423          	sw	a1,1128(ra)

90001248 <inst_306>:

inst_306:
// rs1_val==858993460 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x2c, x1, 1132, x4)
90001248:	33333537          	lui	a0,0x33333
9000124c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90001250:	02c52593          	slti	a1,a0,44
90001254:	46b0a623          	sw	a1,1132(ra)

90001258 <inst_307>:

inst_307:
// rs1_val==858993460 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x556, x1, 1136, x4)
90001258:	33333537          	lui	a0,0x33333
9000125c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90001260:	55652593          	slti	a1,a0,1366
90001264:	46b0a823          	sw	a1,1136(ra)

90001268 <inst_308>:

inst_308:
// rs1_val==858993460 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, -0x555, x1, 1140, x4)
90001268:	33333537          	lui	a0,0x33333
9000126c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90001270:	aab52593          	slti	a1,a0,-1365
90001274:	46b0aa23          	sw	a1,1140(ra)

90001278 <inst_309>:

inst_309:
// rs1_val==858993460 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x6, x1, 1144, x4)
90001278:	33333537          	lui	a0,0x33333
9000127c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90001280:	00652593          	slti	a1,a0,6
90001284:	46b0ac23          	sw	a1,1144(ra)

90001288 <inst_310>:

inst_310:
// rs1_val==858993460 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x334, x1, 1148, x4)
90001288:	33333537          	lui	a0,0x33333
9000128c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90001290:	33452593          	slti	a1,a0,820
90001294:	46b0ae23          	sw	a1,1148(ra)

90001298 <inst_311>:

inst_311:
// rs1_val==858993460 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x667, x1, 1152, x4)
90001298:	33333537          	lui	a0,0x33333
9000129c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
900012a0:	66752593          	slti	a1,a0,1639
900012a4:	48b0a023          	sw	a1,1152(ra)

900012a8 <inst_312>:

inst_312:
// rs1_val==858993460 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, -0x2c, x1, 1156, x4)
900012a8:	33333537          	lui	a0,0x33333
900012ac:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
900012b0:	fd452593          	slti	a1,a0,-44
900012b4:	48b0a223          	sw	a1,1156(ra)

900012b8 <inst_313>:

inst_313:
// rs1_val==858993460 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x2e, x1, 1160, x4)
900012b8:	33333537          	lui	a0,0x33333
900012bc:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
900012c0:	02e52593          	slti	a1,a0,46
900012c4:	48b0a423          	sw	a1,1160(ra)

900012c8 <inst_314>:

inst_314:
// rs1_val==1717986919 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x3, x1, 1164, x4)
900012c8:	66666537          	lui	a0,0x66666
900012cc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
900012d0:	00352593          	slti	a1,a0,3
900012d4:	48b0a623          	sw	a1,1164(ra)

900012d8 <inst_315>:

inst_315:
// rs1_val==1717986919 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x555, x1, 1168, x4)
900012d8:	66666537          	lui	a0,0x66666
900012dc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
900012e0:	55552593          	slti	a1,a0,1365
900012e4:	48b0a823          	sw	a1,1168(ra)

900012e8 <inst_316>:

inst_316:
// rs1_val==1717986919 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, -0x556, x1, 1172, x4)
900012e8:	66666537          	lui	a0,0x66666
900012ec:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
900012f0:	aaa52593          	slti	a1,a0,-1366
900012f4:	48b0aa23          	sw	a1,1172(ra)

900012f8 <inst_317>:

inst_317:
// rs1_val==1717986919 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x5, x1, 1176, x4)
900012f8:	66666537          	lui	a0,0x66666
900012fc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001300:	00552593          	slti	a1,a0,5
90001304:	48b0ac23          	sw	a1,1176(ra)

90001308 <inst_318>:

inst_318:
// rs1_val==1717986919 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x333, x1, 1180, x4)
90001308:	66666537          	lui	a0,0x66666
9000130c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001310:	33352593          	slti	a1,a0,819
90001314:	48b0ae23          	sw	a1,1180(ra)

90001318 <inst_319>:

inst_319:
// rs1_val==1717986919 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x666, x1, 1184, x4)
90001318:	66666537          	lui	a0,0x66666
9000131c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001320:	66652593          	slti	a1,a0,1638
90001324:	4ab0a023          	sw	a1,1184(ra)

90001328 <inst_320>:

inst_320:
// rs1_val==1717986919 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, -0x2d, x1, 1188, x4)
90001328:	66666537          	lui	a0,0x66666
9000132c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001330:	fd352593          	slti	a1,a0,-45
90001334:	4ab0a223          	sw	a1,1188(ra)

90001338 <inst_321>:

inst_321:
// rs1_val==1717986919 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x2d, x1, 1192, x4)
90001338:	66666537          	lui	a0,0x66666
9000133c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001340:	02d52593          	slti	a1,a0,45
90001344:	4ab0a423          	sw	a1,1192(ra)

90001348 <inst_322>:

inst_322:
// rs1_val==1717986919 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x2, x1, 1196, x4)
90001348:	66666537          	lui	a0,0x66666
9000134c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001350:	00252593          	slti	a1,a0,2
90001354:	4ab0a623          	sw	a1,1196(ra)

90001358 <inst_323>:

inst_323:
// rs1_val==1717986919 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x554, x1, 1200, x4)
90001358:	66666537          	lui	a0,0x66666
9000135c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001360:	55452593          	slti	a1,a0,1364
90001364:	4ab0a823          	sw	a1,1200(ra)

90001368 <inst_324>:

inst_324:
// rs1_val==1717986919 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x0, x1, 1204, x4)
90001368:	66666537          	lui	a0,0x66666
9000136c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001370:	00052593          	slti	a1,a0,0
90001374:	4ab0aa23          	sw	a1,1204(ra)

90001378 <inst_325>:

inst_325:
// rs1_val==1717986919 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x4, x1, 1208, x4)
90001378:	66666537          	lui	a0,0x66666
9000137c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001380:	00452593          	slti	a1,a0,4
90001384:	4ab0ac23          	sw	a1,1208(ra)

90001388 <inst_326>:

inst_326:
// rs1_val==1717986919 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x332, x1, 1212, x4)
90001388:	66666537          	lui	a0,0x66666
9000138c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001390:	33252593          	slti	a1,a0,818
90001394:	4ab0ae23          	sw	a1,1212(ra)

90001398 <inst_327>:

inst_327:
// rs1_val==1717986919 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x665, x1, 1216, x4)
90001398:	66666537          	lui	a0,0x66666
9000139c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
900013a0:	66552593          	slti	a1,a0,1637
900013a4:	4cb0a023          	sw	a1,1216(ra)

900013a8 <inst_328>:

inst_328:
// rs1_val==1717986919 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x2c, x1, 1220, x4)
900013a8:	66666537          	lui	a0,0x66666
900013ac:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
900013b0:	02c52593          	slti	a1,a0,44
900013b4:	4cb0a223          	sw	a1,1220(ra)

900013b8 <inst_329>:

inst_329:
// rs1_val==1717986919 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x556, x1, 1224, x4)
900013b8:	66666537          	lui	a0,0x66666
900013bc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
900013c0:	55652593          	slti	a1,a0,1366
900013c4:	4cb0a423          	sw	a1,1224(ra)

900013c8 <inst_330>:

inst_330:
// rs1_val==1717986919 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, -0x555, x1, 1228, x4)
900013c8:	66666537          	lui	a0,0x66666
900013cc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
900013d0:	aab52593          	slti	a1,a0,-1365
900013d4:	4cb0a623          	sw	a1,1228(ra)

900013d8 <inst_331>:

inst_331:
// rs1_val==1717986919 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x6, x1, 1232, x4)
900013d8:	66666537          	lui	a0,0x66666
900013dc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
900013e0:	00652593          	slti	a1,a0,6
900013e4:	4cb0a823          	sw	a1,1232(ra)

900013e8 <inst_332>:

inst_332:
// rs1_val==1717986919 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x334, x1, 1236, x4)
900013e8:	66666537          	lui	a0,0x66666
900013ec:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
900013f0:	33452593          	slti	a1,a0,820
900013f4:	4cb0aa23          	sw	a1,1236(ra)

900013f8 <inst_333>:

inst_333:
// rs1_val==1717986919 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x667, x1, 1240, x4)
900013f8:	66666537          	lui	a0,0x66666
900013fc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001400:	66752593          	slti	a1,a0,1639
90001404:	4cb0ac23          	sw	a1,1240(ra)

90001408 <inst_334>:

inst_334:
// rs1_val==1717986919 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, -0x2c, x1, 1244, x4)
90001408:	66666537          	lui	a0,0x66666
9000140c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001410:	fd452593          	slti	a1,a0,-44
90001414:	4cb0ae23          	sw	a1,1244(ra)

90001418 <inst_335>:

inst_335:
// rs1_val==1717986919 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666667, 0x2e, x1, 1248, x4)
90001418:	66666537          	lui	a0,0x66666
9000141c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666603>
90001420:	02e52593          	slti	a1,a0,46
90001424:	4eb0a023          	sw	a1,1248(ra)

90001428 <inst_336>:

inst_336:
// rs1_val==-46339 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x3, x1, 1252, x4)
90001428:	ffff5537          	lui	a0,0xffff5
9000142c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001430:	00352593          	slti	a1,a0,3
90001434:	4eb0a223          	sw	a1,1252(ra)

90001438 <inst_337>:

inst_337:
// rs1_val==-46339 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x555, x1, 1256, x4)
90001438:	ffff5537          	lui	a0,0xffff5
9000143c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001440:	55552593          	slti	a1,a0,1365
90001444:	4eb0a423          	sw	a1,1256(ra)

90001448 <inst_338>:

inst_338:
// rs1_val==-46339 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, -0x556, x1, 1260, x4)
90001448:	ffff5537          	lui	a0,0xffff5
9000144c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001450:	aaa52593          	slti	a1,a0,-1366
90001454:	4eb0a623          	sw	a1,1260(ra)

90001458 <inst_339>:

inst_339:
// rs1_val==-46339 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x5, x1, 1264, x4)
90001458:	ffff5537          	lui	a0,0xffff5
9000145c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001460:	00552593          	slti	a1,a0,5
90001464:	4eb0a823          	sw	a1,1264(ra)

90001468 <inst_340>:

inst_340:
// rs1_val==-46339 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x333, x1, 1268, x4)
90001468:	ffff5537          	lui	a0,0xffff5
9000146c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001470:	33352593          	slti	a1,a0,819
90001474:	4eb0aa23          	sw	a1,1268(ra)

90001478 <inst_341>:

inst_341:
// rs1_val==-46339 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x666, x1, 1272, x4)
90001478:	ffff5537          	lui	a0,0xffff5
9000147c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001480:	66652593          	slti	a1,a0,1638
90001484:	4eb0ac23          	sw	a1,1272(ra)

90001488 <inst_342>:

inst_342:
// rs1_val==-46339 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, -0x2d, x1, 1276, x4)
90001488:	ffff5537          	lui	a0,0xffff5
9000148c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001490:	fd352593          	slti	a1,a0,-45
90001494:	4eb0ae23          	sw	a1,1276(ra)

90001498 <inst_343>:

inst_343:
// rs1_val==-46339 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x2d, x1, 1280, x4)
90001498:	ffff5537          	lui	a0,0xffff5
9000149c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014a0:	02d52593          	slti	a1,a0,45
900014a4:	50b0a023          	sw	a1,1280(ra)

900014a8 <inst_344>:

inst_344:
// rs1_val==-46339 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x2, x1, 1284, x4)
900014a8:	ffff5537          	lui	a0,0xffff5
900014ac:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014b0:	00252593          	slti	a1,a0,2
900014b4:	50b0a223          	sw	a1,1284(ra)

900014b8 <inst_345>:

inst_345:
// rs1_val==-46339 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x554, x1, 1288, x4)
900014b8:	ffff5537          	lui	a0,0xffff5
900014bc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014c0:	55452593          	slti	a1,a0,1364
900014c4:	50b0a423          	sw	a1,1288(ra)

900014c8 <inst_346>:

inst_346:
// rs1_val==-46339 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x0, x1, 1292, x4)
900014c8:	ffff5537          	lui	a0,0xffff5
900014cc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014d0:	00052593          	slti	a1,a0,0
900014d4:	50b0a623          	sw	a1,1292(ra)

900014d8 <inst_347>:

inst_347:
// rs1_val==-46339 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x4, x1, 1296, x4)
900014d8:	ffff5537          	lui	a0,0xffff5
900014dc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014e0:	00452593          	slti	a1,a0,4
900014e4:	50b0a823          	sw	a1,1296(ra)

900014e8 <inst_348>:

inst_348:
// rs1_val==-46339 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x332, x1, 1300, x4)
900014e8:	ffff5537          	lui	a0,0xffff5
900014ec:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014f0:	33252593          	slti	a1,a0,818
900014f4:	50b0aa23          	sw	a1,1300(ra)

900014f8 <inst_349>:

inst_349:
// rs1_val==-46339 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x665, x1, 1304, x4)
900014f8:	ffff5537          	lui	a0,0xffff5
900014fc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001500:	66552593          	slti	a1,a0,1637
90001504:	50b0ac23          	sw	a1,1304(ra)

90001508 <inst_350>:

inst_350:
// rs1_val==-46339 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x2c, x1, 1308, x4)
90001508:	ffff5537          	lui	a0,0xffff5
9000150c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001510:	02c52593          	slti	a1,a0,44
90001514:	50b0ae23          	sw	a1,1308(ra)

90001518 <inst_351>:

inst_351:
// rs1_val==-46339 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x556, x1, 1312, x4)
90001518:	ffff5537          	lui	a0,0xffff5
9000151c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001520:	55652593          	slti	a1,a0,1366
90001524:	52b0a023          	sw	a1,1312(ra)

90001528 <inst_352>:

inst_352:
// rs1_val==-46339 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, -0x555, x1, 1316, x4)
90001528:	ffff5537          	lui	a0,0xffff5
9000152c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001530:	aab52593          	slti	a1,a0,-1365
90001534:	52b0a223          	sw	a1,1316(ra)

90001538 <inst_353>:

inst_353:
// rs1_val==-46339 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x6, x1, 1320, x4)
90001538:	ffff5537          	lui	a0,0xffff5
9000153c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001540:	00652593          	slti	a1,a0,6
90001544:	52b0a423          	sw	a1,1320(ra)

90001548 <inst_354>:

inst_354:
// rs1_val==-46339 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x334, x1, 1324, x4)
90001548:	ffff5537          	lui	a0,0xffff5
9000154c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001550:	33452593          	slti	a1,a0,820
90001554:	52b0a623          	sw	a1,1324(ra)

90001558 <inst_355>:

inst_355:
// rs1_val==-46339 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x667, x1, 1328, x4)
90001558:	ffff5537          	lui	a0,0xffff5
9000155c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001560:	66752593          	slti	a1,a0,1639
90001564:	52b0a823          	sw	a1,1328(ra)

90001568 <inst_356>:

inst_356:
// rs1_val==-46339 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, -0x2c, x1, 1332, x4)
90001568:	ffff5537          	lui	a0,0xffff5
9000156c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001570:	fd452593          	slti	a1,a0,-44
90001574:	52b0aa23          	sw	a1,1332(ra)

90001578 <inst_357>:

inst_357:
// rs1_val==-46339 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x1, -0xb503, 0x2e, x1, 1336, x4)
90001578:	ffff5537          	lui	a0,0xffff5
9000157c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001580:	02e52593          	slti	a1,a0,46
90001584:	52b0ac23          	sw	a1,1336(ra)

90001588 <inst_358>:

inst_358:
// rs1_val==46341 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x3, x1, 1340, x4)
90001588:	0000b537          	lui	a0,0xb
9000158c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
90001590:	00352593          	slti	a1,a0,3
90001594:	52b0ae23          	sw	a1,1340(ra)

90001598 <inst_359>:

inst_359:
// rs1_val==46341 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x555, x1, 1344, x4)
90001598:	0000b537          	lui	a0,0xb
9000159c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
900015a0:	55552593          	slti	a1,a0,1365
900015a4:	54b0a023          	sw	a1,1344(ra)

900015a8 <inst_360>:

inst_360:
// rs1_val==46341 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, -0x556, x1, 1348, x4)
900015a8:	0000b537          	lui	a0,0xb
900015ac:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
900015b0:	aaa52593          	slti	a1,a0,-1366
900015b4:	54b0a223          	sw	a1,1348(ra)

900015b8 <inst_361>:

inst_361:
// rs1_val==46341 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x5, x1, 1352, x4)
900015b8:	0000b537          	lui	a0,0xb
900015bc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
900015c0:	00552593          	slti	a1,a0,5
900015c4:	54b0a423          	sw	a1,1352(ra)

900015c8 <inst_362>:

inst_362:
// rs1_val==46341 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x333, x1, 1356, x4)
900015c8:	0000b537          	lui	a0,0xb
900015cc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
900015d0:	33352593          	slti	a1,a0,819
900015d4:	54b0a623          	sw	a1,1356(ra)

900015d8 <inst_363>:

inst_363:
// rs1_val==46341 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x666, x1, 1360, x4)
900015d8:	0000b537          	lui	a0,0xb
900015dc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
900015e0:	66652593          	slti	a1,a0,1638
900015e4:	54b0a823          	sw	a1,1360(ra)

900015e8 <inst_364>:

inst_364:
// rs1_val==46341 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, -0x2d, x1, 1364, x4)
900015e8:	0000b537          	lui	a0,0xb
900015ec:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
900015f0:	fd352593          	slti	a1,a0,-45
900015f4:	54b0aa23          	sw	a1,1364(ra)

900015f8 <inst_365>:

inst_365:
// rs1_val==46341 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x2d, x1, 1368, x4)
900015f8:	0000b537          	lui	a0,0xb
900015fc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
90001600:	02d52593          	slti	a1,a0,45
90001604:	54b0ac23          	sw	a1,1368(ra)

90001608 <inst_366>:

inst_366:
// rs1_val==46341 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x2, x1, 1372, x4)
90001608:	0000b537          	lui	a0,0xb
9000160c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
90001610:	00252593          	slti	a1,a0,2
90001614:	54b0ae23          	sw	a1,1372(ra)

90001618 <inst_367>:

inst_367:
// rs1_val==46341 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x554, x1, 1376, x4)
90001618:	0000b537          	lui	a0,0xb
9000161c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
90001620:	55452593          	slti	a1,a0,1364
90001624:	56b0a023          	sw	a1,1376(ra)

90001628 <inst_368>:

inst_368:
// rs1_val==46341 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x0, x1, 1380, x4)
90001628:	0000b537          	lui	a0,0xb
9000162c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
90001630:	00052593          	slti	a1,a0,0
90001634:	56b0a223          	sw	a1,1380(ra)

90001638 <inst_369>:

inst_369:
// rs1_val==46341 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x4, x1, 1384, x4)
90001638:	0000b537          	lui	a0,0xb
9000163c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
90001640:	00452593          	slti	a1,a0,4
90001644:	56b0a423          	sw	a1,1384(ra)

90001648 <inst_370>:

inst_370:
// rs1_val==46341 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x332, x1, 1388, x4)
90001648:	0000b537          	lui	a0,0xb
9000164c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
90001650:	33252593          	slti	a1,a0,818
90001654:	56b0a623          	sw	a1,1388(ra)

90001658 <inst_371>:

inst_371:
// rs1_val==46341 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x665, x1, 1392, x4)
90001658:	0000b537          	lui	a0,0xb
9000165c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
90001660:	66552593          	slti	a1,a0,1637
90001664:	56b0a823          	sw	a1,1392(ra)

90001668 <inst_372>:

inst_372:
// rs1_val==46341 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x2c, x1, 1396, x4)
90001668:	0000b537          	lui	a0,0xb
9000166c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
90001670:	02c52593          	slti	a1,a0,44
90001674:	56b0aa23          	sw	a1,1396(ra)

90001678 <inst_373>:

inst_373:
// rs1_val==46341 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x556, x1, 1400, x4)
90001678:	0000b537          	lui	a0,0xb
9000167c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
90001680:	55652593          	slti	a1,a0,1366
90001684:	56b0ac23          	sw	a1,1400(ra)

90001688 <inst_374>:

inst_374:
// rs1_val==46341 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, -0x555, x1, 1404, x4)
90001688:	0000b537          	lui	a0,0xb
9000168c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
90001690:	aab52593          	slti	a1,a0,-1365
90001694:	56b0ae23          	sw	a1,1404(ra)

90001698 <inst_375>:

inst_375:
// rs1_val==46341 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x6, x1, 1408, x4)
90001698:	0000b537          	lui	a0,0xb
9000169c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
900016a0:	00652593          	slti	a1,a0,6
900016a4:	58b0a023          	sw	a1,1408(ra)

900016a8 <inst_376>:

inst_376:
// rs1_val==46341 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x334, x1, 1412, x4)
900016a8:	0000b537          	lui	a0,0xb
900016ac:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
900016b0:	33452593          	slti	a1,a0,820
900016b4:	58b0a223          	sw	a1,1412(ra)

900016b8 <inst_377>:

inst_377:
// rs1_val==46341 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x667, x1, 1416, x4)
900016b8:	0000b537          	lui	a0,0xb
900016bc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
900016c0:	66752593          	slti	a1,a0,1639
900016c4:	58b0a423          	sw	a1,1416(ra)

900016c8 <inst_378>:

inst_378:
// rs1_val==46341 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, -0x2c, x1, 1420, x4)
900016c8:	0000b537          	lui	a0,0xb
900016cc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
900016d0:	fd452593          	slti	a1,a0,-44
900016d4:	58b0a623          	sw	a1,1420(ra)

900016d8 <inst_379>:

inst_379:
// rs1_val==46341 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb505, 0x2e, x1, 1424, x4)
900016d8:	0000b537          	lui	a0,0xb
900016dc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb4a1>
900016e0:	02e52593          	slti	a1,a0,46
900016e4:	58b0a823          	sw	a1,1424(ra)

900016e8 <inst_380>:

inst_380:
// rs1_val==0 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x0, -0x2d, x1, 1428, x4)
900016e8:	00000513          	li	a0,0
900016ec:	fd352593          	slti	a1,a0,-45
900016f0:	58b0aa23          	sw	a1,1428(ra)

900016f4 <inst_381>:

inst_381:
// rs1_val==0 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x2d, x1, 1432, x4)
900016f4:	00000513          	li	a0,0
900016f8:	02d52593          	slti	a1,a0,45
900016fc:	58b0ac23          	sw	a1,1432(ra)

90001700 <inst_382>:

inst_382:
// rs1_val==0 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x554, x1, 1436, x4)
90001700:	00000513          	li	a0,0
90001704:	55452593          	slti	a1,a0,1364
90001708:	58b0ae23          	sw	a1,1436(ra)

9000170c <inst_383>:

inst_383:
// rs1_val==0 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x0, 0x0, x1, 1440, x4)
9000170c:	00000513          	li	a0,0
90001710:	00052593          	slti	a1,a0,0
90001714:	5ab0a023          	sw	a1,1440(ra)

90001718 <inst_384>:

inst_384:
// rs1_val==0 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x4, x1, 1444, x4)
90001718:	00000513          	li	a0,0
9000171c:	00452593          	slti	a1,a0,4
90001720:	5ab0a223          	sw	a1,1444(ra)

90001724 <inst_385>:

inst_385:
// rs1_val==0 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x332, x1, 1448, x4)
90001724:	00000513          	li	a0,0
90001728:	33252593          	slti	a1,a0,818
9000172c:	5ab0a423          	sw	a1,1448(ra)

90001730 <inst_386>:

inst_386:
// rs1_val==0 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x665, x1, 1452, x4)
90001730:	00000513          	li	a0,0
90001734:	66552593          	slti	a1,a0,1637
90001738:	5ab0a623          	sw	a1,1452(ra)

9000173c <inst_387>:

inst_387:
// rs1_val==0 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x2c, x1, 1456, x4)
9000173c:	00000513          	li	a0,0
90001740:	02c52593          	slti	a1,a0,44
90001744:	5ab0a823          	sw	a1,1456(ra)

90001748 <inst_388>:

inst_388:
// rs1_val==0 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x556, x1, 1460, x4)
90001748:	00000513          	li	a0,0
9000174c:	55652593          	slti	a1,a0,1366
90001750:	5ab0aa23          	sw	a1,1460(ra)

90001754 <inst_389>:

inst_389:
// rs1_val==0 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x0, -0x555, x1, 1464, x4)
90001754:	00000513          	li	a0,0
90001758:	aab52593          	slti	a1,a0,-1365
9000175c:	5ab0ac23          	sw	a1,1464(ra)

90001760 <inst_390>:

inst_390:
// rs1_val==0 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x6, x1, 1468, x4)
90001760:	00000513          	li	a0,0
90001764:	00652593          	slti	a1,a0,6
90001768:	5ab0ae23          	sw	a1,1468(ra)

9000176c <inst_391>:

inst_391:
// rs1_val==0 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x334, x1, 1472, x4)
9000176c:	00000513          	li	a0,0
90001770:	33452593          	slti	a1,a0,820
90001774:	5cb0a023          	sw	a1,1472(ra)

90001778 <inst_392>:

inst_392:
// rs1_val==0 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x667, x1, 1476, x4)
90001778:	00000513          	li	a0,0
9000177c:	66752593          	slti	a1,a0,1639
90001780:	5cb0a223          	sw	a1,1476(ra)

90001784 <inst_393>:

inst_393:
// rs1_val==0 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x0, -0x2c, x1, 1480, x4)
90001784:	00000513          	li	a0,0
90001788:	fd452593          	slti	a1,a0,-44
9000178c:	5cb0a423          	sw	a1,1480(ra)

90001790 <inst_394>:

inst_394:
// rs1_val==0 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x0;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x1, 0x0, 0x2e, x1, 1484, x4)
90001790:	00000513          	li	a0,0
90001794:	02e52593          	slti	a1,a0,46
90001798:	5cb0a623          	sw	a1,1484(ra)

9000179c <inst_395>:

inst_395:
// rs1_val==4 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x4, 0x3, x1, 1488, x4)
9000179c:	00400513          	li	a0,4
900017a0:	00352593          	slti	a1,a0,3
900017a4:	5cb0a823          	sw	a1,1488(ra)

900017a8 <inst_396>:

inst_396:
// rs1_val==4 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x4, -0x556, x1, 1492, x4)
900017a8:	00400513          	li	a0,4
900017ac:	aaa52593          	slti	a1,a0,-1366
900017b0:	5cb0aa23          	sw	a1,1492(ra)

900017b4 <inst_397>:

inst_397:
// rs1_val==4 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x5, x1, 1496, x4)
900017b4:	00400513          	li	a0,4
900017b8:	00552593          	slti	a1,a0,5
900017bc:	5cb0ac23          	sw	a1,1496(ra)

900017c0 <inst_398>:

inst_398:
// rs1_val==4 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x333, x1, 1500, x4)
900017c0:	00400513          	li	a0,4
900017c4:	33352593          	slti	a1,a0,819
900017c8:	5cb0ae23          	sw	a1,1500(ra)

900017cc <inst_399>:

inst_399:
// rs1_val==4 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x666, x1, 1504, x4)
900017cc:	00400513          	li	a0,4
900017d0:	66652593          	slti	a1,a0,1638
900017d4:	5eb0a023          	sw	a1,1504(ra)

900017d8 <inst_400>:

inst_400:
// rs1_val==4 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x4, -0x2d, x1, 1508, x4)
900017d8:	00400513          	li	a0,4
900017dc:	fd352593          	slti	a1,a0,-45
900017e0:	5eb0a223          	sw	a1,1508(ra)

900017e4 <inst_401>:

inst_401:
// rs1_val==4 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x2d, x1, 1512, x4)
900017e4:	00400513          	li	a0,4
900017e8:	02d52593          	slti	a1,a0,45
900017ec:	5eb0a423          	sw	a1,1512(ra)

900017f0 <inst_402>:

inst_402:
// rs1_val==4 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x4, 0x2, x1, 1516, x4)
900017f0:	00400513          	li	a0,4
900017f4:	00252593          	slti	a1,a0,2
900017f8:	5eb0a623          	sw	a1,1516(ra)

900017fc <inst_403>:

inst_403:
// rs1_val==4 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x554, x1, 1520, x4)
900017fc:	00400513          	li	a0,4
90001800:	55452593          	slti	a1,a0,1364
90001804:	5eb0a823          	sw	a1,1520(ra)

90001808 <inst_404>:

inst_404:
// rs1_val==4 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x4, 0x0, x1, 1524, x4)
90001808:	00400513          	li	a0,4
9000180c:	00052593          	slti	a1,a0,0
90001810:	5eb0aa23          	sw	a1,1524(ra)

90001814 <inst_405>:

inst_405:
// rs1_val==4 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0x4, 0x4, x1, 1528, x4)
90001814:	00400513          	li	a0,4
90001818:	00452593          	slti	a1,a0,4
9000181c:	5eb0ac23          	sw	a1,1528(ra)

90001820 <inst_406>:

inst_406:
// rs1_val==4 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x332, x1, 1532, x4)
90001820:	00400513          	li	a0,4
90001824:	33252593          	slti	a1,a0,818
90001828:	5eb0ae23          	sw	a1,1532(ra)

9000182c <inst_407>:

inst_407:
// rs1_val==4 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x665, x1, 1536, x4)
9000182c:	00400513          	li	a0,4
90001830:	66552593          	slti	a1,a0,1637
90001834:	60b0a023          	sw	a1,1536(ra)

90001838 <inst_408>:

inst_408:
// rs1_val==4 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x2c, x1, 1540, x4)
90001838:	00400513          	li	a0,4
9000183c:	02c52593          	slti	a1,a0,44
90001840:	60b0a223          	sw	a1,1540(ra)

90001844 <inst_409>:

inst_409:
// rs1_val==4 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x556, x1, 1544, x4)
90001844:	00400513          	li	a0,4
90001848:	55652593          	slti	a1,a0,1366
9000184c:	60b0a423          	sw	a1,1544(ra)

90001850 <inst_410>:

inst_410:
// rs1_val==4 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x4, -0x555, x1, 1548, x4)
90001850:	00400513          	li	a0,4
90001854:	aab52593          	slti	a1,a0,-1365
90001858:	60b0a623          	sw	a1,1548(ra)

9000185c <inst_411>:

inst_411:
// rs1_val==4 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x6, x1, 1552, x4)
9000185c:	00400513          	li	a0,4
90001860:	00652593          	slti	a1,a0,6
90001864:	60b0a823          	sw	a1,1552(ra)

90001868 <inst_412>:

inst_412:
// rs1_val==4 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x334, x1, 1556, x4)
90001868:	00400513          	li	a0,4
9000186c:	33452593          	slti	a1,a0,820
90001870:	60b0aa23          	sw	a1,1556(ra)

90001874 <inst_413>:

inst_413:
// rs1_val==4 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x667, x1, 1560, x4)
90001874:	00400513          	li	a0,4
90001878:	66752593          	slti	a1,a0,1639
9000187c:	60b0ac23          	sw	a1,1560(ra)

90001880 <inst_414>:

inst_414:
// rs1_val==4 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x4, -0x2c, x1, 1564, x4)
90001880:	00400513          	li	a0,4
90001884:	fd452593          	slti	a1,a0,-44
90001888:	60b0ae23          	sw	a1,1564(ra)

9000188c <inst_415>:

inst_415:
// rs1_val==4 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x4;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x1, 0x4, 0x2e, x1, 1568, x4)
9000188c:	00400513          	li	a0,4
90001890:	02e52593          	slti	a1,a0,46
90001894:	62b0a023          	sw	a1,1568(ra)

90001898 <inst_416>:

inst_416:
// rs1_val==858993458 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x3, x1, 1572, x4)
90001898:	33333537          	lui	a0,0x33333
9000189c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900018a0:	00352593          	slti	a1,a0,3
900018a4:	62b0a223          	sw	a1,1572(ra)

900018a8 <inst_417>:

inst_417:
// rs1_val==858993458 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x555, x1, 1576, x4)
900018a8:	33333537          	lui	a0,0x33333
900018ac:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900018b0:	55552593          	slti	a1,a0,1365
900018b4:	62b0a423          	sw	a1,1576(ra)

900018b8 <inst_418>:

inst_418:
// rs1_val==858993458 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, -0x556, x1, 1580, x4)
900018b8:	33333537          	lui	a0,0x33333
900018bc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900018c0:	aaa52593          	slti	a1,a0,-1366
900018c4:	62b0a623          	sw	a1,1580(ra)

900018c8 <inst_419>:

inst_419:
// rs1_val==858993458 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x5, x1, 1584, x4)
900018c8:	33333537          	lui	a0,0x33333
900018cc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900018d0:	00552593          	slti	a1,a0,5
900018d4:	62b0a823          	sw	a1,1584(ra)

900018d8 <inst_420>:

inst_420:
// rs1_val==858993458 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x333, x1, 1588, x4)
900018d8:	33333537          	lui	a0,0x33333
900018dc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900018e0:	33352593          	slti	a1,a0,819
900018e4:	62b0aa23          	sw	a1,1588(ra)

900018e8 <inst_421>:

inst_421:
// rs1_val==858993458 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x666, x1, 1592, x4)
900018e8:	33333537          	lui	a0,0x33333
900018ec:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900018f0:	66652593          	slti	a1,a0,1638
900018f4:	62b0ac23          	sw	a1,1592(ra)

900018f8 <inst_422>:

inst_422:
// rs1_val==858993458 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, -0x2d, x1, 1596, x4)
900018f8:	33333537          	lui	a0,0x33333
900018fc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
90001900:	fd352593          	slti	a1,a0,-45
90001904:	62b0ae23          	sw	a1,1596(ra)

90001908 <inst_423>:

inst_423:
// rs1_val==858993458 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x2d, x1, 1600, x4)
90001908:	33333537          	lui	a0,0x33333
9000190c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
90001910:	02d52593          	slti	a1,a0,45
90001914:	64b0a023          	sw	a1,1600(ra)

90001918 <inst_424>:

inst_424:
// rs1_val==858993458 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x2, x1, 1604, x4)
90001918:	33333537          	lui	a0,0x33333
9000191c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
90001920:	00252593          	slti	a1,a0,2
90001924:	64b0a223          	sw	a1,1604(ra)

90001928 <inst_425>:

inst_425:
// rs1_val==858993458 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x554, x1, 1608, x4)
90001928:	33333537          	lui	a0,0x33333
9000192c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
90001930:	55452593          	slti	a1,a0,1364
90001934:	64b0a423          	sw	a1,1608(ra)

90001938 <inst_426>:

inst_426:
// rs1_val==858993458 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x0, x1, 1612, x4)
90001938:	33333537          	lui	a0,0x33333
9000193c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
90001940:	00052593          	slti	a1,a0,0
90001944:	64b0a623          	sw	a1,1612(ra)

90001948 <inst_427>:

inst_427:
// rs1_val==858993458 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x4, x1, 1616, x4)
90001948:	33333537          	lui	a0,0x33333
9000194c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
90001950:	00452593          	slti	a1,a0,4
90001954:	64b0a823          	sw	a1,1616(ra)

90001958 <inst_428>:

inst_428:
// rs1_val==858993458 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x332, x1, 1620, x4)
90001958:	33333537          	lui	a0,0x33333
9000195c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
90001960:	33252593          	slti	a1,a0,818
90001964:	64b0aa23          	sw	a1,1620(ra)

90001968 <inst_429>:

inst_429:
// rs1_val==858993458 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x665, x1, 1624, x4)
90001968:	33333537          	lui	a0,0x33333
9000196c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
90001970:	66552593          	slti	a1,a0,1637
90001974:	64b0ac23          	sw	a1,1624(ra)

90001978 <inst_430>:

inst_430:
// rs1_val==858993458 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x2c, x1, 1628, x4)
90001978:	33333537          	lui	a0,0x33333
9000197c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
90001980:	02c52593          	slti	a1,a0,44
90001984:	64b0ae23          	sw	a1,1628(ra)

90001988 <inst_431>:

inst_431:
// rs1_val==858993458 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x556, x1, 1632, x4)
90001988:	33333537          	lui	a0,0x33333
9000198c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
90001990:	55652593          	slti	a1,a0,1366
90001994:	66b0a023          	sw	a1,1632(ra)

90001998 <inst_432>:

inst_432:
// rs1_val==858993458 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, -0x555, x1, 1636, x4)
90001998:	33333537          	lui	a0,0x33333
9000199c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900019a0:	aab52593          	slti	a1,a0,-1365
900019a4:	66b0a223          	sw	a1,1636(ra)

900019a8 <inst_433>:

inst_433:
// rs1_val==858993458 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x6, x1, 1640, x4)
900019a8:	33333537          	lui	a0,0x33333
900019ac:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900019b0:	00652593          	slti	a1,a0,6
900019b4:	66b0a423          	sw	a1,1640(ra)

900019b8 <inst_434>:

inst_434:
// rs1_val==858993458 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x334, x1, 1644, x4)
900019b8:	33333537          	lui	a0,0x33333
900019bc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900019c0:	33452593          	slti	a1,a0,820
900019c4:	66b0a623          	sw	a1,1644(ra)

900019c8 <inst_435>:

inst_435:
// rs1_val==858993458 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x667, x1, 1648, x4)
900019c8:	33333537          	lui	a0,0x33333
900019cc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900019d0:	66752593          	slti	a1,a0,1639
900019d4:	66b0a823          	sw	a1,1648(ra)

900019d8 <inst_436>:

inst_436:
// rs1_val==858993458 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, -0x2c, x1, 1652, x4)
900019d8:	33333537          	lui	a0,0x33333
900019dc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900019e0:	fd452593          	slti	a1,a0,-44
900019e4:	66b0aa23          	sw	a1,1652(ra)

900019e8 <inst_437>:

inst_437:
// rs1_val==858993458 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333332, 0x2e, x1, 1656, x4)
900019e8:	33333537          	lui	a0,0x33333
900019ec:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ce>
900019f0:	02e52593          	slti	a1,a0,46
900019f4:	66b0ac23          	sw	a1,1656(ra)

900019f8 <inst_438>:

inst_438:
// rs1_val==1717986917 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x3, x1, 1660, x4)
900019f8:	66666537          	lui	a0,0x66666
900019fc:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001a00:	00352593          	slti	a1,a0,3
90001a04:	66b0ae23          	sw	a1,1660(ra)

90001a08 <inst_439>:

inst_439:
// rs1_val==1717986917 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x555, x1, 1664, x4)
90001a08:	66666537          	lui	a0,0x66666
90001a0c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001a10:	55552593          	slti	a1,a0,1365
90001a14:	68b0a023          	sw	a1,1664(ra)

90001a18 <inst_440>:

inst_440:
// rs1_val==1717986917 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, -0x556, x1, 1668, x4)
90001a18:	66666537          	lui	a0,0x66666
90001a1c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001a20:	aaa52593          	slti	a1,a0,-1366
90001a24:	68b0a223          	sw	a1,1668(ra)

90001a28 <inst_441>:

inst_441:
// rs1_val==1717986917 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x5, x1, 1672, x4)
90001a28:	66666537          	lui	a0,0x66666
90001a2c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001a30:	00552593          	slti	a1,a0,5
90001a34:	68b0a423          	sw	a1,1672(ra)

90001a38 <inst_442>:

inst_442:
// rs1_val==1717986917 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x333, x1, 1676, x4)
90001a38:	66666537          	lui	a0,0x66666
90001a3c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001a40:	33352593          	slti	a1,a0,819
90001a44:	68b0a623          	sw	a1,1676(ra)

90001a48 <inst_443>:

inst_443:
// rs1_val==1717986917 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x666, x1, 1680, x4)
90001a48:	66666537          	lui	a0,0x66666
90001a4c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001a50:	66652593          	slti	a1,a0,1638
90001a54:	68b0a823          	sw	a1,1680(ra)

90001a58 <inst_444>:

inst_444:
// rs1_val==1717986917 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, -0x2d, x1, 1684, x4)
90001a58:	66666537          	lui	a0,0x66666
90001a5c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001a60:	fd352593          	slti	a1,a0,-45
90001a64:	68b0aa23          	sw	a1,1684(ra)

90001a68 <inst_445>:

inst_445:
// rs1_val==1717986917 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x2d, x1, 1688, x4)
90001a68:	66666537          	lui	a0,0x66666
90001a6c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001a70:	02d52593          	slti	a1,a0,45
90001a74:	68b0ac23          	sw	a1,1688(ra)

90001a78 <inst_446>:

inst_446:
// rs1_val==1717986917 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x2, x1, 1692, x4)
90001a78:	66666537          	lui	a0,0x66666
90001a7c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001a80:	00252593          	slti	a1,a0,2
90001a84:	68b0ae23          	sw	a1,1692(ra)

90001a88 <inst_447>:

inst_447:
// rs1_val==1717986917 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x554, x1, 1696, x4)
90001a88:	66666537          	lui	a0,0x66666
90001a8c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001a90:	55452593          	slti	a1,a0,1364
90001a94:	6ab0a023          	sw	a1,1696(ra)

90001a98 <inst_448>:

inst_448:
// rs1_val==1717986917 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x0, x1, 1700, x4)
90001a98:	66666537          	lui	a0,0x66666
90001a9c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001aa0:	00052593          	slti	a1,a0,0
90001aa4:	6ab0a223          	sw	a1,1700(ra)

90001aa8 <inst_449>:

inst_449:
// rs1_val==1717986917 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x4, x1, 1704, x4)
90001aa8:	66666537          	lui	a0,0x66666
90001aac:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001ab0:	00452593          	slti	a1,a0,4
90001ab4:	6ab0a423          	sw	a1,1704(ra)

90001ab8 <inst_450>:

inst_450:
// rs1_val==1717986917 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x332, x1, 1708, x4)
90001ab8:	66666537          	lui	a0,0x66666
90001abc:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001ac0:	33252593          	slti	a1,a0,818
90001ac4:	6ab0a623          	sw	a1,1708(ra)

90001ac8 <inst_451>:

inst_451:
// rs1_val==1717986917 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x665, x1, 1712, x4)
90001ac8:	66666537          	lui	a0,0x66666
90001acc:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001ad0:	66552593          	slti	a1,a0,1637
90001ad4:	6ab0a823          	sw	a1,1712(ra)

90001ad8 <inst_452>:

inst_452:
// rs1_val==1717986917 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x2c, x1, 1716, x4)
90001ad8:	66666537          	lui	a0,0x66666
90001adc:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001ae0:	02c52593          	slti	a1,a0,44
90001ae4:	6ab0aa23          	sw	a1,1716(ra)

90001ae8 <inst_453>:

inst_453:
// rs1_val==1717986917 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x556, x1, 1720, x4)
90001ae8:	66666537          	lui	a0,0x66666
90001aec:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001af0:	55652593          	slti	a1,a0,1366
90001af4:	6ab0ac23          	sw	a1,1720(ra)

90001af8 <inst_454>:

inst_454:
// rs1_val==1717986917 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, -0x555, x1, 1724, x4)
90001af8:	66666537          	lui	a0,0x66666
90001afc:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001b00:	aab52593          	slti	a1,a0,-1365
90001b04:	6ab0ae23          	sw	a1,1724(ra)

90001b08 <inst_455>:

inst_455:
// rs1_val==1717986917 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x6, x1, 1728, x4)
90001b08:	66666537          	lui	a0,0x66666
90001b0c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001b10:	00652593          	slti	a1,a0,6
90001b14:	6cb0a023          	sw	a1,1728(ra)

90001b18 <inst_456>:

inst_456:
// rs1_val==1717986917 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x334, x1, 1732, x4)
90001b18:	66666537          	lui	a0,0x66666
90001b1c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001b20:	33452593          	slti	a1,a0,820
90001b24:	6cb0a223          	sw	a1,1732(ra)

90001b28 <inst_457>:

inst_457:
// rs1_val==1717986917 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x667, x1, 1736, x4)
90001b28:	66666537          	lui	a0,0x66666
90001b2c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001b30:	66752593          	slti	a1,a0,1639
90001b34:	6cb0a423          	sw	a1,1736(ra)

90001b38 <inst_458>:

inst_458:
// rs1_val==1717986917 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, -0x2c, x1, 1740, x4)
90001b38:	66666537          	lui	a0,0x66666
90001b3c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001b40:	fd452593          	slti	a1,a0,-44
90001b44:	6cb0a623          	sw	a1,1740(ra)

90001b48 <inst_459>:

inst_459:
// rs1_val==1717986917 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0x66666665, 0x2e, x1, 1744, x4)
90001b48:	66666537          	lui	a0,0x66666
90001b4c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666601>
90001b50:	02e52593          	slti	a1,a0,46
90001b54:	6cb0a823          	sw	a1,1744(ra)

90001b58 <inst_460>:

inst_460:
// rs1_val==46339 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x3, x1, 1748, x4)
90001b58:	0000b537          	lui	a0,0xb
90001b5c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001b60:	00352593          	slti	a1,a0,3
90001b64:	6cb0aa23          	sw	a1,1748(ra)

90001b68 <inst_461>:

inst_461:
// rs1_val==46339 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x555, x1, 1752, x4)
90001b68:	0000b537          	lui	a0,0xb
90001b6c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001b70:	55552593          	slti	a1,a0,1365
90001b74:	6cb0ac23          	sw	a1,1752(ra)

90001b78 <inst_462>:

inst_462:
// rs1_val==46339 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, -0x556, x1, 1756, x4)
90001b78:	0000b537          	lui	a0,0xb
90001b7c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001b80:	aaa52593          	slti	a1,a0,-1366
90001b84:	6cb0ae23          	sw	a1,1756(ra)

90001b88 <inst_463>:

inst_463:
// rs1_val==46339 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x5, x1, 1760, x4)
90001b88:	0000b537          	lui	a0,0xb
90001b8c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001b90:	00552593          	slti	a1,a0,5
90001b94:	6eb0a023          	sw	a1,1760(ra)

90001b98 <inst_464>:

inst_464:
// rs1_val==46339 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x333, x1, 1764, x4)
90001b98:	0000b537          	lui	a0,0xb
90001b9c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001ba0:	33352593          	slti	a1,a0,819
90001ba4:	6eb0a223          	sw	a1,1764(ra)

90001ba8 <inst_465>:

inst_465:
// rs1_val==46339 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x666, x1, 1768, x4)
90001ba8:	0000b537          	lui	a0,0xb
90001bac:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001bb0:	66652593          	slti	a1,a0,1638
90001bb4:	6eb0a423          	sw	a1,1768(ra)

90001bb8 <inst_466>:

inst_466:
// rs1_val==46339 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, -0x2d, x1, 1772, x4)
90001bb8:	0000b537          	lui	a0,0xb
90001bbc:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001bc0:	fd352593          	slti	a1,a0,-45
90001bc4:	6eb0a623          	sw	a1,1772(ra)

90001bc8 <inst_467>:

inst_467:
// rs1_val==46339 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x2d, x1, 1776, x4)
90001bc8:	0000b537          	lui	a0,0xb
90001bcc:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001bd0:	02d52593          	slti	a1,a0,45
90001bd4:	6eb0a823          	sw	a1,1776(ra)

90001bd8 <inst_468>:

inst_468:
// rs1_val==46339 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x2, x1, 1780, x4)
90001bd8:	0000b537          	lui	a0,0xb
90001bdc:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001be0:	00252593          	slti	a1,a0,2
90001be4:	6eb0aa23          	sw	a1,1780(ra)

90001be8 <inst_469>:

inst_469:
// rs1_val==46339 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x554, x1, 1784, x4)
90001be8:	0000b537          	lui	a0,0xb
90001bec:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001bf0:	55452593          	slti	a1,a0,1364
90001bf4:	6eb0ac23          	sw	a1,1784(ra)

90001bf8 <inst_470>:

inst_470:
// rs1_val==46339 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x0, x1, 1788, x4)
90001bf8:	0000b537          	lui	a0,0xb
90001bfc:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001c00:	00052593          	slti	a1,a0,0
90001c04:	6eb0ae23          	sw	a1,1788(ra)

90001c08 <inst_471>:

inst_471:
// rs1_val==46339 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x4, x1, 1792, x4)
90001c08:	0000b537          	lui	a0,0xb
90001c0c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001c10:	00452593          	slti	a1,a0,4
90001c14:	70b0a023          	sw	a1,1792(ra)

90001c18 <inst_472>:

inst_472:
// rs1_val==46339 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x332, x1, 1796, x4)
90001c18:	0000b537          	lui	a0,0xb
90001c1c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001c20:	33252593          	slti	a1,a0,818
90001c24:	70b0a223          	sw	a1,1796(ra)

90001c28 <inst_473>:

inst_473:
// rs1_val==46339 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x665, x1, 1800, x4)
90001c28:	0000b537          	lui	a0,0xb
90001c2c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001c30:	66552593          	slti	a1,a0,1637
90001c34:	70b0a423          	sw	a1,1800(ra)

90001c38 <inst_474>:

inst_474:
// rs1_val==46339 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x2c, x1, 1804, x4)
90001c38:	0000b537          	lui	a0,0xb
90001c3c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001c40:	02c52593          	slti	a1,a0,44
90001c44:	70b0a623          	sw	a1,1804(ra)

90001c48 <inst_475>:

inst_475:
// rs1_val==46339 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x556, x1, 1808, x4)
90001c48:	0000b537          	lui	a0,0xb
90001c4c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001c50:	55652593          	slti	a1,a0,1366
90001c54:	70b0a823          	sw	a1,1808(ra)

90001c58 <inst_476>:

inst_476:
// rs1_val==46339 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, -0x555, x1, 1812, x4)
90001c58:	0000b537          	lui	a0,0xb
90001c5c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001c60:	aab52593          	slti	a1,a0,-1365
90001c64:	70b0aa23          	sw	a1,1812(ra)

90001c68 <inst_477>:

inst_477:
// rs1_val==46339 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x6, x1, 1816, x4)
90001c68:	0000b537          	lui	a0,0xb
90001c6c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001c70:	00652593          	slti	a1,a0,6
90001c74:	70b0ac23          	sw	a1,1816(ra)

90001c78 <inst_478>:

inst_478:
// rs1_val==46339 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x334, x1, 1820, x4)
90001c78:	0000b537          	lui	a0,0xb
90001c7c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001c80:	33452593          	slti	a1,a0,820
90001c84:	70b0ae23          	sw	a1,1820(ra)

90001c88 <inst_479>:

inst_479:
// rs1_val==46339 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x667, x1, 1824, x4)
90001c88:	0000b537          	lui	a0,0xb
90001c8c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001c90:	66752593          	slti	a1,a0,1639
90001c94:	72b0a023          	sw	a1,1824(ra)

90001c98 <inst_480>:

inst_480:
// rs1_val==46339 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, -0x2c, x1, 1828, x4)
90001c98:	0000b537          	lui	a0,0xb
90001c9c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001ca0:	fd452593          	slti	a1,a0,-44
90001ca4:	72b0a223          	sw	a1,1828(ra)

90001ca8 <inst_481>:

inst_481:
// rs1_val==46339 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0xb503, 0x2e, x1, 1832, x4)
90001ca8:	0000b537          	lui	a0,0xb
90001cac:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49f>
90001cb0:	02e52593          	slti	a1,a0,46
90001cb4:	72b0a423          	sw	a1,1832(ra)

90001cb8 <inst_482>:

inst_482:
// rs1_val==1431655766 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x3, x1, 1836, x4)
90001cb8:	55555537          	lui	a0,0x55555
90001cbc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001cc0:	00352593          	slti	a1,a0,3
90001cc4:	72b0a623          	sw	a1,1836(ra)

90001cc8 <inst_483>:

inst_483:
// rs1_val==1431655766 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x555, x1, 1840, x4)
90001cc8:	55555537          	lui	a0,0x55555
90001ccc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001cd0:	55552593          	slti	a1,a0,1365
90001cd4:	72b0a823          	sw	a1,1840(ra)

90001cd8 <inst_484>:

inst_484:
// rs1_val==1431655766 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, -0x556, x1, 1844, x4)
90001cd8:	55555537          	lui	a0,0x55555
90001cdc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001ce0:	aaa52593          	slti	a1,a0,-1366
90001ce4:	72b0aa23          	sw	a1,1844(ra)

90001ce8 <inst_485>:

inst_485:
// rs1_val==1431655766 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x5, x1, 1848, x4)
90001ce8:	55555537          	lui	a0,0x55555
90001cec:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001cf0:	00552593          	slti	a1,a0,5
90001cf4:	72b0ac23          	sw	a1,1848(ra)

90001cf8 <inst_486>:

inst_486:
// rs1_val==1431655766 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x333, x1, 1852, x4)
90001cf8:	55555537          	lui	a0,0x55555
90001cfc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001d00:	33352593          	slti	a1,a0,819
90001d04:	72b0ae23          	sw	a1,1852(ra)

90001d08 <inst_487>:

inst_487:
// rs1_val==1431655766 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x666, x1, 1856, x4)
90001d08:	55555537          	lui	a0,0x55555
90001d0c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001d10:	66652593          	slti	a1,a0,1638
90001d14:	74b0a023          	sw	a1,1856(ra)

90001d18 <inst_488>:

inst_488:
// rs1_val==1431655766 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, -0x2d, x1, 1860, x4)
90001d18:	55555537          	lui	a0,0x55555
90001d1c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001d20:	fd352593          	slti	a1,a0,-45
90001d24:	74b0a223          	sw	a1,1860(ra)

90001d28 <inst_489>:

inst_489:
// rs1_val==1431655766 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x2d, x1, 1864, x4)
90001d28:	55555537          	lui	a0,0x55555
90001d2c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001d30:	02d52593          	slti	a1,a0,45
90001d34:	74b0a423          	sw	a1,1864(ra)

90001d38 <inst_490>:

inst_490:
// rs1_val==1431655766 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x2, x1, 1868, x4)
90001d38:	55555537          	lui	a0,0x55555
90001d3c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001d40:	00252593          	slti	a1,a0,2
90001d44:	74b0a623          	sw	a1,1868(ra)

90001d48 <inst_491>:

inst_491:
// rs1_val==1431655766 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x554, x1, 1872, x4)
90001d48:	55555537          	lui	a0,0x55555
90001d4c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001d50:	55452593          	slti	a1,a0,1364
90001d54:	74b0a823          	sw	a1,1872(ra)

90001d58 <inst_492>:

inst_492:
// rs1_val==1431655766 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x0, x1, 1876, x4)
90001d58:	55555537          	lui	a0,0x55555
90001d5c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001d60:	00052593          	slti	a1,a0,0
90001d64:	74b0aa23          	sw	a1,1876(ra)

90001d68 <inst_493>:

inst_493:
// rs1_val==1431655766 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x4, x1, 1880, x4)
90001d68:	55555537          	lui	a0,0x55555
90001d6c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001d70:	00452593          	slti	a1,a0,4
90001d74:	74b0ac23          	sw	a1,1880(ra)

90001d78 <inst_494>:

inst_494:
// rs1_val==1431655766 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x332, x1, 1884, x4)
90001d78:	55555537          	lui	a0,0x55555
90001d7c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001d80:	33252593          	slti	a1,a0,818
90001d84:	74b0ae23          	sw	a1,1884(ra)

90001d88 <inst_495>:

inst_495:
// rs1_val==1431655766 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x665, x1, 1888, x4)
90001d88:	55555537          	lui	a0,0x55555
90001d8c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001d90:	66552593          	slti	a1,a0,1637
90001d94:	76b0a023          	sw	a1,1888(ra)

90001d98 <inst_496>:

inst_496:
// rs1_val==1431655766 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x2c, x1, 1892, x4)
90001d98:	55555537          	lui	a0,0x55555
90001d9c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001da0:	02c52593          	slti	a1,a0,44
90001da4:	76b0a223          	sw	a1,1892(ra)

90001da8 <inst_497>:

inst_497:
// rs1_val==1431655766 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x556, x1, 1896, x4)
90001da8:	55555537          	lui	a0,0x55555
90001dac:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001db0:	55652593          	slti	a1,a0,1366
90001db4:	76b0a423          	sw	a1,1896(ra)

90001db8 <inst_498>:

inst_498:
// rs1_val==1431655766 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, -0x555, x1, 1900, x4)
90001db8:	55555537          	lui	a0,0x55555
90001dbc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001dc0:	aab52593          	slti	a1,a0,-1365
90001dc4:	76b0a623          	sw	a1,1900(ra)

90001dc8 <inst_499>:

inst_499:
// rs1_val==1431655766 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x6, x1, 1904, x4)
90001dc8:	55555537          	lui	a0,0x55555
90001dcc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001dd0:	00652593          	slti	a1,a0,6
90001dd4:	76b0a823          	sw	a1,1904(ra)

90001dd8 <inst_500>:

inst_500:
// rs1_val==1431655766 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x334, x1, 1908, x4)
90001dd8:	55555537          	lui	a0,0x55555
90001ddc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001de0:	33452593          	slti	a1,a0,820
90001de4:	76b0aa23          	sw	a1,1908(ra)

90001de8 <inst_501>:

inst_501:
// rs1_val==1431655766 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x667, x1, 1912, x4)
90001de8:	55555537          	lui	a0,0x55555
90001dec:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001df0:	66752593          	slti	a1,a0,1639
90001df4:	76b0ac23          	sw	a1,1912(ra)

90001df8 <inst_502>:

inst_502:
// rs1_val==1431655766 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, -0x2c, x1, 1916, x4)
90001df8:	55555537          	lui	a0,0x55555
90001dfc:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001e00:	fd452593          	slti	a1,a0,-44
90001e04:	76b0ae23          	sw	a1,1916(ra)

90001e08 <inst_503>:

inst_503:
// rs1_val==1431655766 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x0, 0x55555556, 0x2e, x1, 1920, x4)
90001e08:	55555537          	lui	a0,0x55555
90001e0c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554f2>
90001e10:	02e52593          	slti	a1,a0,46
90001e14:	78b0a023          	sw	a1,1920(ra)

90001e18 <inst_504>:

inst_504:
// rs1_val==-1431655765 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x3, x1, 1924, x4)
90001e18:	aaaab537          	lui	a0,0xaaaab
90001e1c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e20:	00352593          	slti	a1,a0,3
90001e24:	78b0a223          	sw	a1,1924(ra)

90001e28 <inst_505>:

inst_505:
// rs1_val==-1431655765 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x555, x1, 1928, x4)
90001e28:	aaaab537          	lui	a0,0xaaaab
90001e2c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e30:	55552593          	slti	a1,a0,1365
90001e34:	78b0a423          	sw	a1,1928(ra)

90001e38 <inst_506>:

inst_506:
// rs1_val==-1431655765 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, -0x556, x1, 1932, x4)
90001e38:	aaaab537          	lui	a0,0xaaaab
90001e3c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e40:	aaa52593          	slti	a1,a0,-1366
90001e44:	78b0a623          	sw	a1,1932(ra)

90001e48 <inst_507>:

inst_507:
// rs1_val==-1431655765 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x5, x1, 1936, x4)
90001e48:	aaaab537          	lui	a0,0xaaaab
90001e4c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e50:	00552593          	slti	a1,a0,5
90001e54:	78b0a823          	sw	a1,1936(ra)

90001e58 <inst_508>:

inst_508:
// rs1_val==-1431655765 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x333, x1, 1940, x4)
90001e58:	aaaab537          	lui	a0,0xaaaab
90001e5c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e60:	33352593          	slti	a1,a0,819
90001e64:	78b0aa23          	sw	a1,1940(ra)

90001e68 <inst_509>:

inst_509:
// rs1_val==-1431655765 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x666, x1, 1944, x4)
90001e68:	aaaab537          	lui	a0,0xaaaab
90001e6c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e70:	66652593          	slti	a1,a0,1638
90001e74:	78b0ac23          	sw	a1,1944(ra)

90001e78 <inst_510>:

inst_510:
// rs1_val==-1431655765 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, -0x2d, x1, 1948, x4)
90001e78:	aaaab537          	lui	a0,0xaaaab
90001e7c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e80:	fd352593          	slti	a1,a0,-45
90001e84:	78b0ae23          	sw	a1,1948(ra)

90001e88 <inst_511>:

inst_511:
// rs1_val==-1431655765 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x2d, x1, 1952, x4)
90001e88:	aaaab537          	lui	a0,0xaaaab
90001e8c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e90:	02d52593          	slti	a1,a0,45
90001e94:	7ab0a023          	sw	a1,1952(ra)

90001e98 <inst_512>:

inst_512:
// rs1_val==-1431655765 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x2, x1, 1956, x4)
90001e98:	aaaab537          	lui	a0,0xaaaab
90001e9c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001ea0:	00252593          	slti	a1,a0,2
90001ea4:	7ab0a223          	sw	a1,1956(ra)

90001ea8 <inst_513>:

inst_513:
// rs1_val==-1431655765 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x554, x1, 1960, x4)
90001ea8:	aaaab537          	lui	a0,0xaaaab
90001eac:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001eb0:	55452593          	slti	a1,a0,1364
90001eb4:	7ab0a423          	sw	a1,1960(ra)

90001eb8 <inst_514>:

inst_514:
// rs1_val==-1431655765 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x0, x1, 1964, x4)
90001eb8:	aaaab537          	lui	a0,0xaaaab
90001ebc:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001ec0:	00052593          	slti	a1,a0,0
90001ec4:	7ab0a623          	sw	a1,1964(ra)

90001ec8 <inst_515>:

inst_515:
// rs1_val==-1431655765 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x4, x1, 1968, x4)
90001ec8:	aaaab537          	lui	a0,0xaaaab
90001ecc:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001ed0:	00452593          	slti	a1,a0,4
90001ed4:	7ab0a823          	sw	a1,1968(ra)

90001ed8 <inst_516>:

inst_516:
// rs1_val==-1431655765 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x332, x1, 1972, x4)
90001ed8:	aaaab537          	lui	a0,0xaaaab
90001edc:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001ee0:	33252593          	slti	a1,a0,818
90001ee4:	7ab0aa23          	sw	a1,1972(ra)

90001ee8 <inst_517>:

inst_517:
// rs1_val==-1431655765 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x665, x1, 1976, x4)
90001ee8:	aaaab537          	lui	a0,0xaaaab
90001eec:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001ef0:	66552593          	slti	a1,a0,1637
90001ef4:	7ab0ac23          	sw	a1,1976(ra)

90001ef8 <inst_518>:

inst_518:
// rs1_val==-1431655765 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x2c, x1, 1980, x4)
90001ef8:	aaaab537          	lui	a0,0xaaaab
90001efc:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f00:	02c52593          	slti	a1,a0,44
90001f04:	7ab0ae23          	sw	a1,1980(ra)

90001f08 <inst_519>:

inst_519:
// rs1_val==-1431655765 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x556, x1, 1984, x4)
90001f08:	aaaab537          	lui	a0,0xaaaab
90001f0c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f10:	55652593          	slti	a1,a0,1366
90001f14:	7cb0a023          	sw	a1,1984(ra)

90001f18 <inst_520>:

inst_520:
// rs1_val==-1431655765 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, -0x555, x1, 1988, x4)
90001f18:	aaaab537          	lui	a0,0xaaaab
90001f1c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f20:	aab52593          	slti	a1,a0,-1365
90001f24:	7cb0a223          	sw	a1,1988(ra)

90001f28 <inst_521>:

inst_521:
// rs1_val==-1431655765 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x6, x1, 1992, x4)
90001f28:	aaaab537          	lui	a0,0xaaaab
90001f2c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f30:	00652593          	slti	a1,a0,6
90001f34:	7cb0a423          	sw	a1,1992(ra)

90001f38 <inst_522>:

inst_522:
// rs1_val==-1431655765 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x334, x1, 1996, x4)
90001f38:	aaaab537          	lui	a0,0xaaaab
90001f3c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f40:	33452593          	slti	a1,a0,820
90001f44:	7cb0a623          	sw	a1,1996(ra)

90001f48 <inst_523>:

inst_523:
// rs1_val==-1431655765 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x667, x1, 2000, x4)
90001f48:	aaaab537          	lui	a0,0xaaaab
90001f4c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f50:	66752593          	slti	a1,a0,1639
90001f54:	7cb0a823          	sw	a1,2000(ra)

90001f58 <inst_524>:

inst_524:
// rs1_val==-1431655765 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, -0x2c, x1, 2004, x4)
90001f58:	aaaab537          	lui	a0,0xaaaab
90001f5c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f60:	fd452593          	slti	a1,a0,-44
90001f64:	7cb0aa23          	sw	a1,2004(ra)

90001f68 <inst_525>:

inst_525:
// rs1_val==-1431655765 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x1, -0x55555555, 0x2e, x1, 2008, x4)
90001f68:	aaaab537          	lui	a0,0xaaaab
90001f6c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f70:	02e52593          	slti	a1,a0,46
90001f74:	7cb0ac23          	sw	a1,2008(ra)

90001f78 <inst_526>:

inst_526:
// rs1_val==6 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x6, 0x3, x1, 2012, x4)
90001f78:	00600513          	li	a0,6
90001f7c:	00352593          	slti	a1,a0,3
90001f80:	7cb0ae23          	sw	a1,2012(ra)

90001f84 <inst_527>:

inst_527:
// rs1_val==6 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x555, x1, 2016, x4)
90001f84:	00600513          	li	a0,6
90001f88:	55552593          	slti	a1,a0,1365
90001f8c:	7eb0a023          	sw	a1,2016(ra)

90001f90 <inst_528>:

inst_528:
// rs1_val==6 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x6, -0x556, x1, 2020, x4)
90001f90:	00600513          	li	a0,6
90001f94:	aaa52593          	slti	a1,a0,-1366
90001f98:	7eb0a223          	sw	a1,2020(ra)

90001f9c <inst_529>:

inst_529:
// rs1_val==6 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x6, 0x5, x1, 2024, x4)
90001f9c:	00600513          	li	a0,6
90001fa0:	00552593          	slti	a1,a0,5
90001fa4:	7eb0a423          	sw	a1,2024(ra)

90001fa8 <inst_530>:

inst_530:
// rs1_val==6 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x333, x1, 2028, x4)
90001fa8:	00600513          	li	a0,6
90001fac:	33352593          	slti	a1,a0,819
90001fb0:	7eb0a623          	sw	a1,2028(ra)

90001fb4 <inst_531>:

inst_531:
// rs1_val==6 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x666, x1, 2032, x4)
90001fb4:	00600513          	li	a0,6
90001fb8:	66652593          	slti	a1,a0,1638
90001fbc:	7eb0a823          	sw	a1,2032(ra)

90001fc0 <inst_532>:

inst_532:
// rs1_val==6 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x6, -0x2d, x1, 2036, x4)
90001fc0:	00600513          	li	a0,6
90001fc4:	fd352593          	slti	a1,a0,-45
90001fc8:	7eb0aa23          	sw	a1,2036(ra)

90001fcc <inst_533>:

inst_533:
// rs1_val==6 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x2d, x1, 2040, x4)
90001fcc:	00600513          	li	a0,6
90001fd0:	02d52593          	slti	a1,a0,45
90001fd4:	7eb0ac23          	sw	a1,2040(ra)

90001fd8 <inst_534>:

inst_534:
// rs1_val==6 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x6, 0x2, x1, 2044, x4)
90001fd8:	00600513          	li	a0,6
90001fdc:	00252593          	slti	a1,a0,2
90001fe0:	7eb0ae23          	sw	a1,2044(ra)
RVTEST_SIGBASE( x1,signature_x1_1)
90001fe4:	00003097          	auipc	ra,0x3
90001fe8:	88808093          	addi	ra,ra,-1912 # 9000486c <signature_x1_1>

90001fec <inst_535>:

inst_535:
// rs1_val==6 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x554, x1, 0, x4)
90001fec:	00600513          	li	a0,6
90001ff0:	55452593          	slti	a1,a0,1364
90001ff4:	00b0a023          	sw	a1,0(ra)

90001ff8 <inst_536>:

inst_536:
// rs1_val==6 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x6, 0x0, x1, 4, x4)
90001ff8:	00600513          	li	a0,6
90001ffc:	00052593          	slti	a1,a0,0
90002000:	00b0a223          	sw	a1,4(ra)

90002004 <inst_537>:

inst_537:
// rs1_val==6 and imm_val==4, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x4
TEST_IMM_OP( slti, x11, x10, 0x0, 0x6, 0x4, x1, 8, x4)
90002004:	00600513          	li	a0,6
90002008:	00452593          	slti	a1,a0,4
9000200c:	00b0a423          	sw	a1,8(ra)

90002010 <inst_538>:

inst_538:
// rs1_val==6 and imm_val==818, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x332
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x332, x1, 12, x4)
90002010:	00600513          	li	a0,6
90002014:	33252593          	slti	a1,a0,818
90002018:	00b0a623          	sw	a1,12(ra)

9000201c <inst_539>:

inst_539:
// rs1_val==6 and imm_val==1637, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x665
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x665, x1, 16, x4)
9000201c:	00600513          	li	a0,6
90002020:	66552593          	slti	a1,a0,1637
90002024:	00b0a823          	sw	a1,16(ra)

90002028 <inst_540>:

inst_540:
// rs1_val==6 and imm_val==44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x2c
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x2c, x1, 20, x4)
90002028:	00600513          	li	a0,6
9000202c:	02c52593          	slti	a1,a0,44
90002030:	00b0aa23          	sw	a1,20(ra)

90002034 <inst_541>:

inst_541:
// rs1_val==6 and imm_val==1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x556
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x556, x1, 24, x4)
90002034:	00600513          	li	a0,6
90002038:	55652593          	slti	a1,a0,1366
9000203c:	00b0ac23          	sw	a1,24(ra)

90002040 <inst_542>:

inst_542:
// rs1_val==6 and imm_val==-1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:-0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x6, -0x555, x1, 28, x4)
90002040:	00600513          	li	a0,6
90002044:	aab52593          	slti	a1,a0,-1365
90002048:	00b0ae23          	sw	a1,28(ra)

9000204c <inst_543>:

inst_543:
// rs1_val==6 and imm_val==6, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x6
TEST_IMM_OP( slti, x11, x10, 0x0, 0x6, 0x6, x1, 32, x4)
9000204c:	00600513          	li	a0,6
90002050:	00652593          	slti	a1,a0,6
90002054:	02b0a023          	sw	a1,32(ra)

90002058 <inst_544>:

inst_544:
// rs1_val==6 and imm_val==820, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x334
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x334, x1, 36, x4)
90002058:	00600513          	li	a0,6
9000205c:	33452593          	slti	a1,a0,820
90002060:	02b0a223          	sw	a1,36(ra)

90002064 <inst_545>:

inst_545:
// rs1_val==6 and imm_val==1639, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x667
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x667, x1, 40, x4)
90002064:	00600513          	li	a0,6
90002068:	66752593          	slti	a1,a0,1639
9000206c:	02b0a423          	sw	a1,40(ra)

90002070 <inst_546>:

inst_546:
// rs1_val==6 and imm_val==-44, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:-0x2c
TEST_IMM_OP( slti, x11, x10, 0x0, 0x6, -0x2c, x1, 44, x4)
90002070:	00600513          	li	a0,6
90002074:	fd452593          	slti	a1,a0,-44
90002078:	02b0a623          	sw	a1,44(ra)

9000207c <inst_547>:

inst_547:
// rs1_val==6 and imm_val==46, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x6;  immval:0x2e
TEST_IMM_OP( slti, x11, x10, 0x1, 0x6, 0x2e, x1, 48, x4)
9000207c:	00600513          	li	a0,6
90002080:	02e52593          	slti	a1,a0,46
90002084:	02b0a823          	sw	a1,48(ra)

90002088 <inst_548>:

inst_548:
// rs1_val==858993460 and imm_val==3, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x3
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x3, x1, 52, x4)
90002088:	33333537          	lui	a0,0x33333
9000208c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90002090:	00352593          	slti	a1,a0,3
90002094:	02b0aa23          	sw	a1,52(ra)

90002098 <inst_549>:

inst_549:
// rs1_val==858993460 and imm_val==1365, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x555
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x555, x1, 56, x4)
90002098:	33333537          	lui	a0,0x33333
9000209c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
900020a0:	55552593          	slti	a1,a0,1365
900020a4:	02b0ac23          	sw	a1,56(ra)

900020a8 <inst_550>:

inst_550:
// rs1_val==858993460 and imm_val==-1366, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x556
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, -0x556, x1, 60, x4)
900020a8:	33333537          	lui	a0,0x33333
900020ac:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
900020b0:	aaa52593          	slti	a1,a0,-1366
900020b4:	02b0ae23          	sw	a1,60(ra)

900020b8 <inst_551>:

inst_551:
// rs1_val==858993460 and imm_val==5, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x5
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x5, x1, 64, x4)
900020b8:	33333537          	lui	a0,0x33333
900020bc:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
900020c0:	00552593          	slti	a1,a0,5
900020c4:	04b0a023          	sw	a1,64(ra)

900020c8 <inst_552>:

inst_552:
// rs1_val==858993460 and imm_val==819, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x333
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x333, x1, 68, x4)
900020c8:	33333537          	lui	a0,0x33333
900020cc:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
900020d0:	33352593          	slti	a1,a0,819
900020d4:	04b0a223          	sw	a1,68(ra)

900020d8 <inst_553>:

inst_553:
// rs1_val==858993460 and imm_val==1638, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x666
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x666, x1, 72, x4)
900020d8:	33333537          	lui	a0,0x33333
900020dc:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
900020e0:	66652593          	slti	a1,a0,1638
900020e4:	04b0a423          	sw	a1,72(ra)

900020e8 <inst_554>:

inst_554:
// rs1_val==858993460 and imm_val==-45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, -0x2d, x1, 76, x4)
900020e8:	33333537          	lui	a0,0x33333
900020ec:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
900020f0:	fd352593          	slti	a1,a0,-45
900020f4:	04b0a623          	sw	a1,76(ra)

900020f8 <inst_555>:

inst_555:
// rs1_val==858993460 and imm_val==45, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2d
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x2d, x1, 80, x4)
900020f8:	33333537          	lui	a0,0x33333
900020fc:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90002100:	02d52593          	slti	a1,a0,45
90002104:	04b0a823          	sw	a1,80(ra)

90002108 <inst_556>:

inst_556:
// rs1_val==858993460 and imm_val==2, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x2, x1, 84, x4)
90002108:	33333537          	lui	a0,0x33333
9000210c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90002110:	00252593          	slti	a1,a0,2
90002114:	04b0aa23          	sw	a1,84(ra)

90002118 <inst_557>:

inst_557:
// rs1_val==858993460 and imm_val==1364, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x554
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x554, x1, 88, x4)
90002118:	33333537          	lui	a0,0x33333
9000211c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90002120:	55452593          	slti	a1,a0,1364
90002124:	04b0ac23          	sw	a1,88(ra)

90002128 <inst_558>:

inst_558:
// rs1_val==858993460 and imm_val==0, 
// opcode: slti ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x0
TEST_IMM_OP( slti, x11, x10, 0x0, 0x33333334, 0x0, x1, 92, x4)
90002128:	33333537          	lui	a0,0x33333
9000212c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332d0>
90002130:	00052593          	slti	a1,a0,0
90002134:	04b0ae23          	sw	a1,92(ra)

90002138 <inst_559>:

inst_559:
// imm_val == -5, rs1_val == -1048577
// opcode: slti ; op1:x10; dest:x11; op1val:-0x100001;  immval:-0x5
TEST_IMM_OP( slti, x11, x10, 0x1, -0x100001, -0x5, x1, 96, x4)
90002138:	fff00537          	lui	a0,0xfff00
9000213c:	fff50513          	addi	a0,a0,-1 # ffefffff <_end+0x6fefb5fb>
90002140:	ffb52593          	slti	a1,a0,-5
90002144:	06b0a023          	sw	a1,96(ra)
90002148:	00000013          	nop
9000214c:	00000013          	nop

90002150 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
90002150:	00408093          	addi	ra,ra,4
90002154:	00100093          	li	ra,1

90002158 <write_tohost>:
90002158:	00001f17          	auipc	t5,0x1
9000215c:	ea1f2423          	sw	ra,-344(t5) # 90003000 <tohost>

90002160 <self_loop>:
90002160:	0000006f          	j	90002160 <self_loop>
	...
