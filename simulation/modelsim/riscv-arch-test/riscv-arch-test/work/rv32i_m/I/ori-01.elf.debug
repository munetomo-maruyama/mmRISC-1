
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/I/ori-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed74a9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f769552>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6f43>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd6dd1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00004317          	auipc	t1,0x4
9000002c:	fd830313          	addi	t1,t1,-40 # 90004000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb6cf6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfddb15>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfea3ba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff7677>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f716b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bf93b3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adfa4d7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656fad69>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7b1b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfd73>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eadb4e9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56b572>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7f53>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d575d9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4bea95ea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56f8f>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa6df7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d11f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe63fa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df5697>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f617b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db78bbb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edba0db>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676dab6b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb6b0b3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*);def TEST_CASE_1=True;",ori)

RVTEST_SIGBASE( x2,signature_x2_1)
900000f8:	00004117          	auipc	sp,0x4
900000fc:	f1810113          	addi	sp,sp,-232 # 90004010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rs1 != rd, rs1==x5, rd==x22, imm_val == (-2**(12-1)), imm_val == -2048, rs1_val != imm_val, rs1_val < 0 and imm_val < 0, rs1_val == -513
// opcode: ori ; op1:x5; dest:x22; op1val:-0x201;  immval:-0x800
TEST_IMM_OP( ori, x22, x5, 0xfffffdff, -0x201, -0x800, x2, 0, x9)
90000100:	dff00293          	li	t0,-513
90000104:	8002eb13          	ori	s6,t0,-2048
90000108:	01612023          	sw	s6,0(sp)

9000010c <inst_1>:

inst_1:
// rs1 == rd, rs1==x27, rd==x27, imm_val == 0, rs1_val == imm_val, rs1_val == 0, rs1_val==0 and imm_val==0
// opcode: ori ; op1:x27; dest:x27; op1val:0x0;  immval:0x0
TEST_IMM_OP( ori, x27, x27, 0x0, 0x0, 0x0, x2, 4, x9)
9000010c:	00000d93          	li	s11,0
90000110:	000ded93          	ori	s11,s11,0
90000114:	01b12223          	sw	s11,4(sp)

90000118 <inst_2>:

inst_2:
// rs1==x17, rd==x8, imm_val == (2**(12-1)-1), rs1_val > 0 and imm_val > 0, imm_val == 2047
// opcode: ori ; op1:x17; dest:x8; op1val:0x33333334;  immval:0x7ff
TEST_IMM_OP( ori, x8, x17, 0x333337ff, 0x33333334, 0x7ff, x2, 8, x9)
90000118:	333338b7          	lui	a7,0x33333
9000011c:	33488893          	addi	a7,a7,820 # 33333334 <offset+0x333332cc>
90000120:	7ff8e413          	ori	s0,a7,2047
90000124:	00812423          	sw	s0,8(sp)

90000128 <inst_3>:

inst_3:
// rs1==x20, rd==x1, imm_val == 1, rs1_val < 0 and imm_val > 0
// opcode: ori ; op1:x20; dest:x1; op1val:-0xb504;  immval:0x1
TEST_IMM_OP( ori, x1, x20, 0xffff4afd, -0xb504, 0x1, x2, 12, x9)
90000128:	ffff5a37          	lui	s4,0xffff5
9000012c:	afca0a13          	addi	s4,s4,-1284 # ffff4afc <_end+0x6fff00f8>
90000130:	001a6093          	ori	ra,s4,1
90000134:	00112623          	sw	ra,12(sp)

90000138 <inst_4>:

inst_4:
// rs1==x12, rd==x19, rs1_val == (-2**(xlen-1)), rs1_val == -2147483648
// opcode: ori ; op1:x12; dest:x19; op1val:-0x80000000;  immval:0x2d
TEST_IMM_OP( ori, x19, x12, 0x8000002d, -0x80000000, 0x2d, x2, 16, x9)
90000138:	80000637          	lui	a2,0x80000
9000013c:	02d66993          	ori	s3,a2,45
90000140:	01312823          	sw	s3,16(sp)

90000144 <inst_5>:

inst_5:
// rs1==x8, rd==x3, rs1_val == (2**(xlen-1)-1), rs1_val == 2147483647, imm_val == 1365
// opcode: ori ; op1:x8; dest:x3; op1val:0x7fffffff;  immval:0x555
TEST_IMM_OP( ori, x3, x8, 0x7fffffff, 0x7fffffff, 0x555, x2, 20, x9)
90000144:	80000437          	lui	s0,0x80000
90000148:	fff40413          	addi	s0,s0,-1 # 7fffffff <_end+0xefffb5fb>
9000014c:	55546193          	ori	gp,s0,1365
90000150:	00312a23          	sw	gp,20(sp)

90000154 <inst_6>:

inst_6:
// rs1==x28, rd==x26, rs1_val == 1, 
// opcode: ori ; op1:x28; dest:x26; op1val:0x1;  immval:0x667
TEST_IMM_OP( ori, x26, x28, 0x667, 0x1, 0x667, x2, 24, x9)
90000154:	00100e13          	li	t3,1
90000158:	667e6d13          	ori	s10,t3,1639
9000015c:	01a12c23          	sw	s10,24(sp)

90000160 <inst_7>:

inst_7:
// rs1==x16, rd==x23, rs1_val > 0 and imm_val < 0, 
// opcode: ori ; op1:x16; dest:x23; op1val:0x7;  immval:-0x7
TEST_IMM_OP( ori, x23, x16, 0xffffffff, 0x7, -0x7, x2, 28, x9)
90000160:	00700813          	li	a6,7
90000164:	ff986b93          	ori	s7,a6,-7
90000168:	01712e23          	sw	s7,28(sp)

9000016c <inst_8>:

inst_8:
// rs1==x25, rd==x31, imm_val == 2, rs1_val == 262144
// opcode: ori ; op1:x25; dest:x31; op1val:0x40000;  immval:0x2
TEST_IMM_OP( ori, x31, x25, 0x40002, 0x40000, 0x2, x2, 32, x9)
9000016c:	00040cb7          	lui	s9,0x40
90000170:	002cef93          	ori	t6,s9,2
90000174:	03f12023          	sw	t6,32(sp)

90000178 <inst_9>:

inst_9:
// rs1==x23, rd==x11, imm_val == 4, rs1_val == 536870912
// opcode: ori ; op1:x23; dest:x11; op1val:0x20000000;  immval:0x4
TEST_IMM_OP( ori, x11, x23, 0x20000004, 0x20000000, 0x4, x2, 36, x9)
90000178:	20000bb7          	lui	s7,0x20000
9000017c:	004be593          	ori	a1,s7,4
90000180:	02b12223          	sw	a1,36(sp)

90000184 <inst_10>:

inst_10:
// rs1==x14, rd==x17, imm_val == 8, 
// opcode: ori ; op1:x14; dest:x17; op1val:-0x201;  immval:0x8
TEST_IMM_OP( ori, x17, x14, 0xfffffdff, -0x201, 0x8, x2, 40, x9)
90000184:	dff00713          	li	a4,-513
90000188:	00876893          	ori	a7,a4,8
9000018c:	03112423          	sw	a7,40(sp)

90000190 <inst_11>:

inst_11:
// rs1==x31, rd==x7, imm_val == 16, rs1_val == 2
// opcode: ori ; op1:x31; dest:x7; op1val:0x2;  immval:0x10
TEST_IMM_OP( ori, x7, x31, 0x12, 0x2, 0x10, x2, 44, x9)
90000190:	00200f93          	li	t6,2
90000194:	010fe393          	ori	t2,t6,16
90000198:	02712623          	sw	t2,44(sp)

9000019c <inst_12>:

inst_12:
// rs1==x21, rd==x4, imm_val == 32, rs1_val == 32768
// opcode: ori ; op1:x21; dest:x4; op1val:0x8000;  immval:0x20
TEST_IMM_OP( ori, x4, x21, 0x8020, 0x8000, 0x20, x2, 48, x9)
9000019c:	00008ab7          	lui	s5,0x8
900001a0:	020ae213          	ori	tp,s5,32
900001a4:	02412823          	sw	tp,48(sp)

900001a8 <inst_13>:

inst_13:
// rs1==x15, rd==x5, imm_val == 64, rs1_val == 2048
// opcode: ori ; op1:x15; dest:x5; op1val:0x800;  immval:0x40
TEST_IMM_OP( ori, x5, x15, 0x840, 0x800, 0x40, x2, 52, x9)
900001a8:	000017b7          	lui	a5,0x1
900001ac:	80078793          	addi	a5,a5,-2048 # 800 <offset+0x798>
900001b0:	0407e293          	ori	t0,a5,64
900001b4:	02512a23          	sw	t0,52(sp)

900001b8 <inst_14>:

inst_14:
// rs1==x30, rd==x25, imm_val == 128, rs1_val == -262145
// opcode: ori ; op1:x30; dest:x25; op1val:-0x40001;  immval:0x80
TEST_IMM_OP( ori, x25, x30, 0xfffbffff, -0x40001, 0x80, x2, 56, x9)
900001b8:	fffc0f37          	lui	t5,0xfffc0
900001bc:	ffff0f13          	addi	t5,t5,-1 # fffbffff <_end+0x6ffbb5fb>
900001c0:	080f6c93          	ori	s9,t5,128
900001c4:	03912c23          	sw	s9,56(sp)

900001c8 <inst_15>:

inst_15:
// rs1==x11, rd==x30, imm_val == 256, rs1_val == -5
// opcode: ori ; op1:x11; dest:x30; op1val:-0x5;  immval:0x100
TEST_IMM_OP( ori, x30, x11, 0xfffffffb, -0x5, 0x100, x2, 60, x9)
900001c8:	ffb00593          	li	a1,-5
900001cc:	1005ef13          	ori	t5,a1,256
900001d0:	03e12e23          	sw	t5,60(sp)

900001d4 <inst_16>:

inst_16:
// rs1==x4, rd==x10, imm_val == 512, rs1_val == -524289
// opcode: ori ; op1:x4; dest:x10; op1val:-0x80001;  immval:0x200
TEST_IMM_OP( ori, x10, x4, 0xfff7ffff, -0x80001, 0x200, x2, 64, x9)
900001d4:	fff80237          	lui	tp,0xfff80
900001d8:	fff20213          	addi	tp,tp,-1 # fff7ffff <_end+0x6ff7b5fb>
900001dc:	20026513          	ori	a0,tp,512
900001e0:	04a12023          	sw	a0,64(sp)

900001e4 <inst_17>:

inst_17:
// rs1==x13, rd==x0, imm_val == 1024, rs1_val == -1073741825
// opcode: ori ; op1:x13; dest:x0; op1val:-0x40000001;  immval:0x400
TEST_IMM_OP( ori, x0, x13, 0, -0x40000001, 0x400, x2, 68, x9)
900001e4:	c00006b7          	lui	a3,0xc0000
900001e8:	fff68693          	addi	a3,a3,-1 # bfffffff <_end+0x2fffb5fb>
900001ec:	4006e013          	ori	zero,a3,1024
900001f0:	04012223          	sw	zero,68(sp)

900001f4 <inst_18>:

inst_18:
// rs1==x26, rd==x6, imm_val == -2, rs1_val == -33
// opcode: ori ; op1:x26; dest:x6; op1val:-0x21;  immval:-0x2
TEST_IMM_OP( ori, x6, x26, 0xffffffff, -0x21, -0x2, x2, 72, x9)
900001f4:	fdf00d13          	li	s10,-33
900001f8:	ffed6313          	ori	t1,s10,-2
900001fc:	04612423          	sw	t1,72(sp)

90000200 <inst_19>:

inst_19:
// rs1==x19, rd==x18, imm_val == -3, 
// opcode: ori ; op1:x19; dest:x18; op1val:0xb503;  immval:-0x3
TEST_IMM_OP( ori, x18, x19, 0xffffffff, 0xb503, -0x3, x2, 76, x9)
90000200:	0000b9b7          	lui	s3,0xb
90000204:	50398993          	addi	s3,s3,1283 # b503 <offset+0xb49b>
90000208:	ffd9e913          	ori	s2,s3,-3
9000020c:	05212623          	sw	s2,76(sp)

90000210 <inst_20>:

inst_20:
// rs1==x7, rd==x21, imm_val == -5, rs1_val == 268435456
// opcode: ori ; op1:x7; dest:x21; op1val:0x10000000;  immval:-0x5
TEST_IMM_OP( ori, x21, x7, 0xfffffffb, 0x10000000, -0x5, x2, 80, x5)
90000210:	100003b7          	lui	t2,0x10000
90000214:	ffb3ea93          	ori	s5,t2,-5
90000218:	05512823          	sw	s5,80(sp)

9000021c <inst_21>:

inst_21:
// rs1==x24, rd==x16, imm_val == -9, 
// opcode: ori ; op1:x24; dest:x16; op1val:-0x80001;  immval:-0x9
TEST_IMM_OP( ori, x16, x24, 0xffffffff, -0x80001, -0x9, x2, 84, x5)
9000021c:	fff80c37          	lui	s8,0xfff80
90000220:	fffc0c13          	addi	s8,s8,-1 # fff7ffff <_end+0x6ff7b5fb>
90000224:	ff7c6813          	ori	a6,s8,-9
90000228:	05012a23          	sw	a6,84(sp)
RVTEST_SIGBASE( x4,signature_x4_0)
9000022c:	00004217          	auipc	tp,0x4
90000230:	e3c20213          	addi	tp,tp,-452 # 90004068 <signature_x4_0>

90000234 <inst_22>:

inst_22:
// rs1==x0, rd==x9, imm_val == -17, rs1_val == -16385
// opcode: ori ; op1:x0; dest:x9; op1val:0x0;  immval:-0x11
TEST_IMM_OP( ori, x9, x0, 0xffffffef, 0x0, -0x11, x4, 0, x5)
90000234:	00000013          	nop
90000238:	fef06493          	ori	s1,zero,-17
9000023c:	00922023          	sw	s1,0(tp) # 0 <offset-0x68>

90000240 <inst_23>:

inst_23:
// rs1==x3, rd==x28, imm_val == -33, rs1_val == 8192
// opcode: ori ; op1:x3; dest:x28; op1val:0x2000;  immval:-0x21
TEST_IMM_OP( ori, x28, x3, 0xffffffdf, 0x2000, -0x21, x4, 4, x5)
90000240:	000021b7          	lui	gp,0x2
90000244:	fdf1ee13          	ori	t3,gp,-33
90000248:	01c22223          	sw	t3,4(tp) # 4 <offset-0x64>

9000024c <inst_24>:

inst_24:
// rs1==x1, rd==x15, imm_val == -65, 
// opcode: ori ; op1:x1; dest:x15; op1val:0x55555556;  immval:-0x41
TEST_IMM_OP( ori, x15, x1, 0xffffffff, 0x55555556, -0x41, x4, 8, x5)
9000024c:	555550b7          	lui	ra,0x55555
90000250:	55608093          	addi	ra,ra,1366 # 55555556 <offset+0x555554ee>
90000254:	fbf0e793          	ori	a5,ra,-65
90000258:	00f22423          	sw	a5,8(tp) # 8 <offset-0x60>

9000025c <inst_25>:

inst_25:
// rs1==x18, rd==x2, imm_val == -129, 
// opcode: ori ; op1:x18; dest:x2; op1val:-0xb504;  immval:-0x81
TEST_IMM_OP( ori, x2, x18, 0xffffffff, -0xb504, -0x81, x4, 12, x5)
9000025c:	ffff5937          	lui	s2,0xffff5
90000260:	afc90913          	addi	s2,s2,-1284 # ffff4afc <_end+0x6fff00f8>
90000264:	f7f96113          	ori	sp,s2,-129
90000268:	00222623          	sw	sp,12(tp) # c <offset-0x5c>

9000026c <inst_26>:

inst_26:
// rs1==x22, rd==x20, imm_val == -257, rs1_val == -1431655766
// opcode: ori ; op1:x22; dest:x20; op1val:-0x55555556;  immval:-0x101
TEST_IMM_OP( ori, x20, x22, 0xfffffeff, -0x55555556, -0x101, x4, 16, x5)
9000026c:	aaaabb37          	lui	s6,0xaaaab
90000270:	aaab0b13          	addi	s6,s6,-1366 # aaaaaaaa <_end+0x1aaa60a6>
90000274:	effb6a13          	ori	s4,s6,-257
90000278:	01422823          	sw	s4,16(tp) # 10 <offset-0x58>

9000027c <inst_27>:

inst_27:
// rs1==x6, rd==x13, imm_val == -513, rs1_val == 16777216
// opcode: ori ; op1:x6; dest:x13; op1val:0x1000000;  immval:-0x201
TEST_IMM_OP( ori, x13, x6, 0xfffffdff, 0x1000000, -0x201, x4, 20, x5)
9000027c:	01000337          	lui	t1,0x1000
90000280:	dff36693          	ori	a3,t1,-513
90000284:	00d22a23          	sw	a3,20(tp) # 14 <offset-0x54>

90000288 <inst_28>:

inst_28:
// rs1==x29, rd==x14, imm_val == -1025, 
// opcode: ori ; op1:x29; dest:x14; op1val:0x20000000;  immval:-0x401
TEST_IMM_OP( ori, x14, x29, 0xfffffbff, 0x20000000, -0x401, x4, 24, x5)
90000288:	20000eb7          	lui	t4,0x20000
9000028c:	bffee713          	ori	a4,t4,-1025
90000290:	00e22c23          	sw	a4,24(tp) # 18 <offset-0x50>

90000294 <inst_29>:

inst_29:
// rs1==x2, rd==x12, imm_val == -1366, rs1_val==-46340 and imm_val==-1366
// opcode: ori ; op1:x2; dest:x12; op1val:-0xb504;  immval:-0x556
TEST_IMM_OP( ori, x12, x2, 0xfffffafe, -0xb504, -0x556, x4, 28, x5)
90000294:	ffff5137          	lui	sp,0xffff5
90000298:	afc10113          	addi	sp,sp,-1284 # ffff4afc <_end+0x6fff00f8>
9000029c:	aaa16613          	ori	a2,sp,-1366
900002a0:	00c22e23          	sw	a2,28(tp) # 1c <offset-0x4c>

900002a4 <inst_30>:

inst_30:
// rs1==x9, rd==x24, rs1_val == 4, rs1_val==4 and imm_val==5
// opcode: ori ; op1:x9; dest:x24; op1val:0x4;  immval:0x5
TEST_IMM_OP( ori, x24, x9, 0x5, 0x4, 0x5, x4, 32, x5)
900002a4:	00400493          	li	s1,4
900002a8:	0054ec13          	ori	s8,s1,5
900002ac:	03822023          	sw	s8,32(tp) # 20 <offset-0x48>

900002b0 <inst_31>:

inst_31:
// rs1==x10, rd==x29, rs1_val == 8, 
// opcode: ori ; op1:x10; dest:x29; op1val:0x8;  immval:0x6
TEST_IMM_OP( ori, x29, x10, 0xe, 0x8, 0x6, x4, 36, x5)
900002b0:	00800513          	li	a0,8
900002b4:	00656e93          	ori	t4,a0,6
900002b8:	03d22223          	sw	t4,36(tp) # 24 <offset-0x44>

900002bc <inst_32>:

inst_32:
// rs1_val == 16, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x10;  immval:0x200
TEST_IMM_OP( ori, x11, x10, 0x210, 0x10, 0x200, x4, 40, x5)
900002bc:	01000513          	li	a0,16
900002c0:	20056593          	ori	a1,a0,512
900002c4:	02b22423          	sw	a1,40(tp) # 28 <offset-0x40>

900002c8 <inst_33>:

inst_33:
// rs1_val == 32, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x20;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2c, 0x20, 0x2c, x4, 44, x5)
900002c8:	02000513          	li	a0,32
900002cc:	02c56593          	ori	a1,a0,44
900002d0:	02b22623          	sw	a1,44(tp) # 2c <offset-0x3c>

900002d4 <inst_34>:

inst_34:
// rs1_val == 64, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x40;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x43, 0x40, 0x3, x4, 48, x5)
900002d4:	04000513          	li	a0,64
900002d8:	00356593          	ori	a1,a0,3
900002dc:	02b22823          	sw	a1,48(tp) # 30 <offset-0x38>

900002e0 <inst_35>:

inst_35:
// rs1_val == 128, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x80;  immval:0x20
TEST_IMM_OP( ori, x11, x10, 0xa0, 0x80, 0x20, x4, 52, x5)
900002e0:	08000513          	li	a0,128
900002e4:	02056593          	ori	a1,a0,32
900002e8:	02b22a23          	sw	a1,52(tp) # 34 <offset-0x34>

900002ec <inst_36>:

inst_36:
// rs1_val == 256, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x100;  immval:-0x41
TEST_IMM_OP( ori, x11, x10, 0xffffffbf, 0x100, -0x41, x4, 56, x5)
900002ec:	10000513          	li	a0,256
900002f0:	fbf56593          	ori	a1,a0,-65
900002f4:	02b22c23          	sw	a1,56(tp) # 38 <offset-0x30>

900002f8 <inst_37>:

inst_37:
// rs1_val == 512, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x200;  immval:-0x6
TEST_IMM_OP( ori, x11, x10, 0xfffffffa, 0x200, -0x6, x4, 60, x5)
900002f8:	20000513          	li	a0,512
900002fc:	ffa56593          	ori	a1,a0,-6
90000300:	02b22e23          	sw	a1,60(tp) # 3c <offset-0x2c>

90000304 <inst_38>:

inst_38:
// rs1_val == 1024, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x400;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd3, 0x400, -0x2d, x4, 64, x5)
90000304:	40000513          	li	a0,1024
90000308:	fd356593          	ori	a1,a0,-45
9000030c:	04b22023          	sw	a1,64(tp) # 40 <offset-0x28>

90000310 <inst_39>:

inst_39:
// rs1_val == 4096, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x1000;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x1005, 0x1000, 0x5, x4, 68, x5)
90000310:	00001537          	lui	a0,0x1
90000314:	00556593          	ori	a1,a0,5
90000318:	04b22223          	sw	a1,68(tp) # 44 <offset-0x24>

9000031c <inst_40>:

inst_40:
// rs1_val == 16384, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4000;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x4665, 0x4000, 0x665, x4, 72, x5)
9000031c:	00004537          	lui	a0,0x4
90000320:	66556593          	ori	a1,a0,1637
90000324:	04b22423          	sw	a1,72(tp) # 48 <offset-0x20>

90000328 <inst_41>:

inst_41:
// rs1_val == 65536, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x10000;  immval:0x9
TEST_IMM_OP( ori, x11, x10, 0x10009, 0x10000, 0x9, x4, 76, x5)
90000328:	00010537          	lui	a0,0x10
9000032c:	00956593          	ori	a1,a0,9
90000330:	04b22623          	sw	a1,76(tp) # 4c <offset-0x1c>

90000334 <inst_42>:

inst_42:
// rs1_val == 131072, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x20000;  immval:0x200
TEST_IMM_OP( ori, x11, x10, 0x20200, 0x20000, 0x200, x4, 80, x5)
90000334:	00020537          	lui	a0,0x20
90000338:	20056593          	ori	a1,a0,512
9000033c:	04b22823          	sw	a1,80(tp) # 50 <offset-0x18>

90000340 <inst_43>:

inst_43:
// rs1_val == 524288, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x80000;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x80000, 0x80000, 0x0, x4, 84, x5)
90000340:	00080537          	lui	a0,0x80
90000344:	00056593          	ori	a1,a0,0
90000348:	04b22a23          	sw	a1,84(tp) # 54 <offset-0x14>

9000034c <inst_44>:

inst_44:
// rs1_val == 1048576, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x100000;  immval:0x200
TEST_IMM_OP( ori, x11, x10, 0x100200, 0x100000, 0x200, x4, 88, x5)
9000034c:	00100537          	lui	a0,0x100
90000350:	20056593          	ori	a1,a0,512
90000354:	04b22c23          	sw	a1,88(tp) # 58 <offset-0x10>

90000358 <inst_45>:

inst_45:
// rs1_val == 2097152, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x200000;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd4, 0x200000, -0x2c, x4, 92, x5)
90000358:	00200537          	lui	a0,0x200
9000035c:	fd456593          	ori	a1,a0,-44
90000360:	04b22e23          	sw	a1,92(tp) # 5c <offset-0xc>

90000364 <inst_46>:

inst_46:
// rs1_val == 4194304, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x400000;  immval:-0x201
TEST_IMM_OP( ori, x11, x10, 0xfffffdff, 0x400000, -0x201, x4, 96, x5)
90000364:	00400537          	lui	a0,0x400
90000368:	dff56593          	ori	a1,a0,-513
9000036c:	06b22023          	sw	a1,96(tp) # 60 <offset-0x8>

90000370 <inst_47>:

inst_47:
// rs1_val == 8388608, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x800000;  immval:0x80
TEST_IMM_OP( ori, x11, x10, 0x800080, 0x800000, 0x80, x4, 100, x5)
90000370:	00800537          	lui	a0,0x800
90000374:	08056593          	ori	a1,a0,128
90000378:	06b22223          	sw	a1,100(tp) # 64 <offset-0x4>

9000037c <inst_48>:

inst_48:
// rs1_val == 33554432, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2000000;  immval:-0x21
TEST_IMM_OP( ori, x11, x10, 0xffffffdf, 0x2000000, -0x21, x4, 104, x5)
9000037c:	02000537          	lui	a0,0x2000
90000380:	fdf56593          	ori	a1,a0,-33
90000384:	06b22423          	sw	a1,104(tp) # 68 <offset>

90000388 <inst_49>:

inst_49:
// rs1_val == 67108864, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4000000;  immval:0x10
TEST_IMM_OP( ori, x11, x10, 0x4000010, 0x4000000, 0x10, x4, 108, x5)
90000388:	04000537          	lui	a0,0x4000
9000038c:	01056593          	ori	a1,a0,16
90000390:	06b22623          	sw	a1,108(tp) # 6c <offset+0x4>

90000394 <inst_50>:

inst_50:
// rs1_val == 134217728, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x8000000;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x8000554, 0x8000000, 0x554, x4, 112, x5)
90000394:	08000537          	lui	a0,0x8000
90000398:	55456593          	ori	a1,a0,1364
9000039c:	06b22823          	sw	a1,112(tp) # 70 <offset+0x8>

900003a0 <inst_51>:

inst_51:
// rs1_val == 1073741824, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x40000000;  immval:-0x6
TEST_IMM_OP( ori, x11, x10, 0xfffffffa, 0x40000000, -0x6, x4, 116, x5)
900003a0:	40000537          	lui	a0,0x40000
900003a4:	ffa56593          	ori	a1,a0,-6
900003a8:	06b22a23          	sw	a1,116(tp) # 74 <offset+0xc>

900003ac <inst_52>:

inst_52:
// rs1_val == -2, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x2;  immval:-0x41
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x2, -0x41, x4, 120, x5)
900003ac:	ffe00513          	li	a0,-2
900003b0:	fbf56593          	ori	a1,a0,-65
900003b4:	06b22c23          	sw	a1,120(tp) # 78 <offset+0x10>

900003b8 <inst_53>:

inst_53:
// rs1_val == -3, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x3;  immval:-0x9
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x3, -0x9, x4, 124, x5)
900003b8:	ffd00513          	li	a0,-3
900003bc:	ff756593          	ori	a1,a0,-9
900003c0:	06b22e23          	sw	a1,124(tp) # 7c <offset+0x14>

900003c4 <inst_54>:

inst_54:
// rs1_val == -9, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x9;  immval:-0x800
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, -0x9, -0x800, x4, 128, x5)
900003c4:	ff700513          	li	a0,-9
900003c8:	80056593          	ori	a1,a0,-2048
900003cc:	08b22023          	sw	a1,128(tp) # 80 <offset+0x18>

900003d0 <inst_55>:

inst_55:
// rs1_val == -17, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x11;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x11, -0x2d, x4, 132, x5)
900003d0:	fef00513          	li	a0,-17
900003d4:	fd356593          	ori	a1,a0,-45
900003d8:	08b22223          	sw	a1,132(tp) # 84 <offset+0x1c>

900003dc <inst_56>:

inst_56:
// rs1_val == -65, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x41;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xffffffbf, -0x41, -0x556, x4, 136, x5)
900003dc:	fbf00513          	li	a0,-65
900003e0:	aaa56593          	ori	a1,a0,-1366
900003e4:	08b22423          	sw	a1,136(tp) # 88 <offset+0x20>

900003e8 <inst_57>:

inst_57:
// rs1_val == -129, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x81;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xffffff7f, -0x81, 0x665, x4, 140, x5)
900003e8:	f7f00513          	li	a0,-129
900003ec:	66556593          	ori	a1,a0,1637
900003f0:	08b22623          	sw	a1,140(tp) # 8c <offset+0x24>

900003f4 <inst_58>:

inst_58:
// rs1_val == -257, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x101;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xfffffeff, -0x101, 0x666, x4, 144, x5)
900003f4:	eff00513          	li	a0,-257
900003f8:	66656593          	ori	a1,a0,1638
900003fc:	08b22823          	sw	a1,144(tp) # 90 <offset+0x28>

90000400 <inst_59>:

inst_59:
// rs1_val == -1025, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x401;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x401, 0x666, x4, 148, x5)
90000400:	bff00513          	li	a0,-1025
90000404:	66656593          	ori	a1,a0,1638
90000408:	08b22a23          	sw	a1,148(tp) # 94 <offset+0x2c>

9000040c <inst_60>:

inst_60:
// rs1_val == -2049, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x801;  immval:0x7ff
TEST_IMM_OP( ori, x11, x10, 0xfffff7ff, -0x801, 0x7ff, x4, 152, x5)
9000040c:	fffff537          	lui	a0,0xfffff
90000410:	7ff50513          	addi	a0,a0,2047 # fffff7ff <_end+0x6fffadfb>
90000414:	7ff56593          	ori	a1,a0,2047
90000418:	08b22c23          	sw	a1,152(tp) # 98 <offset+0x30>

9000041c <inst_61>:

inst_61:
// rs1_val == -4097, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x1001;  immval:0x7
TEST_IMM_OP( ori, x11, x10, 0xffffefff, -0x1001, 0x7, x4, 156, x5)
9000041c:	fffff537          	lui	a0,0xfffff
90000420:	fff50513          	addi	a0,a0,-1 # ffffefff <_end+0x6fffa5fb>
90000424:	00756593          	ori	a1,a0,7
90000428:	08b22e23          	sw	a1,156(tp) # 9c <offset+0x34>

9000042c <inst_62>:

inst_62:
// rs1_val == -8193, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x2001;  immval:-0x21
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x2001, -0x21, x4, 160, x5)
9000042c:	ffffe537          	lui	a0,0xffffe
90000430:	fff50513          	addi	a0,a0,-1 # ffffdfff <_end+0x6fff95fb>
90000434:	fdf56593          	ori	a1,a0,-33
90000438:	0ab22023          	sw	a1,160(tp) # a0 <offset+0x38>

9000043c <inst_63>:

inst_63:
// rs1_val == -32769, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x8001;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xffff7fff, -0x8001, 0x2d, x4, 164, x5)
9000043c:	ffff8537          	lui	a0,0xffff8
90000440:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0x6fff35fb>
90000444:	02d56593          	ori	a1,a0,45
90000448:	0ab22223          	sw	a1,164(tp) # a4 <offset+0x3c>

9000044c <inst_64>:

inst_64:
// rs1_val == -65537, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x10001;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xfffeffff, -0x10001, 0x332, x4, 168, x5)
9000044c:	ffff0537          	lui	a0,0xffff0
90000450:	fff50513          	addi	a0,a0,-1 # fffeffff <_end+0x6ffeb5fb>
90000454:	33256593          	ori	a1,a0,818
90000458:	0ab22423          	sw	a1,168(tp) # a8 <offset+0x40>

9000045c <inst_65>:

inst_65:
// rs1_val == -131073, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x20001;  immval:-0xa
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x20001, -0xa, x4, 172, x5)
9000045c:	fffe0537          	lui	a0,0xfffe0
90000460:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0x6ffdb5fb>
90000464:	ff656593          	ori	a1,a0,-10
90000468:	0ab22623          	sw	a1,172(tp) # ac <offset+0x44>

9000046c <inst_66>:

inst_66:
// rs1_val == -1048577, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x100001;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xffefffff, -0x100001, 0x6, x4, 176, x5)
9000046c:	fff00537          	lui	a0,0xfff00
90000470:	fff50513          	addi	a0,a0,-1 # ffefffff <_end+0x6fefb5fb>
90000474:	00656593          	ori	a1,a0,6
90000478:	0ab22823          	sw	a1,176(tp) # b0 <offset+0x48>

9000047c <inst_67>:

inst_67:
// rs1_val == -2097153, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x200001;  immval:-0x400
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x200001, -0x400, x4, 180, x5)
9000047c:	ffe00537          	lui	a0,0xffe00
90000480:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0x6fdfb5fb>
90000484:	c0056593          	ori	a1,a0,-1024
90000488:	0ab22a23          	sw	a1,180(tp) # b4 <offset+0x4c>

9000048c <inst_68>:

inst_68:
// rs1_val == -4194305, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x400001;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x400001, -0x2c, x4, 184, x5)
9000048c:	ffc00537          	lui	a0,0xffc00
90000490:	fff50513          	addi	a0,a0,-1 # ffbfffff <_end+0x6fbfb5fb>
90000494:	fd456593          	ori	a1,a0,-44
90000498:	0ab22c23          	sw	a1,184(tp) # b8 <offset+0x50>

9000049c <inst_69>:

inst_69:
// rs1_val == -8388609, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x800001;  immval:-0xa
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x800001, -0xa, x4, 188, x5)
9000049c:	ff800537          	lui	a0,0xff800
900004a0:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0x6f7fb5fb>
900004a4:	ff656593          	ori	a1,a0,-10
900004a8:	0ab22e23          	sw	a1,188(tp) # bc <offset+0x54>

900004ac <inst_70>:

inst_70:
// rs1_val == -16777217, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x1000001;  immval:0x3ff
TEST_IMM_OP( ori, x11, x10, 0xfeffffff, -0x1000001, 0x3ff, x4, 192, x5)
900004ac:	ff000537          	lui	a0,0xff000
900004b0:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0x6effb5fb>
900004b4:	3ff56593          	ori	a1,a0,1023
900004b8:	0cb22023          	sw	a1,192(tp) # c0 <offset+0x58>

900004bc <inst_71>:

inst_71:
// rs1_val == -33554433, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x2000001;  immval:-0x8
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x2000001, -0x8, x4, 196, x5)
900004bc:	fe000537          	lui	a0,0xfe000
900004c0:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0x6dffb5fb>
900004c4:	ff856593          	ori	a1,a0,-8
900004c8:	0cb22223          	sw	a1,196(tp) # c4 <offset+0x5c>

900004cc <inst_72>:

inst_72:
// rs1_val == -67108865, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x4000001;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xfbffffff, -0x4000001, 0x4, x4, 200, x5)
900004cc:	fc000537          	lui	a0,0xfc000
900004d0:	fff50513          	addi	a0,a0,-1 # fbffffff <_end+0x6bffb5fb>
900004d4:	00456593          	ori	a1,a0,4
900004d8:	0cb22423          	sw	a1,200(tp) # c8 <offset+0x60>

900004dc <inst_73>:

inst_73:
// rs1_val == -134217729, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x8000001;  immval:-0x6
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x8000001, -0x6, x4, 204, x5)
900004dc:	f8000537          	lui	a0,0xf8000
900004e0:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0x67ffb5fb>
900004e4:	ffa56593          	ori	a1,a0,-6
900004e8:	0cb22623          	sw	a1,204(tp) # cc <offset+0x64>

900004ec <inst_74>:

inst_74:
// rs1_val == -268435457, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x10000001;  immval:-0x7
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x10000001, -0x7, x4, 208, x5)
900004ec:	f0000537          	lui	a0,0xf0000
900004f0:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0x5fffb5fb>
900004f4:	ff956593          	ori	a1,a0,-7
900004f8:	0cb22823          	sw	a1,208(tp) # d0 <offset+0x68>

900004fc <inst_75>:

inst_75:
// rs1_val == -536870913, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x20000001;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xdfffffff, -0x20000001, 0x554, x4, 212, x5)
900004fc:	e0000537          	lui	a0,0xe0000
90000500:	fff50513          	addi	a0,a0,-1 # dfffffff <_end+0x4fffb5fb>
90000504:	55456593          	ori	a1,a0,1364
90000508:	0cb22a23          	sw	a1,212(tp) # d4 <offset+0x6c>

9000050c <inst_76>:

inst_76:
// rs1_val == 1431655765, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x101
TEST_IMM_OP( ori, x11, x10, 0xffffffff, 0x55555555, -0x101, x4, 216, x5)
9000050c:	55555537          	lui	a0,0x55555
90000510:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
90000514:	eff56593          	ori	a1,a0,-257
90000518:	0cb22c23          	sw	a1,216(tp) # d8 <offset+0x70>

9000051c <inst_77>:

inst_77:
// rs1_val==3 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x3, 0x3, 0x3, x4, 220, x5)
9000051c:	00300513          	li	a0,3
90000520:	00356593          	ori	a1,a0,3
90000524:	0cb22e23          	sw	a1,220(tp) # dc <offset+0x74>

90000528 <inst_78>:

inst_78:
// rs1_val==3 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x557, 0x3, 0x555, x4, 224, x5)
90000528:	00300513          	li	a0,3
9000052c:	55556593          	ori	a1,a0,1365
90000530:	0eb22023          	sw	a1,224(tp) # e0 <offset+0x78>

90000534 <inst_79>:

inst_79:
// rs1_val==3 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, 0x3, -0x556, x4, 228, x5)
90000534:	00300513          	li	a0,3
90000538:	aaa56593          	ori	a1,a0,-1366
9000053c:	0eb22223          	sw	a1,228(tp) # e4 <offset+0x7c>

90000540 <inst_80>:

inst_80:
// rs1_val==3 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x7, 0x3, 0x5, x4, 232, x5)
90000540:	00300513          	li	a0,3
90000544:	00556593          	ori	a1,a0,5
90000548:	0eb22423          	sw	a1,232(tp) # e8 <offset+0x80>

9000054c <inst_81>:

inst_81:
// rs1_val==3 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x333, 0x3, 0x333, x4, 236, x5)
9000054c:	00300513          	li	a0,3
90000550:	33356593          	ori	a1,a0,819
90000554:	0eb22623          	sw	a1,236(tp) # ec <offset+0x84>

90000558 <inst_82>:

inst_82:
// rs1_val==3 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x667, 0x3, 0x666, x4, 240, x5)
90000558:	00300513          	li	a0,3
9000055c:	66656593          	ori	a1,a0,1638
90000560:	0eb22823          	sw	a1,240(tp) # f0 <offset+0x88>

90000564 <inst_83>:

inst_83:
// rs1_val==3 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd3, 0x3, -0x2d, x4, 244, x5)
90000564:	00300513          	li	a0,3
90000568:	fd356593          	ori	a1,a0,-45
9000056c:	0eb22a23          	sw	a1,244(tp) # f4 <offset+0x8c>

90000570 <inst_84>:

inst_84:
// rs1_val==3 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x3, 0x2d, x4, 248, x5)
90000570:	00300513          	li	a0,3
90000574:	02d56593          	ori	a1,a0,45
90000578:	0eb22c23          	sw	a1,248(tp) # f8 <offset+0x90>

9000057c <inst_85>:

inst_85:
// rs1_val==3 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x3, 0x3, 0x2, x4, 252, x5)
9000057c:	00300513          	li	a0,3
90000580:	00256593          	ori	a1,a0,2
90000584:	0eb22e23          	sw	a1,252(tp) # fc <offset+0x94>

90000588 <inst_86>:

inst_86:
// rs1_val==3 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x557, 0x3, 0x554, x4, 256, x5)
90000588:	00300513          	li	a0,3
9000058c:	55456593          	ori	a1,a0,1364
90000590:	10b22023          	sw	a1,256(tp) # 100 <offset+0x98>

90000594 <inst_87>:

inst_87:
// rs1_val==3 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x3, 0x3, 0x0, x4, 260, x5)
90000594:	00300513          	li	a0,3
90000598:	00056593          	ori	a1,a0,0
9000059c:	10b22223          	sw	a1,260(tp) # 104 <offset+0x9c>

900005a0 <inst_88>:

inst_88:
// rs1_val==3 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x7, 0x3, 0x4, x4, 264, x5)
900005a0:	00300513          	li	a0,3
900005a4:	00456593          	ori	a1,a0,4
900005a8:	10b22423          	sw	a1,264(tp) # 108 <offset+0xa0>

900005ac <inst_89>:

inst_89:
// rs1_val==3 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x333, 0x3, 0x332, x4, 268, x5)
900005ac:	00300513          	li	a0,3
900005b0:	33256593          	ori	a1,a0,818
900005b4:	10b22623          	sw	a1,268(tp) # 10c <offset+0xa4>

900005b8 <inst_90>:

inst_90:
// rs1_val==3 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x667, 0x3, 0x665, x4, 272, x5)
900005b8:	00300513          	li	a0,3
900005bc:	66556593          	ori	a1,a0,1637
900005c0:	10b22823          	sw	a1,272(tp) # 110 <offset+0xa8>

900005c4 <inst_91>:

inst_91:
// rs1_val==3 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x3, 0x2c, x4, 276, x5)
900005c4:	00300513          	li	a0,3
900005c8:	02c56593          	ori	a1,a0,44
900005cc:	10b22a23          	sw	a1,276(tp) # 114 <offset+0xac>

900005d0 <inst_92>:

inst_92:
// rs1_val==3 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x557, 0x3, 0x556, x4, 280, x5)
900005d0:	00300513          	li	a0,3
900005d4:	55656593          	ori	a1,a0,1366
900005d8:	10b22c23          	sw	a1,280(tp) # 118 <offset+0xb0>

900005dc <inst_93>:

inst_93:
// rs1_val==3 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, 0x3, -0x555, x4, 284, x5)
900005dc:	00300513          	li	a0,3
900005e0:	aab56593          	ori	a1,a0,-1365
900005e4:	10b22e23          	sw	a1,284(tp) # 11c <offset+0xb4>

900005e8 <inst_94>:

inst_94:
// rs1_val==3 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x7, 0x3, 0x6, x4, 288, x5)
900005e8:	00300513          	li	a0,3
900005ec:	00656593          	ori	a1,a0,6
900005f0:	12b22023          	sw	a1,288(tp) # 120 <offset+0xb8>

900005f4 <inst_95>:

inst_95:
// rs1_val==3 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x337, 0x3, 0x334, x4, 292, x5)
900005f4:	00300513          	li	a0,3
900005f8:	33456593          	ori	a1,a0,820
900005fc:	12b22223          	sw	a1,292(tp) # 124 <offset+0xbc>

90000600 <inst_96>:

inst_96:
// rs1_val==3 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x3, 0x667, x4, 296, x5)
90000600:	00300513          	li	a0,3
90000604:	66756593          	ori	a1,a0,1639
90000608:	12b22423          	sw	a1,296(tp) # 128 <offset+0xc0>

9000060c <inst_97>:

inst_97:
// rs1_val==3 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x3, -0x2c, x4, 300, x5)
9000060c:	00300513          	li	a0,3
90000610:	fd456593          	ori	a1,a0,-44
90000614:	12b22623          	sw	a1,300(tp) # 12c <offset+0xc4>

90000618 <inst_98>:

inst_98:
// rs1_val==3 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x3;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x3, 0x2e, x4, 304, x5)
90000618:	00300513          	li	a0,3
9000061c:	02e56593          	ori	a1,a0,46
90000620:	12b22823          	sw	a1,304(tp) # 130 <offset+0xc8>

90000624 <inst_99>:

inst_99:
// rs1_val==1431655765 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555555, 0x3, x4, 308, x5)
90000624:	55555537          	lui	a0,0x55555
90000628:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000062c:	00356593          	ori	a1,a0,3
90000630:	12b22a23          	sw	a1,308(tp) # 134 <offset+0xcc>

90000634 <inst_100>:

inst_100:
// rs1_val==1431655765 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555555, 0x555, x4, 312, x5)
90000634:	55555537          	lui	a0,0x55555
90000638:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000063c:	55556593          	ori	a1,a0,1365
90000640:	12b22c23          	sw	a1,312(tp) # 138 <offset+0xd0>

90000644 <inst_101>:

inst_101:
// rs1_val==1431655765 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xffffffff, 0x55555555, -0x556, x4, 316, x5)
90000644:	55555537          	lui	a0,0x55555
90000648:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000064c:	aaa56593          	ori	a1,a0,-1366
90000650:	12b22e23          	sw	a1,316(tp) # 13c <offset+0xd4>

90000654 <inst_102>:

inst_102:
// rs1_val==1431655765 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555555, 0x5, x4, 320, x5)
90000654:	55555537          	lui	a0,0x55555
90000658:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000065c:	00556593          	ori	a1,a0,5
90000660:	14b22023          	sw	a1,320(tp) # 140 <offset+0xd8>

90000664 <inst_103>:

inst_103:
// rs1_val==1431655765 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555555, 0x333, x4, 324, x5)
90000664:	55555537          	lui	a0,0x55555
90000668:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000066c:	33356593          	ori	a1,a0,819
90000670:	14b22223          	sw	a1,324(tp) # 144 <offset+0xdc>

90000674 <inst_104>:

inst_104:
// rs1_val==1431655765 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555555, 0x666, x4, 328, x5)
90000674:	55555537          	lui	a0,0x55555
90000678:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000067c:	66656593          	ori	a1,a0,1638
90000680:	14b22423          	sw	a1,328(tp) # 148 <offset+0xe0>

90000684 <inst_105>:

inst_105:
// rs1_val==1431655765 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x55555555, -0x2d, x4, 332, x5)
90000684:	55555537          	lui	a0,0x55555
90000688:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000068c:	fd356593          	ori	a1,a0,-45
90000690:	14b22623          	sw	a1,332(tp) # 14c <offset+0xe4>

90000694 <inst_106>:

inst_106:
// rs1_val==1431655765 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x5555557d, 0x55555555, 0x2d, x4, 336, x5)
90000694:	55555537          	lui	a0,0x55555
90000698:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000069c:	02d56593          	ori	a1,a0,45
900006a0:	14b22823          	sw	a1,336(tp) # 150 <offset+0xe8>

900006a4 <inst_107>:

inst_107:
// rs1_val==1431655765 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555555, 0x2, x4, 340, x5)
900006a4:	55555537          	lui	a0,0x55555
900006a8:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
900006ac:	00256593          	ori	a1,a0,2
900006b0:	14b22a23          	sw	a1,340(tp) # 154 <offset+0xec>

900006b4 <inst_108>:

inst_108:
// rs1_val==1431655765 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555555, 0x554, x4, 344, x5)
900006b4:	55555537          	lui	a0,0x55555
900006b8:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
900006bc:	55456593          	ori	a1,a0,1364
900006c0:	14b22c23          	sw	a1,344(tp) # 158 <offset+0xf0>

900006c4 <inst_109>:

inst_109:
// rs1_val==1431655765 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555555, 0x0, x4, 348, x5)
900006c4:	55555537          	lui	a0,0x55555
900006c8:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
900006cc:	00056593          	ori	a1,a0,0
900006d0:	14b22e23          	sw	a1,348(tp) # 15c <offset+0xf4>

900006d4 <inst_110>:

inst_110:
// rs1_val==1431655765 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555555, 0x4, x4, 352, x5)
900006d4:	55555537          	lui	a0,0x55555
900006d8:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
900006dc:	00456593          	ori	a1,a0,4
900006e0:	16b22023          	sw	a1,352(tp) # 160 <offset+0xf8>

900006e4 <inst_111>:

inst_111:
// rs1_val==1431655765 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555555, 0x332, x4, 356, x5)
900006e4:	55555537          	lui	a0,0x55555
900006e8:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
900006ec:	33256593          	ori	a1,a0,818
900006f0:	16b22223          	sw	a1,356(tp) # 164 <offset+0xfc>

900006f4 <inst_112>:

inst_112:
// rs1_val==1431655765 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x55555775, 0x55555555, 0x665, x4, 360, x5)
900006f4:	55555537          	lui	a0,0x55555
900006f8:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
900006fc:	66556593          	ori	a1,a0,1637
90000700:	16b22423          	sw	a1,360(tp) # 168 <offset+0x100>

90000704 <inst_113>:

inst_113:
// rs1_val==1431655765 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x5555557d, 0x55555555, 0x2c, x4, 364, x5)
90000704:	55555537          	lui	a0,0x55555
90000708:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000070c:	02c56593          	ori	a1,a0,44
90000710:	16b22623          	sw	a1,364(tp) # 16c <offset+0x104>

90000714 <inst_114>:

inst_114:
// rs1_val==1431655765 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555555, 0x556, x4, 368, x5)
90000714:	55555537          	lui	a0,0x55555
90000718:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000071c:	55656593          	ori	a1,a0,1366
90000720:	16b22823          	sw	a1,368(tp) # 170 <offset+0x108>

90000724 <inst_115>:

inst_115:
// rs1_val==1431655765 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffff, 0x55555555, -0x555, x4, 372, x5)
90000724:	55555537          	lui	a0,0x55555
90000728:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000072c:	aab56593          	ori	a1,a0,-1365
90000730:	16b22a23          	sw	a1,372(tp) # 174 <offset+0x10c>

90000734 <inst_116>:

inst_116:
// rs1_val==1431655765 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555555, 0x6, x4, 376, x5)
90000734:	55555537          	lui	a0,0x55555
90000738:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000073c:	00656593          	ori	a1,a0,6
90000740:	16b22c23          	sw	a1,376(tp) # 178 <offset+0x110>

90000744 <inst_117>:

inst_117:
// rs1_val==1431655765 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x55555775, 0x55555555, 0x334, x4, 380, x5)
90000744:	55555537          	lui	a0,0x55555
90000748:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000074c:	33456593          	ori	a1,a0,820
90000750:	16b22e23          	sw	a1,380(tp) # 17c <offset+0x114>

90000754 <inst_118>:

inst_118:
// rs1_val==1431655765 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555555, 0x667, x4, 384, x5)
90000754:	55555537          	lui	a0,0x55555
90000758:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000075c:	66756593          	ori	a1,a0,1639
90000760:	18b22023          	sw	a1,384(tp) # 180 <offset+0x118>

90000764 <inst_119>:

inst_119:
// rs1_val==1431655765 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd5, 0x55555555, -0x2c, x4, 388, x5)
90000764:	55555537          	lui	a0,0x55555
90000768:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000076c:	fd456593          	ori	a1,a0,-44
90000770:	18b22223          	sw	a1,388(tp) # 184 <offset+0x11c>

90000774 <inst_120>:

inst_120:
// rs1_val==1431655765 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555555;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x5555557f, 0x55555555, 0x2e, x4, 392, x5)
90000774:	55555537          	lui	a0,0x55555
90000778:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555554ed>
9000077c:	02e56593          	ori	a1,a0,46
90000780:	18b22423          	sw	a1,392(tp) # 188 <offset+0x120>

90000784 <inst_121>:

inst_121:
// rs1_val==-1431655766 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaab, -0x55555556, 0x3, x4, 396, x5)
90000784:	aaaab537          	lui	a0,0xaaaab
90000788:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000078c:	00356593          	ori	a1,a0,3
90000790:	18b22623          	sw	a1,396(tp) # 18c <offset+0x124>

90000794 <inst_122>:

inst_122:
// rs1_val==-1431655766 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xaaaaafff, -0x55555556, 0x555, x4, 400, x5)
90000794:	aaaab537          	lui	a0,0xaaaab
90000798:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000079c:	55556593          	ori	a1,a0,1365
900007a0:	18b22823          	sw	a1,400(tp) # 190 <offset+0x128>

900007a4 <inst_123>:

inst_123:
// rs1_val==-1431655766 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaaa, -0x55555556, -0x556, x4, 404, x5)
900007a4:	aaaab537          	lui	a0,0xaaaab
900007a8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007ac:	aaa56593          	ori	a1,a0,-1366
900007b0:	18b22a23          	sw	a1,404(tp) # 194 <offset+0x12c>

900007b4 <inst_124>:

inst_124:
// rs1_val==-1431655766 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555556, 0x5, x4, 408, x5)
900007b4:	aaaab537          	lui	a0,0xaaaab
900007b8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007bc:	00556593          	ori	a1,a0,5
900007c0:	18b22c23          	sw	a1,408(tp) # 198 <offset+0x130>

900007c4 <inst_125>:

inst_125:
// rs1_val==-1431655766 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xaaaaabbb, -0x55555556, 0x333, x4, 412, x5)
900007c4:	aaaab537          	lui	a0,0xaaaab
900007c8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007cc:	33356593          	ori	a1,a0,819
900007d0:	18b22e23          	sw	a1,412(tp) # 19c <offset+0x134>

900007d4 <inst_126>:

inst_126:
// rs1_val==-1431655766 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeee, -0x55555556, 0x666, x4, 416, x5)
900007d4:	aaaab537          	lui	a0,0xaaaab
900007d8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007dc:	66656593          	ori	a1,a0,1638
900007e0:	1ab22023          	sw	a1,416(tp) # 1a0 <offset+0x138>

900007e4 <inst_127>:

inst_127:
// rs1_val==-1431655766 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffffb, -0x55555556, -0x2d, x4, 420, x5)
900007e4:	aaaab537          	lui	a0,0xaaaab
900007e8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007ec:	fd356593          	ori	a1,a0,-45
900007f0:	1ab22223          	sw	a1,420(tp) # 1a4 <offset+0x13c>

900007f4 <inst_128>:

inst_128:
// rs1_val==-1431655766 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555556, 0x2d, x4, 424, x5)
900007f4:	aaaab537          	lui	a0,0xaaaab
900007f8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900007fc:	02d56593          	ori	a1,a0,45
90000800:	1ab22423          	sw	a1,424(tp) # 1a8 <offset+0x140>

90000804 <inst_129>:

inst_129:
// rs1_val==-1431655766 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaa, -0x55555556, 0x2, x4, 428, x5)
90000804:	aaaab537          	lui	a0,0xaaaab
90000808:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000080c:	00256593          	ori	a1,a0,2
90000810:	1ab22623          	sw	a1,428(tp) # 1ac <offset+0x144>

90000814 <inst_130>:

inst_130:
// rs1_val==-1431655766 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xaaaaaffe, -0x55555556, 0x554, x4, 432, x5)
90000814:	aaaab537          	lui	a0,0xaaaab
90000818:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000081c:	55456593          	ori	a1,a0,1364
90000820:	1ab22823          	sw	a1,432(tp) # 1b0 <offset+0x148>

90000824 <inst_131>:

inst_131:
// rs1_val==-1431655766 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaa, -0x55555556, 0x0, x4, 436, x5)
90000824:	aaaab537          	lui	a0,0xaaaab
90000828:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000082c:	00056593          	ori	a1,a0,0
90000830:	1ab22a23          	sw	a1,436(tp) # 1b4 <offset+0x14c>

90000834 <inst_132>:

inst_132:
// rs1_val==-1431655766 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaae, -0x55555556, 0x4, x4, 440, x5)
90000834:	aaaab537          	lui	a0,0xaaaab
90000838:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000083c:	00456593          	ori	a1,a0,4
90000840:	1ab22c23          	sw	a1,440(tp) # 1b8 <offset+0x150>

90000844 <inst_133>:

inst_133:
// rs1_val==-1431655766 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xaaaaabba, -0x55555556, 0x332, x4, 444, x5)
90000844:	aaaab537          	lui	a0,0xaaaab
90000848:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000084c:	33256593          	ori	a1,a0,818
90000850:	1ab22e23          	sw	a1,444(tp) # 1bc <offset+0x154>

90000854 <inst_134>:

inst_134:
// rs1_val==-1431655766 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeef, -0x55555556, 0x665, x4, 448, x5)
90000854:	aaaab537          	lui	a0,0xaaaab
90000858:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000085c:	66556593          	ori	a1,a0,1637
90000860:	1cb22023          	sw	a1,448(tp) # 1c0 <offset+0x158>

90000864 <inst_135>:

inst_135:
// rs1_val==-1431655766 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaae, -0x55555556, 0x2c, x4, 452, x5)
90000864:	aaaab537          	lui	a0,0xaaaab
90000868:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000086c:	02c56593          	ori	a1,a0,44
90000870:	1cb22223          	sw	a1,452(tp) # 1c4 <offset+0x15c>

90000874 <inst_136>:

inst_136:
// rs1_val==-1431655766 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xaaaaaffe, -0x55555556, 0x556, x4, 456, x5)
90000874:	aaaab537          	lui	a0,0xaaaab
90000878:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000087c:	55656593          	ori	a1,a0,1366
90000880:	1cb22423          	sw	a1,456(tp) # 1c8 <offset+0x160>

90000884 <inst_137>:

inst_137:
// rs1_val==-1431655766 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, -0x55555556, -0x555, x4, 460, x5)
90000884:	aaaab537          	lui	a0,0xaaaab
90000888:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000088c:	aab56593          	ori	a1,a0,-1365
90000890:	1cb22623          	sw	a1,460(tp) # 1cc <offset+0x164>

90000894 <inst_138>:

inst_138:
// rs1_val==-1431655766 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaae, -0x55555556, 0x6, x4, 464, x5)
90000894:	aaaab537          	lui	a0,0xaaaab
90000898:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
9000089c:	00656593          	ori	a1,a0,6
900008a0:	1cb22823          	sw	a1,464(tp) # 1d0 <offset+0x168>

900008a4 <inst_139>:

inst_139:
// rs1_val==-1431655766 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xaaaaabbe, -0x55555556, 0x334, x4, 468, x5)
900008a4:	aaaab537          	lui	a0,0xaaaab
900008a8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900008ac:	33456593          	ori	a1,a0,820
900008b0:	1cb22a23          	sw	a1,468(tp) # 1d4 <offset+0x16c>

900008b4 <inst_140>:

inst_140:
// rs1_val==-1431655766 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeef, -0x55555556, 0x667, x4, 472, x5)
900008b4:	aaaab537          	lui	a0,0xaaaab
900008b8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900008bc:	66756593          	ori	a1,a0,1639
900008c0:	1cb22c23          	sw	a1,472(tp) # 1d8 <offset+0x170>

900008c4 <inst_141>:

inst_141:
// rs1_val==-1431655766 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffffe, -0x55555556, -0x2c, x4, 476, x5)
900008c4:	aaaab537          	lui	a0,0xaaaab
900008c8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900008cc:	fd456593          	ori	a1,a0,-44
900008d0:	1cb22e23          	sw	a1,476(tp) # 1dc <offset+0x174>

900008d4 <inst_142>:

inst_142:
// rs1_val==-1431655766 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555556;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaae, -0x55555556, 0x2e, x4, 480, x5)
900008d4:	aaaab537          	lui	a0,0xaaaab
900008d8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa60a6>
900008dc:	02e56593          	ori	a1,a0,46
900008e0:	1eb22023          	sw	a1,480(tp) # 1e0 <offset+0x178>

900008e4 <inst_143>:

inst_143:
// rs1_val==5 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x7, 0x5, 0x3, x4, 484, x5)
900008e4:	00500513          	li	a0,5
900008e8:	00356593          	ori	a1,a0,3
900008ec:	1eb22223          	sw	a1,484(tp) # 1e4 <offset+0x17c>

900008f0 <inst_144>:

inst_144:
// rs1_val==5 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x555, 0x5, 0x555, x4, 488, x5)
900008f0:	00500513          	li	a0,5
900008f4:	55556593          	ori	a1,a0,1365
900008f8:	1eb22423          	sw	a1,488(tp) # 1e8 <offset+0x180>

900008fc <inst_145>:

inst_145:
// rs1_val==5 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaaf, 0x5, -0x556, x4, 492, x5)
900008fc:	00500513          	li	a0,5
90000900:	aaa56593          	ori	a1,a0,-1366
90000904:	1eb22623          	sw	a1,492(tp) # 1ec <offset+0x184>

90000908 <inst_146>:

inst_146:
// rs1_val==5 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x5, 0x5, 0x5, x4, 496, x5)
90000908:	00500513          	li	a0,5
9000090c:	00556593          	ori	a1,a0,5
90000910:	1eb22823          	sw	a1,496(tp) # 1f0 <offset+0x188>

90000914 <inst_147>:

inst_147:
// rs1_val==5 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x337, 0x5, 0x333, x4, 500, x5)
90000914:	00500513          	li	a0,5
90000918:	33356593          	ori	a1,a0,819
9000091c:	1eb22a23          	sw	a1,500(tp) # 1f4 <offset+0x18c>

90000920 <inst_148>:

inst_148:
// rs1_val==5 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x667, 0x5, 0x666, x4, 504, x5)
90000920:	00500513          	li	a0,5
90000924:	66656593          	ori	a1,a0,1638
90000928:	1eb22c23          	sw	a1,504(tp) # 1f8 <offset+0x190>

9000092c <inst_149>:

inst_149:
// rs1_val==5 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x5, -0x2d, x4, 508, x5)
9000092c:	00500513          	li	a0,5
90000930:	fd356593          	ori	a1,a0,-45
90000934:	1eb22e23          	sw	a1,508(tp) # 1fc <offset+0x194>

90000938 <inst_150>:

inst_150:
// rs1_val==5 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2d, 0x5, 0x2d, x4, 512, x5)
90000938:	00500513          	li	a0,5
9000093c:	02d56593          	ori	a1,a0,45
90000940:	20b22023          	sw	a1,512(tp) # 200 <offset+0x198>

90000944 <inst_151>:

inst_151:
// rs1_val==5 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x7, 0x5, 0x2, x4, 516, x5)
90000944:	00500513          	li	a0,5
90000948:	00256593          	ori	a1,a0,2
9000094c:	20b22223          	sw	a1,516(tp) # 204 <offset+0x19c>

90000950 <inst_152>:

inst_152:
// rs1_val==5 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x555, 0x5, 0x554, x4, 520, x5)
90000950:	00500513          	li	a0,5
90000954:	55456593          	ori	a1,a0,1364
90000958:	20b22423          	sw	a1,520(tp) # 208 <offset+0x1a0>

9000095c <inst_153>:

inst_153:
// rs1_val==5 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x5, 0x5, 0x0, x4, 524, x5)
9000095c:	00500513          	li	a0,5
90000960:	00056593          	ori	a1,a0,0
90000964:	20b22623          	sw	a1,524(tp) # 20c <offset+0x1a4>

90000968 <inst_154>:

inst_154:
// rs1_val==5 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x5, 0x5, 0x4, x4, 528, x5)
90000968:	00500513          	li	a0,5
9000096c:	00456593          	ori	a1,a0,4
90000970:	20b22823          	sw	a1,528(tp) # 210 <offset+0x1a8>

90000974 <inst_155>:

inst_155:
// rs1_val==5 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x337, 0x5, 0x332, x4, 532, x5)
90000974:	00500513          	li	a0,5
90000978:	33256593          	ori	a1,a0,818
9000097c:	20b22a23          	sw	a1,532(tp) # 214 <offset+0x1ac>

90000980 <inst_156>:

inst_156:
// rs1_val==5 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x665, 0x5, 0x665, x4, 536, x5)
90000980:	00500513          	li	a0,5
90000984:	66556593          	ori	a1,a0,1637
90000988:	20b22c23          	sw	a1,536(tp) # 218 <offset+0x1b0>

9000098c <inst_157>:

inst_157:
// rs1_val==5 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2d, 0x5, 0x2c, x4, 540, x5)
9000098c:	00500513          	li	a0,5
90000990:	02c56593          	ori	a1,a0,44
90000994:	20b22e23          	sw	a1,540(tp) # 21c <offset+0x1b4>

90000998 <inst_158>:

inst_158:
// rs1_val==5 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x557, 0x5, 0x556, x4, 544, x5)
90000998:	00500513          	li	a0,5
9000099c:	55656593          	ori	a1,a0,1366
900009a0:	22b22023          	sw	a1,544(tp) # 220 <offset+0x1b8>

900009a4 <inst_159>:

inst_159:
// rs1_val==5 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaaf, 0x5, -0x555, x4, 548, x5)
900009a4:	00500513          	li	a0,5
900009a8:	aab56593          	ori	a1,a0,-1365
900009ac:	22b22223          	sw	a1,548(tp) # 224 <offset+0x1bc>

900009b0 <inst_160>:

inst_160:
// rs1_val==5 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x7, 0x5, 0x6, x4, 552, x5)
900009b0:	00500513          	li	a0,5
900009b4:	00656593          	ori	a1,a0,6
900009b8:	22b22423          	sw	a1,552(tp) # 228 <offset+0x1c0>

900009bc <inst_161>:

inst_161:
// rs1_val==5 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x335, 0x5, 0x334, x4, 556, x5)
900009bc:	00500513          	li	a0,5
900009c0:	33456593          	ori	a1,a0,820
900009c4:	22b22623          	sw	a1,556(tp) # 22c <offset+0x1c4>

900009c8 <inst_162>:

inst_162:
// rs1_val==5 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x5, 0x667, x4, 560, x5)
900009c8:	00500513          	li	a0,5
900009cc:	66756593          	ori	a1,a0,1639
900009d0:	22b22823          	sw	a1,560(tp) # 230 <offset+0x1c8>

900009d4 <inst_163>:

inst_163:
// rs1_val==5 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd5, 0x5, -0x2c, x4, 564, x5)
900009d4:	00500513          	li	a0,5
900009d8:	fd456593          	ori	a1,a0,-44
900009dc:	22b22a23          	sw	a1,564(tp) # 234 <offset+0x1cc>

900009e0 <inst_164>:

inst_164:
// rs1_val==5 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x5;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x5, 0x2e, x4, 568, x5)
900009e0:	00500513          	li	a0,5
900009e4:	02e56593          	ori	a1,a0,46
900009e8:	22b22c23          	sw	a1,568(tp) # 238 <offset+0x1d0>

900009ec <inst_165>:

inst_165:
// rs1_val==858993459 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333333, 0x3, x4, 572, x5)
900009ec:	33333537          	lui	a0,0x33333
900009f0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
900009f4:	00356593          	ori	a1,a0,3
900009f8:	22b22e23          	sw	a1,572(tp) # 23c <offset+0x1d4>

900009fc <inst_166>:

inst_166:
// rs1_val==858993459 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x555, x4, 576, x5)
900009fc:	33333537          	lui	a0,0x33333
90000a00:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000a04:	55556593          	ori	a1,a0,1365
90000a08:	24b22023          	sw	a1,576(tp) # 240 <offset+0x1d8>

90000a0c <inst_167>:

inst_167:
// rs1_val==858993459 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffbbb, 0x33333333, -0x556, x4, 580, x5)
90000a0c:	33333537          	lui	a0,0x33333
90000a10:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000a14:	aaa56593          	ori	a1,a0,-1366
90000a18:	24b22223          	sw	a1,580(tp) # 244 <offset+0x1dc>

90000a1c <inst_168>:

inst_168:
// rs1_val==858993459 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333333, 0x5, x4, 584, x5)
90000a1c:	33333537          	lui	a0,0x33333
90000a20:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000a24:	00556593          	ori	a1,a0,5
90000a28:	24b22423          	sw	a1,584(tp) # 248 <offset+0x1e0>

90000a2c <inst_169>:

inst_169:
// rs1_val==858993459 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333333, 0x333, x4, 588, x5)
90000a2c:	33333537          	lui	a0,0x33333
90000a30:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000a34:	33356593          	ori	a1,a0,819
90000a38:	24b22623          	sw	a1,588(tp) # 24c <offset+0x1e4>

90000a3c <inst_170>:

inst_170:
// rs1_val==858993459 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x666, x4, 592, x5)
90000a3c:	33333537          	lui	a0,0x33333
90000a40:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000a44:	66656593          	ori	a1,a0,1638
90000a48:	24b22823          	sw	a1,592(tp) # 250 <offset+0x1e8>

90000a4c <inst_171>:

inst_171:
// rs1_val==858993459 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff3, 0x33333333, -0x2d, x4, 596, x5)
90000a4c:	33333537          	lui	a0,0x33333
90000a50:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000a54:	fd356593          	ori	a1,a0,-45
90000a58:	24b22a23          	sw	a1,596(tp) # 254 <offset+0x1ec>

90000a5c <inst_172>:

inst_172:
// rs1_val==858993459 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x3333333f, 0x33333333, 0x2d, x4, 600, x5)
90000a5c:	33333537          	lui	a0,0x33333
90000a60:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000a64:	02d56593          	ori	a1,a0,45
90000a68:	24b22c23          	sw	a1,600(tp) # 258 <offset+0x1f0>

90000a6c <inst_173>:

inst_173:
// rs1_val==858993459 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333333, 0x2, x4, 604, x5)
90000a6c:	33333537          	lui	a0,0x33333
90000a70:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000a74:	00256593          	ori	a1,a0,2
90000a78:	24b22e23          	sw	a1,604(tp) # 25c <offset+0x1f4>

90000a7c <inst_174>:

inst_174:
// rs1_val==858993459 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x554, x4, 608, x5)
90000a7c:	33333537          	lui	a0,0x33333
90000a80:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000a84:	55456593          	ori	a1,a0,1364
90000a88:	26b22023          	sw	a1,608(tp) # 260 <offset+0x1f8>

90000a8c <inst_175>:

inst_175:
// rs1_val==858993459 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333333, 0x0, x4, 612, x5)
90000a8c:	33333537          	lui	a0,0x33333
90000a90:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000a94:	00056593          	ori	a1,a0,0
90000a98:	26b22223          	sw	a1,612(tp) # 264 <offset+0x1fc>

90000a9c <inst_176>:

inst_176:
// rs1_val==858993459 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333333, 0x4, x4, 616, x5)
90000a9c:	33333537          	lui	a0,0x33333
90000aa0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000aa4:	00456593          	ori	a1,a0,4
90000aa8:	26b22423          	sw	a1,616(tp) # 268 <offset+0x200>

90000aac <inst_177>:

inst_177:
// rs1_val==858993459 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333333, 0x332, x4, 620, x5)
90000aac:	33333537          	lui	a0,0x33333
90000ab0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000ab4:	33256593          	ori	a1,a0,818
90000ab8:	26b22623          	sw	a1,620(tp) # 26c <offset+0x204>

90000abc <inst_178>:

inst_178:
// rs1_val==858993459 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x665, x4, 624, x5)
90000abc:	33333537          	lui	a0,0x33333
90000ac0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000ac4:	66556593          	ori	a1,a0,1637
90000ac8:	26b22823          	sw	a1,624(tp) # 270 <offset+0x208>

90000acc <inst_179>:

inst_179:
// rs1_val==858993459 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x3333333f, 0x33333333, 0x2c, x4, 628, x5)
90000acc:	33333537          	lui	a0,0x33333
90000ad0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000ad4:	02c56593          	ori	a1,a0,44
90000ad8:	26b22a23          	sw	a1,628(tp) # 274 <offset+0x20c>

90000adc <inst_180>:

inst_180:
// rs1_val==858993459 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x556, x4, 632, x5)
90000adc:	33333537          	lui	a0,0x33333
90000ae0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000ae4:	55656593          	ori	a1,a0,1366
90000ae8:	26b22c23          	sw	a1,632(tp) # 278 <offset+0x210>

90000aec <inst_181>:

inst_181:
// rs1_val==858993459 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffbbb, 0x33333333, -0x555, x4, 636, x5)
90000aec:	33333537          	lui	a0,0x33333
90000af0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000af4:	aab56593          	ori	a1,a0,-1365
90000af8:	26b22e23          	sw	a1,636(tp) # 27c <offset+0x214>

90000afc <inst_182>:

inst_182:
// rs1_val==858993459 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333333, 0x6, x4, 640, x5)
90000afc:	33333537          	lui	a0,0x33333
90000b00:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000b04:	00656593          	ori	a1,a0,6
90000b08:	28b22023          	sw	a1,640(tp) # 280 <offset+0x218>

90000b0c <inst_183>:

inst_183:
// rs1_val==858993459 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333333, 0x334, x4, 644, x5)
90000b0c:	33333537          	lui	a0,0x33333
90000b10:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000b14:	33456593          	ori	a1,a0,820
90000b18:	28b22223          	sw	a1,644(tp) # 284 <offset+0x21c>

90000b1c <inst_184>:

inst_184:
// rs1_val==858993459 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333333, 0x667, x4, 648, x5)
90000b1c:	33333537          	lui	a0,0x33333
90000b20:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000b24:	66756593          	ori	a1,a0,1639
90000b28:	28b22423          	sw	a1,648(tp) # 288 <offset+0x220>

90000b2c <inst_185>:

inst_185:
// rs1_val==858993459 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x33333333, -0x2c, x4, 652, x5)
90000b2c:	33333537          	lui	a0,0x33333
90000b30:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000b34:	fd456593          	ori	a1,a0,-44
90000b38:	28b22623          	sw	a1,652(tp) # 28c <offset+0x224>

90000b3c <inst_186>:

inst_186:
// rs1_val==858993459 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333333;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x3333333f, 0x33333333, 0x2e, x4, 656, x5)
90000b3c:	33333537          	lui	a0,0x33333
90000b40:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333332cb>
90000b44:	02e56593          	ori	a1,a0,46
90000b48:	28b22823          	sw	a1,656(tp) # 290 <offset+0x228>

90000b4c <inst_187>:

inst_187:
// rs1_val==1717986918 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666666, 0x3, x4, 660, x5)
90000b4c:	66666537          	lui	a0,0x66666
90000b50:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000b54:	00356593          	ori	a1,a0,3
90000b58:	28b22a23          	sw	a1,660(tp) # 294 <offset+0x22c>

90000b5c <inst_188>:

inst_188:
// rs1_val==1717986918 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666666, 0x555, x4, 664, x5)
90000b5c:	66666537          	lui	a0,0x66666
90000b60:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000b64:	55556593          	ori	a1,a0,1365
90000b68:	28b22c23          	sw	a1,664(tp) # 298 <offset+0x230>

90000b6c <inst_189>:

inst_189:
// rs1_val==1717986918 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffeee, 0x66666666, -0x556, x4, 668, x5)
90000b6c:	66666537          	lui	a0,0x66666
90000b70:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000b74:	aaa56593          	ori	a1,a0,-1366
90000b78:	28b22e23          	sw	a1,668(tp) # 29c <offset+0x234>

90000b7c <inst_190>:

inst_190:
// rs1_val==1717986918 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666666, 0x5, x4, 672, x5)
90000b7c:	66666537          	lui	a0,0x66666
90000b80:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000b84:	00556593          	ori	a1,a0,5
90000b88:	2ab22023          	sw	a1,672(tp) # 2a0 <offset+0x238>

90000b8c <inst_191>:

inst_191:
// rs1_val==1717986918 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666666, 0x333, x4, 676, x5)
90000b8c:	66666537          	lui	a0,0x66666
90000b90:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000b94:	33356593          	ori	a1,a0,819
90000b98:	2ab22223          	sw	a1,676(tp) # 2a4 <offset+0x23c>

90000b9c <inst_192>:

inst_192:
// rs1_val==1717986918 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x66666666, 0x66666666, 0x666, x4, 680, x5)
90000b9c:	66666537          	lui	a0,0x66666
90000ba0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000ba4:	66656593          	ori	a1,a0,1638
90000ba8:	2ab22423          	sw	a1,680(tp) # 2a8 <offset+0x240>

90000bac <inst_193>:

inst_193:
// rs1_val==1717986918 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x66666666, -0x2d, x4, 684, x5)
90000bac:	66666537          	lui	a0,0x66666
90000bb0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000bb4:	fd356593          	ori	a1,a0,-45
90000bb8:	2ab22623          	sw	a1,684(tp) # 2ac <offset+0x244>

90000bbc <inst_194>:

inst_194:
// rs1_val==1717986918 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x6666666f, 0x66666666, 0x2d, x4, 688, x5)
90000bbc:	66666537          	lui	a0,0x66666
90000bc0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000bc4:	02d56593          	ori	a1,a0,45
90000bc8:	2ab22823          	sw	a1,688(tp) # 2b0 <offset+0x248>

90000bcc <inst_195>:

inst_195:
// rs1_val==1717986918 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x66666666, 0x66666666, 0x2, x4, 692, x5)
90000bcc:	66666537          	lui	a0,0x66666
90000bd0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000bd4:	00256593          	ori	a1,a0,2
90000bd8:	2ab22a23          	sw	a1,692(tp) # 2b4 <offset+0x24c>

90000bdc <inst_196>:

inst_196:
// rs1_val==1717986918 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x66666776, 0x66666666, 0x554, x4, 696, x5)
90000bdc:	66666537          	lui	a0,0x66666
90000be0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000be4:	55456593          	ori	a1,a0,1364
90000be8:	2ab22c23          	sw	a1,696(tp) # 2b8 <offset+0x250>

90000bec <inst_197>:

inst_197:
// rs1_val==1717986918 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x66666666, 0x66666666, 0x0, x4, 700, x5)
90000bec:	66666537          	lui	a0,0x66666
90000bf0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000bf4:	00056593          	ori	a1,a0,0
90000bf8:	2ab22e23          	sw	a1,700(tp) # 2bc <offset+0x254>

90000bfc <inst_198>:

inst_198:
// rs1_val==1717986918 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x66666666, 0x66666666, 0x4, x4, 704, x5)
90000bfc:	66666537          	lui	a0,0x66666
90000c00:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000c04:	00456593          	ori	a1,a0,4
90000c08:	2cb22023          	sw	a1,704(tp) # 2c0 <offset+0x258>

90000c0c <inst_199>:

inst_199:
// rs1_val==1717986918 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x66666776, 0x66666666, 0x332, x4, 708, x5)
90000c0c:	66666537          	lui	a0,0x66666
90000c10:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000c14:	33256593          	ori	a1,a0,818
90000c18:	2cb22223          	sw	a1,708(tp) # 2c4 <offset+0x25c>

90000c1c <inst_200>:

inst_200:
// rs1_val==1717986918 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666666, 0x665, x4, 712, x5)
90000c1c:	66666537          	lui	a0,0x66666
90000c20:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000c24:	66556593          	ori	a1,a0,1637
90000c28:	2cb22423          	sw	a1,712(tp) # 2c8 <offset+0x260>

90000c2c <inst_201>:

inst_201:
// rs1_val==1717986918 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x6666666e, 0x66666666, 0x2c, x4, 716, x5)
90000c2c:	66666537          	lui	a0,0x66666
90000c30:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000c34:	02c56593          	ori	a1,a0,44
90000c38:	2cb22623          	sw	a1,716(tp) # 2cc <offset+0x264>

90000c3c <inst_202>:

inst_202:
// rs1_val==1717986918 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x66666776, 0x66666666, 0x556, x4, 720, x5)
90000c3c:	66666537          	lui	a0,0x66666
90000c40:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000c44:	55656593          	ori	a1,a0,1366
90000c48:	2cb22823          	sw	a1,720(tp) # 2d0 <offset+0x268>

90000c4c <inst_203>:

inst_203:
// rs1_val==1717986918 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffeef, 0x66666666, -0x555, x4, 724, x5)
90000c4c:	66666537          	lui	a0,0x66666
90000c50:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000c54:	aab56593          	ori	a1,a0,-1365
90000c58:	2cb22a23          	sw	a1,724(tp) # 2d4 <offset+0x26c>

90000c5c <inst_204>:

inst_204:
// rs1_val==1717986918 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x66666666, 0x66666666, 0x6, x4, 728, x5)
90000c5c:	66666537          	lui	a0,0x66666
90000c60:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000c64:	00656593          	ori	a1,a0,6
90000c68:	2cb22c23          	sw	a1,728(tp) # 2d8 <offset+0x270>

90000c6c <inst_205>:

inst_205:
// rs1_val==1717986918 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x66666776, 0x66666666, 0x334, x4, 732, x5)
90000c6c:	66666537          	lui	a0,0x66666
90000c70:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000c74:	33456593          	ori	a1,a0,820
90000c78:	2cb22e23          	sw	a1,732(tp) # 2dc <offset+0x274>

90000c7c <inst_206>:

inst_206:
// rs1_val==1717986918 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666666, 0x667, x4, 736, x5)
90000c7c:	66666537          	lui	a0,0x66666
90000c80:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000c84:	66756593          	ori	a1,a0,1639
90000c88:	2eb22023          	sw	a1,736(tp) # 2e0 <offset+0x278>

90000c8c <inst_207>:

inst_207:
// rs1_val==1717986918 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff6, 0x66666666, -0x2c, x4, 740, x5)
90000c8c:	66666537          	lui	a0,0x66666
90000c90:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000c94:	fd456593          	ori	a1,a0,-44
90000c98:	2eb22223          	sw	a1,740(tp) # 2e4 <offset+0x27c>

90000c9c <inst_208>:

inst_208:
// rs1_val==1717986918 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666666;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x6666666e, 0x66666666, 0x2e, x4, 744, x5)
90000c9c:	66666537          	lui	a0,0x66666
90000ca0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666665fe>
90000ca4:	02e56593          	ori	a1,a0,46
90000ca8:	2eb22423          	sw	a1,744(tp) # 2e8 <offset+0x280>

90000cac <inst_209>:

inst_209:
// rs1_val==-46340 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xffff4aff, -0xb504, 0x3, x4, 748, x5)
90000cac:	ffff5537          	lui	a0,0xffff5
90000cb0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000cb4:	00356593          	ori	a1,a0,3
90000cb8:	2eb22623          	sw	a1,748(tp) # 2ec <offset+0x284>

90000cbc <inst_210>:

inst_210:
// rs1_val==-46340 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xffff4ffd, -0xb504, 0x555, x4, 752, x5)
90000cbc:	ffff5537          	lui	a0,0xffff5
90000cc0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000cc4:	55556593          	ori	a1,a0,1365
90000cc8:	2eb22823          	sw	a1,752(tp) # 2f0 <offset+0x288>

90000ccc <inst_211>:

inst_211:
// rs1_val==-46340 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb504, 0x5, x4, 756, x5)
90000ccc:	ffff5537          	lui	a0,0xffff5
90000cd0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000cd4:	00556593          	ori	a1,a0,5
90000cd8:	2eb22a23          	sw	a1,756(tp) # 2f4 <offset+0x28c>

90000cdc <inst_212>:

inst_212:
// rs1_val==-46340 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xffff4bff, -0xb504, 0x333, x4, 760, x5)
90000cdc:	ffff5537          	lui	a0,0xffff5
90000ce0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000ce4:	33356593          	ori	a1,a0,819
90000ce8:	2eb22c23          	sw	a1,760(tp) # 2f8 <offset+0x290>

90000cec <inst_213>:

inst_213:
// rs1_val==-46340 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xffff4efe, -0xb504, 0x666, x4, 764, x5)
90000cec:	ffff5537          	lui	a0,0xffff5
90000cf0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000cf4:	66656593          	ori	a1,a0,1638
90000cf8:	2eb22e23          	sw	a1,764(tp) # 2fc <offset+0x294>

90000cfc <inst_214>:

inst_214:
// rs1_val==-46340 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0xb504, -0x2d, x4, 768, x5)
90000cfc:	ffff5537          	lui	a0,0xffff5
90000d00:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d04:	fd356593          	ori	a1,a0,-45
90000d08:	30b22023          	sw	a1,768(tp) # 300 <offset+0x298>

90000d0c <inst_215>:

inst_215:
// rs1_val==-46340 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb504, 0x2d, x4, 772, x5)
90000d0c:	ffff5537          	lui	a0,0xffff5
90000d10:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d14:	02d56593          	ori	a1,a0,45
90000d18:	30b22223          	sw	a1,772(tp) # 304 <offset+0x29c>

90000d1c <inst_216>:

inst_216:
// rs1_val==-46340 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xffff4afe, -0xb504, 0x2, x4, 776, x5)
90000d1c:	ffff5537          	lui	a0,0xffff5
90000d20:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d24:	00256593          	ori	a1,a0,2
90000d28:	30b22423          	sw	a1,776(tp) # 308 <offset+0x2a0>

90000d2c <inst_217>:

inst_217:
// rs1_val==-46340 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xffff4ffc, -0xb504, 0x554, x4, 780, x5)
90000d2c:	ffff5537          	lui	a0,0xffff5
90000d30:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d34:	55456593          	ori	a1,a0,1364
90000d38:	30b22623          	sw	a1,780(tp) # 30c <offset+0x2a4>

90000d3c <inst_218>:

inst_218:
// rs1_val==-46340 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xffff4afc, -0xb504, 0x0, x4, 784, x5)
90000d3c:	ffff5537          	lui	a0,0xffff5
90000d40:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d44:	00056593          	ori	a1,a0,0
90000d48:	30b22823          	sw	a1,784(tp) # 310 <offset+0x2a8>

90000d4c <inst_219>:

inst_219:
// rs1_val==-46340 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xffff4afc, -0xb504, 0x4, x4, 788, x5)
90000d4c:	ffff5537          	lui	a0,0xffff5
90000d50:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d54:	00456593          	ori	a1,a0,4
90000d58:	30b22a23          	sw	a1,788(tp) # 314 <offset+0x2ac>

90000d5c <inst_220>:

inst_220:
// rs1_val==-46340 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xffff4bfe, -0xb504, 0x332, x4, 792, x5)
90000d5c:	ffff5537          	lui	a0,0xffff5
90000d60:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d64:	33256593          	ori	a1,a0,818
90000d68:	30b22c23          	sw	a1,792(tp) # 318 <offset+0x2b0>

90000d6c <inst_221>:

inst_221:
// rs1_val==-46340 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xffff4efd, -0xb504, 0x665, x4, 796, x5)
90000d6c:	ffff5537          	lui	a0,0xffff5
90000d70:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d74:	66556593          	ori	a1,a0,1637
90000d78:	30b22e23          	sw	a1,796(tp) # 31c <offset+0x2b4>

90000d7c <inst_222>:

inst_222:
// rs1_val==-46340 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xffff4afc, -0xb504, 0x2c, x4, 800, x5)
90000d7c:	ffff5537          	lui	a0,0xffff5
90000d80:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d84:	02c56593          	ori	a1,a0,44
90000d88:	32b22023          	sw	a1,800(tp) # 320 <offset+0x2b8>

90000d8c <inst_223>:

inst_223:
// rs1_val==-46340 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xffff4ffe, -0xb504, 0x556, x4, 804, x5)
90000d8c:	ffff5537          	lui	a0,0xffff5
90000d90:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000d94:	55656593          	ori	a1,a0,1366
90000d98:	32b22223          	sw	a1,804(tp) # 324 <offset+0x2bc>

90000d9c <inst_224>:

inst_224:
// rs1_val==-46340 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaff, -0xb504, -0x555, x4, 808, x5)
90000d9c:	ffff5537          	lui	a0,0xffff5
90000da0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000da4:	aab56593          	ori	a1,a0,-1365
90000da8:	32b22423          	sw	a1,808(tp) # 328 <offset+0x2c0>

90000dac <inst_225>:

inst_225:
// rs1_val==-46340 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xffff4afe, -0xb504, 0x6, x4, 812, x5)
90000dac:	ffff5537          	lui	a0,0xffff5
90000db0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000db4:	00656593          	ori	a1,a0,6
90000db8:	32b22623          	sw	a1,812(tp) # 32c <offset+0x2c4>

90000dbc <inst_226>:

inst_226:
// rs1_val==-46340 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xffff4bfc, -0xb504, 0x334, x4, 816, x5)
90000dbc:	ffff5537          	lui	a0,0xffff5
90000dc0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000dc4:	33456593          	ori	a1,a0,820
90000dc8:	32b22823          	sw	a1,816(tp) # 330 <offset+0x2c8>

90000dcc <inst_227>:

inst_227:
// rs1_val==-46340 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xffff4eff, -0xb504, 0x667, x4, 820, x5)
90000dcc:	ffff5537          	lui	a0,0xffff5
90000dd0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000dd4:	66756593          	ori	a1,a0,1639
90000dd8:	32b22a23          	sw	a1,820(tp) # 334 <offset+0x2cc>

90000ddc <inst_228>:

inst_228:
// rs1_val==-46340 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffffc, -0xb504, -0x2c, x4, 824, x5)
90000ddc:	ffff5537          	lui	a0,0xffff5
90000de0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000de4:	fd456593          	ori	a1,a0,-44
90000de8:	32b22c23          	sw	a1,824(tp) # 338 <offset+0x2d0>

90000dec <inst_229>:

inst_229:
// rs1_val==-46340 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb504;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xffff4afe, -0xb504, 0x2e, x4, 828, x5)
90000dec:	ffff5537          	lui	a0,0xffff5
90000df0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff00f8>
90000df4:	02e56593          	ori	a1,a0,46
90000df8:	32b22e23          	sw	a1,828(tp) # 33c <offset+0x2d4>

90000dfc <inst_230>:

inst_230:
// rs1_val==46340 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb504, 0x3, x4, 832, x5)
90000dfc:	0000b537          	lui	a0,0xb
90000e00:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000e04:	00356593          	ori	a1,a0,3
90000e08:	34b22023          	sw	a1,832(tp) # 340 <offset+0x2d8>

90000e0c <inst_231>:

inst_231:
// rs1_val==46340 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xb555, 0xb504, 0x555, x4, 836, x5)
90000e0c:	0000b537          	lui	a0,0xb
90000e10:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000e14:	55556593          	ori	a1,a0,1365
90000e18:	34b22223          	sw	a1,836(tp) # 344 <offset+0x2dc>

90000e1c <inst_232>:

inst_232:
// rs1_val==46340 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xffffffae, 0xb504, -0x556, x4, 840, x5)
90000e1c:	0000b537          	lui	a0,0xb
90000e20:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000e24:	aaa56593          	ori	a1,a0,-1366
90000e28:	34b22423          	sw	a1,840(tp) # 348 <offset+0x2e0>

90000e2c <inst_233>:

inst_233:
// rs1_val==46340 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xb505, 0xb504, 0x5, x4, 844, x5)
90000e2c:	0000b537          	lui	a0,0xb
90000e30:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000e34:	00556593          	ori	a1,a0,5
90000e38:	34b22623          	sw	a1,844(tp) # 34c <offset+0x2e4>

90000e3c <inst_234>:

inst_234:
// rs1_val==46340 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xb737, 0xb504, 0x333, x4, 848, x5)
90000e3c:	0000b537          	lui	a0,0xb
90000e40:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000e44:	33356593          	ori	a1,a0,819
90000e48:	34b22823          	sw	a1,848(tp) # 350 <offset+0x2e8>

90000e4c <inst_235>:

inst_235:
// rs1_val==46340 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xb766, 0xb504, 0x666, x4, 852, x5)
90000e4c:	0000b537          	lui	a0,0xb
90000e50:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000e54:	66656593          	ori	a1,a0,1638
90000e58:	34b22a23          	sw	a1,852(tp) # 354 <offset+0x2ec>

90000e5c <inst_236>:

inst_236:
// rs1_val==46340 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0xb504, -0x2d, x4, 856, x5)
90000e5c:	0000b537          	lui	a0,0xb
90000e60:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000e64:	fd356593          	ori	a1,a0,-45
90000e68:	34b22c23          	sw	a1,856(tp) # 358 <offset+0x2f0>

90000e6c <inst_237>:

inst_237:
// rs1_val==46340 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xb52d, 0xb504, 0x2d, x4, 860, x5)
90000e6c:	0000b537          	lui	a0,0xb
90000e70:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000e74:	02d56593          	ori	a1,a0,45
90000e78:	34b22e23          	sw	a1,860(tp) # 35c <offset+0x2f4>

90000e7c <inst_238>:

inst_238:
// rs1_val==46340 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xb506, 0xb504, 0x2, x4, 864, x5)
90000e7c:	0000b537          	lui	a0,0xb
90000e80:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000e84:	00256593          	ori	a1,a0,2
90000e88:	36b22023          	sw	a1,864(tp) # 360 <offset+0x2f8>

90000e8c <inst_239>:

inst_239:
// rs1_val==46340 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xb554, 0xb504, 0x554, x4, 868, x5)
90000e8c:	0000b537          	lui	a0,0xb
90000e90:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000e94:	55456593          	ori	a1,a0,1364
90000e98:	36b22223          	sw	a1,868(tp) # 364 <offset+0x2fc>

90000e9c <inst_240>:

inst_240:
// rs1_val==46340 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xb504, 0xb504, 0x0, x4, 872, x5)
90000e9c:	0000b537          	lui	a0,0xb
90000ea0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000ea4:	00056593          	ori	a1,a0,0
90000ea8:	36b22423          	sw	a1,872(tp) # 368 <offset+0x300>

90000eac <inst_241>:

inst_241:
// rs1_val==46340 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xb504, 0xb504, 0x4, x4, 876, x5)
90000eac:	0000b537          	lui	a0,0xb
90000eb0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000eb4:	00456593          	ori	a1,a0,4
90000eb8:	36b22623          	sw	a1,876(tp) # 36c <offset+0x304>

90000ebc <inst_242>:

inst_242:
// rs1_val==46340 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xb736, 0xb504, 0x332, x4, 880, x5)
90000ebc:	0000b537          	lui	a0,0xb
90000ec0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000ec4:	33256593          	ori	a1,a0,818
90000ec8:	36b22823          	sw	a1,880(tp) # 370 <offset+0x308>

90000ecc <inst_243>:

inst_243:
// rs1_val==46340 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xb765, 0xb504, 0x665, x4, 884, x5)
90000ecc:	0000b537          	lui	a0,0xb
90000ed0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000ed4:	66556593          	ori	a1,a0,1637
90000ed8:	36b22a23          	sw	a1,884(tp) # 374 <offset+0x30c>

90000edc <inst_244>:

inst_244:
// rs1_val==46340 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xb52c, 0xb504, 0x2c, x4, 888, x5)
90000edc:	0000b537          	lui	a0,0xb
90000ee0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000ee4:	02c56593          	ori	a1,a0,44
90000ee8:	36b22c23          	sw	a1,888(tp) # 378 <offset+0x310>

90000eec <inst_245>:

inst_245:
// rs1_val==46340 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xb556, 0xb504, 0x556, x4, 892, x5)
90000eec:	0000b537          	lui	a0,0xb
90000ef0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000ef4:	55656593          	ori	a1,a0,1366
90000ef8:	36b22e23          	sw	a1,892(tp) # 37c <offset+0x314>

90000efc <inst_246>:

inst_246:
// rs1_val==46340 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffaf, 0xb504, -0x555, x4, 896, x5)
90000efc:	0000b537          	lui	a0,0xb
90000f00:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000f04:	aab56593          	ori	a1,a0,-1365
90000f08:	38b22023          	sw	a1,896(tp) # 380 <offset+0x318>

90000f0c <inst_247>:

inst_247:
// rs1_val==46340 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xb506, 0xb504, 0x6, x4, 900, x5)
90000f0c:	0000b537          	lui	a0,0xb
90000f10:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000f14:	00656593          	ori	a1,a0,6
90000f18:	38b22223          	sw	a1,900(tp) # 384 <offset+0x31c>

90000f1c <inst_248>:

inst_248:
// rs1_val==46340 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xb734, 0xb504, 0x334, x4, 904, x5)
90000f1c:	0000b537          	lui	a0,0xb
90000f20:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000f24:	33456593          	ori	a1,a0,820
90000f28:	38b22423          	sw	a1,904(tp) # 388 <offset+0x320>

90000f2c <inst_249>:

inst_249:
// rs1_val==46340 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb504, 0x667, x4, 908, x5)
90000f2c:	0000b537          	lui	a0,0xb
90000f30:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000f34:	66756593          	ori	a1,a0,1639
90000f38:	38b22623          	sw	a1,908(tp) # 38c <offset+0x324>

90000f3c <inst_250>:

inst_250:
// rs1_val==46340 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd4, 0xb504, -0x2c, x4, 912, x5)
90000f3c:	0000b537          	lui	a0,0xb
90000f40:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000f44:	fd456593          	ori	a1,a0,-44
90000f48:	38b22823          	sw	a1,912(tp) # 390 <offset+0x328>

90000f4c <inst_251>:

inst_251:
// rs1_val==46340 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb504;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xb52e, 0xb504, 0x2e, x4, 916, x5)
90000f4c:	0000b537          	lui	a0,0xb
90000f50:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb49c>
90000f54:	02e56593          	ori	a1,a0,46
90000f58:	38b22a23          	sw	a1,916(tp) # 394 <offset+0x32c>

90000f5c <inst_252>:

inst_252:
// rs1_val==2 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x3, 0x2, 0x3, x4, 920, x5)
90000f5c:	00200513          	li	a0,2
90000f60:	00356593          	ori	a1,a0,3
90000f64:	38b22c23          	sw	a1,920(tp) # 398 <offset+0x330>

90000f68 <inst_253>:

inst_253:
// rs1_val==2 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x557, 0x2, 0x555, x4, 924, x5)
90000f68:	00200513          	li	a0,2
90000f6c:	55556593          	ori	a1,a0,1365
90000f70:	38b22e23          	sw	a1,924(tp) # 39c <offset+0x334>

90000f74 <inst_254>:

inst_254:
// rs1_val==2 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaaa, 0x2, -0x556, x4, 928, x5)
90000f74:	00200513          	li	a0,2
90000f78:	aaa56593          	ori	a1,a0,-1366
90000f7c:	3ab22023          	sw	a1,928(tp) # 3a0 <offset+0x338>

90000f80 <inst_255>:

inst_255:
// rs1_val==2 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x7, 0x2, 0x5, x4, 932, x5)
90000f80:	00200513          	li	a0,2
90000f84:	00556593          	ori	a1,a0,5
90000f88:	3ab22223          	sw	a1,932(tp) # 3a4 <offset+0x33c>

90000f8c <inst_256>:

inst_256:
// rs1_val==2 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x333, 0x2, 0x333, x4, 936, x5)
90000f8c:	00200513          	li	a0,2
90000f90:	33356593          	ori	a1,a0,819
90000f94:	3ab22423          	sw	a1,936(tp) # 3a8 <offset+0x340>

90000f98 <inst_257>:

inst_257:
// rs1_val==2 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x666, 0x2, 0x666, x4, 940, x5)
90000f98:	00200513          	li	a0,2
90000f9c:	66656593          	ori	a1,a0,1638
90000fa0:	3ab22623          	sw	a1,940(tp) # 3ac <offset+0x344>

90000fa4 <inst_258>:

inst_258:
// rs1_val==2 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd3, 0x2, -0x2d, x4, 944, x5)
90000fa4:	00200513          	li	a0,2
90000fa8:	fd356593          	ori	a1,a0,-45
90000fac:	3ab22823          	sw	a1,944(tp) # 3b0 <offset+0x348>

90000fb0 <inst_259>:

inst_259:
// rs1_val==2 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x2, 0x2d, x4, 948, x5)
90000fb0:	00200513          	li	a0,2
90000fb4:	02d56593          	ori	a1,a0,45
90000fb8:	3ab22a23          	sw	a1,948(tp) # 3b4 <offset+0x34c>

90000fbc <inst_260>:

inst_260:
// rs1_val==2 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x2, 0x2, 0x2, x4, 952, x5)
90000fbc:	00200513          	li	a0,2
90000fc0:	00256593          	ori	a1,a0,2
90000fc4:	3ab22c23          	sw	a1,952(tp) # 3b8 <offset+0x350>

90000fc8 <inst_261>:

inst_261:
// rs1_val==2 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x556, 0x2, 0x554, x4, 956, x5)
90000fc8:	00200513          	li	a0,2
90000fcc:	55456593          	ori	a1,a0,1364
90000fd0:	3ab22e23          	sw	a1,956(tp) # 3bc <offset+0x354>

90000fd4 <inst_262>:

inst_262:
// rs1_val==2 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x2, 0x2, 0x0, x4, 960, x5)
90000fd4:	00200513          	li	a0,2
90000fd8:	00056593          	ori	a1,a0,0
90000fdc:	3cb22023          	sw	a1,960(tp) # 3c0 <offset+0x358>

90000fe0 <inst_263>:

inst_263:
// rs1_val==2 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x6, 0x2, 0x4, x4, 964, x5)
90000fe0:	00200513          	li	a0,2
90000fe4:	00456593          	ori	a1,a0,4
90000fe8:	3cb22223          	sw	a1,964(tp) # 3c4 <offset+0x35c>

90000fec <inst_264>:

inst_264:
// rs1_val==2 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x332, 0x2, 0x332, x4, 968, x5)
90000fec:	00200513          	li	a0,2
90000ff0:	33256593          	ori	a1,a0,818
90000ff4:	3cb22423          	sw	a1,968(tp) # 3c8 <offset+0x360>

90000ff8 <inst_265>:

inst_265:
// rs1_val==2 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x667, 0x2, 0x665, x4, 972, x5)
90000ff8:	00200513          	li	a0,2
90000ffc:	66556593          	ori	a1,a0,1637
90001000:	3cb22623          	sw	a1,972(tp) # 3cc <offset+0x364>

90001004 <inst_266>:

inst_266:
// rs1_val==2 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x2, 0x2c, x4, 976, x5)
90001004:	00200513          	li	a0,2
90001008:	02c56593          	ori	a1,a0,44
9000100c:	3cb22823          	sw	a1,976(tp) # 3d0 <offset+0x368>

90001010 <inst_267>:

inst_267:
// rs1_val==2 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x556, 0x2, 0x556, x4, 980, x5)
90001010:	00200513          	li	a0,2
90001014:	55656593          	ori	a1,a0,1366
90001018:	3cb22a23          	sw	a1,980(tp) # 3d4 <offset+0x36c>

9000101c <inst_268>:

inst_268:
// rs1_val==2 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, 0x2, -0x555, x4, 984, x5)
9000101c:	00200513          	li	a0,2
90001020:	aab56593          	ori	a1,a0,-1365
90001024:	3cb22c23          	sw	a1,984(tp) # 3d8 <offset+0x370>

90001028 <inst_269>:

inst_269:
// rs1_val==2 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x6, 0x2, 0x6, x4, 988, x5)
90001028:	00200513          	li	a0,2
9000102c:	00656593          	ori	a1,a0,6
90001030:	3cb22e23          	sw	a1,988(tp) # 3dc <offset+0x374>

90001034 <inst_270>:

inst_270:
// rs1_val==2 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x336, 0x2, 0x334, x4, 992, x5)
90001034:	00200513          	li	a0,2
90001038:	33456593          	ori	a1,a0,820
9000103c:	3eb22023          	sw	a1,992(tp) # 3e0 <offset+0x378>

90001040 <inst_271>:

inst_271:
// rs1_val==2 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x2, 0x667, x4, 996, x5)
90001040:	00200513          	li	a0,2
90001044:	66756593          	ori	a1,a0,1639
90001048:	3eb22223          	sw	a1,996(tp) # 3e4 <offset+0x37c>

9000104c <inst_272>:

inst_272:
// rs1_val==2 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd6, 0x2, -0x2c, x4, 1000, x5)
9000104c:	00200513          	li	a0,2
90001050:	fd456593          	ori	a1,a0,-44
90001054:	3eb22423          	sw	a1,1000(tp) # 3e8 <offset+0x380>

90001058 <inst_273>:

inst_273:
// rs1_val==2 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x2;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x2, 0x2e, x4, 1004, x5)
90001058:	00200513          	li	a0,2
9000105c:	02e56593          	ori	a1,a0,46
90001060:	3eb22623          	sw	a1,1004(tp) # 3ec <offset+0x384>

90001064 <inst_274>:

inst_274:
// rs1_val==1431655764 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555554, 0x3, x4, 1008, x5)
90001064:	55555537          	lui	a0,0x55555
90001068:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000106c:	00356593          	ori	a1,a0,3
90001070:	3eb22823          	sw	a1,1008(tp) # 3f0 <offset+0x388>

90001074 <inst_275>:

inst_275:
// rs1_val==1431655764 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555554, 0x555, x4, 1012, x5)
90001074:	55555537          	lui	a0,0x55555
90001078:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000107c:	55556593          	ori	a1,a0,1365
90001080:	3eb22a23          	sw	a1,1012(tp) # 3f4 <offset+0x38c>

90001084 <inst_276>:

inst_276:
// rs1_val==1431655764 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffffe, 0x55555554, -0x556, x4, 1016, x5)
90001084:	55555537          	lui	a0,0x55555
90001088:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000108c:	aaa56593          	ori	a1,a0,-1366
90001090:	3eb22c23          	sw	a1,1016(tp) # 3f8 <offset+0x390>

90001094 <inst_277>:

inst_277:
// rs1_val==1431655764 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x55555555, 0x55555554, 0x5, x4, 1020, x5)
90001094:	55555537          	lui	a0,0x55555
90001098:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000109c:	00556593          	ori	a1,a0,5
900010a0:	3eb22e23          	sw	a1,1020(tp) # 3fc <offset+0x394>

900010a4 <inst_278>:

inst_278:
// rs1_val==1431655764 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555554, 0x333, x4, 1024, x5)
900010a4:	55555537          	lui	a0,0x55555
900010a8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
900010ac:	33356593          	ori	a1,a0,819
900010b0:	40b22023          	sw	a1,1024(tp) # 400 <offset+0x398>

900010b4 <inst_279>:

inst_279:
// rs1_val==1431655764 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x55555776, 0x55555554, 0x666, x4, 1028, x5)
900010b4:	55555537          	lui	a0,0x55555
900010b8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
900010bc:	66656593          	ori	a1,a0,1638
900010c0:	40b22223          	sw	a1,1028(tp) # 404 <offset+0x39c>

900010c4 <inst_280>:

inst_280:
// rs1_val==1431655764 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x55555554, -0x2d, x4, 1032, x5)
900010c4:	55555537          	lui	a0,0x55555
900010c8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
900010cc:	fd356593          	ori	a1,a0,-45
900010d0:	40b22423          	sw	a1,1032(tp) # 408 <offset+0x3a0>

900010d4 <inst_281>:

inst_281:
// rs1_val==1431655764 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x5555557d, 0x55555554, 0x2d, x4, 1036, x5)
900010d4:	55555537          	lui	a0,0x55555
900010d8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
900010dc:	02d56593          	ori	a1,a0,45
900010e0:	40b22623          	sw	a1,1036(tp) # 40c <offset+0x3a4>

900010e4 <inst_282>:

inst_282:
// rs1_val==1431655764 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555554, 0x2, x4, 1040, x5)
900010e4:	55555537          	lui	a0,0x55555
900010e8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
900010ec:	00256593          	ori	a1,a0,2
900010f0:	40b22823          	sw	a1,1040(tp) # 410 <offset+0x3a8>

900010f4 <inst_283>:

inst_283:
// rs1_val==1431655764 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x55555554, 0x55555554, 0x554, x4, 1044, x5)
900010f4:	55555537          	lui	a0,0x55555
900010f8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
900010fc:	55456593          	ori	a1,a0,1364
90001100:	40b22a23          	sw	a1,1044(tp) # 414 <offset+0x3ac>

90001104 <inst_284>:

inst_284:
// rs1_val==1431655764 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x55555554, 0x55555554, 0x0, x4, 1048, x5)
90001104:	55555537          	lui	a0,0x55555
90001108:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000110c:	00056593          	ori	a1,a0,0
90001110:	40b22c23          	sw	a1,1048(tp) # 418 <offset+0x3b0>

90001114 <inst_285>:

inst_285:
// rs1_val==1431655764 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x55555554, 0x55555554, 0x4, x4, 1052, x5)
90001114:	55555537          	lui	a0,0x55555
90001118:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000111c:	00456593          	ori	a1,a0,4
90001120:	40b22e23          	sw	a1,1052(tp) # 41c <offset+0x3b4>

90001124 <inst_286>:

inst_286:
// rs1_val==1431655764 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x55555776, 0x55555554, 0x332, x4, 1056, x5)
90001124:	55555537          	lui	a0,0x55555
90001128:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000112c:	33256593          	ori	a1,a0,818
90001130:	42b22023          	sw	a1,1056(tp) # 420 <offset+0x3b8>

90001134 <inst_287>:

inst_287:
// rs1_val==1431655764 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x55555775, 0x55555554, 0x665, x4, 1060, x5)
90001134:	55555537          	lui	a0,0x55555
90001138:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000113c:	66556593          	ori	a1,a0,1637
90001140:	42b22223          	sw	a1,1060(tp) # 424 <offset+0x3bc>

90001144 <inst_288>:

inst_288:
// rs1_val==1431655764 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x5555557c, 0x55555554, 0x2c, x4, 1064, x5)
90001144:	55555537          	lui	a0,0x55555
90001148:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000114c:	02c56593          	ori	a1,a0,44
90001150:	42b22423          	sw	a1,1064(tp) # 428 <offset+0x3c0>

90001154 <inst_289>:

inst_289:
// rs1_val==1431655764 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555554, 0x556, x4, 1068, x5)
90001154:	55555537          	lui	a0,0x55555
90001158:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000115c:	55656593          	ori	a1,a0,1366
90001160:	42b22623          	sw	a1,1068(tp) # 42c <offset+0x3c4>

90001164 <inst_290>:

inst_290:
// rs1_val==1431655764 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffff, 0x55555554, -0x555, x4, 1072, x5)
90001164:	55555537          	lui	a0,0x55555
90001168:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000116c:	aab56593          	ori	a1,a0,-1365
90001170:	42b22823          	sw	a1,1072(tp) # 430 <offset+0x3c8>

90001174 <inst_291>:

inst_291:
// rs1_val==1431655764 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555554, 0x6, x4, 1076, x5)
90001174:	55555537          	lui	a0,0x55555
90001178:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000117c:	00656593          	ori	a1,a0,6
90001180:	42b22a23          	sw	a1,1076(tp) # 434 <offset+0x3cc>

90001184 <inst_292>:

inst_292:
// rs1_val==1431655764 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x55555774, 0x55555554, 0x334, x4, 1080, x5)
90001184:	55555537          	lui	a0,0x55555
90001188:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000118c:	33456593          	ori	a1,a0,820
90001190:	42b22c23          	sw	a1,1080(tp) # 438 <offset+0x3d0>

90001194 <inst_293>:

inst_293:
// rs1_val==1431655764 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555554, 0x667, x4, 1084, x5)
90001194:	55555537          	lui	a0,0x55555
90001198:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
9000119c:	66756593          	ori	a1,a0,1639
900011a0:	42b22e23          	sw	a1,1084(tp) # 43c <offset+0x3d4>

900011a4 <inst_294>:

inst_294:
// rs1_val==1431655764 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd4, 0x55555554, -0x2c, x4, 1088, x5)
900011a4:	55555537          	lui	a0,0x55555
900011a8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
900011ac:	fd456593          	ori	a1,a0,-44
900011b0:	44b22023          	sw	a1,1088(tp) # 440 <offset+0x3d8>

900011b4 <inst_295>:

inst_295:
// rs1_val==1431655764 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555554;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x5555557e, 0x55555554, 0x2e, x4, 1092, x5)
900011b4:	55555537          	lui	a0,0x55555
900011b8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555554ec>
900011bc:	02e56593          	ori	a1,a0,46
900011c0:	44b22223          	sw	a1,1092(tp) # 444 <offset+0x3dc>

900011c4 <inst_296>:

inst_296:
// rs1_val==0 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x3, 0x0, 0x3, x4, 1096, x5)
900011c4:	00000513          	li	a0,0
900011c8:	00356593          	ori	a1,a0,3
900011cc:	44b22423          	sw	a1,1096(tp) # 448 <offset+0x3e0>

900011d0 <inst_297>:

inst_297:
// rs1_val==0 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x555, 0x0, 0x555, x4, 1100, x5)
900011d0:	00000513          	li	a0,0
900011d4:	55556593          	ori	a1,a0,1365
900011d8:	44b22623          	sw	a1,1100(tp) # 44c <offset+0x3e4>

900011dc <inst_298>:

inst_298:
// rs1_val==0 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaaa, 0x0, -0x556, x4, 1104, x5)
900011dc:	00000513          	li	a0,0
900011e0:	aaa56593          	ori	a1,a0,-1366
900011e4:	44b22823          	sw	a1,1104(tp) # 450 <offset+0x3e8>

900011e8 <inst_299>:

inst_299:
// rs1_val==0 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x5, 0x0, 0x5, x4, 1108, x5)
900011e8:	00000513          	li	a0,0
900011ec:	00556593          	ori	a1,a0,5
900011f0:	44b22a23          	sw	a1,1108(tp) # 454 <offset+0x3ec>

900011f4 <inst_300>:

inst_300:
// rs1_val==0 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x333, 0x0, 0x333, x4, 1112, x5)
900011f4:	00000513          	li	a0,0
900011f8:	33356593          	ori	a1,a0,819
900011fc:	44b22c23          	sw	a1,1112(tp) # 458 <offset+0x3f0>

90001200 <inst_301>:

inst_301:
// rs1_val==0 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x666, 0x0, 0x666, x4, 1116, x5)
90001200:	00000513          	li	a0,0
90001204:	66656593          	ori	a1,a0,1638
90001208:	44b22e23          	sw	a1,1116(tp) # 45c <offset+0x3f4>

9000120c <inst_302>:

inst_302:
// rs1_val==0 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd3, 0x0, -0x2d, x4, 1120, x5)
9000120c:	00000513          	li	a0,0
90001210:	fd356593          	ori	a1,a0,-45
90001214:	46b22023          	sw	a1,1120(tp) # 460 <offset+0x3f8>

90001218 <inst_303>:

inst_303:
// rs1_val==858993460 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333334, 0x332, x4, 1124, x5)
90001218:	33333537          	lui	a0,0x33333
9000121c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90001220:	33256593          	ori	a1,a0,818
90001224:	46b22223          	sw	a1,1124(tp) # 464 <offset+0x3fc>

90001228 <inst_304>:

inst_304:
// rs1_val==858993460 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x33333775, 0x33333334, 0x665, x4, 1128, x5)
90001228:	33333537          	lui	a0,0x33333
9000122c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90001230:	66556593          	ori	a1,a0,1637
90001234:	46b22423          	sw	a1,1128(tp) # 468 <offset+0x400>

90001238 <inst_305>:

inst_305:
// rs1_val==858993460 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x3333333c, 0x33333334, 0x2c, x4, 1132, x5)
90001238:	33333537          	lui	a0,0x33333
9000123c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90001240:	02c56593          	ori	a1,a0,44
90001244:	46b22623          	sw	a1,1132(tp) # 46c <offset+0x404>

90001248 <inst_306>:

inst_306:
// rs1_val==858993460 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x33333776, 0x33333334, 0x556, x4, 1136, x5)
90001248:	33333537          	lui	a0,0x33333
9000124c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90001250:	55656593          	ori	a1,a0,1366
90001254:	46b22823          	sw	a1,1136(tp) # 470 <offset+0x408>

90001258 <inst_307>:

inst_307:
// rs1_val==858993460 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffbbf, 0x33333334, -0x555, x4, 1140, x5)
90001258:	33333537          	lui	a0,0x33333
9000125c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90001260:	aab56593          	ori	a1,a0,-1365
90001264:	46b22a23          	sw	a1,1140(tp) # 474 <offset+0x40c>

90001268 <inst_308>:

inst_308:
// rs1_val==858993460 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333334, 0x6, x4, 1144, x5)
90001268:	33333537          	lui	a0,0x33333
9000126c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90001270:	00656593          	ori	a1,a0,6
90001274:	46b22c23          	sw	a1,1144(tp) # 478 <offset+0x410>

90001278 <inst_309>:

inst_309:
// rs1_val==858993460 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x33333334, 0x33333334, 0x334, x4, 1148, x5)
90001278:	33333537          	lui	a0,0x33333
9000127c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90001280:	33456593          	ori	a1,a0,820
90001284:	46b22e23          	sw	a1,1148(tp) # 47c <offset+0x414>

90001288 <inst_310>:

inst_310:
// rs1_val==858993460 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333334, 0x667, x4, 1152, x5)
90001288:	33333537          	lui	a0,0x33333
9000128c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90001290:	66756593          	ori	a1,a0,1639
90001294:	48b22023          	sw	a1,1152(tp) # 480 <offset+0x418>

90001298 <inst_311>:

inst_311:
// rs1_val==858993460 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff4, 0x33333334, -0x2c, x4, 1156, x5)
90001298:	33333537          	lui	a0,0x33333
9000129c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
900012a0:	fd456593          	ori	a1,a0,-44
900012a4:	48b22223          	sw	a1,1156(tp) # 484 <offset+0x41c>

900012a8 <inst_312>:

inst_312:
// rs1_val==858993460 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x3333333e, 0x33333334, 0x2e, x4, 1160, x5)
900012a8:	33333537          	lui	a0,0x33333
900012ac:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
900012b0:	02e56593          	ori	a1,a0,46
900012b4:	48b22423          	sw	a1,1160(tp) # 488 <offset+0x420>

900012b8 <inst_313>:

inst_313:
// rs1_val==1717986919 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x3, x4, 1164, x5)
900012b8:	66666537          	lui	a0,0x66666
900012bc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
900012c0:	00356593          	ori	a1,a0,3
900012c4:	48b22623          	sw	a1,1164(tp) # 48c <offset+0x424>

900012c8 <inst_314>:

inst_314:
// rs1_val==1717986919 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x555, x4, 1168, x5)
900012c8:	66666537          	lui	a0,0x66666
900012cc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
900012d0:	55556593          	ori	a1,a0,1365
900012d4:	48b22823          	sw	a1,1168(tp) # 490 <offset+0x428>

900012d8 <inst_315>:

inst_315:
// rs1_val==1717986919 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffeef, 0x66666667, -0x556, x4, 1172, x5)
900012d8:	66666537          	lui	a0,0x66666
900012dc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
900012e0:	aaa56593          	ori	a1,a0,-1366
900012e4:	48b22a23          	sw	a1,1172(tp) # 494 <offset+0x42c>

900012e8 <inst_316>:

inst_316:
// rs1_val==1717986919 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x5, x4, 1176, x5)
900012e8:	66666537          	lui	a0,0x66666
900012ec:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
900012f0:	00556593          	ori	a1,a0,5
900012f4:	48b22c23          	sw	a1,1176(tp) # 498 <offset+0x430>

900012f8 <inst_317>:

inst_317:
// rs1_val==1717986919 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x333, x4, 1180, x5)
900012f8:	66666537          	lui	a0,0x66666
900012fc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001300:	33356593          	ori	a1,a0,819
90001304:	48b22e23          	sw	a1,1180(tp) # 49c <offset+0x434>

90001308 <inst_318>:

inst_318:
// rs1_val==1717986919 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x666, x4, 1184, x5)
90001308:	66666537          	lui	a0,0x66666
9000130c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001310:	66656593          	ori	a1,a0,1638
90001314:	4ab22023          	sw	a1,1184(tp) # 4a0 <offset+0x438>

90001318 <inst_319>:

inst_319:
// rs1_val==1717986919 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x66666667, -0x2d, x4, 1188, x5)
90001318:	66666537          	lui	a0,0x66666
9000131c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001320:	fd356593          	ori	a1,a0,-45
90001324:	4ab22223          	sw	a1,1188(tp) # 4a4 <offset+0x43c>

90001328 <inst_320>:

inst_320:
// rs1_val==1717986919 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x6666666f, 0x66666667, 0x2d, x4, 1192, x5)
90001328:	66666537          	lui	a0,0x66666
9000132c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001330:	02d56593          	ori	a1,a0,45
90001334:	4ab22423          	sw	a1,1192(tp) # 4a8 <offset+0x440>

90001338 <inst_321>:

inst_321:
// rs1_val==1717986919 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x2, x4, 1196, x5)
90001338:	66666537          	lui	a0,0x66666
9000133c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001340:	00256593          	ori	a1,a0,2
90001344:	4ab22623          	sw	a1,1196(tp) # 4ac <offset+0x444>

90001348 <inst_322>:

inst_322:
// rs1_val==1717986919 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x554, x4, 1200, x5)
90001348:	66666537          	lui	a0,0x66666
9000134c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001350:	55456593          	ori	a1,a0,1364
90001354:	4ab22823          	sw	a1,1200(tp) # 4b0 <offset+0x448>

90001358 <inst_323>:

inst_323:
// rs1_val==1717986919 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x0, x4, 1204, x5)
90001358:	66666537          	lui	a0,0x66666
9000135c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001360:	00056593          	ori	a1,a0,0
90001364:	4ab22a23          	sw	a1,1204(tp) # 4b4 <offset+0x44c>

90001368 <inst_324>:

inst_324:
// rs1_val==1717986919 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x4, x4, 1208, x5)
90001368:	66666537          	lui	a0,0x66666
9000136c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001370:	00456593          	ori	a1,a0,4
90001374:	4ab22c23          	sw	a1,1208(tp) # 4b8 <offset+0x450>

90001378 <inst_325>:

inst_325:
// rs1_val==1717986919 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x332, x4, 1212, x5)
90001378:	66666537          	lui	a0,0x66666
9000137c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001380:	33256593          	ori	a1,a0,818
90001384:	4ab22e23          	sw	a1,1212(tp) # 4bc <offset+0x454>

90001388 <inst_326>:

inst_326:
// rs1_val==1717986919 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x665, x4, 1216, x5)
90001388:	66666537          	lui	a0,0x66666
9000138c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001390:	66556593          	ori	a1,a0,1637
90001394:	4cb22023          	sw	a1,1216(tp) # 4c0 <offset+0x458>

90001398 <inst_327>:

inst_327:
// rs1_val==1717986919 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x6666666f, 0x66666667, 0x2c, x4, 1220, x5)
90001398:	66666537          	lui	a0,0x66666
9000139c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
900013a0:	02c56593          	ori	a1,a0,44
900013a4:	4cb22223          	sw	a1,1220(tp) # 4c4 <offset+0x45c>

900013a8 <inst_328>:

inst_328:
// rs1_val==1717986919 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x556, x4, 1224, x5)
900013a8:	66666537          	lui	a0,0x66666
900013ac:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
900013b0:	55656593          	ori	a1,a0,1366
900013b4:	4cb22423          	sw	a1,1224(tp) # 4c8 <offset+0x460>

900013b8 <inst_329>:

inst_329:
// rs1_val==1717986919 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffeef, 0x66666667, -0x555, x4, 1228, x5)
900013b8:	66666537          	lui	a0,0x66666
900013bc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
900013c0:	aab56593          	ori	a1,a0,-1365
900013c4:	4cb22623          	sw	a1,1228(tp) # 4cc <offset+0x464>

900013c8 <inst_330>:

inst_330:
// rs1_val==1717986919 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x6, x4, 1232, x5)
900013c8:	66666537          	lui	a0,0x66666
900013cc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
900013d0:	00656593          	ori	a1,a0,6
900013d4:	4cb22823          	sw	a1,1232(tp) # 4d0 <offset+0x468>

900013d8 <inst_331>:

inst_331:
// rs1_val==1717986919 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666667, 0x334, x4, 1236, x5)
900013d8:	66666537          	lui	a0,0x66666
900013dc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
900013e0:	33456593          	ori	a1,a0,820
900013e4:	4cb22a23          	sw	a1,1236(tp) # 4d4 <offset+0x46c>

900013e8 <inst_332>:

inst_332:
// rs1_val==1717986919 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666667, 0x667, x4, 1240, x5)
900013e8:	66666537          	lui	a0,0x66666
900013ec:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
900013f0:	66756593          	ori	a1,a0,1639
900013f4:	4cb22c23          	sw	a1,1240(tp) # 4d8 <offset+0x470>

900013f8 <inst_333>:

inst_333:
// rs1_val==1717986919 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x66666667, -0x2c, x4, 1244, x5)
900013f8:	66666537          	lui	a0,0x66666
900013fc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001400:	fd456593          	ori	a1,a0,-44
90001404:	4cb22e23          	sw	a1,1244(tp) # 4dc <offset+0x474>

90001408 <inst_334>:

inst_334:
// rs1_val==1717986919 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666667;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x6666666f, 0x66666667, 0x2e, x4, 1248, x5)
90001408:	66666537          	lui	a0,0x66666
9000140c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666665ff>
90001410:	02e56593          	ori	a1,a0,46
90001414:	4eb22023          	sw	a1,1248(tp) # 4e0 <offset+0x478>

90001418 <inst_335>:

inst_335:
// rs1_val==-46339 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xffff4aff, -0xb503, 0x3, x4, 1252, x5)
90001418:	ffff5537          	lui	a0,0xffff5
9000141c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001420:	00356593          	ori	a1,a0,3
90001424:	4eb22223          	sw	a1,1252(tp) # 4e4 <offset+0x47c>

90001428 <inst_336>:

inst_336:
// rs1_val==-46339 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xffff4ffd, -0xb503, 0x555, x4, 1256, x5)
90001428:	ffff5537          	lui	a0,0xffff5
9000142c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001430:	55556593          	ori	a1,a0,1365
90001434:	4eb22423          	sw	a1,1256(tp) # 4e8 <offset+0x480>

90001438 <inst_337>:

inst_337:
// rs1_val==-46339 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaff, -0xb503, -0x556, x4, 1260, x5)
90001438:	ffff5537          	lui	a0,0xffff5
9000143c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001440:	aaa56593          	ori	a1,a0,-1366
90001444:	4eb22623          	sw	a1,1260(tp) # 4ec <offset+0x484>

90001448 <inst_338>:

inst_338:
// rs1_val==-46339 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb503, 0x5, x4, 1264, x5)
90001448:	ffff5537          	lui	a0,0xffff5
9000144c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001450:	00556593          	ori	a1,a0,5
90001454:	4eb22823          	sw	a1,1264(tp) # 4f0 <offset+0x488>

90001458 <inst_339>:

inst_339:
// rs1_val==-46339 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xffff4bff, -0xb503, 0x333, x4, 1268, x5)
90001458:	ffff5537          	lui	a0,0xffff5
9000145c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001460:	33356593          	ori	a1,a0,819
90001464:	4eb22a23          	sw	a1,1268(tp) # 4f4 <offset+0x48c>

90001468 <inst_340>:

inst_340:
// rs1_val==-46339 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xffff4eff, -0xb503, 0x666, x4, 1272, x5)
90001468:	ffff5537          	lui	a0,0xffff5
9000146c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001470:	66656593          	ori	a1,a0,1638
90001474:	4eb22c23          	sw	a1,1272(tp) # 4f8 <offset+0x490>

90001478 <inst_341>:

inst_341:
// rs1_val==-46339 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0xb503, -0x2d, x4, 1276, x5)
90001478:	ffff5537          	lui	a0,0xffff5
9000147c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001480:	fd356593          	ori	a1,a0,-45
90001484:	4eb22e23          	sw	a1,1276(tp) # 4fc <offset+0x494>

90001488 <inst_342>:

inst_342:
// rs1_val==-46339 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb503, 0x2d, x4, 1280, x5)
90001488:	ffff5537          	lui	a0,0xffff5
9000148c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001490:	02d56593          	ori	a1,a0,45
90001494:	50b22023          	sw	a1,1280(tp) # 500 <offset+0x498>

90001498 <inst_343>:

inst_343:
// rs1_val==-46339 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xffff4aff, -0xb503, 0x2, x4, 1284, x5)
90001498:	ffff5537          	lui	a0,0xffff5
9000149c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014a0:	00256593          	ori	a1,a0,2
900014a4:	50b22223          	sw	a1,1284(tp) # 504 <offset+0x49c>

900014a8 <inst_344>:

inst_344:
// rs1_val==-46339 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xffff4ffd, -0xb503, 0x554, x4, 1288, x5)
900014a8:	ffff5537          	lui	a0,0xffff5
900014ac:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014b0:	55456593          	ori	a1,a0,1364
900014b4:	50b22423          	sw	a1,1288(tp) # 508 <offset+0x4a0>

900014b8 <inst_345>:

inst_345:
// rs1_val==-46339 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb503, 0x0, x4, 1292, x5)
900014b8:	ffff5537          	lui	a0,0xffff5
900014bc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014c0:	00056593          	ori	a1,a0,0
900014c4:	50b22623          	sw	a1,1292(tp) # 50c <offset+0x4a4>

900014c8 <inst_346>:

inst_346:
// rs1_val==-46339 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb503, 0x4, x4, 1296, x5)
900014c8:	ffff5537          	lui	a0,0xffff5
900014cc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014d0:	00456593          	ori	a1,a0,4
900014d4:	50b22823          	sw	a1,1296(tp) # 510 <offset+0x4a8>

900014d8 <inst_347>:

inst_347:
// rs1_val==-46339 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xffff4bff, -0xb503, 0x332, x4, 1300, x5)
900014d8:	ffff5537          	lui	a0,0xffff5
900014dc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014e0:	33256593          	ori	a1,a0,818
900014e4:	50b22a23          	sw	a1,1300(tp) # 514 <offset+0x4ac>

900014e8 <inst_348>:

inst_348:
// rs1_val==-46339 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xffff4efd, -0xb503, 0x665, x4, 1304, x5)
900014e8:	ffff5537          	lui	a0,0xffff5
900014ec:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
900014f0:	66556593          	ori	a1,a0,1637
900014f4:	50b22c23          	sw	a1,1304(tp) # 518 <offset+0x4b0>

900014f8 <inst_349>:

inst_349:
// rs1_val==-46339 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xffff4afd, -0xb503, 0x2c, x4, 1308, x5)
900014f8:	ffff5537          	lui	a0,0xffff5
900014fc:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001500:	02c56593          	ori	a1,a0,44
90001504:	50b22e23          	sw	a1,1308(tp) # 51c <offset+0x4b4>

90001508 <inst_350>:

inst_350:
// rs1_val==-46339 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xffff4fff, -0xb503, 0x556, x4, 1312, x5)
90001508:	ffff5537          	lui	a0,0xffff5
9000150c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001510:	55656593          	ori	a1,a0,1366
90001514:	52b22023          	sw	a1,1312(tp) # 520 <offset+0x4b8>

90001518 <inst_351>:

inst_351:
// rs1_val==-46339 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaff, -0xb503, -0x555, x4, 1316, x5)
90001518:	ffff5537          	lui	a0,0xffff5
9000151c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001520:	aab56593          	ori	a1,a0,-1365
90001524:	52b22223          	sw	a1,1316(tp) # 524 <offset+0x4bc>

90001528 <inst_352>:

inst_352:
// rs1_val==-46339 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xffff4aff, -0xb503, 0x6, x4, 1320, x5)
90001528:	ffff5537          	lui	a0,0xffff5
9000152c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001530:	00656593          	ori	a1,a0,6
90001534:	52b22423          	sw	a1,1320(tp) # 528 <offset+0x4c0>

90001538 <inst_353>:

inst_353:
// rs1_val==-46339 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xffff4bfd, -0xb503, 0x334, x4, 1324, x5)
90001538:	ffff5537          	lui	a0,0xffff5
9000153c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001540:	33456593          	ori	a1,a0,820
90001544:	52b22623          	sw	a1,1324(tp) # 52c <offset+0x4c4>

90001548 <inst_354>:

inst_354:
// rs1_val==-46339 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xffff4eff, -0xb503, 0x667, x4, 1328, x5)
90001548:	ffff5537          	lui	a0,0xffff5
9000154c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001550:	66756593          	ori	a1,a0,1639
90001554:	52b22823          	sw	a1,1328(tp) # 530 <offset+0x4c8>

90001558 <inst_355>:

inst_355:
// rs1_val==-46339 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffffd, -0xb503, -0x2c, x4, 1332, x5)
90001558:	ffff5537          	lui	a0,0xffff5
9000155c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001560:	fd456593          	ori	a1,a0,-44
90001564:	52b22a23          	sw	a1,1332(tp) # 534 <offset+0x4cc>

90001568 <inst_356>:

inst_356:
// rs1_val==-46339 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0xb503;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xffff4aff, -0xb503, 0x2e, x4, 1336, x5)
90001568:	ffff5537          	lui	a0,0xffff5
9000156c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff00f9>
90001570:	02e56593          	ori	a1,a0,46
90001574:	52b22c23          	sw	a1,1336(tp) # 538 <offset+0x4d0>

90001578 <inst_357>:

inst_357:
// rs1_val==46341 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb505, 0x3, x4, 1340, x5)
90001578:	0000b537          	lui	a0,0xb
9000157c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001580:	00356593          	ori	a1,a0,3
90001584:	52b22e23          	sw	a1,1340(tp) # 53c <offset+0x4d4>

90001588 <inst_358>:

inst_358:
// rs1_val==46341 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xb555, 0xb505, 0x555, x4, 1344, x5)
90001588:	0000b537          	lui	a0,0xb
9000158c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001590:	55556593          	ori	a1,a0,1365
90001594:	54b22023          	sw	a1,1344(tp) # 540 <offset+0x4d8>

90001598 <inst_359>:

inst_359:
// rs1_val==46341 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xffffffaf, 0xb505, -0x556, x4, 1348, x5)
90001598:	0000b537          	lui	a0,0xb
9000159c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
900015a0:	aaa56593          	ori	a1,a0,-1366
900015a4:	54b22223          	sw	a1,1348(tp) # 544 <offset+0x4dc>

900015a8 <inst_360>:

inst_360:
// rs1_val==46341 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xb505, 0xb505, 0x5, x4, 1352, x5)
900015a8:	0000b537          	lui	a0,0xb
900015ac:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
900015b0:	00556593          	ori	a1,a0,5
900015b4:	54b22423          	sw	a1,1352(tp) # 548 <offset+0x4e0>

900015b8 <inst_361>:

inst_361:
// rs1_val==46341 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xb737, 0xb505, 0x333, x4, 1356, x5)
900015b8:	0000b537          	lui	a0,0xb
900015bc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
900015c0:	33356593          	ori	a1,a0,819
900015c4:	54b22623          	sw	a1,1356(tp) # 54c <offset+0x4e4>

900015c8 <inst_362>:

inst_362:
// rs1_val==46341 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb505, 0x666, x4, 1360, x5)
900015c8:	0000b537          	lui	a0,0xb
900015cc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
900015d0:	66656593          	ori	a1,a0,1638
900015d4:	54b22823          	sw	a1,1360(tp) # 550 <offset+0x4e8>

900015d8 <inst_363>:

inst_363:
// rs1_val==46341 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0xb505, -0x2d, x4, 1364, x5)
900015d8:	0000b537          	lui	a0,0xb
900015dc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
900015e0:	fd356593          	ori	a1,a0,-45
900015e4:	54b22a23          	sw	a1,1364(tp) # 554 <offset+0x4ec>

900015e8 <inst_364>:

inst_364:
// rs1_val==46341 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xb52d, 0xb505, 0x2d, x4, 1368, x5)
900015e8:	0000b537          	lui	a0,0xb
900015ec:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
900015f0:	02d56593          	ori	a1,a0,45
900015f4:	54b22c23          	sw	a1,1368(tp) # 558 <offset+0x4f0>

900015f8 <inst_365>:

inst_365:
// rs1_val==46341 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb505, 0x2, x4, 1372, x5)
900015f8:	0000b537          	lui	a0,0xb
900015fc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001600:	00256593          	ori	a1,a0,2
90001604:	54b22e23          	sw	a1,1372(tp) # 55c <offset+0x4f4>

90001608 <inst_366>:

inst_366:
// rs1_val==46341 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xb555, 0xb505, 0x554, x4, 1376, x5)
90001608:	0000b537          	lui	a0,0xb
9000160c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001610:	55456593          	ori	a1,a0,1364
90001614:	56b22023          	sw	a1,1376(tp) # 560 <offset+0x4f8>

90001618 <inst_367>:

inst_367:
// rs1_val==46341 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xb505, 0xb505, 0x0, x4, 1380, x5)
90001618:	0000b537          	lui	a0,0xb
9000161c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001620:	00056593          	ori	a1,a0,0
90001624:	56b22223          	sw	a1,1380(tp) # 564 <offset+0x4fc>

90001628 <inst_368>:

inst_368:
// rs1_val==46341 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xb505, 0xb505, 0x4, x4, 1384, x5)
90001628:	0000b537          	lui	a0,0xb
9000162c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001630:	00456593          	ori	a1,a0,4
90001634:	56b22423          	sw	a1,1384(tp) # 568 <offset+0x500>

90001638 <inst_369>:

inst_369:
// rs1_val==46341 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xb737, 0xb505, 0x332, x4, 1388, x5)
90001638:	0000b537          	lui	a0,0xb
9000163c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001640:	33256593          	ori	a1,a0,818
90001644:	56b22623          	sw	a1,1388(tp) # 56c <offset+0x504>

90001648 <inst_370>:

inst_370:
// rs1_val==46341 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xb765, 0xb505, 0x665, x4, 1392, x5)
90001648:	0000b537          	lui	a0,0xb
9000164c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001650:	66556593          	ori	a1,a0,1637
90001654:	56b22823          	sw	a1,1392(tp) # 570 <offset+0x508>

90001658 <inst_371>:

inst_371:
// rs1_val==46341 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xb52d, 0xb505, 0x2c, x4, 1396, x5)
90001658:	0000b537          	lui	a0,0xb
9000165c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001660:	02c56593          	ori	a1,a0,44
90001664:	56b22a23          	sw	a1,1396(tp) # 574 <offset+0x50c>

90001668 <inst_372>:

inst_372:
// rs1_val==46341 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xb557, 0xb505, 0x556, x4, 1400, x5)
90001668:	0000b537          	lui	a0,0xb
9000166c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001670:	55656593          	ori	a1,a0,1366
90001674:	56b22c23          	sw	a1,1400(tp) # 578 <offset+0x510>

90001678 <inst_373>:

inst_373:
// rs1_val==46341 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffaf, 0xb505, -0x555, x4, 1404, x5)
90001678:	0000b537          	lui	a0,0xb
9000167c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001680:	aab56593          	ori	a1,a0,-1365
90001684:	56b22e23          	sw	a1,1404(tp) # 57c <offset+0x514>

90001688 <inst_374>:

inst_374:
// rs1_val==46341 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb505, 0x6, x4, 1408, x5)
90001688:	0000b537          	lui	a0,0xb
9000168c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
90001690:	00656593          	ori	a1,a0,6
90001694:	58b22023          	sw	a1,1408(tp) # 580 <offset+0x518>

90001698 <inst_375>:

inst_375:
// rs1_val==46341 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xb735, 0xb505, 0x334, x4, 1412, x5)
90001698:	0000b537          	lui	a0,0xb
9000169c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
900016a0:	33456593          	ori	a1,a0,820
900016a4:	58b22223          	sw	a1,1412(tp) # 584 <offset+0x51c>

900016a8 <inst_376>:

inst_376:
// rs1_val==46341 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb505, 0x667, x4, 1416, x5)
900016a8:	0000b537          	lui	a0,0xb
900016ac:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
900016b0:	66756593          	ori	a1,a0,1639
900016b4:	58b22423          	sw	a1,1416(tp) # 588 <offset+0x520>

900016b8 <inst_377>:

inst_377:
// rs1_val==46341 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd5, 0xb505, -0x2c, x4, 1420, x5)
900016b8:	0000b537          	lui	a0,0xb
900016bc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
900016c0:	fd456593          	ori	a1,a0,-44
900016c4:	58b22623          	sw	a1,1420(tp) # 58c <offset+0x524>

900016c8 <inst_378>:

inst_378:
// rs1_val==46341 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb505;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xb52f, 0xb505, 0x2e, x4, 1424, x5)
900016c8:	0000b537          	lui	a0,0xb
900016cc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb49d>
900016d0:	02e56593          	ori	a1,a0,46
900016d4:	58b22823          	sw	a1,1424(tp) # 590 <offset+0x528>

900016d8 <inst_379>:

inst_379:
// rs1_val==0 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2d, 0x0, 0x2d, x4, 1428, x5)
900016d8:	00000513          	li	a0,0
900016dc:	02d56593          	ori	a1,a0,45
900016e0:	58b22a23          	sw	a1,1428(tp) # 594 <offset+0x52c>

900016e4 <inst_380>:

inst_380:
// rs1_val==0 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x2, 0x0, 0x2, x4, 1432, x5)
900016e4:	00000513          	li	a0,0
900016e8:	00256593          	ori	a1,a0,2
900016ec:	58b22c23          	sw	a1,1432(tp) # 598 <offset+0x530>

900016f0 <inst_381>:

inst_381:
// rs1_val==0 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x554, 0x0, 0x554, x4, 1436, x5)
900016f0:	00000513          	li	a0,0
900016f4:	55456593          	ori	a1,a0,1364
900016f8:	58b22e23          	sw	a1,1436(tp) # 59c <offset+0x534>

900016fc <inst_382>:

inst_382:
// rs1_val==0 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x4, 0x0, 0x4, x4, 1440, x5)
900016fc:	00000513          	li	a0,0
90001700:	00456593          	ori	a1,a0,4
90001704:	5ab22023          	sw	a1,1440(tp) # 5a0 <offset+0x538>

90001708 <inst_383>:

inst_383:
// rs1_val==0 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x332, 0x0, 0x332, x4, 1444, x5)
90001708:	00000513          	li	a0,0
9000170c:	33256593          	ori	a1,a0,818
90001710:	5ab22223          	sw	a1,1444(tp) # 5a4 <offset+0x53c>

90001714 <inst_384>:

inst_384:
// rs1_val==0 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x665, 0x0, 0x665, x4, 1448, x5)
90001714:	00000513          	li	a0,0
90001718:	66556593          	ori	a1,a0,1637
9000171c:	5ab22423          	sw	a1,1448(tp) # 5a8 <offset+0x540>

90001720 <inst_385>:

inst_385:
// rs1_val==0 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2c, 0x0, 0x2c, x4, 1452, x5)
90001720:	00000513          	li	a0,0
90001724:	02c56593          	ori	a1,a0,44
90001728:	5ab22623          	sw	a1,1452(tp) # 5ac <offset+0x544>

9000172c <inst_386>:

inst_386:
// rs1_val==0 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x556, 0x0, 0x556, x4, 1456, x5)
9000172c:	00000513          	li	a0,0
90001730:	55656593          	ori	a1,a0,1366
90001734:	5ab22823          	sw	a1,1456(tp) # 5b0 <offset+0x548>

90001738 <inst_387>:

inst_387:
// rs1_val==0 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, 0x0, -0x555, x4, 1460, x5)
90001738:	00000513          	li	a0,0
9000173c:	aab56593          	ori	a1,a0,-1365
90001740:	5ab22a23          	sw	a1,1460(tp) # 5b4 <offset+0x54c>

90001744 <inst_388>:

inst_388:
// rs1_val==0 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x6, 0x0, 0x6, x4, 1464, x5)
90001744:	00000513          	li	a0,0
90001748:	00656593          	ori	a1,a0,6
9000174c:	5ab22c23          	sw	a1,1464(tp) # 5b8 <offset+0x550>

90001750 <inst_389>:

inst_389:
// rs1_val==0 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x334, 0x0, 0x334, x4, 1468, x5)
90001750:	00000513          	li	a0,0
90001754:	33456593          	ori	a1,a0,820
90001758:	5ab22e23          	sw	a1,1468(tp) # 5bc <offset+0x554>

9000175c <inst_390>:

inst_390:
// rs1_val==0 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x0, 0x667, x4, 1472, x5)
9000175c:	00000513          	li	a0,0
90001760:	66756593          	ori	a1,a0,1639
90001764:	5cb22023          	sw	a1,1472(tp) # 5c0 <offset+0x558>

90001768 <inst_391>:

inst_391:
// rs1_val==0 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd4, 0x0, -0x2c, x4, 1476, x5)
90001768:	00000513          	li	a0,0
9000176c:	fd456593          	ori	a1,a0,-44
90001770:	5cb22223          	sw	a1,1476(tp) # 5c4 <offset+0x55c>

90001774 <inst_392>:

inst_392:
// rs1_val==0 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x0;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x0, 0x2e, x4, 1480, x5)
90001774:	00000513          	li	a0,0
90001778:	02e56593          	ori	a1,a0,46
9000177c:	5cb22423          	sw	a1,1480(tp) # 5c8 <offset+0x560>

90001780 <inst_393>:

inst_393:
// rs1_val==4 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x7, 0x4, 0x3, x4, 1484, x5)
90001780:	00400513          	li	a0,4
90001784:	00356593          	ori	a1,a0,3
90001788:	5cb22623          	sw	a1,1484(tp) # 5cc <offset+0x564>

9000178c <inst_394>:

inst_394:
// rs1_val==4 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x555, 0x4, 0x555, x4, 1488, x5)
9000178c:	00400513          	li	a0,4
90001790:	55556593          	ori	a1,a0,1365
90001794:	5cb22823          	sw	a1,1488(tp) # 5d0 <offset+0x568>

90001798 <inst_395>:

inst_395:
// rs1_val==4 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaae, 0x4, -0x556, x4, 1492, x5)
90001798:	00400513          	li	a0,4
9000179c:	aaa56593          	ori	a1,a0,-1366
900017a0:	5cb22a23          	sw	a1,1492(tp) # 5d4 <offset+0x56c>

900017a4 <inst_396>:

inst_396:
// rs1_val==4 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x337, 0x4, 0x333, x4, 1496, x5)
900017a4:	00400513          	li	a0,4
900017a8:	33356593          	ori	a1,a0,819
900017ac:	5cb22c23          	sw	a1,1496(tp) # 5d8 <offset+0x570>

900017b0 <inst_397>:

inst_397:
// rs1_val==4 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x666, 0x4, 0x666, x4, 1500, x5)
900017b0:	00400513          	li	a0,4
900017b4:	66656593          	ori	a1,a0,1638
900017b8:	5cb22e23          	sw	a1,1500(tp) # 5dc <offset+0x574>

900017bc <inst_398>:

inst_398:
// rs1_val==4 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x4, -0x2d, x4, 1504, x5)
900017bc:	00400513          	li	a0,4
900017c0:	fd356593          	ori	a1,a0,-45
900017c4:	5eb22023          	sw	a1,1504(tp) # 5e0 <offset+0x578>

900017c8 <inst_399>:

inst_399:
// rs1_val==4 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2d, 0x4, 0x2d, x4, 1508, x5)
900017c8:	00400513          	li	a0,4
900017cc:	02d56593          	ori	a1,a0,45
900017d0:	5eb22223          	sw	a1,1508(tp) # 5e4 <offset+0x57c>

900017d4 <inst_400>:

inst_400:
// rs1_val==4 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x6, 0x4, 0x2, x4, 1512, x5)
900017d4:	00400513          	li	a0,4
900017d8:	00256593          	ori	a1,a0,2
900017dc:	5eb22423          	sw	a1,1512(tp) # 5e8 <offset+0x580>

900017e0 <inst_401>:

inst_401:
// rs1_val==4 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x554, 0x4, 0x554, x4, 1516, x5)
900017e0:	00400513          	li	a0,4
900017e4:	55456593          	ori	a1,a0,1364
900017e8:	5eb22623          	sw	a1,1516(tp) # 5ec <offset+0x584>

900017ec <inst_402>:

inst_402:
// rs1_val==4 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x4, 0x4, 0x0, x4, 1520, x5)
900017ec:	00400513          	li	a0,4
900017f0:	00056593          	ori	a1,a0,0
900017f4:	5eb22823          	sw	a1,1520(tp) # 5f0 <offset+0x588>

900017f8 <inst_403>:

inst_403:
// rs1_val==4 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x4, 0x4, 0x4, x4, 1524, x5)
900017f8:	00400513          	li	a0,4
900017fc:	00456593          	ori	a1,a0,4
90001800:	5eb22a23          	sw	a1,1524(tp) # 5f4 <offset+0x58c>

90001804 <inst_404>:

inst_404:
// rs1_val==4 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x336, 0x4, 0x332, x4, 1528, x5)
90001804:	00400513          	li	a0,4
90001808:	33256593          	ori	a1,a0,818
9000180c:	5eb22c23          	sw	a1,1528(tp) # 5f8 <offset+0x590>

90001810 <inst_405>:

inst_405:
// rs1_val==4 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x665, 0x4, 0x665, x4, 1532, x5)
90001810:	00400513          	li	a0,4
90001814:	66556593          	ori	a1,a0,1637
90001818:	5eb22e23          	sw	a1,1532(tp) # 5fc <offset+0x594>

9000181c <inst_406>:

inst_406:
// rs1_val==4 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2c, 0x4, 0x2c, x4, 1536, x5)
9000181c:	00400513          	li	a0,4
90001820:	02c56593          	ori	a1,a0,44
90001824:	60b22023          	sw	a1,1536(tp) # 600 <offset+0x598>

90001828 <inst_407>:

inst_407:
// rs1_val==4 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x556, 0x4, 0x556, x4, 1540, x5)
90001828:	00400513          	li	a0,4
9000182c:	55656593          	ori	a1,a0,1366
90001830:	60b22223          	sw	a1,1540(tp) # 604 <offset+0x59c>

90001834 <inst_408>:

inst_408:
// rs1_val==4 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaaf, 0x4, -0x555, x4, 1544, x5)
90001834:	00400513          	li	a0,4
90001838:	aab56593          	ori	a1,a0,-1365
9000183c:	60b22423          	sw	a1,1544(tp) # 608 <offset+0x5a0>

90001840 <inst_409>:

inst_409:
// rs1_val==4 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x6, 0x4, 0x6, x4, 1548, x5)
90001840:	00400513          	li	a0,4
90001844:	00656593          	ori	a1,a0,6
90001848:	60b22623          	sw	a1,1548(tp) # 60c <offset+0x5a4>

9000184c <inst_410>:

inst_410:
// rs1_val==4 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x334, 0x4, 0x334, x4, 1552, x5)
9000184c:	00400513          	li	a0,4
90001850:	33456593          	ori	a1,a0,820
90001854:	60b22823          	sw	a1,1552(tp) # 610 <offset+0x5a8>

90001858 <inst_411>:

inst_411:
// rs1_val==4 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x4, 0x667, x4, 1556, x5)
90001858:	00400513          	li	a0,4
9000185c:	66756593          	ori	a1,a0,1639
90001860:	60b22a23          	sw	a1,1556(tp) # 614 <offset+0x5ac>

90001864 <inst_412>:

inst_412:
// rs1_val==4 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd4, 0x4, -0x2c, x4, 1560, x5)
90001864:	00400513          	li	a0,4
90001868:	fd456593          	ori	a1,a0,-44
9000186c:	60b22c23          	sw	a1,1560(tp) # 618 <offset+0x5b0>

90001870 <inst_413>:

inst_413:
// rs1_val==4 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x4;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x4, 0x2e, x4, 1564, x5)
90001870:	00400513          	li	a0,4
90001874:	02e56593          	ori	a1,a0,46
90001878:	60b22e23          	sw	a1,1564(tp) # 61c <offset+0x5b4>

9000187c <inst_414>:

inst_414:
// rs1_val==858993458 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333332, 0x3, x4, 1568, x5)
9000187c:	33333537          	lui	a0,0x33333
90001880:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001884:	00356593          	ori	a1,a0,3
90001888:	62b22023          	sw	a1,1568(tp) # 620 <offset+0x5b8>

9000188c <inst_415>:

inst_415:
// rs1_val==858993458 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333332, 0x555, x4, 1572, x5)
9000188c:	33333537          	lui	a0,0x33333
90001890:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001894:	55556593          	ori	a1,a0,1365
90001898:	62b22223          	sw	a1,1572(tp) # 624 <offset+0x5bc>

9000189c <inst_416>:

inst_416:
// rs1_val==858993458 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffbba, 0x33333332, -0x556, x4, 1576, x5)
9000189c:	33333537          	lui	a0,0x33333
900018a0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
900018a4:	aaa56593          	ori	a1,a0,-1366
900018a8:	62b22423          	sw	a1,1576(tp) # 628 <offset+0x5c0>

900018ac <inst_417>:

inst_417:
// rs1_val==858993458 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333332, 0x5, x4, 1580, x5)
900018ac:	33333537          	lui	a0,0x33333
900018b0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
900018b4:	00556593          	ori	a1,a0,5
900018b8:	62b22623          	sw	a1,1580(tp) # 62c <offset+0x5c4>

900018bc <inst_418>:

inst_418:
// rs1_val==858993458 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x33333333, 0x33333332, 0x333, x4, 1584, x5)
900018bc:	33333537          	lui	a0,0x33333
900018c0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
900018c4:	33356593          	ori	a1,a0,819
900018c8:	62b22823          	sw	a1,1584(tp) # 630 <offset+0x5c8>

900018cc <inst_419>:

inst_419:
// rs1_val==858993458 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x33333776, 0x33333332, 0x666, x4, 1588, x5)
900018cc:	33333537          	lui	a0,0x33333
900018d0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
900018d4:	66656593          	ori	a1,a0,1638
900018d8:	62b22a23          	sw	a1,1588(tp) # 634 <offset+0x5cc>

900018dc <inst_420>:

inst_420:
// rs1_val==858993458 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff3, 0x33333332, -0x2d, x4, 1592, x5)
900018dc:	33333537          	lui	a0,0x33333
900018e0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
900018e4:	fd356593          	ori	a1,a0,-45
900018e8:	62b22c23          	sw	a1,1592(tp) # 638 <offset+0x5d0>

900018ec <inst_421>:

inst_421:
// rs1_val==858993458 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x3333333f, 0x33333332, 0x2d, x4, 1596, x5)
900018ec:	33333537          	lui	a0,0x33333
900018f0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
900018f4:	02d56593          	ori	a1,a0,45
900018f8:	62b22e23          	sw	a1,1596(tp) # 63c <offset+0x5d4>

900018fc <inst_422>:

inst_422:
// rs1_val==858993458 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x33333332, 0x33333332, 0x2, x4, 1600, x5)
900018fc:	33333537          	lui	a0,0x33333
90001900:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001904:	00256593          	ori	a1,a0,2
90001908:	64b22023          	sw	a1,1600(tp) # 640 <offset+0x5d8>

9000190c <inst_423>:

inst_423:
// rs1_val==858993458 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x33333776, 0x33333332, 0x554, x4, 1604, x5)
9000190c:	33333537          	lui	a0,0x33333
90001910:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001914:	55456593          	ori	a1,a0,1364
90001918:	64b22223          	sw	a1,1604(tp) # 644 <offset+0x5dc>

9000191c <inst_424>:

inst_424:
// rs1_val==858993458 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x33333332, 0x33333332, 0x0, x4, 1608, x5)
9000191c:	33333537          	lui	a0,0x33333
90001920:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001924:	00056593          	ori	a1,a0,0
90001928:	64b22423          	sw	a1,1608(tp) # 648 <offset+0x5e0>

9000192c <inst_425>:

inst_425:
// rs1_val==858993458 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333332, 0x4, x4, 1612, x5)
9000192c:	33333537          	lui	a0,0x33333
90001930:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001934:	00456593          	ori	a1,a0,4
90001938:	64b22623          	sw	a1,1612(tp) # 64c <offset+0x5e4>

9000193c <inst_426>:

inst_426:
// rs1_val==858993458 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x33333332, 0x33333332, 0x332, x4, 1616, x5)
9000193c:	33333537          	lui	a0,0x33333
90001940:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001944:	33256593          	ori	a1,a0,818
90001948:	64b22823          	sw	a1,1616(tp) # 650 <offset+0x5e8>

9000194c <inst_427>:

inst_427:
// rs1_val==858993458 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333332, 0x665, x4, 1620, x5)
9000194c:	33333537          	lui	a0,0x33333
90001950:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001954:	66556593          	ori	a1,a0,1637
90001958:	64b22a23          	sw	a1,1620(tp) # 654 <offset+0x5ec>

9000195c <inst_428>:

inst_428:
// rs1_val==858993458 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x3333333e, 0x33333332, 0x2c, x4, 1624, x5)
9000195c:	33333537          	lui	a0,0x33333
90001960:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001964:	02c56593          	ori	a1,a0,44
90001968:	64b22c23          	sw	a1,1624(tp) # 658 <offset+0x5f0>

9000196c <inst_429>:

inst_429:
// rs1_val==858993458 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x33333776, 0x33333332, 0x556, x4, 1628, x5)
9000196c:	33333537          	lui	a0,0x33333
90001970:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001974:	55656593          	ori	a1,a0,1366
90001978:	64b22e23          	sw	a1,1628(tp) # 65c <offset+0x5f4>

9000197c <inst_430>:

inst_430:
// rs1_val==858993458 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffbbb, 0x33333332, -0x555, x4, 1632, x5)
9000197c:	33333537          	lui	a0,0x33333
90001980:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001984:	aab56593          	ori	a1,a0,-1365
90001988:	66b22023          	sw	a1,1632(tp) # 660 <offset+0x5f8>

9000198c <inst_431>:

inst_431:
// rs1_val==858993458 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333332, 0x6, x4, 1636, x5)
9000198c:	33333537          	lui	a0,0x33333
90001990:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
90001994:	00656593          	ori	a1,a0,6
90001998:	66b22223          	sw	a1,1636(tp) # 664 <offset+0x5fc>

9000199c <inst_432>:

inst_432:
// rs1_val==858993458 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333332, 0x334, x4, 1640, x5)
9000199c:	33333537          	lui	a0,0x33333
900019a0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
900019a4:	33456593          	ori	a1,a0,820
900019a8:	66b22423          	sw	a1,1640(tp) # 668 <offset+0x600>

900019ac <inst_433>:

inst_433:
// rs1_val==858993458 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x33333777, 0x33333332, 0x667, x4, 1644, x5)
900019ac:	33333537          	lui	a0,0x33333
900019b0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
900019b4:	66756593          	ori	a1,a0,1639
900019b8:	66b22623          	sw	a1,1644(tp) # 66c <offset+0x604>

900019bc <inst_434>:

inst_434:
// rs1_val==858993458 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff6, 0x33333332, -0x2c, x4, 1648, x5)
900019bc:	33333537          	lui	a0,0x33333
900019c0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
900019c4:	fd456593          	ori	a1,a0,-44
900019c8:	66b22823          	sw	a1,1648(tp) # 670 <offset+0x608>

900019cc <inst_435>:

inst_435:
// rs1_val==858993458 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333332;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x3333333e, 0x33333332, 0x2e, x4, 1652, x5)
900019cc:	33333537          	lui	a0,0x33333
900019d0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333332ca>
900019d4:	02e56593          	ori	a1,a0,46
900019d8:	66b22a23          	sw	a1,1652(tp) # 674 <offset+0x60c>

900019dc <inst_436>:

inst_436:
// rs1_val==1717986917 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666665, 0x3, x4, 1656, x5)
900019dc:	66666537          	lui	a0,0x66666
900019e0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
900019e4:	00356593          	ori	a1,a0,3
900019e8:	66b22c23          	sw	a1,1656(tp) # 678 <offset+0x610>

900019ec <inst_437>:

inst_437:
// rs1_val==1717986917 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x66666775, 0x66666665, 0x555, x4, 1660, x5)
900019ec:	66666537          	lui	a0,0x66666
900019f0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
900019f4:	55556593          	ori	a1,a0,1365
900019f8:	66b22e23          	sw	a1,1660(tp) # 67c <offset+0x614>

900019fc <inst_438>:

inst_438:
// rs1_val==1717986917 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffeef, 0x66666665, -0x556, x4, 1664, x5)
900019fc:	66666537          	lui	a0,0x66666
90001a00:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001a04:	aaa56593          	ori	a1,a0,-1366
90001a08:	68b22023          	sw	a1,1664(tp) # 680 <offset+0x618>

90001a0c <inst_439>:

inst_439:
// rs1_val==1717986917 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x66666665, 0x66666665, 0x5, x4, 1668, x5)
90001a0c:	66666537          	lui	a0,0x66666
90001a10:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001a14:	00556593          	ori	a1,a0,5
90001a18:	68b22223          	sw	a1,1668(tp) # 684 <offset+0x61c>

90001a1c <inst_440>:

inst_440:
// rs1_val==1717986917 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666665, 0x333, x4, 1672, x5)
90001a1c:	66666537          	lui	a0,0x66666
90001a20:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001a24:	33356593          	ori	a1,a0,819
90001a28:	68b22423          	sw	a1,1672(tp) # 688 <offset+0x620>

90001a2c <inst_441>:

inst_441:
// rs1_val==1717986917 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666665, 0x666, x4, 1676, x5)
90001a2c:	66666537          	lui	a0,0x66666
90001a30:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001a34:	66656593          	ori	a1,a0,1638
90001a38:	68b22623          	sw	a1,1676(tp) # 68c <offset+0x624>

90001a3c <inst_442>:

inst_442:
// rs1_val==1717986917 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x66666665, -0x2d, x4, 1680, x5)
90001a3c:	66666537          	lui	a0,0x66666
90001a40:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001a44:	fd356593          	ori	a1,a0,-45
90001a48:	68b22823          	sw	a1,1680(tp) # 690 <offset+0x628>

90001a4c <inst_443>:

inst_443:
// rs1_val==1717986917 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x6666666d, 0x66666665, 0x2d, x4, 1684, x5)
90001a4c:	66666537          	lui	a0,0x66666
90001a50:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001a54:	02d56593          	ori	a1,a0,45
90001a58:	68b22a23          	sw	a1,1684(tp) # 694 <offset+0x62c>

90001a5c <inst_444>:

inst_444:
// rs1_val==1717986917 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666665, 0x2, x4, 1688, x5)
90001a5c:	66666537          	lui	a0,0x66666
90001a60:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001a64:	00256593          	ori	a1,a0,2
90001a68:	68b22c23          	sw	a1,1688(tp) # 698 <offset+0x630>

90001a6c <inst_445>:

inst_445:
// rs1_val==1717986917 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x66666775, 0x66666665, 0x554, x4, 1692, x5)
90001a6c:	66666537          	lui	a0,0x66666
90001a70:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001a74:	55456593          	ori	a1,a0,1364
90001a78:	68b22e23          	sw	a1,1692(tp) # 69c <offset+0x634>

90001a7c <inst_446>:

inst_446:
// rs1_val==1717986917 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x66666665, 0x66666665, 0x0, x4, 1696, x5)
90001a7c:	66666537          	lui	a0,0x66666
90001a80:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001a84:	00056593          	ori	a1,a0,0
90001a88:	6ab22023          	sw	a1,1696(tp) # 6a0 <offset+0x638>

90001a8c <inst_447>:

inst_447:
// rs1_val==1717986917 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x66666665, 0x66666665, 0x4, x4, 1700, x5)
90001a8c:	66666537          	lui	a0,0x66666
90001a90:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001a94:	00456593          	ori	a1,a0,4
90001a98:	6ab22223          	sw	a1,1700(tp) # 6a4 <offset+0x63c>

90001a9c <inst_448>:

inst_448:
// rs1_val==1717986917 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666665, 0x332, x4, 1704, x5)
90001a9c:	66666537          	lui	a0,0x66666
90001aa0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001aa4:	33256593          	ori	a1,a0,818
90001aa8:	6ab22423          	sw	a1,1704(tp) # 6a8 <offset+0x640>

90001aac <inst_449>:

inst_449:
// rs1_val==1717986917 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x66666665, 0x66666665, 0x665, x4, 1708, x5)
90001aac:	66666537          	lui	a0,0x66666
90001ab0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001ab4:	66556593          	ori	a1,a0,1637
90001ab8:	6ab22623          	sw	a1,1708(tp) # 6ac <offset+0x644>

90001abc <inst_450>:

inst_450:
// rs1_val==1717986917 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x6666666d, 0x66666665, 0x2c, x4, 1712, x5)
90001abc:	66666537          	lui	a0,0x66666
90001ac0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001ac4:	02c56593          	ori	a1,a0,44
90001ac8:	6ab22823          	sw	a1,1712(tp) # 6b0 <offset+0x648>

90001acc <inst_451>:

inst_451:
// rs1_val==1717986917 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x66666777, 0x66666665, 0x556, x4, 1716, x5)
90001acc:	66666537          	lui	a0,0x66666
90001ad0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001ad4:	55656593          	ori	a1,a0,1366
90001ad8:	6ab22a23          	sw	a1,1716(tp) # 6b4 <offset+0x64c>

90001adc <inst_452>:

inst_452:
// rs1_val==1717986917 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffeef, 0x66666665, -0x555, x4, 1720, x5)
90001adc:	66666537          	lui	a0,0x66666
90001ae0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001ae4:	aab56593          	ori	a1,a0,-1365
90001ae8:	6ab22c23          	sw	a1,1720(tp) # 6b8 <offset+0x650>

90001aec <inst_453>:

inst_453:
// rs1_val==1717986917 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666665, 0x6, x4, 1724, x5)
90001aec:	66666537          	lui	a0,0x66666
90001af0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001af4:	00656593          	ori	a1,a0,6
90001af8:	6ab22e23          	sw	a1,1724(tp) # 6bc <offset+0x654>

90001afc <inst_454>:

inst_454:
// rs1_val==1717986917 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x66666775, 0x66666665, 0x334, x4, 1728, x5)
90001afc:	66666537          	lui	a0,0x66666
90001b00:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001b04:	33456593          	ori	a1,a0,820
90001b08:	6cb22023          	sw	a1,1728(tp) # 6c0 <offset+0x658>

90001b0c <inst_455>:

inst_455:
// rs1_val==1717986917 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x66666667, 0x66666665, 0x667, x4, 1732, x5)
90001b0c:	66666537          	lui	a0,0x66666
90001b10:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001b14:	66756593          	ori	a1,a0,1639
90001b18:	6cb22223          	sw	a1,1732(tp) # 6c4 <offset+0x65c>

90001b1c <inst_456>:

inst_456:
// rs1_val==1717986917 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xfffffff5, 0x66666665, -0x2c, x4, 1736, x5)
90001b1c:	66666537          	lui	a0,0x66666
90001b20:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001b24:	fd456593          	ori	a1,a0,-44
90001b28:	6cb22423          	sw	a1,1736(tp) # 6c8 <offset+0x660>

90001b2c <inst_457>:

inst_457:
// rs1_val==1717986917 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x66666665;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x6666666f, 0x66666665, 0x2e, x4, 1740, x5)
90001b2c:	66666537          	lui	a0,0x66666
90001b30:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666665fd>
90001b34:	02e56593          	ori	a1,a0,46
90001b38:	6cb22623          	sw	a1,1740(tp) # 6cc <offset+0x664>

90001b3c <inst_458>:

inst_458:
// rs1_val==46339 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xb503, 0xb503, 0x3, x4, 1744, x5)
90001b3c:	0000b537          	lui	a0,0xb
90001b40:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001b44:	00356593          	ori	a1,a0,3
90001b48:	6cb22823          	sw	a1,1744(tp) # 6d0 <offset+0x668>

90001b4c <inst_459>:

inst_459:
// rs1_val==46339 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xb557, 0xb503, 0x555, x4, 1748, x5)
90001b4c:	0000b537          	lui	a0,0xb
90001b50:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001b54:	55556593          	ori	a1,a0,1365
90001b58:	6cb22a23          	sw	a1,1748(tp) # 6d4 <offset+0x66c>

90001b5c <inst_460>:

inst_460:
// rs1_val==46339 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xffffffab, 0xb503, -0x556, x4, 1752, x5)
90001b5c:	0000b537          	lui	a0,0xb
90001b60:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001b64:	aaa56593          	ori	a1,a0,-1366
90001b68:	6cb22c23          	sw	a1,1752(tp) # 6d8 <offset+0x670>

90001b6c <inst_461>:

inst_461:
// rs1_val==46339 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb503, 0x5, x4, 1756, x5)
90001b6c:	0000b537          	lui	a0,0xb
90001b70:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001b74:	00556593          	ori	a1,a0,5
90001b78:	6cb22e23          	sw	a1,1756(tp) # 6dc <offset+0x674>

90001b7c <inst_462>:

inst_462:
// rs1_val==46339 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xb733, 0xb503, 0x333, x4, 1760, x5)
90001b7c:	0000b537          	lui	a0,0xb
90001b80:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001b84:	33356593          	ori	a1,a0,819
90001b88:	6eb22023          	sw	a1,1760(tp) # 6e0 <offset+0x678>

90001b8c <inst_463>:

inst_463:
// rs1_val==46339 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb503, 0x666, x4, 1764, x5)
90001b8c:	0000b537          	lui	a0,0xb
90001b90:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001b94:	66656593          	ori	a1,a0,1638
90001b98:	6eb22223          	sw	a1,1764(tp) # 6e4 <offset+0x67c>

90001b9c <inst_464>:

inst_464:
// rs1_val==46339 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd3, 0xb503, -0x2d, x4, 1768, x5)
90001b9c:	0000b537          	lui	a0,0xb
90001ba0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001ba4:	fd356593          	ori	a1,a0,-45
90001ba8:	6eb22423          	sw	a1,1768(tp) # 6e8 <offset+0x680>

90001bac <inst_465>:

inst_465:
// rs1_val==46339 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xb52f, 0xb503, 0x2d, x4, 1772, x5)
90001bac:	0000b537          	lui	a0,0xb
90001bb0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001bb4:	02d56593          	ori	a1,a0,45
90001bb8:	6eb22623          	sw	a1,1772(tp) # 6ec <offset+0x684>

90001bbc <inst_466>:

inst_466:
// rs1_val==46339 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xb503, 0xb503, 0x2, x4, 1776, x5)
90001bbc:	0000b537          	lui	a0,0xb
90001bc0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001bc4:	00256593          	ori	a1,a0,2
90001bc8:	6eb22823          	sw	a1,1776(tp) # 6f0 <offset+0x688>

90001bcc <inst_467>:

inst_467:
// rs1_val==46339 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xb557, 0xb503, 0x554, x4, 1780, x5)
90001bcc:	0000b537          	lui	a0,0xb
90001bd0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001bd4:	55456593          	ori	a1,a0,1364
90001bd8:	6eb22a23          	sw	a1,1780(tp) # 6f4 <offset+0x68c>

90001bdc <inst_468>:

inst_468:
// rs1_val==46339 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xb503, 0xb503, 0x0, x4, 1784, x5)
90001bdc:	0000b537          	lui	a0,0xb
90001be0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001be4:	00056593          	ori	a1,a0,0
90001be8:	6eb22c23          	sw	a1,1784(tp) # 6f8 <offset+0x690>

90001bec <inst_469>:

inst_469:
// rs1_val==46339 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb503, 0x4, x4, 1788, x5)
90001bec:	0000b537          	lui	a0,0xb
90001bf0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001bf4:	00456593          	ori	a1,a0,4
90001bf8:	6eb22e23          	sw	a1,1788(tp) # 6fc <offset+0x694>

90001bfc <inst_470>:

inst_470:
// rs1_val==46339 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xb733, 0xb503, 0x332, x4, 1792, x5)
90001bfc:	0000b537          	lui	a0,0xb
90001c00:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001c04:	33256593          	ori	a1,a0,818
90001c08:	70b22023          	sw	a1,1792(tp) # 700 <offset+0x698>

90001c0c <inst_471>:

inst_471:
// rs1_val==46339 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb503, 0x665, x4, 1796, x5)
90001c0c:	0000b537          	lui	a0,0xb
90001c10:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001c14:	66556593          	ori	a1,a0,1637
90001c18:	70b22223          	sw	a1,1796(tp) # 704 <offset+0x69c>

90001c1c <inst_472>:

inst_472:
// rs1_val==46339 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xb52f, 0xb503, 0x2c, x4, 1800, x5)
90001c1c:	0000b537          	lui	a0,0xb
90001c20:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001c24:	02c56593          	ori	a1,a0,44
90001c28:	70b22423          	sw	a1,1800(tp) # 708 <offset+0x6a0>

90001c2c <inst_473>:

inst_473:
// rs1_val==46339 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xb557, 0xb503, 0x556, x4, 1804, x5)
90001c2c:	0000b537          	lui	a0,0xb
90001c30:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001c34:	55656593          	ori	a1,a0,1366
90001c38:	70b22623          	sw	a1,1804(tp) # 70c <offset+0x6a4>

90001c3c <inst_474>:

inst_474:
// rs1_val==46339 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffab, 0xb503, -0x555, x4, 1808, x5)
90001c3c:	0000b537          	lui	a0,0xb
90001c40:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001c44:	aab56593          	ori	a1,a0,-1365
90001c48:	70b22823          	sw	a1,1808(tp) # 710 <offset+0x6a8>

90001c4c <inst_475>:

inst_475:
// rs1_val==46339 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xb507, 0xb503, 0x6, x4, 1812, x5)
90001c4c:	0000b537          	lui	a0,0xb
90001c50:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001c54:	00656593          	ori	a1,a0,6
90001c58:	70b22a23          	sw	a1,1812(tp) # 714 <offset+0x6ac>

90001c5c <inst_476>:

inst_476:
// rs1_val==46339 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xb737, 0xb503, 0x334, x4, 1816, x5)
90001c5c:	0000b537          	lui	a0,0xb
90001c60:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001c64:	33456593          	ori	a1,a0,820
90001c68:	70b22c23          	sw	a1,1816(tp) # 718 <offset+0x6b0>

90001c6c <inst_477>:

inst_477:
// rs1_val==46339 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xb767, 0xb503, 0x667, x4, 1820, x5)
90001c6c:	0000b537          	lui	a0,0xb
90001c70:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001c74:	66756593          	ori	a1,a0,1639
90001c78:	70b22e23          	sw	a1,1820(tp) # 71c <offset+0x6b4>

90001c7c <inst_478>:

inst_478:
// rs1_val==46339 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0xb503, -0x2c, x4, 1824, x5)
90001c7c:	0000b537          	lui	a0,0xb
90001c80:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001c84:	fd456593          	ori	a1,a0,-44
90001c88:	72b22023          	sw	a1,1824(tp) # 720 <offset+0x6b8>

90001c8c <inst_479>:

inst_479:
// rs1_val==46339 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0xb503;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xb52f, 0xb503, 0x2e, x4, 1828, x5)
90001c8c:	0000b537          	lui	a0,0xb
90001c90:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb49b>
90001c94:	02e56593          	ori	a1,a0,46
90001c98:	72b22223          	sw	a1,1828(tp) # 724 <offset+0x6bc>

90001c9c <inst_480>:

inst_480:
// rs1_val==1431655766 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555556, 0x3, x4, 1832, x5)
90001c9c:	55555537          	lui	a0,0x55555
90001ca0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001ca4:	00356593          	ori	a1,a0,3
90001ca8:	72b22423          	sw	a1,1832(tp) # 728 <offset+0x6c0>

90001cac <inst_481>:

inst_481:
// rs1_val==1431655766 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555556, 0x555, x4, 1836, x5)
90001cac:	55555537          	lui	a0,0x55555
90001cb0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001cb4:	55556593          	ori	a1,a0,1365
90001cb8:	72b22623          	sw	a1,1836(tp) # 72c <offset+0x6c4>

90001cbc <inst_482>:

inst_482:
// rs1_val==1431655766 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffffe, 0x55555556, -0x556, x4, 1840, x5)
90001cbc:	55555537          	lui	a0,0x55555
90001cc0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001cc4:	aaa56593          	ori	a1,a0,-1366
90001cc8:	72b22823          	sw	a1,1840(tp) # 730 <offset+0x6c8>

90001ccc <inst_483>:

inst_483:
// rs1_val==1431655766 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x55555557, 0x55555556, 0x5, x4, 1844, x5)
90001ccc:	55555537          	lui	a0,0x55555
90001cd0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001cd4:	00556593          	ori	a1,a0,5
90001cd8:	72b22a23          	sw	a1,1844(tp) # 734 <offset+0x6cc>

90001cdc <inst_484>:

inst_484:
// rs1_val==1431655766 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555556, 0x333, x4, 1848, x5)
90001cdc:	55555537          	lui	a0,0x55555
90001ce0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001ce4:	33356593          	ori	a1,a0,819
90001ce8:	72b22c23          	sw	a1,1848(tp) # 738 <offset+0x6d0>

90001cec <inst_485>:

inst_485:
// rs1_val==1431655766 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x55555776, 0x55555556, 0x666, x4, 1852, x5)
90001cec:	55555537          	lui	a0,0x55555
90001cf0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001cf4:	66656593          	ori	a1,a0,1638
90001cf8:	72b22e23          	sw	a1,1852(tp) # 73c <offset+0x6d4>

90001cfc <inst_486>:

inst_486:
// rs1_val==1431655766 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x55555556, -0x2d, x4, 1856, x5)
90001cfc:	55555537          	lui	a0,0x55555
90001d00:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001d04:	fd356593          	ori	a1,a0,-45
90001d08:	74b22023          	sw	a1,1856(tp) # 740 <offset+0x6d8>

90001d0c <inst_487>:

inst_487:
// rs1_val==1431655766 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x5555557f, 0x55555556, 0x2d, x4, 1860, x5)
90001d0c:	55555537          	lui	a0,0x55555
90001d10:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001d14:	02d56593          	ori	a1,a0,45
90001d18:	74b22223          	sw	a1,1860(tp) # 744 <offset+0x6dc>

90001d1c <inst_488>:

inst_488:
// rs1_val==1431655766 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x2, x4, 1864, x5)
90001d1c:	55555537          	lui	a0,0x55555
90001d20:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001d24:	00256593          	ori	a1,a0,2
90001d28:	74b22423          	sw	a1,1864(tp) # 748 <offset+0x6e0>

90001d2c <inst_489>:

inst_489:
// rs1_val==1431655766 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x554, x4, 1868, x5)
90001d2c:	55555537          	lui	a0,0x55555
90001d30:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001d34:	55456593          	ori	a1,a0,1364
90001d38:	74b22623          	sw	a1,1868(tp) # 74c <offset+0x6e4>

90001d3c <inst_490>:

inst_490:
// rs1_val==1431655766 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x0, x4, 1872, x5)
90001d3c:	55555537          	lui	a0,0x55555
90001d40:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001d44:	00056593          	ori	a1,a0,0
90001d48:	74b22823          	sw	a1,1872(tp) # 750 <offset+0x6e8>

90001d4c <inst_491>:

inst_491:
// rs1_val==1431655766 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x4, x4, 1876, x5)
90001d4c:	55555537          	lui	a0,0x55555
90001d50:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001d54:	00456593          	ori	a1,a0,4
90001d58:	74b22a23          	sw	a1,1876(tp) # 754 <offset+0x6ec>

90001d5c <inst_492>:

inst_492:
// rs1_val==1431655766 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x55555776, 0x55555556, 0x332, x4, 1880, x5)
90001d5c:	55555537          	lui	a0,0x55555
90001d60:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001d64:	33256593          	ori	a1,a0,818
90001d68:	74b22c23          	sw	a1,1880(tp) # 758 <offset+0x6f0>

90001d6c <inst_493>:

inst_493:
// rs1_val==1431655766 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555556, 0x665, x4, 1884, x5)
90001d6c:	55555537          	lui	a0,0x55555
90001d70:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001d74:	66556593          	ori	a1,a0,1637
90001d78:	74b22e23          	sw	a1,1884(tp) # 75c <offset+0x6f4>

90001d7c <inst_494>:

inst_494:
// rs1_val==1431655766 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x5555557e, 0x55555556, 0x2c, x4, 1888, x5)
90001d7c:	55555537          	lui	a0,0x55555
90001d80:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001d84:	02c56593          	ori	a1,a0,44
90001d88:	76b22023          	sw	a1,1888(tp) # 760 <offset+0x6f8>

90001d8c <inst_495>:

inst_495:
// rs1_val==1431655766 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x556, x4, 1892, x5)
90001d8c:	55555537          	lui	a0,0x55555
90001d90:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001d94:	55656593          	ori	a1,a0,1366
90001d98:	76b22223          	sw	a1,1892(tp) # 764 <offset+0x6fc>

90001d9c <inst_496>:

inst_496:
// rs1_val==1431655766 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xffffffff, 0x55555556, -0x555, x4, 1896, x5)
90001d9c:	55555537          	lui	a0,0x55555
90001da0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001da4:	aab56593          	ori	a1,a0,-1365
90001da8:	76b22423          	sw	a1,1896(tp) # 768 <offset+0x700>

90001dac <inst_497>:

inst_497:
// rs1_val==1431655766 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x55555556, 0x55555556, 0x6, x4, 1900, x5)
90001dac:	55555537          	lui	a0,0x55555
90001db0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001db4:	00656593          	ori	a1,a0,6
90001db8:	76b22623          	sw	a1,1900(tp) # 76c <offset+0x704>

90001dbc <inst_498>:

inst_498:
// rs1_val==1431655766 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x55555776, 0x55555556, 0x334, x4, 1904, x5)
90001dbc:	55555537          	lui	a0,0x55555
90001dc0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001dc4:	33456593          	ori	a1,a0,820
90001dc8:	76b22823          	sw	a1,1904(tp) # 770 <offset+0x708>

90001dcc <inst_499>:

inst_499:
// rs1_val==1431655766 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x55555777, 0x55555556, 0x667, x4, 1908, x5)
90001dcc:	55555537          	lui	a0,0x55555
90001dd0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001dd4:	66756593          	ori	a1,a0,1639
90001dd8:	76b22a23          	sw	a1,1908(tp) # 774 <offset+0x70c>

90001ddc <inst_500>:

inst_500:
// rs1_val==1431655766 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd6, 0x55555556, -0x2c, x4, 1912, x5)
90001ddc:	55555537          	lui	a0,0x55555
90001de0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001de4:	fd456593          	ori	a1,a0,-44
90001de8:	76b22c23          	sw	a1,1912(tp) # 778 <offset+0x710>

90001dec <inst_501>:

inst_501:
// rs1_val==1431655766 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x55555556;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x5555557e, 0x55555556, 0x2e, x4, 1916, x5)
90001dec:	55555537          	lui	a0,0x55555
90001df0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555554ee>
90001df4:	02e56593          	ori	a1,a0,46
90001df8:	76b22e23          	sw	a1,1916(tp) # 77c <offset+0x714>

90001dfc <inst_502>:

inst_502:
// rs1_val==-1431655765 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaab, -0x55555555, 0x3, x4, 1920, x5)
90001dfc:	aaaab537          	lui	a0,0xaaaab
90001e00:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e04:	00356593          	ori	a1,a0,3
90001e08:	78b22023          	sw	a1,1920(tp) # 780 <offset+0x718>

90001e0c <inst_503>:

inst_503:
// rs1_val==-1431655765 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0xaaaaafff, -0x55555555, 0x555, x4, 1924, x5)
90001e0c:	aaaab537          	lui	a0,0xaaaab
90001e10:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e14:	55556593          	ori	a1,a0,1365
90001e18:	78b22223          	sw	a1,1924(tp) # 784 <offset+0x71c>

90001e1c <inst_504>:

inst_504:
// rs1_val==-1431655765 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, -0x55555555, -0x556, x4, 1928, x5)
90001e1c:	aaaab537          	lui	a0,0xaaaab
90001e20:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e24:	aaa56593          	ori	a1,a0,-1366
90001e28:	78b22423          	sw	a1,1928(tp) # 788 <offset+0x720>

90001e2c <inst_505>:

inst_505:
// rs1_val==-1431655765 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x5, x4, 1932, x5)
90001e2c:	aaaab537          	lui	a0,0xaaaab
90001e30:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e34:	00556593          	ori	a1,a0,5
90001e38:	78b22623          	sw	a1,1932(tp) # 78c <offset+0x724>

90001e3c <inst_506>:

inst_506:
// rs1_val==-1431655765 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0xaaaaabbb, -0x55555555, 0x333, x4, 1936, x5)
90001e3c:	aaaab537          	lui	a0,0xaaaab
90001e40:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e44:	33356593          	ori	a1,a0,819
90001e48:	78b22823          	sw	a1,1936(tp) # 790 <offset+0x728>

90001e4c <inst_507>:

inst_507:
// rs1_val==-1431655765 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeef, -0x55555555, 0x666, x4, 1940, x5)
90001e4c:	aaaab537          	lui	a0,0xaaaab
90001e50:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e54:	66656593          	ori	a1,a0,1638
90001e58:	78b22a23          	sw	a1,1940(tp) # 794 <offset+0x72c>

90001e5c <inst_508>:

inst_508:
// rs1_val==-1431655765 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffffb, -0x55555555, -0x2d, x4, 1944, x5)
90001e5c:	aaaab537          	lui	a0,0xaaaab
90001e60:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e64:	fd356593          	ori	a1,a0,-45
90001e68:	78b22c23          	sw	a1,1944(tp) # 798 <offset+0x730>

90001e6c <inst_509>:

inst_509:
// rs1_val==-1431655765 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x2d, x4, 1948, x5)
90001e6c:	aaaab537          	lui	a0,0xaaaab
90001e70:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e74:	02d56593          	ori	a1,a0,45
90001e78:	78b22e23          	sw	a1,1948(tp) # 79c <offset+0x734>

90001e7c <inst_510>:

inst_510:
// rs1_val==-1431655765 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaab, -0x55555555, 0x2, x4, 1952, x5)
90001e7c:	aaaab537          	lui	a0,0xaaaab
90001e80:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e84:	00256593          	ori	a1,a0,2
90001e88:	7ab22023          	sw	a1,1952(tp) # 7a0 <offset+0x738>

90001e8c <inst_511>:

inst_511:
// rs1_val==-1431655765 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0xaaaaafff, -0x55555555, 0x554, x4, 1956, x5)
90001e8c:	aaaab537          	lui	a0,0xaaaab
90001e90:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001e94:	55456593          	ori	a1,a0,1364
90001e98:	7ab22223          	sw	a1,1956(tp) # 7a4 <offset+0x73c>

90001e9c <inst_512>:

inst_512:
// rs1_val==-1431655765 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaab, -0x55555555, 0x0, x4, 1960, x5)
90001e9c:	aaaab537          	lui	a0,0xaaaab
90001ea0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001ea4:	00056593          	ori	a1,a0,0
90001ea8:	7ab22423          	sw	a1,1960(tp) # 7a8 <offset+0x740>

90001eac <inst_513>:

inst_513:
// rs1_val==-1431655765 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x4, x4, 1964, x5)
90001eac:	aaaab537          	lui	a0,0xaaaab
90001eb0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001eb4:	00456593          	ori	a1,a0,4
90001eb8:	7ab22623          	sw	a1,1964(tp) # 7ac <offset+0x744>

90001ebc <inst_514>:

inst_514:
// rs1_val==-1431655765 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0xaaaaabbb, -0x55555555, 0x332, x4, 1968, x5)
90001ebc:	aaaab537          	lui	a0,0xaaaab
90001ec0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001ec4:	33256593          	ori	a1,a0,818
90001ec8:	7ab22823          	sw	a1,1968(tp) # 7b0 <offset+0x748>

90001ecc <inst_515>:

inst_515:
// rs1_val==-1431655765 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeef, -0x55555555, 0x665, x4, 1972, x5)
90001ecc:	aaaab537          	lui	a0,0xaaaab
90001ed0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001ed4:	66556593          	ori	a1,a0,1637
90001ed8:	7ab22a23          	sw	a1,1972(tp) # 7b4 <offset+0x74c>

90001edc <inst_516>:

inst_516:
// rs1_val==-1431655765 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x2c, x4, 1976, x5)
90001edc:	aaaab537          	lui	a0,0xaaaab
90001ee0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001ee4:	02c56593          	ori	a1,a0,44
90001ee8:	7ab22c23          	sw	a1,1976(tp) # 7b8 <offset+0x750>

90001eec <inst_517>:

inst_517:
// rs1_val==-1431655765 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0xaaaaafff, -0x55555555, 0x556, x4, 1980, x5)
90001eec:	aaaab537          	lui	a0,0xaaaab
90001ef0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001ef4:	55656593          	ori	a1,a0,1366
90001ef8:	7ab22e23          	sw	a1,1980(tp) # 7bc <offset+0x754>

90001efc <inst_518>:

inst_518:
// rs1_val==-1431655765 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaab, -0x55555555, -0x555, x4, 1984, x5)
90001efc:	aaaab537          	lui	a0,0xaaaab
90001f00:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f04:	aab56593          	ori	a1,a0,-1365
90001f08:	7cb22023          	sw	a1,1984(tp) # 7c0 <offset+0x758>

90001f0c <inst_519>:

inst_519:
// rs1_val==-1431655765 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x6, x4, 1988, x5)
90001f0c:	aaaab537          	lui	a0,0xaaaab
90001f10:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f14:	00656593          	ori	a1,a0,6
90001f18:	7cb22223          	sw	a1,1988(tp) # 7c4 <offset+0x75c>

90001f1c <inst_520>:

inst_520:
// rs1_val==-1431655765 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0xaaaaabbf, -0x55555555, 0x334, x4, 1992, x5)
90001f1c:	aaaab537          	lui	a0,0xaaaab
90001f20:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f24:	33456593          	ori	a1,a0,820
90001f28:	7cb22423          	sw	a1,1992(tp) # 7c8 <offset+0x760>

90001f2c <inst_521>:

inst_521:
// rs1_val==-1431655765 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0xaaaaaeef, -0x55555555, 0x667, x4, 1996, x5)
90001f2c:	aaaab537          	lui	a0,0xaaaab
90001f30:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f34:	66756593          	ori	a1,a0,1639
90001f38:	7cb22623          	sw	a1,1996(tp) # 7cc <offset+0x764>

90001f3c <inst_522>:

inst_522:
// rs1_val==-1431655765 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x55555555, -0x2c, x4, 2000, x5)
90001f3c:	aaaab537          	lui	a0,0xaaaab
90001f40:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f44:	fd456593          	ori	a1,a0,-44
90001f48:	7cb22823          	sw	a1,2000(tp) # 7d0 <offset+0x768>

90001f4c <inst_523>:

inst_523:
// rs1_val==-1431655765 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:-0x55555555;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0xaaaaaaaf, -0x55555555, 0x2e, x4, 2004, x5)
90001f4c:	aaaab537          	lui	a0,0xaaaab
90001f50:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa60a7>
90001f54:	02e56593          	ori	a1,a0,46
90001f58:	7cb22a23          	sw	a1,2004(tp) # 7d4 <offset+0x76c>

90001f5c <inst_524>:

inst_524:
// rs1_val==6 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x7, 0x6, 0x3, x4, 2008, x5)
90001f5c:	00600513          	li	a0,6
90001f60:	00356593          	ori	a1,a0,3
90001f64:	7cb22c23          	sw	a1,2008(tp) # 7d8 <offset+0x770>

90001f68 <inst_525>:

inst_525:
// rs1_val==6 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x557, 0x6, 0x555, x4, 2012, x5)
90001f68:	00600513          	li	a0,6
90001f6c:	55556593          	ori	a1,a0,1365
90001f70:	7cb22e23          	sw	a1,2012(tp) # 7dc <offset+0x774>

90001f74 <inst_526>:

inst_526:
// rs1_val==6 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffaae, 0x6, -0x556, x4, 2016, x5)
90001f74:	00600513          	li	a0,6
90001f78:	aaa56593          	ori	a1,a0,-1366
90001f7c:	7eb22023          	sw	a1,2016(tp) # 7e0 <offset+0x778>

90001f80 <inst_527>:

inst_527:
// rs1_val==6 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x7, 0x6, 0x5, x4, 2020, x5)
90001f80:	00600513          	li	a0,6
90001f84:	00556593          	ori	a1,a0,5
90001f88:	7eb22223          	sw	a1,2020(tp) # 7e4 <offset+0x77c>

90001f8c <inst_528>:

inst_528:
// rs1_val==6 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x337, 0x6, 0x333, x4, 2024, x5)
90001f8c:	00600513          	li	a0,6
90001f90:	33356593          	ori	a1,a0,819
90001f94:	7eb22423          	sw	a1,2024(tp) # 7e8 <offset+0x780>

90001f98 <inst_529>:

inst_529:
// rs1_val==6 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x666, 0x6, 0x666, x4, 2028, x5)
90001f98:	00600513          	li	a0,6
90001f9c:	66656593          	ori	a1,a0,1638
90001fa0:	7eb22623          	sw	a1,2028(tp) # 7ec <offset+0x784>

90001fa4 <inst_530>:

inst_530:
// rs1_val==6 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xffffffd7, 0x6, -0x2d, x4, 2032, x5)
90001fa4:	00600513          	li	a0,6
90001fa8:	fd356593          	ori	a1,a0,-45
90001fac:	7eb22823          	sw	a1,2032(tp) # 7f0 <offset+0x788>

90001fb0 <inst_531>:

inst_531:
// rs1_val==6 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x2f, 0x6, 0x2d, x4, 2036, x5)
90001fb0:	00600513          	li	a0,6
90001fb4:	02d56593          	ori	a1,a0,45
90001fb8:	7eb22a23          	sw	a1,2036(tp) # 7f4 <offset+0x78c>

90001fbc <inst_532>:

inst_532:
// rs1_val==6 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x6, 0x6, 0x2, x4, 2040, x5)
90001fbc:	00600513          	li	a0,6
90001fc0:	00256593          	ori	a1,a0,2
90001fc4:	7eb22c23          	sw	a1,2040(tp) # 7f8 <offset+0x790>

90001fc8 <inst_533>:

inst_533:
// rs1_val==6 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x556, 0x6, 0x554, x4, 2044, x5)
90001fc8:	00600513          	li	a0,6
90001fcc:	55456593          	ori	a1,a0,1364
90001fd0:	7eb22e23          	sw	a1,2044(tp) # 7fc <offset+0x794>
RVTEST_SIGBASE( x4,signature_x4_1)
90001fd4:	00003217          	auipc	tp,0x3
90001fd8:	89420213          	addi	tp,tp,-1900 # 90004868 <signature_x4_1>

90001fdc <inst_534>:

inst_534:
// rs1_val==6 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x6, 0x6, 0x0, x4, 0, x5)
90001fdc:	00600513          	li	a0,6
90001fe0:	00056593          	ori	a1,a0,0
90001fe4:	00b22023          	sw	a1,0(tp) # 0 <offset-0x68>

90001fe8 <inst_535>:

inst_535:
// rs1_val==6 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x6, 0x6, 0x4, x4, 4, x5)
90001fe8:	00600513          	li	a0,6
90001fec:	00456593          	ori	a1,a0,4
90001ff0:	00b22223          	sw	a1,4(tp) # 4 <offset-0x64>

90001ff4 <inst_536>:

inst_536:
// rs1_val==6 and imm_val==818, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x332
TEST_IMM_OP( ori, x11, x10, 0x336, 0x6, 0x332, x4, 8, x5)
90001ff4:	00600513          	li	a0,6
90001ff8:	33256593          	ori	a1,a0,818
90001ffc:	00b22423          	sw	a1,8(tp) # 8 <offset-0x60>

90002000 <inst_537>:

inst_537:
// rs1_val==6 and imm_val==1637, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x665
TEST_IMM_OP( ori, x11, x10, 0x667, 0x6, 0x665, x4, 12, x5)
90002000:	00600513          	li	a0,6
90002004:	66556593          	ori	a1,a0,1637
90002008:	00b22623          	sw	a1,12(tp) # c <offset-0x5c>

9000200c <inst_538>:

inst_538:
// rs1_val==6 and imm_val==44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x2c
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x6, 0x2c, x4, 16, x5)
9000200c:	00600513          	li	a0,6
90002010:	02c56593          	ori	a1,a0,44
90002014:	00b22823          	sw	a1,16(tp) # 10 <offset-0x58>

90002018 <inst_539>:

inst_539:
// rs1_val==6 and imm_val==1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x556
TEST_IMM_OP( ori, x11, x10, 0x556, 0x6, 0x556, x4, 20, x5)
90002018:	00600513          	li	a0,6
9000201c:	55656593          	ori	a1,a0,1366
90002020:	00b22a23          	sw	a1,20(tp) # 14 <offset-0x54>

90002024 <inst_540>:

inst_540:
// rs1_val==6 and imm_val==-1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:-0x555
TEST_IMM_OP( ori, x11, x10, 0xfffffaaf, 0x6, -0x555, x4, 24, x5)
90002024:	00600513          	li	a0,6
90002028:	aab56593          	ori	a1,a0,-1365
9000202c:	00b22c23          	sw	a1,24(tp) # 18 <offset-0x50>

90002030 <inst_541>:

inst_541:
// rs1_val==6 and imm_val==6, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x6
TEST_IMM_OP( ori, x11, x10, 0x6, 0x6, 0x6, x4, 28, x5)
90002030:	00600513          	li	a0,6
90002034:	00656593          	ori	a1,a0,6
90002038:	00b22e23          	sw	a1,28(tp) # 1c <offset-0x4c>

9000203c <inst_542>:

inst_542:
// rs1_val==6 and imm_val==820, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x334
TEST_IMM_OP( ori, x11, x10, 0x336, 0x6, 0x334, x4, 32, x5)
9000203c:	00600513          	li	a0,6
90002040:	33456593          	ori	a1,a0,820
90002044:	02b22023          	sw	a1,32(tp) # 20 <offset-0x48>

90002048 <inst_543>:

inst_543:
// rs1_val==6 and imm_val==1639, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x667
TEST_IMM_OP( ori, x11, x10, 0x667, 0x6, 0x667, x4, 36, x5)
90002048:	00600513          	li	a0,6
9000204c:	66756593          	ori	a1,a0,1639
90002050:	02b22223          	sw	a1,36(tp) # 24 <offset-0x44>

90002054 <inst_544>:

inst_544:
// rs1_val==6 and imm_val==-44, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:-0x2c
TEST_IMM_OP( ori, x11, x10, 0xffffffd6, 0x6, -0x2c, x4, 40, x5)
90002054:	00600513          	li	a0,6
90002058:	fd456593          	ori	a1,a0,-44
9000205c:	02b22423          	sw	a1,40(tp) # 28 <offset-0x40>

90002060 <inst_545>:

inst_545:
// rs1_val==6 and imm_val==46, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x6;  immval:0x2e
TEST_IMM_OP( ori, x11, x10, 0x2e, 0x6, 0x2e, x4, 44, x5)
90002060:	00600513          	li	a0,6
90002064:	02e56593          	ori	a1,a0,46
90002068:	02b22623          	sw	a1,44(tp) # 2c <offset-0x3c>

9000206c <inst_546>:

inst_546:
// rs1_val==858993460 and imm_val==3, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x3
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333334, 0x3, x4, 48, x5)
9000206c:	33333537          	lui	a0,0x33333
90002070:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90002074:	00356593          	ori	a1,a0,3
90002078:	02b22823          	sw	a1,48(tp) # 30 <offset-0x38>

9000207c <inst_547>:

inst_547:
// rs1_val==858993460 and imm_val==1365, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x555
TEST_IMM_OP( ori, x11, x10, 0x33333775, 0x33333334, 0x555, x4, 52, x5)
9000207c:	33333537          	lui	a0,0x33333
90002080:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90002084:	55556593          	ori	a1,a0,1365
90002088:	02b22a23          	sw	a1,52(tp) # 34 <offset-0x34>

9000208c <inst_548>:

inst_548:
// rs1_val==858993460 and imm_val==-1366, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x556
TEST_IMM_OP( ori, x11, x10, 0xfffffbbe, 0x33333334, -0x556, x4, 56, x5)
9000208c:	33333537          	lui	a0,0x33333
90002090:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90002094:	aaa56593          	ori	a1,a0,-1366
90002098:	02b22c23          	sw	a1,56(tp) # 38 <offset-0x30>

9000209c <inst_549>:

inst_549:
// rs1_val==858993460 and imm_val==5, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x5
TEST_IMM_OP( ori, x11, x10, 0x33333335, 0x33333334, 0x5, x4, 60, x5)
9000209c:	33333537          	lui	a0,0x33333
900020a0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
900020a4:	00556593          	ori	a1,a0,5
900020a8:	02b22e23          	sw	a1,60(tp) # 3c <offset-0x2c>

900020ac <inst_550>:

inst_550:
// rs1_val==858993460 and imm_val==819, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x333
TEST_IMM_OP( ori, x11, x10, 0x33333337, 0x33333334, 0x333, x4, 64, x5)
900020ac:	33333537          	lui	a0,0x33333
900020b0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
900020b4:	33356593          	ori	a1,a0,819
900020b8:	04b22023          	sw	a1,64(tp) # 40 <offset-0x28>

900020bc <inst_551>:

inst_551:
// rs1_val==858993460 and imm_val==1638, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x666
TEST_IMM_OP( ori, x11, x10, 0x33333776, 0x33333334, 0x666, x4, 68, x5)
900020bc:	33333537          	lui	a0,0x33333
900020c0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
900020c4:	66656593          	ori	a1,a0,1638
900020c8:	04b22223          	sw	a1,68(tp) # 44 <offset-0x24>

900020cc <inst_552>:

inst_552:
// rs1_val==858993460 and imm_val==-45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:-0x2d
TEST_IMM_OP( ori, x11, x10, 0xfffffff7, 0x33333334, -0x2d, x4, 72, x5)
900020cc:	33333537          	lui	a0,0x33333
900020d0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
900020d4:	fd356593          	ori	a1,a0,-45
900020d8:	04b22423          	sw	a1,72(tp) # 48 <offset-0x20>

900020dc <inst_553>:

inst_553:
// rs1_val==858993460 and imm_val==45, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2d
TEST_IMM_OP( ori, x11, x10, 0x3333333d, 0x33333334, 0x2d, x4, 76, x5)
900020dc:	33333537          	lui	a0,0x33333
900020e0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
900020e4:	02d56593          	ori	a1,a0,45
900020e8:	04b22623          	sw	a1,76(tp) # 4c <offset-0x1c>

900020ec <inst_554>:

inst_554:
// rs1_val==858993460 and imm_val==2, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x2
TEST_IMM_OP( ori, x11, x10, 0x33333336, 0x33333334, 0x2, x4, 80, x5)
900020ec:	33333537          	lui	a0,0x33333
900020f0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
900020f4:	00256593          	ori	a1,a0,2
900020f8:	04b22823          	sw	a1,80(tp) # 50 <offset-0x18>

900020fc <inst_555>:

inst_555:
// rs1_val==858993460 and imm_val==1364, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x554
TEST_IMM_OP( ori, x11, x10, 0x33333774, 0x33333334, 0x554, x4, 84, x5)
900020fc:	33333537          	lui	a0,0x33333
90002100:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90002104:	55456593          	ori	a1,a0,1364
90002108:	04b22a23          	sw	a1,84(tp) # 54 <offset-0x14>

9000210c <inst_556>:

inst_556:
// rs1_val==858993460 and imm_val==0, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x0
TEST_IMM_OP( ori, x11, x10, 0x33333334, 0x33333334, 0x0, x4, 88, x5)
9000210c:	33333537          	lui	a0,0x33333
90002110:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90002114:	00056593          	ori	a1,a0,0
90002118:	04b22c23          	sw	a1,88(tp) # 58 <offset-0x10>

9000211c <inst_557>:

inst_557:
// rs1_val==858993460 and imm_val==4, 
// opcode: ori ; op1:x10; dest:x11; op1val:0x33333334;  immval:0x4
TEST_IMM_OP( ori, x11, x10, 0x33333334, 0x33333334, 0x4, x4, 92, x5)
9000211c:	33333537          	lui	a0,0x33333
90002120:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333332cc>
90002124:	00456593          	ori	a1,a0,4
90002128:	04b22e23          	sw	a1,92(tp) # 5c <offset-0xc>

9000212c <inst_558>:

inst_558:
// imm_val == 1024, rs1_val == -1073741825
// opcode: ori ; op1:x10; dest:x11; op1val:-0x40000001;  immval:0x400
TEST_IMM_OP( ori, x11, x10, 0xbfffffff, -0x40000001, 0x400, x4, 96, x5)
9000212c:	c0000537          	lui	a0,0xc0000
90002130:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0x2fffb5fb>
90002134:	40056593          	ori	a1,a0,1024
90002138:	06b22023          	sw	a1,96(tp) # 60 <offset-0x8>

9000213c <inst_559>:

inst_559:
// imm_val == -17, rs1_val == -16385
// opcode: ori ; op1:x10; dest:x11; op1val:-0x4001;  immval:-0x11
TEST_IMM_OP( ori, x11, x10, 0xffffffff, -0x4001, -0x11, x4, 100, x5)
9000213c:	ffffc537          	lui	a0,0xffffc
90002140:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0x6fff75fb>
90002144:	fef56593          	ori	a1,a0,-17
90002148:	06b22223          	sw	a1,100(tp) # 64 <offset-0x4>
9000214c:	00000013          	nop

90002150 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
90002150:	00408093          	addi	ra,ra,4
90002154:	00100093          	li	ra,1

90002158 <write_tohost>:
90002158:	00001f17          	auipc	t5,0x1
9000215c:	ea1f2423          	sw	ra,-344(t5) # 90003000 <tohost>

90002160 <self_loop>:
90002160:	0000006f          	j	90002160 <self_loop>
	...
