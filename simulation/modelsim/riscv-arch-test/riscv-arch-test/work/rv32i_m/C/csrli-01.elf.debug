
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/C/csrli-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed9ba9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f76bc52>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6e57>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd94d1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00002317          	auipc	t1,0x2
9000002c:	fd830313          	addi	t1,t1,-40 # 90002000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb93f6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfdda29>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfecaba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff758b>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f986b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bfbab3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adfcbd7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656fd469>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7d8b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfc87>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eaddbe9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56dc72>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7e67>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d59cd9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4beabcea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56ea3>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa94f7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d38f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe8afa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df55ab>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f887b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db7b2bb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edbc7db>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676dd26b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb6d7b3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*);def TEST_CASE_1=True;",csrli)

RVTEST_SIGBASE( x1,signature_x1_1)
900000f8:	00002097          	auipc	ra,0x2
900000fc:	f1808093          	addi	ra,ra,-232 # 90002010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rs1==x15, rs1_val < 0 and imm_val < xlen, rs1_val == -524289
// opcode:c.srli; op1:x15; dest:x15 op1val:-0x80001; immval:0x1f
TEST_CI_OP( c.srli, x15, 0x1, -0x80001, 0x1f, x1, 0, x2)
90000100:	fff807b7          	lui	a5,0xfff80
90000104:	fff78793          	addi	a5,a5,-1 # fff7ffff <_end+0x6ff7dcfb>
90000108:	83fd                	srli	a5,a5,0x1f
9000010a:	00f0a023          	sw	a5,0(ra)

9000010e <inst_1>:

inst_1:
// rs1==x14, rs1_val > 0 and imm_val < xlen, rs1_val == 4, rs1_val==4
// opcode:c.srli; op1:x14; dest:x14 op1val:0x4; immval:0xb
TEST_CI_OP( c.srli, x14, 0x0, 0x4, 0xb, x1, 4, x2)
9000010e:	00400713          	li	a4,4
90000112:	832d                	srli	a4,a4,0xb
90000114:	00e0a223          	sw	a4,4(ra)

90000118 <inst_2>:

inst_2:
// rs1==x9, rs1_val == imm_val and imm_val != 0  and imm_val < xlen, rs1_val == 8, imm_val == 8
// opcode:c.srli; op1:x9; dest:x9 op1val:0x8; immval:0x8
TEST_CI_OP( c.srli, x9, 0x0, 0x8, 0x8, x1, 8, x2)
90000118:	00800493          	li	s1,8
9000011c:	80a1                	srli	s1,s1,0x8
9000011e:	0090a423          	sw	s1,8(ra)

90000122 <inst_3>:

inst_3:
// rs1==x13, rs1_val == (-2**(xlen-1)) and imm_val != 0 and imm_val < xlen, imm_val == 27, rs1_val == -2147483648
// opcode:c.srli; op1:x13; dest:x13 op1val:-0x80000000; immval:0x1b
TEST_CI_OP( c.srli, x13, 0x10, -0x80000000, 0x1b, x1, 12, x2)
90000122:	800006b7          	lui	a3,0x80000
90000126:	82ed                	srli	a3,a3,0x1b
90000128:	00d0a623          	sw	a3,12(ra)

9000012c <inst_4>:

inst_4:
// rs1==x8, rs1_val == 0 and imm_val != 0 and imm_val < xlen, rs1_val==0
// opcode:c.srli; op1:x8; dest:x8 op1val:0x0; immval:0x11
TEST_CI_OP( c.srli, x8, 0x0, 0x0, 0x11, x1, 16, x2)
9000012c:	00000413          	li	s0,0
90000130:	8045                	srli	s0,s0,0x11
90000132:	0080a823          	sw	s0,16(ra)

90000136 <inst_5>:

inst_5:
// rs1==x10, rs1_val == (2**(xlen-1)-1) and imm_val != 0 and imm_val < xlen, rs1_val == 2147483647
// opcode:c.srli; op1:x10; dest:x10 op1val:0x7fffffff; immval:0xb
TEST_CI_OP( c.srli, x10, 0xfffff, 0x7fffffff, 0xb, x1, 20, x2)
90000136:	80000537          	lui	a0,0x80000
9000013a:	fff50513          	addi	a0,a0,-1 # 7fffffff <_end+0xefffdcfb>
9000013e:	812d                	srli	a0,a0,0xb
90000140:	00a0aa23          	sw	a0,20(ra)

90000144 <inst_6>:

inst_6:
// rs1==x11, rs1_val == 1 and imm_val != 0 and imm_val < xlen, imm_val == 2, rs1_val == 1
// opcode:c.srli; op1:x11; dest:x11 op1val:0x1; immval:0x2
TEST_CI_OP( c.srli, x11, 0x0, 0x1, 0x2, x1, 24, x2)
90000144:	00100593          	li	a1,1
90000148:	8189                	srli	a1,a1,0x2
9000014a:	00b0ac23          	sw	a1,24(ra)

9000014e <inst_7>:

inst_7:
// rs1==x12, rs1_val == 2, rs1_val==2
// opcode:c.srli; op1:x12; dest:x12 op1val:0x2; immval:0xe
TEST_CI_OP( c.srli, x12, 0x0, 0x2, 0xe, x1, 28, x2)
9000014e:	00200613          	li	a2,2
90000152:	8239                	srli	a2,a2,0xe
90000154:	00c0ae23          	sw	a2,28(ra)

90000158 <inst_8>:

inst_8:
// rs1_val == 16, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x10; immval:0x2
TEST_CI_OP( c.srli, x10, 0x4, 0x10, 0x2, x1, 32, x2)
90000158:	01000513          	li	a0,16
9000015c:	8109                	srli	a0,a0,0x2
9000015e:	02a0a023          	sw	a0,32(ra)

90000162 <inst_9>:

inst_9:
// rs1_val == 32, imm_val == 23
// opcode:c.srli; op1:x10; dest:x10 op1val:0x20; immval:0x17
TEST_CI_OP( c.srli, x10, 0x0, 0x20, 0x17, x1, 36, x2)
90000162:	02000513          	li	a0,32
90000166:	815d                	srli	a0,a0,0x17
90000168:	02a0a223          	sw	a0,36(ra)

9000016c <inst_10>:

inst_10:
// rs1_val == 64, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x40; immval:0x8
TEST_CI_OP( c.srli, x10, 0x0, 0x40, 0x8, x1, 40, x2)
9000016c:	04000513          	li	a0,64
90000170:	8121                	srli	a0,a0,0x8
90000172:	02a0a423          	sw	a0,40(ra)

90000176 <inst_11>:

inst_11:
// rs1_val == 128, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x80; immval:0xc
TEST_CI_OP( c.srli, x10, 0x0, 0x80, 0xc, x1, 44, x2)
90000176:	08000513          	li	a0,128
9000017a:	8131                	srli	a0,a0,0xc
9000017c:	02a0a623          	sw	a0,44(ra)

90000180 <inst_12>:

inst_12:
// rs1_val == 256, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x100; immval:0x2
TEST_CI_OP( c.srli, x10, 0x40, 0x100, 0x2, x1, 48, x2)
90000180:	10000513          	li	a0,256
90000184:	8109                	srli	a0,a0,0x2
90000186:	02a0a823          	sw	a0,48(ra)

9000018a <inst_13>:

inst_13:
// rs1_val == 512, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x200; immval:0x13
TEST_CI_OP( c.srli, x10, 0x0, 0x200, 0x13, x1, 52, x2)
9000018a:	20000513          	li	a0,512
9000018e:	814d                	srli	a0,a0,0x13
90000190:	02a0aa23          	sw	a0,52(ra)

90000194 <inst_14>:

inst_14:
// rs1_val == 1024, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x400; immval:0x9
TEST_CI_OP( c.srli, x10, 0x2, 0x400, 0x9, x1, 56, x2)
90000194:	40000513          	li	a0,1024
90000198:	8125                	srli	a0,a0,0x9
9000019a:	02a0ac23          	sw	a0,56(ra)

9000019e <inst_15>:

inst_15:
// rs1_val == 2048, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x800; immval:0x13
TEST_CI_OP( c.srli, x10, 0x0, 0x800, 0x13, x1, 60, x2)
9000019e:	00001537          	lui	a0,0x1
900001a2:	80050513          	addi	a0,a0,-2048 # 800 <offset+0x6ac>
900001a6:	814d                	srli	a0,a0,0x13
900001a8:	02a0ae23          	sw	a0,60(ra)

900001ac <inst_16>:

inst_16:
// rs1_val == 4096, imm_val == 16
// opcode:c.srli; op1:x10; dest:x10 op1val:0x1000; immval:0x10
TEST_CI_OP( c.srli, x10, 0x0, 0x1000, 0x10, x1, 64, x2)
900001ac:	00001537          	lui	a0,0x1
900001b0:	8141                	srli	a0,a0,0x10
900001b2:	04a0a023          	sw	a0,64(ra)

900001b6 <inst_17>:

inst_17:
// rs1_val == 8192, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x2000; immval:0x13
TEST_CI_OP( c.srli, x10, 0x0, 0x2000, 0x13, x1, 68, x2)
900001b6:	00002537          	lui	a0,0x2
900001ba:	814d                	srli	a0,a0,0x13
900001bc:	04a0a223          	sw	a0,68(ra)

900001c0 <inst_18>:

inst_18:
// rs1_val == 16384, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x4000; immval:0xe
TEST_CI_OP( c.srli, x10, 0x1, 0x4000, 0xe, x1, 72, x2)
900001c0:	00004537          	lui	a0,0x4
900001c4:	8139                	srli	a0,a0,0xe
900001c6:	04a0a423          	sw	a0,72(ra)

900001ca <inst_19>:

inst_19:
// rs1_val == 32768, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x8000; immval:0x1b
TEST_CI_OP( c.srli, x10, 0x0, 0x8000, 0x1b, x1, 76, x2)
900001ca:	00008537          	lui	a0,0x8
900001ce:	816d                	srli	a0,a0,0x1b
900001d0:	04a0a623          	sw	a0,76(ra)

900001d4 <inst_20>:

inst_20:
// rs1_val == 65536, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x10000; immval:0x6
TEST_CI_OP( c.srli, x10, 0x400, 0x10000, 0x6, x1, 80, x2)
900001d4:	00010537          	lui	a0,0x10
900001d8:	8119                	srli	a0,a0,0x6
900001da:	04a0a823          	sw	a0,80(ra)

900001de <inst_21>:

inst_21:
// rs1_val == 131072, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x20000; immval:0x2
TEST_CI_OP( c.srli, x10, 0x8000, 0x20000, 0x2, x1, 84, x2)
900001de:	00020537          	lui	a0,0x20
900001e2:	8109                	srli	a0,a0,0x2
900001e4:	04a0aa23          	sw	a0,84(ra)

900001e8 <inst_22>:

inst_22:
// rs1_val == 262144, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x40000; immval:0xc
TEST_CI_OP( c.srli, x10, 0x40, 0x40000, 0xc, x1, 88, x2)
900001e8:	00040537          	lui	a0,0x40
900001ec:	8131                	srli	a0,a0,0xc
900001ee:	04a0ac23          	sw	a0,88(ra)

900001f2 <inst_23>:

inst_23:
// rs1_val == 524288, imm_val == 21
// opcode:c.srli; op1:x10; dest:x10 op1val:0x80000; immval:0x15
TEST_CI_OP( c.srli, x10, 0x0, 0x80000, 0x15, x1, 92, x2)
900001f2:	00080537          	lui	a0,0x80
900001f6:	8155                	srli	a0,a0,0x15
900001f8:	04a0ae23          	sw	a0,92(ra)

900001fc <inst_24>:

inst_24:
// rs1_val == 1048576, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x100000; immval:0xb
TEST_CI_OP( c.srli, x10, 0x200, 0x100000, 0xb, x1, 96, x2)
900001fc:	00100537          	lui	a0,0x100
90000200:	812d                	srli	a0,a0,0xb
90000202:	06a0a023          	sw	a0,96(ra)

90000206 <inst_25>:

inst_25:
// rs1_val == 2097152, imm_val == 10
// opcode:c.srli; op1:x10; dest:x10 op1val:0x200000; immval:0xa
TEST_CI_OP( c.srli, x10, 0x800, 0x200000, 0xa, x1, 100, x2)
90000206:	00200537          	lui	a0,0x200
9000020a:	8129                	srli	a0,a0,0xa
9000020c:	06a0a223          	sw	a0,100(ra)

90000210 <inst_26>:

inst_26:
// rs1_val == 4194304, imm_val == 15
// opcode:c.srli; op1:x10; dest:x10 op1val:0x400000; immval:0xf
TEST_CI_OP( c.srli, x10, 0x80, 0x400000, 0xf, x1, 104, x2)
90000210:	00400537          	lui	a0,0x400
90000214:	813d                	srli	a0,a0,0xf
90000216:	06a0a423          	sw	a0,104(ra)

9000021a <inst_27>:

inst_27:
// rs1_val == 8388608, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x800000; immval:0xb
TEST_CI_OP( c.srli, x10, 0x1000, 0x800000, 0xb, x1, 108, x2)
9000021a:	00800537          	lui	a0,0x800
9000021e:	812d                	srli	a0,a0,0xb
90000220:	06a0a623          	sw	a0,108(ra)

90000224 <inst_28>:

inst_28:
// rs1_val == 16777216, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x1000000; immval:0x8
TEST_CI_OP( c.srli, x10, 0x10000, 0x1000000, 0x8, x1, 112, x2)
90000224:	01000537          	lui	a0,0x1000
90000228:	8121                	srli	a0,a0,0x8
9000022a:	06a0a823          	sw	a0,112(ra)

9000022e <inst_29>:

inst_29:
// rs1_val == 33554432, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x2000000; immval:0x5
TEST_CI_OP( c.srli, x10, 0x100000, 0x2000000, 0x5, x1, 116, x2)
9000022e:	02000537          	lui	a0,0x2000
90000232:	8115                	srli	a0,a0,0x5
90000234:	06a0aa23          	sw	a0,116(ra)

90000238 <inst_30>:

inst_30:
// rs1_val == 67108864, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x4000000; immval:0x2
TEST_CI_OP( c.srli, x10, 0x1000000, 0x4000000, 0x2, x1, 120, x2)
90000238:	04000537          	lui	a0,0x4000
9000023c:	8109                	srli	a0,a0,0x2
9000023e:	06a0ac23          	sw	a0,120(ra)

90000242 <inst_31>:

inst_31:
// rs1_val == 134217728, imm_val == 29
// opcode:c.srli; op1:x10; dest:x10 op1val:0x8000000; immval:0x1d
TEST_CI_OP( c.srli, x10, 0x0, 0x8000000, 0x1d, x1, 124, x2)
90000242:	08000537          	lui	a0,0x8000
90000246:	8175                	srli	a0,a0,0x1d
90000248:	06a0ae23          	sw	a0,124(ra)

9000024c <inst_32>:

inst_32:
// rs1_val == 268435456, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x10000000; immval:0x13
TEST_CI_OP( c.srli, x10, 0x200, 0x10000000, 0x13, x1, 128, x2)
9000024c:	10000537          	lui	a0,0x10000
90000250:	814d                	srli	a0,a0,0x13
90000252:	08a0a023          	sw	a0,128(ra)

90000256 <inst_33>:

inst_33:
// rs1_val == 536870912, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x20000000; immval:0x13
TEST_CI_OP( c.srli, x10, 0x400, 0x20000000, 0x13, x1, 132, x2)
90000256:	20000537          	lui	a0,0x20000
9000025a:	814d                	srli	a0,a0,0x13
9000025c:	08a0a223          	sw	a0,132(ra)

90000260 <inst_34>:

inst_34:
// rs1_val == 1073741824, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x40000000; immval:0xa
TEST_CI_OP( c.srli, x10, 0x100000, 0x40000000, 0xa, x1, 136, x2)
90000260:	40000537          	lui	a0,0x40000
90000264:	8129                	srli	a0,a0,0xa
90000266:	08a0a423          	sw	a0,136(ra)

9000026a <inst_35>:

inst_35:
// rs1_val == -2, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x2; immval:0xa
TEST_CI_OP( c.srli, x10, 0x3fffff, -0x2, 0xa, x1, 140, x2)
9000026a:	ffe00513          	li	a0,-2
9000026e:	8129                	srli	a0,a0,0xa
90000270:	08a0a623          	sw	a0,140(ra)

90000274 <inst_36>:

inst_36:
// rs1_val == -3, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x3; immval:0x1f
TEST_CI_OP( c.srli, x10, 0x1, -0x3, 0x1f, x1, 144, x2)
90000274:	ffd00513          	li	a0,-3
90000278:	817d                	srli	a0,a0,0x1f
9000027a:	08a0a823          	sw	a0,144(ra)

9000027e <inst_37>:

inst_37:
// rs1_val == -5, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x5; immval:0x8
TEST_CI_OP( c.srli, x10, 0xffffff, -0x5, 0x8, x1, 148, x2)
9000027e:	ffb00513          	li	a0,-5
90000282:	8121                	srli	a0,a0,0x8
90000284:	08a0aa23          	sw	a0,148(ra)

90000288 <inst_38>:

inst_38:
// rs1_val == -9, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x9; immval:0x12
TEST_CI_OP( c.srli, x10, 0x3fff, -0x9, 0x12, x1, 152, x2)
90000288:	ff700513          	li	a0,-9
9000028c:	8149                	srli	a0,a0,0x12
9000028e:	08a0ac23          	sw	a0,152(ra)

90000292 <inst_39>:

inst_39:
// rs1_val == -17, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x11; immval:0xc
TEST_CI_OP( c.srli, x10, 0xfffff, -0x11, 0xc, x1, 156, x2)
90000292:	fef00513          	li	a0,-17
90000296:	8131                	srli	a0,a0,0xc
90000298:	08a0ae23          	sw	a0,156(ra)

9000029c <inst_40>:

inst_40:
// rs1_val == -33, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x21; immval:0xb
TEST_CI_OP( c.srli, x10, 0x1fffff, -0x21, 0xb, x1, 160, x2)
9000029c:	fdf00513          	li	a0,-33
900002a0:	812d                	srli	a0,a0,0xb
900002a2:	0aa0a023          	sw	a0,160(ra)

900002a6 <inst_41>:

inst_41:
// rs1_val == -65, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x41; immval:0x7
TEST_CI_OP( c.srli, x10, 0x1ffffff, -0x41, 0x7, x1, 164, x2)
900002a6:	fbf00513          	li	a0,-65
900002aa:	811d                	srli	a0,a0,0x7
900002ac:	0aa0a223          	sw	a0,164(ra)

900002b0 <inst_42>:

inst_42:
// rs1_val == -129, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x81; immval:0x15
TEST_CI_OP( c.srli, x10, 0x7ff, -0x81, 0x15, x1, 168, x2)
900002b0:	f7f00513          	li	a0,-129
900002b4:	8155                	srli	a0,a0,0x15
900002b6:	0aa0a423          	sw	a0,168(ra)

900002ba <inst_43>:

inst_43:
// rs1_val == -257, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x101; immval:0x1d
TEST_CI_OP( c.srli, x10, 0x7, -0x101, 0x1d, x1, 172, x2)
900002ba:	eff00513          	li	a0,-257
900002be:	8175                	srli	a0,a0,0x1d
900002c0:	0aa0a623          	sw	a0,172(ra)

900002c4 <inst_44>:

inst_44:
// rs1_val == -513, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x201; immval:0x10
TEST_CI_OP( c.srli, x10, 0xffff, -0x201, 0x10, x1, 176, x2)
900002c4:	dff00513          	li	a0,-513
900002c8:	8141                	srli	a0,a0,0x10
900002ca:	0aa0a823          	sw	a0,176(ra)

900002ce <inst_45>:

inst_45:
// rs1_val == -1025, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x401; immval:0x3
TEST_CI_OP( c.srli, x10, 0x1fffff7f, -0x401, 0x3, x1, 180, x2)
900002ce:	bff00513          	li	a0,-1025
900002d2:	810d                	srli	a0,a0,0x3
900002d4:	0aa0aa23          	sw	a0,180(ra)

900002d8 <inst_46>:

inst_46:
// rs1_val == -2049, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x801; immval:0x13
TEST_CI_OP( c.srli, x10, 0x1fff, -0x801, 0x13, x1, 184, x2)
900002d8:	fffff537          	lui	a0,0xfffff
900002dc:	7ff50513          	addi	a0,a0,2047 # fffff7ff <_end+0x6fffd4fb>
900002e0:	814d                	srli	a0,a0,0x13
900002e2:	0aa0ac23          	sw	a0,184(ra)

900002e6 <inst_47>:

inst_47:
// rs1_val == -4097, imm_val == 1
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x1001; immval:0x1
TEST_CI_OP( c.srli, x10, 0x7ffff7ff, -0x1001, 0x1, x1, 188, x2)
900002e6:	fffff537          	lui	a0,0xfffff
900002ea:	fff50513          	addi	a0,a0,-1 # ffffefff <_end+0x6fffccfb>
900002ee:	8105                	srli	a0,a0,0x1
900002f0:	0aa0ae23          	sw	a0,188(ra)

900002f4 <inst_48>:

inst_48:
// rs1_val == -8193, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x2001; immval:0x7
TEST_CI_OP( c.srli, x10, 0x1ffffbf, -0x2001, 0x7, x1, 192, x2)
900002f4:	ffffe537          	lui	a0,0xffffe
900002f8:	fff50513          	addi	a0,a0,-1 # ffffdfff <_end+0x6fffbcfb>
900002fc:	811d                	srli	a0,a0,0x7
900002fe:	0ca0a023          	sw	a0,192(ra)

90000302 <inst_49>:

inst_49:
// rs1_val == -16385, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x4001; immval:0x6
TEST_CI_OP( c.srli, x10, 0x3fffeff, -0x4001, 0x6, x1, 196, x2)
90000302:	ffffc537          	lui	a0,0xffffc
90000306:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0x6fff9cfb>
9000030a:	8119                	srli	a0,a0,0x6
9000030c:	0ca0a223          	sw	a0,196(ra)

90000310 <inst_50>:

inst_50:
// rs1_val == -32769, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x8001; immval:0x3
TEST_CI_OP( c.srli, x10, 0x1fffefff, -0x8001, 0x3, x1, 200, x2)
90000310:	ffff8537          	lui	a0,0xffff8
90000314:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0x6fff5cfb>
90000318:	810d                	srli	a0,a0,0x3
9000031a:	0ca0a423          	sw	a0,200(ra)

9000031e <inst_51>:

inst_51:
// rs1_val == -65537, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x10001; immval:0x7
TEST_CI_OP( c.srli, x10, 0x1fffdff, -0x10001, 0x7, x1, 204, x2)
9000031e:	ffff0537          	lui	a0,0xffff0
90000322:	fff50513          	addi	a0,a0,-1 # fffeffff <_end+0x6ffedcfb>
90000326:	811d                	srli	a0,a0,0x7
90000328:	0ca0a623          	sw	a0,204(ra)

9000032c <inst_52>:

inst_52:
// rs1_val == -131073, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x20001; immval:0x7
TEST_CI_OP( c.srli, x10, 0x1fffbff, -0x20001, 0x7, x1, 208, x2)
9000032c:	fffe0537          	lui	a0,0xfffe0
90000330:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0x6ffddcfb>
90000334:	811d                	srli	a0,a0,0x7
90000336:	0ca0a823          	sw	a0,208(ra)

9000033a <inst_53>:

inst_53:
// rs1_val == -262145, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x40001; immval:0x1d
TEST_CI_OP( c.srli, x10, 0x7, -0x40001, 0x1d, x1, 212, x2)
9000033a:	fffc0537          	lui	a0,0xfffc0
9000033e:	fff50513          	addi	a0,a0,-1 # fffbffff <_end+0x6ffbdcfb>
90000342:	8175                	srli	a0,a0,0x1d
90000344:	0ca0aa23          	sw	a0,212(ra)

90000348 <inst_54>:

inst_54:
// rs1_val == -1048577, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x100001; immval:0x11
TEST_CI_OP( c.srli, x10, 0x7ff7, -0x100001, 0x11, x1, 216, x2)
90000348:	fff00537          	lui	a0,0xfff00
9000034c:	fff50513          	addi	a0,a0,-1 # ffefffff <_end+0x6fefdcfb>
90000350:	8145                	srli	a0,a0,0x11
90000352:	0ca0ac23          	sw	a0,216(ra)

90000356 <inst_55>:

inst_55:
// rs1_val == -2097153, imm_val == 4
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x200001; immval:0x4
TEST_CI_OP( c.srli, x10, 0xffdffff, -0x200001, 0x4, x1, 220, x2)
90000356:	ffe00537          	lui	a0,0xffe00
9000035a:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0x6fdfdcfb>
9000035e:	8111                	srli	a0,a0,0x4
90000360:	0ca0ae23          	sw	a0,220(ra)

90000364 <inst_56>:

inst_56:
// rs1_val == -4194305, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x400001; immval:0x1b
TEST_CI_OP( c.srli, x10, 0x1f, -0x400001, 0x1b, x1, 224, x2)
90000364:	ffc00537          	lui	a0,0xffc00
90000368:	fff50513          	addi	a0,a0,-1 # ffbfffff <_end+0x6fbfdcfb>
9000036c:	816d                	srli	a0,a0,0x1b
9000036e:	0ea0a023          	sw	a0,224(ra)

90000372 <inst_57>:

inst_57:
// rs1_val == -33554433, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x2000001; immval:0x13
TEST_CI_OP( c.srli, x10, 0x1fbf, -0x2000001, 0x13, x1, 228, x2)
90000372:	fe000537          	lui	a0,0xfe000
90000376:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0x6dffdcfb>
9000037a:	814d                	srli	a0,a0,0x13
9000037c:	0ea0a223          	sw	a0,228(ra)

90000380 <inst_58>:

inst_58:
// rs1_val == -67108865, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x4000001; immval:0x17
TEST_CI_OP( c.srli, x10, 0x1f7, -0x4000001, 0x17, x1, 232, x2)
90000380:	fc000537          	lui	a0,0xfc000
90000384:	fff50513          	addi	a0,a0,-1 # fbffffff <_end+0x6bffdcfb>
90000388:	815d                	srli	a0,a0,0x17
9000038a:	0ea0a423          	sw	a0,232(ra)

9000038e <inst_59>:

inst_59:
// rs1_val == -134217729, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x8000001; immval:0xd
TEST_CI_OP( c.srli, x10, 0x7bfff, -0x8000001, 0xd, x1, 236, x2)
9000038e:	f8000537          	lui	a0,0xf8000
90000392:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0x67ffdcfb>
90000396:	8135                	srli	a0,a0,0xd
90000398:	0ea0a623          	sw	a0,236(ra)

9000039c <inst_60>:

inst_60:
// rs1_val == -268435457, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x10000001; immval:0x8
TEST_CI_OP( c.srli, x10, 0xefffff, -0x10000001, 0x8, x1, 240, x2)
9000039c:	f0000537          	lui	a0,0xf0000
900003a0:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0x5fffdcfb>
900003a4:	8121                	srli	a0,a0,0x8
900003a6:	0ea0a823          	sw	a0,240(ra)

900003aa <inst_61>:

inst_61:
// rs1_val == -536870913, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x20000001; immval:0x8
TEST_CI_OP( c.srli, x10, 0xdfffff, -0x20000001, 0x8, x1, 244, x2)
900003aa:	e0000537          	lui	a0,0xe0000
900003ae:	fff50513          	addi	a0,a0,-1 # dfffffff <_end+0x4fffdcfb>
900003b2:	8121                	srli	a0,a0,0x8
900003b4:	0ea0aa23          	sw	a0,244(ra)

900003b8 <inst_62>:

inst_62:
// rs1_val == -1073741825, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x40000001; immval:0xe
TEST_CI_OP( c.srli, x10, 0x2ffff, -0x40000001, 0xe, x1, 248, x2)
900003b8:	c0000537          	lui	a0,0xc0000
900003bc:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0x2fffdcfb>
900003c0:	8139                	srli	a0,a0,0xe
900003c2:	0ea0ac23          	sw	a0,248(ra)

900003c6 <inst_63>:

inst_63:
// rs1_val == 1431655765, rs1_val==1431655765
// opcode:c.srli; op1:x10; dest:x10 op1val:0x55555555; immval:0x9
TEST_CI_OP( c.srli, x10, 0x2aaaaa, 0x55555555, 0x9, x1, 252, x2)
900003c6:	55555537          	lui	a0,0x55555
900003ca:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555401>
900003ce:	8125                	srli	a0,a0,0x9
900003d0:	0ea0ae23          	sw	a0,252(ra)

900003d4 <inst_64>:

inst_64:
// rs1_val == -1431655766, rs1_val==-1431655766
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x55555556; immval:0x17
TEST_CI_OP( c.srli, x10, 0x155, -0x55555556, 0x17, x1, 256, x2)
900003d4:	aaaab537          	lui	a0,0xaaaab
900003d8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa87a6>
900003dc:	815d                	srli	a0,a0,0x17
900003de:	10a0a023          	sw	a0,256(ra)

900003e2 <inst_65>:

inst_65:
// rs1_val==3, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x3; immval:0x3
TEST_CI_OP( c.srli, x10, 0x0, 0x3, 0x3, x1, 260, x2)
900003e2:	00300513          	li	a0,3
900003e6:	810d                	srli	a0,a0,0x3
900003e8:	10a0a223          	sw	a0,260(ra)

900003ec <inst_66>:

inst_66:
// rs1_val==5, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x5; immval:0xb
TEST_CI_OP( c.srli, x10, 0x0, 0x5, 0xb, x1, 264, x2)
900003ec:	00500513          	li	a0,5
900003f0:	812d                	srli	a0,a0,0xb
900003f2:	10a0a423          	sw	a0,264(ra)

900003f6 <inst_67>:

inst_67:
// rs1_val==858993459, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x33333333; immval:0x2
TEST_CI_OP( c.srli, x10, 0xccccccc, 0x33333333, 0x2, x1, 268, x2)
900003f6:	33333537          	lui	a0,0x33333
900003fa:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333331df>
900003fe:	8109                	srli	a0,a0,0x2
90000400:	10a0a623          	sw	a0,268(ra)

90000404 <inst_68>:

inst_68:
// rs1_val==1717986918, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x66666666; immval:0x15
TEST_CI_OP( c.srli, x10, 0x333, 0x66666666, 0x15, x1, 272, x2)
90000404:	66666537          	lui	a0,0x66666
90000408:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x66666512>
9000040c:	8155                	srli	a0,a0,0x15
9000040e:	10a0a823          	sw	a0,272(ra)

90000412 <inst_69>:

inst_69:
// rs1_val==-46340, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0xb504; immval:0x17
TEST_CI_OP( c.srli, x10, 0x1ff, -0xb504, 0x17, x1, 276, x2)
90000412:	ffff5537          	lui	a0,0xffff5
90000416:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff27f8>
9000041a:	815d                	srli	a0,a0,0x17
9000041c:	10a0aa23          	sw	a0,276(ra)

90000420 <inst_70>:

inst_70:
// imm_val == 30, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x21; immval:0x1e
TEST_CI_OP( c.srli, x10, 0x3, -0x21, 0x1e, x1, 280, x2)
90000420:	fdf00513          	li	a0,-33
90000424:	8179                	srli	a0,a0,0x1e
90000426:	10a0ac23          	sw	a0,280(ra)

9000042a <inst_71>:

inst_71:
// rs1_val==46340, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0xb504; immval:0x7
TEST_CI_OP( c.srli, x10, 0x16a, 0xb504, 0x7, x1, 284, x2)
9000042a:	0000b537          	lui	a0,0xb
9000042e:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3b0>
90000432:	811d                	srli	a0,a0,0x7
90000434:	10a0ae23          	sw	a0,284(ra)

90000438 <inst_72>:

inst_72:
// rs1_val==1431655764, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x55555554; immval:0x12
TEST_CI_OP( c.srli, x10, 0x1555, 0x55555554, 0x12, x1, 288, x2)
90000438:	55555537          	lui	a0,0x55555
9000043c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555400>
90000440:	8149                	srli	a0,a0,0x12
90000442:	12a0a023          	sw	a0,288(ra)

90000446 <inst_73>:

inst_73:
// rs1_val==46341, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0xb505; immval:0x1d
TEST_CI_OP( c.srli, x10, 0x0, 0xb505, 0x1d, x1, 292, x2)
90000446:	0000b537          	lui	a0,0xb
9000044a:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3b1>
9000044e:	8175                	srli	a0,a0,0x1d
90000450:	12a0a223          	sw	a0,292(ra)

90000454 <inst_74>:

inst_74:
// rs1_val==858993458, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x33333332; immval:0x1e
TEST_CI_OP( c.srli, x10, 0x0, 0x33333332, 0x1e, x1, 296, x2)
90000454:	33333537          	lui	a0,0x33333
90000458:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333331de>
9000045c:	8179                	srli	a0,a0,0x1e
9000045e:	12a0a423          	sw	a0,296(ra)

90000462 <inst_75>:

inst_75:
// rs1_val==1717986917, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x66666665; immval:0x2
TEST_CI_OP( c.srli, x10, 0x19999999, 0x66666665, 0x2, x1, 300, x2)
90000462:	66666537          	lui	a0,0x66666
90000466:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666511>
9000046a:	8109                	srli	a0,a0,0x2
9000046c:	12a0a623          	sw	a0,300(ra)

90000470 <inst_76>:

inst_76:
// rs1_val==46339, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0xb503; immval:0xc
TEST_CI_OP( c.srli, x10, 0xb, 0xb503, 0xc, x1, 304, x2)
90000470:	0000b537          	lui	a0,0xb
90000474:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3af>
90000478:	8131                	srli	a0,a0,0xc
9000047a:	12a0a823          	sw	a0,304(ra)

9000047e <inst_77>:

inst_77:
// rs1_val==1431655766, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x55555556; immval:0x8
TEST_CI_OP( c.srli, x10, 0x555555, 0x55555556, 0x8, x1, 308, x2)
9000047e:	55555537          	lui	a0,0x55555
90000482:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55555402>
90000486:	8121                	srli	a0,a0,0x8
90000488:	12a0aa23          	sw	a0,308(ra)

9000048c <inst_78>:

inst_78:
// rs1_val==-1431655765, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x55555555; immval:0x10
TEST_CI_OP( c.srli, x10, 0xaaaa, -0x55555555, 0x10, x1, 312, x2)
9000048c:	aaaab537          	lui	a0,0xaaaab
90000490:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa87a7>
90000494:	8141                	srli	a0,a0,0x10
90000496:	12a0ac23          	sw	a0,312(ra)

9000049a <inst_79>:

inst_79:
// rs1_val==6, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x6; immval:0x10
TEST_CI_OP( c.srli, x10, 0x0, 0x6, 0x10, x1, 316, x2)
9000049a:	00600513          	li	a0,6
9000049e:	8141                	srli	a0,a0,0x10
900004a0:	12a0ae23          	sw	a0,316(ra)

900004a4 <inst_80>:

inst_80:
// rs1_val==858993460, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x33333334; immval:0xb
TEST_CI_OP( c.srli, x10, 0x66666, 0x33333334, 0xb, x1, 320, x2)
900004a4:	33333537          	lui	a0,0x33333
900004a8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333331e0>
900004ac:	812d                	srli	a0,a0,0xb
900004ae:	14a0a023          	sw	a0,320(ra)

900004b2 <inst_81>:

inst_81:
// rs1_val==1717986919, 
// opcode:c.srli; op1:x10; dest:x10 op1val:0x66666667; immval:0xc
TEST_CI_OP( c.srli, x10, 0x66666, 0x66666667, 0xc, x1, 324, x2)
900004b2:	66666537          	lui	a0,0x66666
900004b6:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x66666513>
900004ba:	8131                	srli	a0,a0,0xc
900004bc:	14a0a223          	sw	a0,324(ra)

900004c0 <inst_82>:

inst_82:
// rs1_val==-46339, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0xb503; immval:0x9
TEST_CI_OP( c.srli, x10, 0x7fffa5, -0xb503, 0x9, x1, 328, x2)
900004c0:	ffff5537          	lui	a0,0xffff5
900004c4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff27f9>
900004c8:	8125                	srli	a0,a0,0x9
900004ca:	14a0a423          	sw	a0,328(ra)

900004ce <inst_83>:

inst_83:
// rs1_val == -8388609, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x800001; immval:0x5
TEST_CI_OP( c.srli, x10, 0x7fbffff, -0x800001, 0x5, x1, 332, x2)
900004ce:	ff800537          	lui	a0,0xff800
900004d2:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0x6f7fdcfb>
900004d6:	8115                	srli	a0,a0,0x5
900004d8:	14a0a623          	sw	a0,332(ra)

900004dc <inst_84>:

inst_84:
// rs1_val == -16777217, 
// opcode:c.srli; op1:x10; dest:x10 op1val:-0x1000001; immval:0x3
TEST_CI_OP( c.srli, x10, 0x1fdfffff, -0x1000001, 0x3, x1, 336, x2)
900004dc:	ff000537          	lui	a0,0xff000
900004e0:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0x6effdcfb>
900004e4:	810d                	srli	a0,a0,0x3
900004e6:	14a0a823          	sw	a0,336(ra)
900004ea:	00000013          	nop
900004ee:	0001                	nop

900004f0 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
900004f0:	0091                	addi	ra,ra,4
900004f2:	4085                	li	ra,1

900004f4 <write_tohost>:
900004f4:	00001f17          	auipc	t5,0x1
900004f8:	b01f2623          	sw	ra,-1268(t5) # 90001000 <tohost>

900004fc <self_loop>:
900004fc:	a001                	j	900004fc <self_loop>
	...
