
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/C/caddi4spn-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed9ca9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f76bd52>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6f5b>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd95d1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00002317          	auipc	t1,0x2
9000002c:	fd830313          	addi	t1,t1,-40 # 90002000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb94f6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfddb2d>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfecbba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff768f>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f996b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bfbbb3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adfccd7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656fd569>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7d9b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfd8b>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eaddce9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56dd72>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7f6b>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d59dd9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4beabdea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56fa7>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa95f7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d39f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe8bfa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df56af>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f897b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db7b3bb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edbc8db>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676dd36b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb6d8b3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*);def TEST_CASE_1=True;",caddi4spn)

RVTEST_SIGBASE( x1,signature_x1_1)
900000f8:	00002097          	auipc	ra,0x2
900000fc:	f1808093          	addi	ra,ra,-232 # 90002010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rd==x14, imm_val > 0, 
// opcode:c.addi4spn; dest:x14; immval:0x1c
TEST_CADDI4SPN_OP( c.addi4spn, x14, 0x1c, 0x1c, x1, 0, x2)
90000100:	00000113          	li	sp,0
90000104:	0878                	addi	a4,sp,28
90000106:	00e0a023          	sw	a4,0(ra)

9000010a <inst_1>:

inst_1:
// rd==x8, imm_val == 1020, 
// opcode:c.addi4spn; dest:x8; immval:0x3fc
TEST_CADDI4SPN_OP( c.addi4spn, x8, 0x3fc, 0x3fc, x1, 4, x2)
9000010a:	00000113          	li	sp,0
9000010e:	1fe0                	addi	s0,sp,1020
90000110:	0080a223          	sw	s0,4(ra)

90000114 <inst_2>:

inst_2:
// rd==x9, imm_val == 4, 
// opcode:c.addi4spn; dest:x9; immval:0x4
TEST_CADDI4SPN_OP( c.addi4spn, x9, 0x4, 0x4, x1, 8, x2)
90000114:	00000113          	li	sp,0
90000118:	0044                	addi	s1,sp,4
9000011a:	0090a423          	sw	s1,8(ra)

9000011e <inst_3>:

inst_3:
// rd==x15, imm_val == 8, 
// opcode:c.addi4spn; dest:x15; immval:0x8
TEST_CADDI4SPN_OP( c.addi4spn, x15, 0x8, 0x8, x1, 12, x2)
9000011e:	00000113          	li	sp,0
90000122:	003c                	addi	a5,sp,8
90000124:	00f0a623          	sw	a5,12(ra)

90000128 <inst_4>:

inst_4:
// rd==x10, imm_val == 16, 
// opcode:c.addi4spn; dest:x10; immval:0x10
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x10, 0x10, x1, 16, x2)
90000128:	00000113          	li	sp,0
9000012c:	0808                	addi	a0,sp,16
9000012e:	00a0a823          	sw	a0,16(ra)

90000132 <inst_5>:

inst_5:
// rd==x12, imm_val == 32, 
// opcode:c.addi4spn; dest:x12; immval:0x20
TEST_CADDI4SPN_OP( c.addi4spn, x12, 0x20, 0x20, x1, 20, x2)
90000132:	00000113          	li	sp,0
90000136:	1010                	addi	a2,sp,32
90000138:	00c0aa23          	sw	a2,20(ra)

9000013c <inst_6>:

inst_6:
// rd==x11, imm_val == 64, 
// opcode:c.addi4spn; dest:x11; immval:0x40
TEST_CADDI4SPN_OP( c.addi4spn, x11, 0x40, 0x40, x1, 24, x2)
9000013c:	00000113          	li	sp,0
90000140:	008c                	addi	a1,sp,64
90000142:	00b0ac23          	sw	a1,24(ra)

90000146 <inst_7>:

inst_7:
// rd==x13, imm_val == 128, 
// opcode:c.addi4spn; dest:x13; immval:0x80
TEST_CADDI4SPN_OP( c.addi4spn, x13, 0x80, 0x80, x1, 28, x2)
90000146:	00000113          	li	sp,0
9000014a:	0114                	addi	a3,sp,128
9000014c:	00d0ae23          	sw	a3,28(ra)

90000150 <inst_8>:

inst_8:
// imm_val == 256, 
// opcode:c.addi4spn; dest:x10; immval:0x100
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x100, 0x100, x1, 32, x2)
90000150:	00000113          	li	sp,0
90000154:	0208                	addi	a0,sp,256
90000156:	02a0a023          	sw	a0,32(ra)

9000015a <inst_9>:

inst_9:
// imm_val == 512, 
// opcode:c.addi4spn; dest:x10; immval:0x200
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x200, 0x200, x1, 36, x2)
9000015a:	00000113          	li	sp,0
9000015e:	0408                	addi	a0,sp,512
90000160:	02a0a223          	sw	a0,36(ra)

90000164 <inst_10>:

inst_10:
// imm_val == 1016, 
// opcode:c.addi4spn; dest:x10; immval:0x3f8
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x3f8, 0x3f8, x1, 40, x2)
90000164:	00000113          	li	sp,0
90000168:	1fa8                	addi	a0,sp,1016
9000016a:	02a0a423          	sw	a0,40(ra)

9000016e <inst_11>:

inst_11:
// imm_val == 1012, 
// opcode:c.addi4spn; dest:x10; immval:0x3f4
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x3f4, 0x3f4, x1, 44, x2)
9000016e:	00000113          	li	sp,0
90000172:	1fc8                	addi	a0,sp,1012
90000174:	02a0a623          	sw	a0,44(ra)

90000178 <inst_12>:

inst_12:
// imm_val == 1004, 
// opcode:c.addi4spn; dest:x10; immval:0x3ec
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x3ec, 0x3ec, x1, 48, x2)
90000178:	00000113          	li	sp,0
9000017c:	17e8                	addi	a0,sp,1004
9000017e:	02a0a823          	sw	a0,48(ra)

90000182 <inst_13>:

inst_13:
// imm_val == 764, 
// opcode:c.addi4spn; dest:x10; immval:0x2fc
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x2fc, 0x2fc, x1, 52, x2)
90000182:	00000113          	li	sp,0
90000186:	1de8                	addi	a0,sp,764
90000188:	02a0aa23          	sw	a0,52(ra)

9000018c <inst_14>:

inst_14:
// imm_val == 508, 
// opcode:c.addi4spn; dest:x10; immval:0x1fc
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x1fc, 0x1fc, x1, 56, x2)
9000018c:	00000113          	li	sp,0
90000190:	1be8                	addi	a0,sp,508
90000192:	02a0ac23          	sw	a0,56(ra)

90000196 <inst_15>:

inst_15:
// imm_val == 340, 
// opcode:c.addi4spn; dest:x10; immval:0x154
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x154, 0x154, x1, 60, x2)
90000196:	00000113          	li	sp,0
9000019a:	0ac8                	addi	a0,sp,340
9000019c:	02a0ae23          	sw	a0,60(ra)

900001a0 <inst_16>:

inst_16:
// imm_val == 680, 
// opcode:c.addi4spn; dest:x10; immval:0x2a8
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x2a8, 0x2a8, x1, 64, x2)
900001a0:	00000113          	li	sp,0
900001a4:	1528                	addi	a0,sp,680
900001a6:	04a0a023          	sw	a0,64(ra)

900001aa <inst_17>:

inst_17:
// imm_val == 988, 
// opcode:c.addi4spn; dest:x10; immval:0x3dc
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x3dc, 0x3dc, x1, 68, x2)
900001aa:	00000113          	li	sp,0
900001ae:	0fe8                	addi	a0,sp,988
900001b0:	04a0a223          	sw	a0,68(ra)

900001b4 <inst_18>:

inst_18:
// imm_val == 956, 
// opcode:c.addi4spn; dest:x10; immval:0x3bc
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x3bc, 0x3bc, x1, 72, x2)
900001b4:	00000113          	li	sp,0
900001b8:	1f68                	addi	a0,sp,956
900001ba:	04a0a423          	sw	a0,72(ra)

900001be <inst_19>:

inst_19:
// imm_val == 892, 
// opcode:c.addi4spn; dest:x10; immval:0x37c
TEST_CADDI4SPN_OP( c.addi4spn, x10, 0x37c, 0x37c, x1, 76, x2)
900001be:	00000113          	li	sp,0
900001c2:	1ee8                	addi	a0,sp,892
900001c4:	04a0a623          	sw	a0,76(ra)
900001c8:	00000013          	nop
900001cc:	00000013          	nop

900001d0 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
900001d0:	0091                	addi	ra,ra,4
900001d2:	4085                	li	ra,1

900001d4 <write_tohost>:
900001d4:	00001f17          	auipc	t5,0x1
900001d8:	e21f2623          	sw	ra,-468(t5) # 90001000 <tohost>

900001dc <self_loop>:
900001dc:	a001                	j	900001dc <self_loop>
	...
