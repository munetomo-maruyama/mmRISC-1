
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/C/caddi16sp-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed9ba9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f76bc52>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6e97>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd94d1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00002317          	auipc	t1,0x2
9000002c:	fd830313          	addi	t1,t1,-40 # 90002000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb93f6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfdda69>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfecaba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff75cb>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f986b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bfbab3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adfcbd7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656fd469>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7d8b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfcc7>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eaddbe9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56dc72>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7ea7>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d59cd9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4beabcea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56ee3>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa94f7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d38f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe8afa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df55eb>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f887b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db7b2bb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edbc7db>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676dd26b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb6d7b3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*);def TEST_CASE_1=True;",caddi16sp)

RVTEST_SIGBASE( x1,signature_x1_1)
900000f8:	00002097          	auipc	ra,0x2
900000fc:	f1808093          	addi	ra,ra,-232 # 90002010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rd==x2, rs1_val == imm_val, rs1_val == 32, rs1_val > 0 and imm_val > 0, imm_val == 32
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x20; immval:0x20
TEST_CI_OP( c.addi16sp, x2, 0x40, 0x20, 0x20, x1, 0, x3)
90000100:	02000113          	li	sp,32
90000104:	6105                	addi	sp,sp,32
90000106:	0020a023          	sw	sp,0(ra)

9000010a <inst_1>:

inst_1:
// rs1_val != imm_val, rs1_val > 0 and imm_val < 0, rs1_val == 4
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x4; immval:-0x60
TEST_CI_OP( c.addi16sp, x2, 0xffffffa4, 0x4, -0x60, x1, 4, x3)
9000010a:	00400113          	li	sp,4
9000010e:	711d                	addi	sp,sp,-96
90000110:	0020a223          	sw	sp,4(ra)

90000114 <inst_2>:

inst_2:
// rs1_val < 0 and imm_val > 0, rs1_val == -5
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x5; immval:0x30
TEST_CI_OP( c.addi16sp, x2, 0x2b, -0x5, 0x30, x1, 8, x3)
90000114:	ffb00113          	li	sp,-5
90000118:	6145                	addi	sp,sp,48
9000011a:	0020a423          	sw	sp,8(ra)

9000011e <inst_3>:

inst_3:
// rs1_val < 0 and imm_val < 0, rs1_val == -536870913
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x20000001; immval:-0x60
TEST_CI_OP( c.addi16sp, x2, 0xdfffff9f, -0x20000001, -0x60, x1, 12, x3)
9000011e:	e0000137          	lui	sp,0xe0000
90000122:	fff10113          	addi	sp,sp,-1 # dfffffff <_end+0x4fffdcfb>
90000126:	711d                	addi	sp,sp,-96
90000128:	0020a623          	sw	sp,12(ra)

9000012c <inst_4>:

inst_4:
// rs1_val == (-2**(xlen-1)), rs1_val == -2147483648
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x80000000; immval:-0x10
TEST_CI_OP( c.addi16sp, x2, 0x7ffffff0, -0x80000000, -0x10, x1, 16, x3)
9000012c:	80000137          	lui	sp,0x80000
90000130:	717d                	addi	sp,sp,-16
90000132:	0020a823          	sw	sp,16(ra)

90000136 <inst_5>:

inst_5:
// rs1_val == 0, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x0; immval:0xf0
TEST_CI_OP( c.addi16sp, x2, 0xf0, 0x0, 0xf0, x1, 20, x3)
90000136:	00000113          	li	sp,0
9000013a:	616d                	addi	sp,sp,240
9000013c:	0020aa23          	sw	sp,20(ra)

90000140 <inst_6>:

inst_6:
// rs1_val == (2**(xlen-1)-1), rs1_val == 2147483647
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x7fffffff; immval:0x30
TEST_CI_OP( c.addi16sp, x2, 0x8000002f, 0x7fffffff, 0x30, x1, 24, x3)
90000140:	80000137          	lui	sp,0x80000
90000144:	fff10113          	addi	sp,sp,-1 # 7fffffff <_end+0xefffdcfb>
90000148:	6145                	addi	sp,sp,48
9000014a:	0020ac23          	sw	sp,24(ra)

9000014e <inst_7>:

inst_7:
// rs1_val == 1, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x1; immval:0x90
TEST_CI_OP( c.addi16sp, x2, 0x91, 0x1, 0x90, x1, 28, x3)
9000014e:	00100113          	li	sp,1
90000152:	6149                	addi	sp,sp,144
90000154:	0020ae23          	sw	sp,28(ra)

90000158 <inst_8>:

inst_8:
// imm_val == -512, rs1_val == 8
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x8; immval:-0x200
TEST_CI_OP( c.addi16sp, x2, 0xfffffe08, 0x8, -0x200, x1, 32, x3)
90000158:	00800113          	li	sp,8
9000015c:	7101                	addi	sp,sp,-512
9000015e:	0220a023          	sw	sp,32(ra)

90000162 <inst_9>:

inst_9:
// imm_val == 496, rs1_val == 2097152
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x200000; immval:0x1f0
TEST_CI_OP( c.addi16sp, x2, 0x2001f0, 0x200000, 0x1f0, x1, 36, x3)
90000162:	00200137          	lui	sp,0x200
90000166:	617d                	addi	sp,sp,496
90000168:	0220a223          	sw	sp,36(ra)

9000016c <inst_10>:

inst_10:
// rs1_val == 2, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x2; immval:-0x10
TEST_CI_OP( c.addi16sp, x2, 0xfffffff2, 0x2, -0x10, x1, 40, x3)
9000016c:	00200113          	li	sp,2
90000170:	717d                	addi	sp,sp,-16
90000172:	0220a423          	sw	sp,40(ra)

90000176 <inst_11>:

inst_11:
// rs1_val == 16, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x10; immval:0x50
TEST_CI_OP( c.addi16sp, x2, 0x60, 0x10, 0x50, x1, 44, x3)
90000176:	01000113          	li	sp,16
9000017a:	6161                	addi	sp,sp,80
9000017c:	0220a623          	sw	sp,44(ra)

90000180 <inst_12>:

inst_12:
// rs1_val == 64, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x40; immval:0x20
TEST_CI_OP( c.addi16sp, x2, 0x60, 0x40, 0x20, x1, 48, x3)
90000180:	04000113          	li	sp,64
90000184:	6105                	addi	sp,sp,32
90000186:	0220a823          	sw	sp,48(ra)

9000018a <inst_13>:

inst_13:
// rs1_val == 128, imm_val == -32
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x80; immval:-0x20
TEST_CI_OP( c.addi16sp, x2, 0x60, 0x80, -0x20, x1, 52, x3)
9000018a:	08000113          	li	sp,128
9000018e:	713d                	addi	sp,sp,-32
90000190:	0220aa23          	sw	sp,52(ra)

90000194 <inst_14>:

inst_14:
// rs1_val == 256, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x100; immval:-0x70
TEST_CI_OP( c.addi16sp, x2, 0x90, 0x100, -0x70, x1, 56, x3)
90000194:	10000113          	li	sp,256
90000198:	7159                	addi	sp,sp,-112
9000019a:	0220ac23          	sw	sp,56(ra)

9000019e <inst_15>:

inst_15:
// rs1_val == 512, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x200; immval:0x50
TEST_CI_OP( c.addi16sp, x2, 0x250, 0x200, 0x50, x1, 60, x3)
9000019e:	20000113          	li	sp,512
900001a2:	6161                	addi	sp,sp,80
900001a4:	0220ae23          	sw	sp,60(ra)

900001a8 <inst_16>:

inst_16:
// rs1_val == 1024, imm_val == -80
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x400; immval:-0x50
TEST_CI_OP( c.addi16sp, x2, 0x3b0, 0x400, -0x50, x1, 64, x3)
900001a8:	40000113          	li	sp,1024
900001ac:	715d                	addi	sp,sp,-80
900001ae:	0420a023          	sw	sp,64(ra)

900001b2 <inst_17>:

inst_17:
// rs1_val == 2048, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x800; immval:0x20
TEST_CI_OP( c.addi16sp, x2, 0x820, 0x800, 0x20, x1, 68, x3)
900001b2:	00001137          	lui	sp,0x1
900001b6:	80010113          	addi	sp,sp,-2048 # 800 <offset+0x6ec>
900001ba:	6105                	addi	sp,sp,32
900001bc:	0420a223          	sw	sp,68(ra)

900001c0 <inst_18>:

inst_18:
// rs1_val == 4096, imm_val == 128
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x1000; immval:0x80
TEST_CI_OP( c.addi16sp, x2, 0x1080, 0x1000, 0x80, x1, 72, x3)
900001c0:	00001137          	lui	sp,0x1
900001c4:	6109                	addi	sp,sp,128
900001c6:	0420a423          	sw	sp,72(ra)

900001ca <inst_19>:

inst_19:
// rs1_val == 8192, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x2000; immval:-0x10
TEST_CI_OP( c.addi16sp, x2, 0x1ff0, 0x2000, -0x10, x1, 76, x3)
900001ca:	00002137          	lui	sp,0x2
900001ce:	717d                	addi	sp,sp,-16
900001d0:	0420a623          	sw	sp,76(ra)

900001d4 <inst_20>:

inst_20:
// rs1_val == 16384, imm_val == -272
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x4000; immval:-0x110
TEST_CI_OP( c.addi16sp, x2, 0x3ef0, 0x4000, -0x110, x1, 80, x3)
900001d4:	00004137          	lui	sp,0x4
900001d8:	716d                	addi	sp,sp,-272
900001da:	0420a823          	sw	sp,80(ra)

900001de <inst_21>:

inst_21:
// rs1_val == 32768, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x8000; immval:-0x10
TEST_CI_OP( c.addi16sp, x2, 0x7ff0, 0x8000, -0x10, x1, 84, x3)
900001de:	00008137          	lui	sp,0x8
900001e2:	717d                	addi	sp,sp,-16
900001e4:	0420aa23          	sw	sp,84(ra)

900001e8 <inst_22>:

inst_22:
// rs1_val == 65536, imm_val == 336
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x10000; immval:0x150
TEST_CI_OP( c.addi16sp, x2, 0x10150, 0x10000, 0x150, x1, 88, x3)
900001e8:	00010137          	lui	sp,0x10
900001ec:	6171                	addi	sp,sp,336
900001ee:	0420ac23          	sw	sp,88(ra)

900001f2 <inst_23>:

inst_23:
// rs1_val == 131072, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x20000; immval:-0x200
TEST_CI_OP( c.addi16sp, x2, 0x1fe00, 0x20000, -0x200, x1, 92, x3)
900001f2:	00020137          	lui	sp,0x20
900001f6:	7101                	addi	sp,sp,-512
900001f8:	0420ae23          	sw	sp,92(ra)

900001fc <inst_24>:

inst_24:
// rs1_val == 262144, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x40000; immval:-0x20
TEST_CI_OP( c.addi16sp, x2, 0x3ffe0, 0x40000, -0x20, x1, 96, x3)
900001fc:	00040137          	lui	sp,0x40
90000200:	713d                	addi	sp,sp,-32
90000202:	0620a023          	sw	sp,96(ra)

90000206 <inst_25>:

inst_25:
// rs1_val == 524288, imm_val == 256
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x80000; immval:0x100
TEST_CI_OP( c.addi16sp, x2, 0x80100, 0x80000, 0x100, x1, 100, x3)
90000206:	00080137          	lui	sp,0x80
9000020a:	6111                	addi	sp,sp,256
9000020c:	0620a223          	sw	sp,100(ra)

90000210 <inst_26>:

inst_26:
// rs1_val == 1048576, imm_val == -144
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x100000; immval:-0x90
TEST_CI_OP( c.addi16sp, x2, 0xfff70, 0x100000, -0x90, x1, 104, x3)
90000210:	00100137          	lui	sp,0x100
90000214:	7175                	addi	sp,sp,-144
90000216:	0620a423          	sw	sp,104(ra)

9000021a <inst_27>:

inst_27:
// rs1_val == 4194304, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x400000; immval:0x1f0
TEST_CI_OP( c.addi16sp, x2, 0x4001f0, 0x400000, 0x1f0, x1, 108, x3)
9000021a:	00400137          	lui	sp,0x400
9000021e:	617d                	addi	sp,sp,496
90000220:	0620a623          	sw	sp,108(ra)

90000224 <inst_28>:

inst_28:
// rs1_val == 8388608, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x800000; immval:0x80
TEST_CI_OP( c.addi16sp, x2, 0x800080, 0x800000, 0x80, x1, 112, x3)
90000224:	00800137          	lui	sp,0x800
90000228:	6109                	addi	sp,sp,128
9000022a:	0620a823          	sw	sp,112(ra)

9000022e <inst_29>:

inst_29:
// rs1_val == 16777216, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x1000000; immval:-0x110
TEST_CI_OP( c.addi16sp, x2, 0xfffef0, 0x1000000, -0x110, x1, 116, x3)
9000022e:	01000137          	lui	sp,0x1000
90000232:	716d                	addi	sp,sp,-272
90000234:	0620aa23          	sw	sp,116(ra)

90000238 <inst_30>:

inst_30:
// rs1_val == 33554432, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x2000000; immval:-0x90
TEST_CI_OP( c.addi16sp, x2, 0x1ffff70, 0x2000000, -0x90, x1, 120, x3)
90000238:	02000137          	lui	sp,0x2000
9000023c:	7175                	addi	sp,sp,-144
9000023e:	0620ac23          	sw	sp,120(ra)

90000242 <inst_31>:

inst_31:
// rs1_val == 67108864, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x4000000; immval:0x20
TEST_CI_OP( c.addi16sp, x2, 0x4000020, 0x4000000, 0x20, x1, 124, x3)
90000242:	04000137          	lui	sp,0x4000
90000246:	6105                	addi	sp,sp,32
90000248:	0620ae23          	sw	sp,124(ra)

9000024c <inst_32>:

inst_32:
// rs1_val == 134217728, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x8000000; immval:0x1f0
TEST_CI_OP( c.addi16sp, x2, 0x80001f0, 0x8000000, 0x1f0, x1, 128, x3)
9000024c:	08000137          	lui	sp,0x8000
90000250:	617d                	addi	sp,sp,496
90000252:	0820a023          	sw	sp,128(ra)

90000256 <inst_33>:

inst_33:
// rs1_val == 268435456, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x10000000; immval:0x50
TEST_CI_OP( c.addi16sp, x2, 0x10000050, 0x10000000, 0x50, x1, 132, x3)
90000256:	10000137          	lui	sp,0x10000
9000025a:	6161                	addi	sp,sp,80
9000025c:	0820a223          	sw	sp,132(ra)

90000260 <inst_34>:

inst_34:
// rs1_val == 536870912, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x20000000; immval:0xf0
TEST_CI_OP( c.addi16sp, x2, 0x200000f0, 0x20000000, 0xf0, x1, 136, x3)
90000260:	20000137          	lui	sp,0x20000
90000264:	616d                	addi	sp,sp,240
90000266:	0820a423          	sw	sp,136(ra)

9000026a <inst_35>:

inst_35:
// rs1_val == 1073741824, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x40000000; immval:0x90
TEST_CI_OP( c.addi16sp, x2, 0x40000090, 0x40000000, 0x90, x1, 140, x3)
9000026a:	40000137          	lui	sp,0x40000
9000026e:	6149                	addi	sp,sp,144
90000270:	0820a623          	sw	sp,140(ra)

90000274 <inst_36>:

inst_36:
// rs1_val == -2, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x2; immval:0x1f0
TEST_CI_OP( c.addi16sp, x2, 0x1ee, -0x2, 0x1f0, x1, 144, x3)
90000274:	ffe00113          	li	sp,-2
90000278:	617d                	addi	sp,sp,496
9000027a:	0820a823          	sw	sp,144(ra)

9000027e <inst_37>:

inst_37:
// rs1_val == -3, imm_val == 64
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x3; immval:0x40
TEST_CI_OP( c.addi16sp, x2, 0x3d, -0x3, 0x40, x1, 148, x3)
9000027e:	ffd00113          	li	sp,-3
90000282:	6121                	addi	sp,sp,64
90000284:	0820aa23          	sw	sp,148(ra)

90000288 <inst_38>:

inst_38:
// rs1_val == -9, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x9; immval:0x60
TEST_CI_OP( c.addi16sp, x2, 0x57, -0x9, 0x60, x1, 152, x3)
90000288:	ff700113          	li	sp,-9
9000028c:	6125                	addi	sp,sp,96
9000028e:	0820ac23          	sw	sp,152(ra)

90000292 <inst_39>:

inst_39:
// rs1_val == -2097153, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x200001; immval:-0xa0
TEST_CI_OP( c.addi16sp, x2, 0xffdfff5f, -0x200001, -0xa0, x1, 156, x3)
90000292:	ffe00137          	lui	sp,0xffe00
90000296:	fff10113          	addi	sp,sp,-1 # ffdfffff <_end+0x6fdfdcfb>
9000029a:	7135                	addi	sp,sp,-160
9000029c:	0820ae23          	sw	sp,156(ra)

900002a0 <inst_40>:

inst_40:
// rs1_val == -4194305, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x400001; immval:0x70
TEST_CI_OP( c.addi16sp, x2, 0xffc0006f, -0x400001, 0x70, x1, 160, x3)
900002a0:	ffc00137          	lui	sp,0xffc00
900002a4:	fff10113          	addi	sp,sp,-1 # ffbfffff <_end+0x6fbfdcfb>
900002a8:	6165                	addi	sp,sp,112
900002aa:	0a20a023          	sw	sp,160(ra)

900002ae <inst_41>:

inst_41:
// rs1_val == -8388609, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x800001; immval:0x1f0
TEST_CI_OP( c.addi16sp, x2, 0xff8001ef, -0x800001, 0x1f0, x1, 164, x3)
900002ae:	ff800137          	lui	sp,0xff800
900002b2:	fff10113          	addi	sp,sp,-1 # ff7fffff <_end+0x6f7fdcfb>
900002b6:	617d                	addi	sp,sp,496
900002b8:	0a20a223          	sw	sp,164(ra)

900002bc <inst_42>:

inst_42:
// rs1_val == -16777217, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x1000001; immval:0x90
TEST_CI_OP( c.addi16sp, x2, 0xff00008f, -0x1000001, 0x90, x1, 168, x3)
900002bc:	ff000137          	lui	sp,0xff000
900002c0:	fff10113          	addi	sp,sp,-1 # feffffff <_end+0x6effdcfb>
900002c4:	6149                	addi	sp,sp,144
900002c6:	0a20a423          	sw	sp,168(ra)

900002ca <inst_43>:

inst_43:
// rs1_val == -33554433, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x2000001; immval:0x100
TEST_CI_OP( c.addi16sp, x2, 0xfe0000ff, -0x2000001, 0x100, x1, 172, x3)
900002ca:	fe000137          	lui	sp,0xfe000
900002ce:	fff10113          	addi	sp,sp,-1 # fdffffff <_end+0x6dffdcfb>
900002d2:	6111                	addi	sp,sp,256
900002d4:	0a20a623          	sw	sp,172(ra)

900002d8 <inst_44>:

inst_44:
// rs1_val == -67108865, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x4000001; immval:-0x100
TEST_CI_OP( c.addi16sp, x2, 0xfbfffeff, -0x4000001, -0x100, x1, 176, x3)
900002d8:	fc000137          	lui	sp,0xfc000
900002dc:	fff10113          	addi	sp,sp,-1 # fbffffff <_end+0x6bffdcfb>
900002e0:	7111                	addi	sp,sp,-256
900002e2:	0a20a823          	sw	sp,176(ra)

900002e6 <inst_45>:

inst_45:
// rs1_val == -134217729, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x8000001; immval:-0x200
TEST_CI_OP( c.addi16sp, x2, 0xf7fffdff, -0x8000001, -0x200, x1, 180, x3)
900002e6:	f8000137          	lui	sp,0xf8000
900002ea:	fff10113          	addi	sp,sp,-1 # f7ffffff <_end+0x67ffdcfb>
900002ee:	7101                	addi	sp,sp,-512
900002f0:	0a20aa23          	sw	sp,180(ra)

900002f4 <inst_46>:

inst_46:
// rs1_val == -268435457, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x10000001; immval:-0x100
TEST_CI_OP( c.addi16sp, x2, 0xeffffeff, -0x10000001, -0x100, x1, 184, x3)
900002f4:	f0000137          	lui	sp,0xf0000
900002f8:	fff10113          	addi	sp,sp,-1 # efffffff <_end+0x5fffdcfb>
900002fc:	7111                	addi	sp,sp,-256
900002fe:	0a20ac23          	sw	sp,184(ra)

90000302 <inst_47>:

inst_47:
// rs1_val == -1073741825, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x40000001; immval:0x90
TEST_CI_OP( c.addi16sp, x2, 0xc000008f, -0x40000001, 0x90, x1, 188, x3)
90000302:	c0000137          	lui	sp,0xc0000
90000306:	fff10113          	addi	sp,sp,-1 # bfffffff <_end+0x2fffdcfb>
9000030a:	6149                	addi	sp,sp,144
9000030c:	0a20ae23          	sw	sp,188(ra)

90000310 <inst_48>:

inst_48:
// rs1_val == 1431655765, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x55555555; immval:-0xa0
TEST_CI_OP( c.addi16sp, x2, 0x555554b5, 0x55555555, -0xa0, x1, 192, x3)
90000310:	55555137          	lui	sp,0x55555
90000314:	55510113          	addi	sp,sp,1365 # 55555555 <offset+0x55555441>
90000318:	7135                	addi	sp,sp,-160
9000031a:	0c20a023          	sw	sp,192(ra)

9000031e <inst_49>:

inst_49:
// rs1_val == -1431655766, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x55555556; immval:0x70
TEST_CI_OP( c.addi16sp, x2, 0xaaaaab1a, -0x55555556, 0x70, x1, 196, x3)
9000031e:	aaaab137          	lui	sp,0xaaaab
90000322:	aaa10113          	addi	sp,sp,-1366 # aaaaaaaa <_end+0x1aaa87a6>
90000326:	6165                	addi	sp,sp,112
90000328:	0c20a223          	sw	sp,196(ra)

9000032c <inst_50>:

inst_50:
// imm_val == 16, rs1_val == -32769
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x8001; immval:0x10
TEST_CI_OP( c.addi16sp, x2, 0xffff800f, -0x8001, 0x10, x1, 200, x3)
9000032c:	ffff8137          	lui	sp,0xffff8
90000330:	fff10113          	addi	sp,sp,-1 # ffff7fff <_end+0x6fff5cfb>
90000334:	6141                	addi	sp,sp,16
90000336:	0c20a423          	sw	sp,200(ra)

9000033a <inst_51>:

inst_51:
// imm_val == -48, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x100; immval:-0x30
TEST_CI_OP( c.addi16sp, x2, 0xd0, 0x100, -0x30, x1, 204, x3)
9000033a:	10000113          	li	sp,256
9000033e:	7179                	addi	sp,sp,-48
90000340:	0c20a623          	sw	sp,204(ra)

90000344 <inst_52>:

inst_52:
// imm_val == -352, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:0x8000000; immval:-0x160
TEST_CI_OP( c.addi16sp, x2, 0x7fffea0, 0x8000000, -0x160, x1, 208, x3)
90000344:	08000137          	lui	sp,0x8000
90000348:	710d                	addi	sp,sp,-352
9000034a:	0c20a823          	sw	sp,208(ra)

9000034e <inst_53>:

inst_53:
// rs1_val == -17, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x11; immval:-0x110
TEST_CI_OP( c.addi16sp, x2, 0xfffffedf, -0x11, -0x110, x1, 212, x3)
9000034e:	fef00113          	li	sp,-17
90000352:	716d                	addi	sp,sp,-272
90000354:	0c20aa23          	sw	sp,212(ra)

90000358 <inst_54>:

inst_54:
// rs1_val == -33, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x21; immval:0x80
TEST_CI_OP( c.addi16sp, x2, 0x5f, -0x21, 0x80, x1, 216, x3)
90000358:	fdf00113          	li	sp,-33
9000035c:	6109                	addi	sp,sp,128
9000035e:	0c20ac23          	sw	sp,216(ra)

90000362 <inst_55>:

inst_55:
// rs1_val == -65, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x41; immval:0x40
TEST_CI_OP( c.addi16sp, x2, 0xffffffff, -0x41, 0x40, x1, 220, x3)
90000362:	fbf00113          	li	sp,-65
90000366:	6121                	addi	sp,sp,64
90000368:	0c20ae23          	sw	sp,220(ra)

9000036c <inst_56>:

inst_56:
// rs1_val == -129, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x81; immval:0x40
TEST_CI_OP( c.addi16sp, x2, 0xffffffbf, -0x81, 0x40, x1, 224, x3)
9000036c:	f7f00113          	li	sp,-129
90000370:	6121                	addi	sp,sp,64
90000372:	0e20a023          	sw	sp,224(ra)

90000376 <inst_57>:

inst_57:
// rs1_val == -257, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x101; immval:-0x110
TEST_CI_OP( c.addi16sp, x2, 0xfffffdef, -0x101, -0x110, x1, 228, x3)
90000376:	eff00113          	li	sp,-257
9000037a:	716d                	addi	sp,sp,-272
9000037c:	0e20a223          	sw	sp,228(ra)

90000380 <inst_58>:

inst_58:
// rs1_val == -513, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x201; immval:0x100
TEST_CI_OP( c.addi16sp, x2, 0xfffffeff, -0x201, 0x100, x1, 232, x3)
90000380:	dff00113          	li	sp,-513
90000384:	6111                	addi	sp,sp,256
90000386:	0e20a423          	sw	sp,232(ra)

9000038a <inst_59>:

inst_59:
// rs1_val == -1025, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x401; immval:-0x90
TEST_CI_OP( c.addi16sp, x2, 0xfffffb6f, -0x401, -0x90, x1, 236, x3)
9000038a:	bff00113          	li	sp,-1025
9000038e:	7175                	addi	sp,sp,-144
90000390:	0e20a623          	sw	sp,236(ra)

90000394 <inst_60>:

inst_60:
// rs1_val == -2049, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x801; immval:0x90
TEST_CI_OP( c.addi16sp, x2, 0xfffff88f, -0x801, 0x90, x1, 240, x3)
90000394:	fffff137          	lui	sp,0xfffff
90000398:	7ff10113          	addi	sp,sp,2047 # fffff7ff <_end+0x6fffd4fb>
9000039c:	6149                	addi	sp,sp,144
9000039e:	0e20a823          	sw	sp,240(ra)

900003a2 <inst_61>:

inst_61:
// rs1_val == -4097, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x1001; immval:-0x50
TEST_CI_OP( c.addi16sp, x2, 0xffffefaf, -0x1001, -0x50, x1, 244, x3)
900003a2:	fffff137          	lui	sp,0xfffff
900003a6:	fff10113          	addi	sp,sp,-1 # ffffefff <_end+0x6fffccfb>
900003aa:	715d                	addi	sp,sp,-80
900003ac:	0e20aa23          	sw	sp,244(ra)

900003b0 <inst_62>:

inst_62:
// rs1_val == -8193, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x2001; immval:0x50
TEST_CI_OP( c.addi16sp, x2, 0xffffe04f, -0x2001, 0x50, x1, 248, x3)
900003b0:	ffffe137          	lui	sp,0xffffe
900003b4:	fff10113          	addi	sp,sp,-1 # ffffdfff <_end+0x6fffbcfb>
900003b8:	6161                	addi	sp,sp,80
900003ba:	0e20ac23          	sw	sp,248(ra)

900003be <inst_63>:

inst_63:
// rs1_val == -16385, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x4001; immval:-0xa0
TEST_CI_OP( c.addi16sp, x2, 0xffffbf5f, -0x4001, -0xa0, x1, 252, x3)
900003be:	ffffc137          	lui	sp,0xffffc
900003c2:	fff10113          	addi	sp,sp,-1 # ffffbfff <_end+0x6fff9cfb>
900003c6:	7135                	addi	sp,sp,-160
900003c8:	0e20ae23          	sw	sp,252(ra)

900003cc <inst_64>:

inst_64:
// rs1_val == -65537, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x10001; immval:0x150
TEST_CI_OP( c.addi16sp, x2, 0xffff014f, -0x10001, 0x150, x1, 256, x3)
900003cc:	ffff0137          	lui	sp,0xffff0
900003d0:	fff10113          	addi	sp,sp,-1 # fffeffff <_end+0x6ffedcfb>
900003d4:	6171                	addi	sp,sp,336
900003d6:	1020a023          	sw	sp,256(ra)

900003da <inst_65>:

inst_65:
// rs1_val == -131073, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x20001; immval:-0x90
TEST_CI_OP( c.addi16sp, x2, 0xfffdff6f, -0x20001, -0x90, x1, 260, x3)
900003da:	fffe0137          	lui	sp,0xfffe0
900003de:	fff10113          	addi	sp,sp,-1 # fffdffff <_end+0x6ffddcfb>
900003e2:	7175                	addi	sp,sp,-144
900003e4:	1020a223          	sw	sp,260(ra)

900003e8 <inst_66>:

inst_66:
// rs1_val == -262145, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x40001; immval:0x20
TEST_CI_OP( c.addi16sp, x2, 0xfffc001f, -0x40001, 0x20, x1, 264, x3)
900003e8:	fffc0137          	lui	sp,0xfffc0
900003ec:	fff10113          	addi	sp,sp,-1 # fffbffff <_end+0x6ffbdcfb>
900003f0:	6105                	addi	sp,sp,32
900003f2:	1020a423          	sw	sp,264(ra)

900003f6 <inst_67>:

inst_67:
// rs1_val == -524289, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x80001; immval:0x1f0
TEST_CI_OP( c.addi16sp, x2, 0xfff801ef, -0x80001, 0x1f0, x1, 268, x3)
900003f6:	fff80137          	lui	sp,0xfff80
900003fa:	fff10113          	addi	sp,sp,-1 # fff7ffff <_end+0x6ff7dcfb>
900003fe:	617d                	addi	sp,sp,496
90000400:	1020a623          	sw	sp,268(ra)

90000404 <inst_68>:

inst_68:
// rs1_val == -1048577, 
// opcode:c.addi16sp; op1:x2; dest:x2 op1val:-0x100001; immval:0x1f0
TEST_CI_OP( c.addi16sp, x2, 0xfff001ef, -0x100001, 0x1f0, x1, 272, x3)
90000404:	fff00137          	lui	sp,0xfff00
90000408:	fff10113          	addi	sp,sp,-1 # ffefffff <_end+0x6fefdcfb>
9000040c:	617d                	addi	sp,sp,496
9000040e:	1020a823          	sw	sp,272(ra)
90000412:	0001                	nop
90000414:	00000013          	nop
90000418:	00000013          	nop
9000041c:	00000013          	nop

90000420 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
90000420:	0091                	addi	ra,ra,4
90000422:	4085                	li	ra,1

90000424 <write_tohost>:
90000424:	00001f17          	auipc	t5,0x1
90000428:	bc1f2e23          	sw	ra,-1060(t5) # 90001000 <tohost>

9000042c <self_loop>:
9000042c:	a001                	j	9000042c <self_loop>
	...
