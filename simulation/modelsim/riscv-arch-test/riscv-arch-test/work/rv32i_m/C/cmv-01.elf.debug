
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/C/cmv-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed9ba9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f76bc52>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6eb7>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd94d1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00002317          	auipc	t1,0x2
9000002c:	fd830313          	addi	t1,t1,-40 # 90002000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb93f6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfdda89>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfecaba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff75eb>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f986b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bfbab3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adfcbd7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656fd469>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7d8b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfce7>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eaddbe9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56dc72>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7ec7>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d59cd9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4beabcea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56f03>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa94f7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d38f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe8afa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df560b>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f887b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db7b2bb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edbc7db>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676dd26b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb6d7b3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*);def TEST_CASE_1=True;",cmv)

RVTEST_SIGBASE( x5,signature_x5_1)
900000f8:	00002297          	auipc	t0,0x2
900000fc:	f1828293          	addi	t0,t0,-232 # 90002010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rs2 != rd and rs2 != 0, rd==x16, rs2==x23, rs2_val == (-2**(xlen-1)), rs2_val == -2147483648
// opcode: c.mv; op2:x23; dest:x16; op2val:-0x80000000
TEST_CMV_OP( c.mv, x16, x23, -0x80000000, -0x80000000, x5, 0, x4)
90000100:	80000bb7          	lui	s7,0x80000
90000104:	885e                	mv	a6,s7
90000106:	0102a023          	sw	a6,0(t0)

9000010a <inst_1>:

inst_1:
// rs2 == rd and rs2 != 0, rd==x11, rs2==x11, rs2_val == 0, rs2_val==0
// opcode: c.mv; op2:x11; dest:x11; op2val:0x0
TEST_CMV_OP( c.mv, x11, x11, 0x0, 0x0, x5, 4, x4)
9000010a:	00000593          	li	a1,0
9000010e:	85ae                	mv	a1,a1
90000110:	00b2a223          	sw	a1,4(t0)

90000114 <inst_2>:

inst_2:
// rd==x24, rs2==x2, rs2_val == (2**(xlen-1)-1), rs2_val == 2147483647
// opcode: c.mv; op2:x2; dest:x24; op2val:0x7fffffff
TEST_CMV_OP( c.mv, x24, x2, 0x7fffffff, 0x7fffffff, x5, 8, x4)
90000114:	80000137          	lui	sp,0x80000
90000118:	fff10113          	addi	sp,sp,-1 # 7fffffff <_end+0xefffdcfb>
9000011c:	8c0a                	mv	s8,sp
9000011e:	0182a423          	sw	s8,8(t0)

90000122 <inst_3>:

inst_3:
// rd==x19, rs2==x28, rs2_val == 1, 
// opcode: c.mv; op2:x28; dest:x19; op2val:0x1
TEST_CMV_OP( c.mv, x19, x28, 0x1, 0x1, x5, 12, x4)
90000122:	00100e13          	li	t3,1
90000126:	89f2                	mv	s3,t3
90000128:	0132a623          	sw	s3,12(t0)

9000012c <inst_4>:

inst_4:
// rd==x6, rs2==x17, rs2_val == 2, rs2_val==2
// opcode: c.mv; op2:x17; dest:x6; op2val:0x2
TEST_CMV_OP( c.mv, x6, x17, 0x2, 0x2, x5, 16, x4)
9000012c:	00200893          	li	a7,2
90000130:	8346                	mv	t1,a7
90000132:	0062a823          	sw	t1,16(t0)

90000136 <inst_5>:

inst_5:
// rd==x18, rs2==x9, rs2_val == 4, rs2_val==4
// opcode: c.mv; op2:x9; dest:x18; op2val:0x4
TEST_CMV_OP( c.mv, x18, x9, 0x4, 0x4, x5, 20, x4)
90000136:	00400493          	li	s1,4
9000013a:	8926                	mv	s2,s1
9000013c:	0122aa23          	sw	s2,20(t0)

90000140 <inst_6>:

inst_6:
// rd==x21, rs2==x13, rs2_val == 8, 
// opcode: c.mv; op2:x13; dest:x21; op2val:0x8
TEST_CMV_OP( c.mv, x21, x13, 0x8, 0x8, x5, 24, x4)
90000140:	00800693          	li	a3,8
90000144:	8ab6                	mv	s5,a3
90000146:	0152ac23          	sw	s5,24(t0)

9000014a <inst_7>:

inst_7:
// rd==x26, rs2==x6, rs2_val == 16, 
// opcode: c.mv; op2:x6; dest:x26; op2val:0x10
TEST_CMV_OP( c.mv, x26, x6, 0x10, 0x10, x5, 28, x4)
9000014a:	01000313          	li	t1,16
9000014e:	8d1a                	mv	s10,t1
90000150:	01a2ae23          	sw	s10,28(t0)

90000154 <inst_8>:

inst_8:
// rd==x3, rs2==x20, rs2_val == 32, 
// opcode: c.mv; op2:x20; dest:x3; op2val:0x20
TEST_CMV_OP( c.mv, x3, x20, 0x20, 0x20, x5, 32, x4)
90000154:	02000a13          	li	s4,32
90000158:	81d2                	mv	gp,s4
9000015a:	0232a023          	sw	gp,32(t0)

9000015e <inst_9>:

inst_9:
// rd==x31, rs2==x12, rs2_val == 64, 
// opcode: c.mv; op2:x12; dest:x31; op2val:0x40
TEST_CMV_OP( c.mv, x31, x12, 0x40, 0x40, x5, 36, x4)
9000015e:	04000613          	li	a2,64
90000162:	8fb2                	mv	t6,a2
90000164:	03f2a223          	sw	t6,36(t0)

90000168 <inst_10>:

inst_10:
// rd==x2, rs2==x16, rs2_val == 128, 
// opcode: c.mv; op2:x16; dest:x2; op2val:0x80
TEST_CMV_OP( c.mv, x2, x16, 0x80, 0x80, x5, 40, x4)
90000168:	08000813          	li	a6,128
9000016c:	8142                	mv	sp,a6
9000016e:	0222a423          	sw	sp,40(t0)

90000172 <inst_11>:

inst_11:
// rd==x14, rs2==x15, rs2_val == 256, 
// opcode: c.mv; op2:x15; dest:x14; op2val:0x100
TEST_CMV_OP( c.mv, x14, x15, 0x100, 0x100, x5, 44, x4)
90000172:	10000793          	li	a5,256
90000176:	873e                	mv	a4,a5
90000178:	02e2a623          	sw	a4,44(t0)

9000017c <inst_12>:

inst_12:
// rd==x20, rs2==x25, rs2_val == 512, 
// opcode: c.mv; op2:x25; dest:x20; op2val:0x200
TEST_CMV_OP( c.mv, x20, x25, 0x200, 0x200, x5, 48, x4)
9000017c:	20000c93          	li	s9,512
90000180:	8a66                	mv	s4,s9
90000182:	0342a823          	sw	s4,48(t0)

90000186 <inst_13>:

inst_13:
// rd==x28, rs2==x24, rs2_val == 1024, 
// opcode: c.mv; op2:x24; dest:x28; op2val:0x400
TEST_CMV_OP( c.mv, x28, x24, 0x400, 0x400, x5, 52, x4)
90000186:	40000c13          	li	s8,1024
9000018a:	8e62                	mv	t3,s8
9000018c:	03c2aa23          	sw	t3,52(t0)

90000190 <inst_14>:

inst_14:
// rd==x15, rs2==x26, rs2_val == 2048, 
// opcode: c.mv; op2:x26; dest:x15; op2val:0x800
TEST_CMV_OP( c.mv, x15, x26, 0x800, 0x800, x5, 56, x4)
90000190:	00001d37          	lui	s10,0x1
90000194:	800d0d13          	addi	s10,s10,-2048 # 800 <offset+0x70c>
90000198:	87ea                	mv	a5,s10
9000019a:	02f2ac23          	sw	a5,56(t0)

9000019e <inst_15>:

inst_15:
// rd==x13, rs2==x18, rs2_val == 4096, 
// opcode: c.mv; op2:x18; dest:x13; op2val:0x1000
TEST_CMV_OP( c.mv, x13, x18, 0x1000, 0x1000, x5, 60, x4)
9000019e:	00001937          	lui	s2,0x1
900001a2:	86ca                	mv	a3,s2
900001a4:	02d2ae23          	sw	a3,60(t0)

900001a8 <inst_16>:

inst_16:
// rd==x8, rs2==x1, rs2_val == 8192, 
// opcode: c.mv; op2:x1; dest:x8; op2val:0x2000
TEST_CMV_OP( c.mv, x8, x1, 0x2000, 0x2000, x5, 64, x4)
900001a8:	000020b7          	lui	ra,0x2
900001ac:	8406                	mv	s0,ra
900001ae:	0482a023          	sw	s0,64(t0)

900001b2 <inst_17>:

inst_17:
// rd==x7, rs2==x10, rs2_val == 16384, 
// opcode: c.mv; op2:x10; dest:x7; op2val:0x4000
TEST_CMV_OP( c.mv, x7, x10, 0x4000, 0x4000, x5, 68, x4)
900001b2:	00004537          	lui	a0,0x4
900001b6:	83aa                	mv	t2,a0
900001b8:	0472a223          	sw	t2,68(t0)

900001bc <inst_18>:

inst_18:
// rd==x30, rs2==x8, rs2_val == 32768, 
// opcode: c.mv; op2:x8; dest:x30; op2val:0x8000
TEST_CMV_OP( c.mv, x30, x8, 0x8000, 0x8000, x5, 72, x4)
900001bc:	00008437          	lui	s0,0x8
900001c0:	8f22                	mv	t5,s0
900001c2:	05e2a423          	sw	t5,72(t0)

900001c6 <inst_19>:

inst_19:
// rd==x27, rs2==x21, rs2_val == 65536, 
// opcode: c.mv; op2:x21; dest:x27; op2val:0x10000
TEST_CMV_OP( c.mv, x27, x21, 0x10000, 0x10000, x5, 76, x4)
900001c6:	00010ab7          	lui	s5,0x10
900001ca:	8dd6                	mv	s11,s5
900001cc:	05b2a623          	sw	s11,76(t0)

900001d0 <inst_20>:

inst_20:
// rd==x9, rs2==x27, rs2_val == 131072, 
// opcode: c.mv; op2:x27; dest:x9; op2val:0x20000
TEST_CMV_OP( c.mv, x9, x27, 0x20000, 0x20000, x5, 80, x6)
900001d0:	00020db7          	lui	s11,0x20
900001d4:	84ee                	mv	s1,s11
900001d6:	0492a823          	sw	s1,80(t0)

900001da <inst_21>:

inst_21:
// rd==x10, rs2==x14, rs2_val == 262144, 
// opcode: c.mv; op2:x14; dest:x10; op2val:0x40000
TEST_CMV_OP( c.mv, x10, x14, 0x40000, 0x40000, x5, 84, x6)
900001da:	00040737          	lui	a4,0x40
900001de:	853a                	mv	a0,a4
900001e0:	04a2aa23          	sw	a0,84(t0)

900001e4 <inst_22>:

inst_22:
// rd==x25, rs2==x30, rs2_val == 524288, 
// opcode: c.mv; op2:x30; dest:x25; op2val:0x80000
TEST_CMV_OP( c.mv, x25, x30, 0x80000, 0x80000, x5, 88, x6)
900001e4:	00080f37          	lui	t5,0x80
900001e8:	8cfa                	mv	s9,t5
900001ea:	0592ac23          	sw	s9,88(t0)

900001ee <inst_23>:

inst_23:
// rd==x22, rs2==x4, rs2_val == 1048576, 
// opcode: c.mv; op2:x4; dest:x22; op2val:0x100000
TEST_CMV_OP( c.mv, x22, x4, 0x100000, 0x100000, x5, 92, x6)
900001ee:	00100237          	lui	tp,0x100
900001f2:	8b12                	mv	s6,tp
900001f4:	0562ae23          	sw	s6,92(t0)
RVTEST_SIGBASE( x2,signature_x2_0)
900001f8:	00002117          	auipc	sp,0x2
900001fc:	e7810113          	addi	sp,sp,-392 # 90002070 <signature_x2_0>

90000200 <inst_24>:

inst_24:
// rd==x4, rs2==x19, rs2_val == 2097152, 
// opcode: c.mv; op2:x19; dest:x4; op2val:0x200000
TEST_CMV_OP( c.mv, x4, x19, 0x200000, 0x200000, x2, 0, x6)
90000200:	002009b7          	lui	s3,0x200
90000204:	824e                	mv	tp,s3
90000206:	c012                	sw	tp,0(sp)

90000208 <inst_25>:

inst_25:
// rd==x0, rs2==x29, rs2_val == 4194304, 
// opcode: c.mv; op2:x29; dest:x0; op2val:0x400000
TEST_CMV_OP( c.mv, x0, x29, 0, 0x400000, x2, 4, x6)
90000208:	00400eb7          	lui	t4,0x400
9000020c:	8076                	c.mv	zero,t4
9000020e:	c202                	sw	zero,4(sp)

90000210 <inst_26>:

inst_26:
// rd==x23, rs2==x7, rs2_val == 8388608, 
// opcode: c.mv; op2:x7; dest:x23; op2val:0x800000
TEST_CMV_OP( c.mv, x23, x7, 0x800000, 0x800000, x2, 8, x6)
90000210:	008003b7          	lui	t2,0x800
90000214:	8b9e                	mv	s7,t2
90000216:	c45e                	sw	s7,8(sp)

90000218 <inst_27>:

inst_27:
// rd==x29, rs2==x31, rs2_val == 16777216, 
// opcode: c.mv; op2:x31; dest:x29; op2val:0x1000000
TEST_CMV_OP( c.mv, x29, x31, 0x1000000, 0x1000000, x2, 12, x6)
90000218:	01000fb7          	lui	t6,0x1000
9000021c:	8efe                	mv	t4,t6
9000021e:	c676                	sw	t4,12(sp)

90000220 <inst_28>:

inst_28:
// rd==x12, rs2==x3, rs2_val == 33554432, 
// opcode: c.mv; op2:x3; dest:x12; op2val:0x2000000
TEST_CMV_OP( c.mv, x12, x3, 0x2000000, 0x2000000, x2, 16, x6)
90000220:	020001b7          	lui	gp,0x2000
90000224:	860e                	mv	a2,gp
90000226:	c832                	sw	a2,16(sp)

90000228 <inst_29>:

inst_29:
// rd==x5, rs2==x22, rs2_val == 67108864, 
// opcode: c.mv; op2:x22; dest:x5; op2val:0x4000000
TEST_CMV_OP( c.mv, x5, x22, 0x4000000, 0x4000000, x2, 20, x6)
90000228:	04000b37          	lui	s6,0x4000
9000022c:	82da                	mv	t0,s6
9000022e:	ca16                	sw	t0,20(sp)

90000230 <inst_30>:

inst_30:
// rd==x1, rs2==x5, rs2_val == 134217728, 
// opcode: c.mv; op2:x5; dest:x1; op2val:0x8000000
TEST_CMV_OP( c.mv, x1, x5, 0x8000000, 0x8000000, x2, 24, x6)
90000230:	080002b7          	lui	t0,0x8000
90000234:	8096                	mv	ra,t0
90000236:	cc06                	sw	ra,24(sp)

90000238 <inst_31>:

inst_31:
// rd==x17, rs2_val == 268435456, 
// opcode: c.mv; op2:x31; dest:x17; op2val:0x10000000
TEST_CMV_OP( c.mv, x17, x31, 0x10000000, 0x10000000, x2, 28, x6)
90000238:	10000fb7          	lui	t6,0x10000
9000023c:	88fe                	mv	a7,t6
9000023e:	ce46                	sw	a7,28(sp)

90000240 <inst_32>:

inst_32:
// rs2_val == 536870912, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x20000000
TEST_CMV_OP( c.mv, x10, x11, 0x20000000, 0x20000000, x2, 32, x6)
90000240:	200005b7          	lui	a1,0x20000
90000244:	852e                	mv	a0,a1
90000246:	d02a                	sw	a0,32(sp)

90000248 <inst_33>:

inst_33:
// rs2_val == 1073741824, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x40000000
TEST_CMV_OP( c.mv, x10, x11, 0x40000000, 0x40000000, x2, 36, x6)
90000248:	400005b7          	lui	a1,0x40000
9000024c:	852e                	mv	a0,a1
9000024e:	d22a                	sw	a0,36(sp)

90000250 <inst_34>:

inst_34:
// rs2_val == -2, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x2
TEST_CMV_OP( c.mv, x10, x11, -0x2, -0x2, x2, 40, x6)
90000250:	ffe00593          	li	a1,-2
90000254:	852e                	mv	a0,a1
90000256:	d42a                	sw	a0,40(sp)

90000258 <inst_35>:

inst_35:
// rs2_val == -3, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x3
TEST_CMV_OP( c.mv, x10, x11, -0x3, -0x3, x2, 44, x6)
90000258:	ffd00593          	li	a1,-3
9000025c:	852e                	mv	a0,a1
9000025e:	d62a                	sw	a0,44(sp)

90000260 <inst_36>:

inst_36:
// rs2_val == -5, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x5
TEST_CMV_OP( c.mv, x10, x11, -0x5, -0x5, x2, 48, x6)
90000260:	ffb00593          	li	a1,-5
90000264:	852e                	mv	a0,a1
90000266:	d82a                	sw	a0,48(sp)

90000268 <inst_37>:

inst_37:
// rs2_val == -9, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x9
TEST_CMV_OP( c.mv, x10, x11, -0x9, -0x9, x2, 52, x6)
90000268:	ff700593          	li	a1,-9
9000026c:	852e                	mv	a0,a1
9000026e:	da2a                	sw	a0,52(sp)

90000270 <inst_38>:

inst_38:
// rs2_val == -17, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x11
TEST_CMV_OP( c.mv, x10, x11, -0x11, -0x11, x2, 56, x6)
90000270:	fef00593          	li	a1,-17
90000274:	852e                	mv	a0,a1
90000276:	dc2a                	sw	a0,56(sp)

90000278 <inst_39>:

inst_39:
// rs2_val == -33, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x21
TEST_CMV_OP( c.mv, x10, x11, -0x21, -0x21, x2, 60, x6)
90000278:	fdf00593          	li	a1,-33
9000027c:	852e                	mv	a0,a1
9000027e:	de2a                	sw	a0,60(sp)

90000280 <inst_40>:

inst_40:
// rs2_val == -65, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x41
TEST_CMV_OP( c.mv, x10, x11, -0x41, -0x41, x2, 64, x6)
90000280:	fbf00593          	li	a1,-65
90000284:	852e                	mv	a0,a1
90000286:	c0aa                	sw	a0,64(sp)

90000288 <inst_41>:

inst_41:
// rs2_val == -129, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x81
TEST_CMV_OP( c.mv, x10, x11, -0x81, -0x81, x2, 68, x6)
90000288:	f7f00593          	li	a1,-129
9000028c:	852e                	mv	a0,a1
9000028e:	c2aa                	sw	a0,68(sp)

90000290 <inst_42>:

inst_42:
// rs2_val == -257, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x101
TEST_CMV_OP( c.mv, x10, x11, -0x101, -0x101, x2, 72, x6)
90000290:	eff00593          	li	a1,-257
90000294:	852e                	mv	a0,a1
90000296:	c4aa                	sw	a0,72(sp)

90000298 <inst_43>:

inst_43:
// rs2_val == -513, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x201
TEST_CMV_OP( c.mv, x10, x11, -0x201, -0x201, x2, 76, x6)
90000298:	dff00593          	li	a1,-513
9000029c:	852e                	mv	a0,a1
9000029e:	c6aa                	sw	a0,76(sp)

900002a0 <inst_44>:

inst_44:
// rs2_val == -1025, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x401
TEST_CMV_OP( c.mv, x10, x11, -0x401, -0x401, x2, 80, x6)
900002a0:	bff00593          	li	a1,-1025
900002a4:	852e                	mv	a0,a1
900002a6:	c8aa                	sw	a0,80(sp)

900002a8 <inst_45>:

inst_45:
// rs2_val == -2049, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x801
TEST_CMV_OP( c.mv, x10, x11, -0x801, -0x801, x2, 84, x6)
900002a8:	fffff5b7          	lui	a1,0xfffff
900002ac:	7ff58593          	addi	a1,a1,2047 # fffff7ff <_end+0x6fffd4fb>
900002b0:	852e                	mv	a0,a1
900002b2:	caaa                	sw	a0,84(sp)

900002b4 <inst_46>:

inst_46:
// rs2_val == -4097, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x1001
TEST_CMV_OP( c.mv, x10, x11, -0x1001, -0x1001, x2, 88, x6)
900002b4:	fffff5b7          	lui	a1,0xfffff
900002b8:	fff58593          	addi	a1,a1,-1 # ffffefff <_end+0x6fffccfb>
900002bc:	852e                	mv	a0,a1
900002be:	ccaa                	sw	a0,88(sp)

900002c0 <inst_47>:

inst_47:
// rs2_val == -8193, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x2001
TEST_CMV_OP( c.mv, x10, x11, -0x2001, -0x2001, x2, 92, x6)
900002c0:	ffffe5b7          	lui	a1,0xffffe
900002c4:	fff58593          	addi	a1,a1,-1 # ffffdfff <_end+0x6fffbcfb>
900002c8:	852e                	mv	a0,a1
900002ca:	ceaa                	sw	a0,92(sp)

900002cc <inst_48>:

inst_48:
// rs2_val == -16385, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x4001
TEST_CMV_OP( c.mv, x10, x11, -0x4001, -0x4001, x2, 96, x6)
900002cc:	ffffc5b7          	lui	a1,0xffffc
900002d0:	fff58593          	addi	a1,a1,-1 # ffffbfff <_end+0x6fff9cfb>
900002d4:	852e                	mv	a0,a1
900002d6:	d0aa                	sw	a0,96(sp)

900002d8 <inst_49>:

inst_49:
// rs2_val == -32769, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x8001
TEST_CMV_OP( c.mv, x10, x11, -0x8001, -0x8001, x2, 100, x6)
900002d8:	ffff85b7          	lui	a1,0xffff8
900002dc:	fff58593          	addi	a1,a1,-1 # ffff7fff <_end+0x6fff5cfb>
900002e0:	852e                	mv	a0,a1
900002e2:	d2aa                	sw	a0,100(sp)

900002e4 <inst_50>:

inst_50:
// rs2_val == -65537, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x10001
TEST_CMV_OP( c.mv, x10, x11, -0x10001, -0x10001, x2, 104, x6)
900002e4:	ffff05b7          	lui	a1,0xffff0
900002e8:	fff58593          	addi	a1,a1,-1 # fffeffff <_end+0x6ffedcfb>
900002ec:	852e                	mv	a0,a1
900002ee:	d4aa                	sw	a0,104(sp)

900002f0 <inst_51>:

inst_51:
// rs2_val == -131073, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x20001
TEST_CMV_OP( c.mv, x10, x11, -0x20001, -0x20001, x2, 108, x6)
900002f0:	fffe05b7          	lui	a1,0xfffe0
900002f4:	fff58593          	addi	a1,a1,-1 # fffdffff <_end+0x6ffddcfb>
900002f8:	852e                	mv	a0,a1
900002fa:	d6aa                	sw	a0,108(sp)

900002fc <inst_52>:

inst_52:
// rs2_val == -262145, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x40001
TEST_CMV_OP( c.mv, x10, x11, -0x40001, -0x40001, x2, 112, x6)
900002fc:	fffc05b7          	lui	a1,0xfffc0
90000300:	fff58593          	addi	a1,a1,-1 # fffbffff <_end+0x6ffbdcfb>
90000304:	852e                	mv	a0,a1
90000306:	d8aa                	sw	a0,112(sp)

90000308 <inst_53>:

inst_53:
// rs2_val == -524289, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x80001
TEST_CMV_OP( c.mv, x10, x11, -0x80001, -0x80001, x2, 116, x6)
90000308:	fff805b7          	lui	a1,0xfff80
9000030c:	fff58593          	addi	a1,a1,-1 # fff7ffff <_end+0x6ff7dcfb>
90000310:	852e                	mv	a0,a1
90000312:	daaa                	sw	a0,116(sp)

90000314 <inst_54>:

inst_54:
// rs2_val == -1048577, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x100001
TEST_CMV_OP( c.mv, x10, x11, -0x100001, -0x100001, x2, 120, x6)
90000314:	fff005b7          	lui	a1,0xfff00
90000318:	fff58593          	addi	a1,a1,-1 # ffefffff <_end+0x6fefdcfb>
9000031c:	852e                	mv	a0,a1
9000031e:	dcaa                	sw	a0,120(sp)

90000320 <inst_55>:

inst_55:
// rs2_val == -536870913, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x20000001
TEST_CMV_OP( c.mv, x10, x11, -0x20000001, -0x20000001, x2, 124, x6)
90000320:	e00005b7          	lui	a1,0xe0000
90000324:	fff58593          	addi	a1,a1,-1 # dfffffff <_end+0x4fffdcfb>
90000328:	852e                	mv	a0,a1
9000032a:	deaa                	sw	a0,124(sp)

9000032c <inst_56>:

inst_56:
// rs2_val == -1073741825, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x40000001
TEST_CMV_OP( c.mv, x10, x11, -0x40000001, -0x40000001, x2, 128, x6)
9000032c:	c00005b7          	lui	a1,0xc0000
90000330:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0x2fffdcfb>
90000334:	852e                	mv	a0,a1
90000336:	c12a                	sw	a0,128(sp)

90000338 <inst_57>:

inst_57:
// rs2_val == 1431655765, rs2_val==1431655765
// opcode: c.mv; op2:x11; dest:x10; op2val:0x55555555
TEST_CMV_OP( c.mv, x10, x11, 0x55555555, 0x55555555, x2, 132, x6)
90000338:	555555b7          	lui	a1,0x55555
9000033c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555461>
90000340:	852e                	mv	a0,a1
90000342:	c32a                	sw	a0,132(sp)

90000344 <inst_58>:

inst_58:
// rs2_val == -1431655766, rs2_val==-1431655766
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x55555556
TEST_CMV_OP( c.mv, x10, x11, -0x55555556, -0x55555556, x2, 136, x6)
90000344:	aaaab5b7          	lui	a1,0xaaaab
90000348:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa87a6>
9000034c:	852e                	mv	a0,a1
9000034e:	c52a                	sw	a0,136(sp)

90000350 <inst_59>:

inst_59:
// rs2_val==3, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x3
TEST_CMV_OP( c.mv, x10, x11, 0x3, 0x3, x2, 140, x6)
90000350:	00300593          	li	a1,3
90000354:	852e                	mv	a0,a1
90000356:	c72a                	sw	a0,140(sp)

90000358 <inst_60>:

inst_60:
// rs2_val==5, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x5
TEST_CMV_OP( c.mv, x10, x11, 0x5, 0x5, x2, 144, x6)
90000358:	00500593          	li	a1,5
9000035c:	852e                	mv	a0,a1
9000035e:	c92a                	sw	a0,144(sp)

90000360 <inst_61>:

inst_61:
// rs2_val==858993459, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x33333333
TEST_CMV_OP( c.mv, x10, x11, 0x33333333, 0x33333333, x2, 148, x6)
90000360:	333335b7          	lui	a1,0x33333
90000364:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x3333323f>
90000368:	852e                	mv	a0,a1
9000036a:	cb2a                	sw	a0,148(sp)

9000036c <inst_62>:

inst_62:
// rs2_val==1717986918, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x66666666
TEST_CMV_OP( c.mv, x10, x11, 0x66666666, 0x66666666, x2, 152, x6)
9000036c:	666665b7          	lui	a1,0x66666
90000370:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x66666572>
90000374:	852e                	mv	a0,a1
90000376:	cd2a                	sw	a0,152(sp)

90000378 <inst_63>:

inst_63:
// rs2_val==-46340, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0xb504
TEST_CMV_OP( c.mv, x10, x11, -0xb504, -0xb504, x2, 156, x6)
90000378:	ffff55b7          	lui	a1,0xffff5
9000037c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6fff27f8>
90000380:	852e                	mv	a0,a1
90000382:	cf2a                	sw	a0,156(sp)

90000384 <inst_64>:

inst_64:
// rs2_val==46340, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0xb504
TEST_CMV_OP( c.mv, x10, x11, 0xb504, 0xb504, x2, 160, x6)
90000384:	0000b5b7          	lui	a1,0xb
90000388:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb410>
9000038c:	852e                	mv	a0,a1
9000038e:	d12a                	sw	a0,160(sp)

90000390 <inst_65>:

inst_65:
// rs2_val==1431655764, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x55555554
TEST_CMV_OP( c.mv, x10, x11, 0x55555554, 0x55555554, x2, 164, x6)
90000390:	555555b7          	lui	a1,0x55555
90000394:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555460>
90000398:	852e                	mv	a0,a1
9000039a:	d32a                	sw	a0,164(sp)

9000039c <inst_66>:

inst_66:
// rs2_val==858993458, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x33333332
TEST_CMV_OP( c.mv, x10, x11, 0x33333332, 0x33333332, x2, 168, x6)
9000039c:	333335b7          	lui	a1,0x33333
900003a0:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x3333323e>
900003a4:	852e                	mv	a0,a1
900003a6:	d52a                	sw	a0,168(sp)

900003a8 <inst_67>:

inst_67:
// rs2_val==1717986917, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x66666665
TEST_CMV_OP( c.mv, x10, x11, 0x66666665, 0x66666665, x2, 172, x6)
900003a8:	666665b7          	lui	a1,0x66666
900003ac:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666571>
900003b0:	852e                	mv	a0,a1
900003b2:	d72a                	sw	a0,172(sp)

900003b4 <inst_68>:

inst_68:
// rs2_val==46339, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0xb503
TEST_CMV_OP( c.mv, x10, x11, 0xb503, 0xb503, x2, 176, x6)
900003b4:	0000b5b7          	lui	a1,0xb
900003b8:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb40f>
900003bc:	852e                	mv	a0,a1
900003be:	d92a                	sw	a0,176(sp)

900003c0 <inst_69>:

inst_69:
// rs2_val == -2097153, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x200001
TEST_CMV_OP( c.mv, x10, x11, -0x200001, -0x200001, x2, 180, x6)
900003c0:	ffe005b7          	lui	a1,0xffe00
900003c4:	fff58593          	addi	a1,a1,-1 # ffdfffff <_end+0x6fdfdcfb>
900003c8:	852e                	mv	a0,a1
900003ca:	db2a                	sw	a0,180(sp)

900003cc <inst_70>:

inst_70:
// rs2_val==46341, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0xb505
TEST_CMV_OP( c.mv, x10, x11, 0xb505, 0xb505, x2, 184, x6)
900003cc:	0000b5b7          	lui	a1,0xb
900003d0:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb411>
900003d4:	852e                	mv	a0,a1
900003d6:	dd2a                	sw	a0,184(sp)

900003d8 <inst_71>:

inst_71:
// rs2_val==-46339, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0xb503
TEST_CMV_OP( c.mv, x10, x11, -0xb503, -0xb503, x2, 188, x6)
900003d8:	ffff55b7          	lui	a1,0xffff5
900003dc:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6fff27f9>
900003e0:	852e                	mv	a0,a1
900003e2:	df2a                	sw	a0,188(sp)

900003e4 <inst_72>:

inst_72:
// rs2_val==1431655766, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x55555556
TEST_CMV_OP( c.mv, x10, x11, 0x55555556, 0x55555556, x2, 192, x6)
900003e4:	555555b7          	lui	a1,0x55555
900003e8:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x55555462>
900003ec:	852e                	mv	a0,a1
900003ee:	c1aa                	sw	a0,192(sp)

900003f0 <inst_73>:

inst_73:
// rs2_val==-1431655765, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x55555555
TEST_CMV_OP( c.mv, x10, x11, -0x55555555, -0x55555555, x2, 196, x6)
900003f0:	aaaab5b7          	lui	a1,0xaaaab
900003f4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa87a7>
900003f8:	852e                	mv	a0,a1
900003fa:	c3aa                	sw	a0,196(sp)

900003fc <inst_74>:

inst_74:
// rs2_val==6, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x6
TEST_CMV_OP( c.mv, x10, x11, 0x6, 0x6, x2, 200, x6)
900003fc:	00600593          	li	a1,6
90000400:	852e                	mv	a0,a1
90000402:	c5aa                	sw	a0,200(sp)

90000404 <inst_75>:

inst_75:
// rs2_val==858993460, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x33333334
TEST_CMV_OP( c.mv, x10, x11, 0x33333334, 0x33333334, x2, 204, x6)
90000404:	333335b7          	lui	a1,0x33333
90000408:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333240>
9000040c:	852e                	mv	a0,a1
9000040e:	c7aa                	sw	a0,204(sp)

90000410 <inst_76>:

inst_76:
// rs2_val==1717986919, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x66666667
TEST_CMV_OP( c.mv, x10, x11, 0x66666667, 0x66666667, x2, 208, x6)
90000410:	666665b7          	lui	a1,0x66666
90000414:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x66666573>
90000418:	852e                	mv	a0,a1
9000041a:	c9aa                	sw	a0,208(sp)

9000041c <inst_77>:

inst_77:
// rs2_val == -4194305, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x400001
TEST_CMV_OP( c.mv, x10, x11, -0x400001, -0x400001, x2, 212, x6)
9000041c:	ffc005b7          	lui	a1,0xffc00
90000420:	fff58593          	addi	a1,a1,-1 # ffbfffff <_end+0x6fbfdcfb>
90000424:	852e                	mv	a0,a1
90000426:	cbaa                	sw	a0,212(sp)

90000428 <inst_78>:

inst_78:
// rs2_val == -8388609, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x800001
TEST_CMV_OP( c.mv, x10, x11, -0x800001, -0x800001, x2, 216, x6)
90000428:	ff8005b7          	lui	a1,0xff800
9000042c:	fff58593          	addi	a1,a1,-1 # ff7fffff <_end+0x6f7fdcfb>
90000430:	852e                	mv	a0,a1
90000432:	cdaa                	sw	a0,216(sp)

90000434 <inst_79>:

inst_79:
// rs2_val == -16777217, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x1000001
TEST_CMV_OP( c.mv, x10, x11, -0x1000001, -0x1000001, x2, 220, x6)
90000434:	ff0005b7          	lui	a1,0xff000
90000438:	fff58593          	addi	a1,a1,-1 # feffffff <_end+0x6effdcfb>
9000043c:	852e                	mv	a0,a1
9000043e:	cfaa                	sw	a0,220(sp)

90000440 <inst_80>:

inst_80:
// rs2_val == -33554433, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x2000001
TEST_CMV_OP( c.mv, x10, x11, -0x2000001, -0x2000001, x2, 224, x6)
90000440:	fe0005b7          	lui	a1,0xfe000
90000444:	fff58593          	addi	a1,a1,-1 # fdffffff <_end+0x6dffdcfb>
90000448:	852e                	mv	a0,a1
9000044a:	d1aa                	sw	a0,224(sp)

9000044c <inst_81>:

inst_81:
// rs2_val == -67108865, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x4000001
TEST_CMV_OP( c.mv, x10, x11, -0x4000001, -0x4000001, x2, 228, x6)
9000044c:	fc0005b7          	lui	a1,0xfc000
90000450:	fff58593          	addi	a1,a1,-1 # fbffffff <_end+0x6bffdcfb>
90000454:	852e                	mv	a0,a1
90000456:	d3aa                	sw	a0,228(sp)

90000458 <inst_82>:

inst_82:
// rs2_val == -134217729, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x8000001
TEST_CMV_OP( c.mv, x10, x11, -0x8000001, -0x8000001, x2, 232, x6)
90000458:	f80005b7          	lui	a1,0xf8000
9000045c:	fff58593          	addi	a1,a1,-1 # f7ffffff <_end+0x67ffdcfb>
90000460:	852e                	mv	a0,a1
90000462:	d5aa                	sw	a0,232(sp)

90000464 <inst_83>:

inst_83:
// rs2_val == -268435457, 
// opcode: c.mv; op2:x11; dest:x10; op2val:-0x10000001
TEST_CMV_OP( c.mv, x10, x11, -0x10000001, -0x10000001, x2, 236, x6)
90000464:	f00005b7          	lui	a1,0xf0000
90000468:	fff58593          	addi	a1,a1,-1 # efffffff <_end+0x5fffdcfb>
9000046c:	852e                	mv	a0,a1
9000046e:	d7aa                	sw	a0,236(sp)

90000470 <inst_84>:

inst_84:
// rs2_val == 4194304, 
// opcode: c.mv; op2:x11; dest:x10; op2val:0x400000
TEST_CMV_OP( c.mv, x10, x11, 0x400000, 0x400000, x2, 240, x6)
90000470:	004005b7          	lui	a1,0x400
90000474:	852e                	mv	a0,a1
90000476:	d9aa                	sw	a0,240(sp)
90000478:	00000013          	nop
9000047c:	00000013          	nop

90000480 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
90000480:	0091                	addi	ra,ra,4
90000482:	4085                	li	ra,1

90000484 <write_tohost>:
90000484:	00001f17          	auipc	t5,0x1
90000488:	b61f2e23          	sw	ra,-1156(t5) # 90001000 <tohost>

9000048c <self_loop>:
9000048c:	a001                	j	9000048c <self_loop>
	...
