
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/C/cli-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed9ca9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f76bd52>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6f9f>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd95d1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00002317          	auipc	t1,0x2
9000002c:	fd830313          	addi	t1,t1,-40 # 90002000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb94f6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfddb71>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfecbba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff76d3>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f996b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bfbbb3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adfccd7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656fd569>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7d9b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfdcf>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eaddce9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56dd72>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7faf>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d59dd9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4beabdea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56feb>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa95f7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d39f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe8bfa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df56f3>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f897b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db7b3bb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edbc8db>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676dd36b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb6d8b3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*);def TEST_CASE_1=True;",cli)

RVTEST_SIGBASE( x4,signature_x4_1)
900000f8:	00002217          	auipc	tp,0x2
900000fc:	f1820213          	addi	tp,tp,-232 # 90002010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rd==x10, imm_val == (-2**(6-1)), imm_val == -32
// opcode:c.li; dest:x10; immval:-0x20
TEST_CASE(x19, x10, -0x20, x4, 0, c.li x10, -0x20;)
90000100:	5501                	li	a0,-32
90000102:	00a22023          	sw	a0,0(tp) # 0 <offset-0xc>

90000106 <inst_1>:

inst_1:
// rd==x18, imm_val == 0, 
// opcode:c.li; dest:x18; immval:0x0
TEST_CASE(x19, x18, 0x0, x4, 4, c.li x18, 0x0;)
90000106:	4901                	li	s2,0
90000108:	01222223          	sw	s2,4(tp) # 4 <offset-0x8>

9000010c <inst_2>:

inst_2:
// rd==x16, imm_val == (2**(6-1)-1), imm_val == 31
// opcode:c.li; dest:x16; immval:0x1f
TEST_CASE(x19, x16, 0x1f, x4, 8, c.li x16, 0x1f;)
9000010c:	487d                	li	a6,31
9000010e:	01022423          	sw	a6,8(tp) # 8 <offset-0x4>

90000112 <inst_3>:

inst_3:
// rd==x29, imm_val == 1, 
// opcode:c.li; dest:x29; immval:0x1
TEST_CASE(x19, x29, 0x1, x4, 12, c.li x29, 0x1;)
90000112:	4e85                	li	t4,1
90000114:	01d22623          	sw	t4,12(tp) # c <offset>

90000118 <inst_4>:

inst_4:
// rd==x15, imm_val == 2, 
// opcode:c.li; dest:x15; immval:0x2
TEST_CASE(x19, x15, 0x2, x4, 16, c.li x15, 0x2;)
90000118:	4789                	li	a5,2
9000011a:	00f22823          	sw	a5,16(tp) # 10 <offset+0x4>

9000011e <inst_5>:

inst_5:
// rd==x2, imm_val == 4, 
// opcode:c.li; dest:x2; immval:0x4
TEST_CASE(x19, x2, 0x4, x4, 20, c.li x2, 0x4;)
9000011e:	4111                	li	sp,4
90000120:	00222a23          	sw	sp,20(tp) # 14 <offset+0x8>

90000124 <inst_6>:

inst_6:
// rd==x14, imm_val == 8, 
// opcode:c.li; dest:x14; immval:0x8
TEST_CASE(x19, x14, 0x8, x4, 24, c.li x14, 0x8;)
90000124:	4721                	li	a4,8
90000126:	00e22c23          	sw	a4,24(tp) # 18 <offset+0xc>

9000012a <inst_7>:

inst_7:
// rd==x27, imm_val == 16, 
// opcode:c.li; dest:x27; immval:0x10
TEST_CASE(x19, x27, 0x10, x4, 28, c.li x27, 0x10;)
9000012a:	4dc1                	li	s11,16
9000012c:	01b22e23          	sw	s11,28(tp) # 1c <offset+0x10>

90000130 <inst_8>:

inst_8:
// rd==x8, imm_val == -22, 
// opcode:c.li; dest:x8; immval:-0x16
TEST_CASE(x19, x8, -0x16, x4, 32, c.li x8, -0x16;)
90000130:	5429                	li	s0,-22
90000132:	02822023          	sw	s0,32(tp) # 20 <offset+0x14>

90000136 <inst_9>:

inst_9:
// rd==x13, imm_val == -2, 
// opcode:c.li; dest:x13; immval:-0x2
TEST_CASE(x19, x13, -0x2, x4, 36, c.li x13, -0x2;)
90000136:	56f9                	li	a3,-2
90000138:	02d22223          	sw	a3,36(tp) # 24 <offset+0x18>

9000013c <inst_10>:

inst_10:
// rd==x30, imm_val == -3, 
// opcode:c.li; dest:x30; immval:-0x3
TEST_CASE(x19, x30, -0x3, x4, 40, c.li x30, -0x3;)
9000013c:	5f75                	li	t5,-3
9000013e:	03e22423          	sw	t5,40(tp) # 28 <offset+0x1c>

90000142 <inst_11>:

inst_11:
// rd==x11, imm_val == -5, 
// opcode:c.li; dest:x11; immval:-0x5
TEST_CASE(x19, x11, -0x5, x4, 44, c.li x11, -0x5;)
90000142:	55ed                	li	a1,-5
90000144:	02b22623          	sw	a1,44(tp) # 2c <offset+0x20>

90000148 <inst_12>:

inst_12:
// rd==x6, imm_val == -9, 
// opcode:c.li; dest:x6; immval:-0x9
TEST_CASE(x19, x6, -0x9, x4, 48, c.li x6, -0x9;)
90000148:	535d                	li	t1,-9
9000014a:	02622823          	sw	t1,48(tp) # 30 <offset+0x24>

9000014e <inst_13>:

inst_13:
// rd==x26, imm_val == -17, 
// opcode:c.li; dest:x26; immval:-0x11
TEST_CASE(x19, x26, -0x11, x4, 52, c.li x26, -0x11;)
9000014e:	5d3d                	li	s10,-17
90000150:	03a22a23          	sw	s10,52(tp) # 34 <offset+0x28>

90000154 <inst_14>:

inst_14:
// rd==x9, imm_val == 21, 
// opcode:c.li; dest:x9; immval:0x15
TEST_CASE(x19, x9, 0x15, x4, 56, c.li x9, 0x15;)
90000154:	44d5                	li	s1,21
90000156:	02922c23          	sw	s1,56(tp) # 38 <offset+0x2c>

9000015a <inst_15>:

inst_15:
// rd==x1, 
// opcode:c.li; dest:x1; immval:0x0
TEST_CASE(x19, x1, 0x0, x4, 60, c.li x1, 0x0;)
9000015a:	4081                	li	ra,0
9000015c:	02122e23          	sw	ra,60(tp) # 3c <offset+0x30>

90000160 <inst_16>:

inst_16:
// rd==x12, 
// opcode:c.li; dest:x12; immval:0x0
TEST_CASE(x19, x12, 0x0, x4, 64, c.li x12, 0x0;)
90000160:	4601                	li	a2,0
90000162:	04c22023          	sw	a2,64(tp) # 40 <offset+0x34>

90000166 <inst_17>:

inst_17:
// rd==x17, 
// opcode:c.li; dest:x17; immval:0x0
TEST_CASE(x19, x17, 0x0, x4, 68, c.li x17, 0x0;)
90000166:	4881                	li	a7,0
90000168:	05122223          	sw	a7,68(tp) # 44 <offset+0x38>

9000016c <inst_18>:

inst_18:
// rd==x7, 
// opcode:c.li; dest:x7; immval:0x0
TEST_CASE(x19, x7, 0x0, x4, 72, c.li x7, 0x0;)
9000016c:	4381                	li	t2,0
9000016e:	04722423          	sw	t2,72(tp) # 48 <offset+0x3c>

90000172 <inst_19>:

inst_19:
// rd==x5, 
// opcode:c.li; dest:x5; immval:0x0
TEST_CASE(x19, x5, 0x0, x4, 76, c.li x5, 0x0;)
90000172:	4281                	li	t0,0
90000174:	04522623          	sw	t0,76(tp) # 4c <offset+0x40>

90000178 <inst_20>:

inst_20:
// rd==x20, 
// opcode:c.li; dest:x20; immval:0x0
TEST_CASE(x19, x20, 0x0, x4, 80, c.li x20, 0x0;)
90000178:	4a01                	li	s4,0
9000017a:	05422823          	sw	s4,80(tp) # 50 <offset+0x44>

9000017e <inst_21>:

inst_21:
// rd==x0, 
// opcode:c.li; dest:x0; immval:0x0
TEST_CASE(x19, x0, 0, x4, 84, c.li x0, 0x0;)
9000017e:	4001                	c.li	zero,0
90000180:	04022a23          	sw	zero,84(tp) # 54 <offset+0x48>

90000184 <inst_22>:

inst_22:
// rd==x31, 
// opcode:c.li; dest:x31; immval:0x0
TEST_CASE(x19, x31, 0x0, x4, 88, c.li x31, 0x0;)
90000184:	4f81                	li	t6,0
90000186:	05f22c23          	sw	t6,88(tp) # 58 <offset+0x4c>

9000018a <inst_23>:

inst_23:
// rd==x24, 
// opcode:c.li; dest:x24; immval:0x0
TEST_CASE(x19, x24, 0x0, x4, 92, c.li x24, 0x0;)
9000018a:	4c01                	li	s8,0
9000018c:	05822e23          	sw	s8,92(tp) # 5c <offset+0x50>

90000190 <inst_24>:

inst_24:
// rd==x3, 
// opcode:c.li; dest:x3; immval:0x0
TEST_CASE(x19, x3, 0x0, x4, 96, c.li x3, 0x0;)
90000190:	4181                	li	gp,0
90000192:	06322023          	sw	gp,96(tp) # 60 <offset+0x54>

90000196 <inst_25>:

inst_25:
// rd==x22, 
// opcode:c.li; dest:x22; immval:0x0
TEST_CASE(x19, x22, 0x0, x4, 100, c.li x22, 0x0;)
90000196:	4b01                	li	s6,0
90000198:	07622223          	sw	s6,100(tp) # 64 <offset+0x58>

9000019c <inst_26>:

inst_26:
// rd==x25, 
// opcode:c.li; dest:x25; immval:0x0
TEST_CASE(x19, x25, 0x0, x4, 104, c.li x25, 0x0;)
9000019c:	4c81                	li	s9,0
9000019e:	07922423          	sw	s9,104(tp) # 68 <offset+0x5c>

900001a2 <inst_27>:

inst_27:
// rd==x21, 
// opcode:c.li; dest:x21; immval:0x0
TEST_CASE(x19, x21, 0x0, x4, 108, c.li x21, 0x0;)
900001a2:	4a81                	li	s5,0
900001a4:	07522623          	sw	s5,108(tp) # 6c <offset+0x60>

900001a8 <inst_28>:

inst_28:
// rd==x19, 
// opcode:c.li; dest:x19; immval:0x0
TEST_CASE(x2, x19, 0x0, x4, 112, c.li x19, 0x0;)
900001a8:	4981                	li	s3,0
900001aa:	07322823          	sw	s3,112(tp) # 70 <offset+0x64>
RVTEST_SIGBASE( x1,signature_x1_0)
900001ae:	00002097          	auipc	ra,0x2
900001b2:	ed608093          	addi	ra,ra,-298 # 90002084 <signature_x1_0>

900001b6 <inst_29>:

inst_29:
// rd==x28, 
// opcode:c.li; dest:x28; immval:0x0
TEST_CASE(x2, x28, 0x0, x1, 0, c.li x28, 0x0;)
900001b6:	4e01                	li	t3,0
900001b8:	01c0a023          	sw	t3,0(ra)

900001bc <inst_30>:

inst_30:
// rd==x4, 
// opcode:c.li; dest:x4; immval:0x0
TEST_CASE(x2, x4, 0x0, x1, 4, c.li x4, 0x0;)
900001bc:	4201                	li	tp,0
900001be:	0040a223          	sw	tp,4(ra)

900001c2 <inst_31>:

inst_31:
// rd==x23, 
// opcode:c.li; dest:x23; immval:0x0
TEST_CASE(x2, x23, 0x0, x1, 8, c.li x23, 0x0;)
900001c2:	4b81                	li	s7,0
900001c4:	0170a423          	sw	s7,8(ra)
900001c8:	00000013          	nop
900001cc:	00000013          	nop

900001d0 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
900001d0:	0091                	addi	ra,ra,4
900001d2:	4085                	li	ra,1

900001d4 <write_tohost>:
900001d4:	00001f17          	auipc	t5,0x1
900001d8:	e21f2623          	sw	ra,-468(t5) # 90001000 <tohost>

900001dc <self_loop>:
900001dc:	a001                	j	900001dc <self_loop>
	...
