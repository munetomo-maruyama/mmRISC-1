
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/C/caddi-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed87a9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f76a852>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6a3f>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd80d1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00003317          	auipc	t1,0x3
9000002c:	fd830313          	addi	t1,t1,-40 # 90003000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb7ff6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfdd611>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfeb6ba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff7173>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f846b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bfa6b3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adfb7d7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656fc069>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7c4b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bf86f>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eadc7e9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56c872>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7a4f>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d588d9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4beaa8ea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56a8b>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa80f7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d24f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe76fa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df5193>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f747b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db79ebb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edbb3db>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676dbe6b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb6c3b3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*);def TEST_CASE_1=True;",caddi)

RVTEST_SIGBASE( x11,signature_x11_1)
900000f8:	00003597          	auipc	a1,0x3
900000fc:	f1858593          	addi	a1,a1,-232 # 90003010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rd==x27, rs1_val == imm_val, rs1_val > 0 and imm_val > 0
// opcode:c.addi; op1:x27; dest:x27 op1val:0x9; immval:0x9
TEST_CI_OP( c.addi, x27, 0x12, 0x9, 0x9, x11, 0, x18)
90000100:	00900d93          	li	s11,9
90000104:	0da5                	addi	s11,s11,9
90000106:	01b5a023          	sw	s11,0(a1)

9000010a <inst_1>:

inst_1:
// rd==x9, rs1_val != imm_val, imm_val == (2**(6-1)-1), imm_val == 31, rs1_val < 0 and imm_val > 0
// opcode:c.addi; op1:x9; dest:x9 op1val:-0x40000000; immval:0x1f
TEST_CI_OP( c.addi, x9, 0xc000001f, -0x40000000, 0x1f, x11, 4, x18)
9000010a:	c00004b7          	lui	s1,0xc0000
9000010e:	04fd                	addi	s1,s1,31
90000110:	c1c4                	sw	s1,4(a1)

90000112 <inst_2>:

inst_2:
// rd==x22, rs1_val > 0 and imm_val < 0, imm_val == -17
// opcode:c.addi; op1:x22; dest:x22 op1val:0x9; immval:-0x11
TEST_CI_OP( c.addi, x22, 0xfffffff8, 0x9, -0x11, x11, 8, x18)
90000112:	00900b13          	li	s6,9
90000116:	1b3d                	addi	s6,s6,-17
90000118:	0165a423          	sw	s6,8(a1)

9000011c <inst_3>:

inst_3:
// rd==x12, rs1_val < 0 and imm_val < 0, rs1_val == -1025
// opcode:c.addi; op1:x12; dest:x12 op1val:-0x401; immval:-0x7
TEST_CI_OP( c.addi, x12, 0xfffffbf8, -0x401, -0x7, x11, 12, x18)
9000011c:	bff00613          	li	a2,-1025
90000120:	1665                	addi	a2,a2,-7
90000122:	c5d0                	sw	a2,12(a1)

90000124 <inst_4>:

inst_4:
// rd==x16, imm_val == (-2**(6-1)), imm_val == -32, rs1_val == 16
// opcode:c.addi; op1:x16; dest:x16 op1val:0x10; immval:-0x20
TEST_CI_OP( c.addi, x16, 0xfffffff0, 0x10, -0x20, x11, 16, x18)
90000124:	01000813          	li	a6,16
90000128:	1801                	addi	a6,a6,-32
9000012a:	0105a823          	sw	a6,16(a1)

9000012e <inst_5>:

inst_5:
// rd==x10, imm_val == 0, rs1_val == 4, rs1_val==4 and imm_val==0
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:0x0
TEST_CI_OP( c.addi, x10, 0x4, 0x4, 0x0, x11, 20, x18)
9000012e:	00400513          	li	a0,4
90000132:	0501                	addi	a0,a0,0
90000134:	c9c8                	sw	a0,20(a1)

90000136 <inst_6>:

inst_6:
// rd==x14, imm_val == 1, rs1_val == 256
// opcode:c.addi; op1:x14; dest:x14 op1val:0x100; immval:0x1
TEST_CI_OP( c.addi, x14, 0x101, 0x100, 0x1, x11, 24, x18)
90000136:	10000713          	li	a4,256
9000013a:	0705                	addi	a4,a4,1
9000013c:	cd98                	sw	a4,24(a1)

9000013e <inst_7>:

inst_7:
// rd==x13, rs1_val == (-2**(xlen-1)), rs1_val == -2147483648
// opcode:c.addi; op1:x13; dest:x13 op1val:-0x80000000; immval:0x1f
TEST_CI_OP( c.addi, x13, 0x8000001f, -0x80000000, 0x1f, x11, 28, x18)
9000013e:	800006b7          	lui	a3,0x80000
90000142:	06fd                	addi	a3,a3,31
90000144:	cdd4                	sw	a3,28(a1)

90000146 <inst_8>:

inst_8:
// rd==x31, rs1_val == 0, rs1_val==0 and imm_val==0
// opcode:c.addi; op1:x31; dest:x31 op1val:0x0; immval:0x0
TEST_CI_OP( c.addi, x31, 0x0, 0x0, 0x0, x11, 32, x18)
90000146:	00000f93          	li	t6,0
9000014a:	0f81                	addi	t6,t6,0
9000014c:	03f5a023          	sw	t6,32(a1)

90000150 <inst_9>:

inst_9:
// rd==x3, rs1_val == (2**(xlen-1)-1), rs1_val == 2147483647, imm_val == -22
// opcode:c.addi; op1:x3; dest:x3 op1val:0x7fffffff; immval:-0x16
TEST_CI_OP( c.addi, x3, 0x7fffffe9, 0x7fffffff, -0x16, x11, 36, x18)
90000150:	800001b7          	lui	gp,0x80000
90000154:	fff18193          	addi	gp,gp,-1 # 7fffffff <_end+0xefffc8fb>
90000158:	11a9                	addi	gp,gp,-22
9000015a:	0235a223          	sw	gp,36(a1)

9000015e <inst_10>:

inst_10:
// rd==x7, rs1_val == 1, imm_val == 4
// opcode:c.addi; op1:x7; dest:x7 op1val:0x1; immval:0x4
TEST_CI_OP( c.addi, x7, 0x5, 0x1, 0x4, x11, 40, x18)
9000015e:	00100393          	li	t2,1
90000162:	0391                	addi	t2,t2,4
90000164:	0275a423          	sw	t2,40(a1)

90000168 <inst_11>:

inst_11:
// rd==x1, imm_val == 2, rs1_val==1717986918 and imm_val==2
// opcode:c.addi; op1:x1; dest:x1 op1val:0x66666666; immval:0x2
TEST_CI_OP( c.addi, x1, 0x66666668, 0x66666666, 0x2, x11, 44, x18)
90000168:	666660b7          	lui	ra,0x66666
9000016c:	66608093          	addi	ra,ra,1638 # 66666666 <offset+0x666660fa>
90000170:	0089                	addi	ra,ra,2
90000172:	0215a623          	sw	ra,44(a1)

90000176 <inst_12>:

inst_12:
// rd==x30, imm_val == 8, rs1_val == -4194305
// opcode:c.addi; op1:x30; dest:x30 op1val:-0x400001; immval:0x8
TEST_CI_OP( c.addi, x30, 0xffc00007, -0x400001, 0x8, x11, 48, x18)
90000176:	ffc00f37          	lui	t5,0xffc00
9000017a:	ffff0f13          	addi	t5,t5,-1 # ffbfffff <_end+0x6fbfc8fb>
9000017e:	0f21                	addi	t5,t5,8
90000180:	03e5a823          	sw	t5,48(a1)

90000184 <inst_13>:

inst_13:
// rd==x6, imm_val == 16, rs1_val == -131073
// opcode:c.addi; op1:x6; dest:x6 op1val:-0x20001; immval:0x10
TEST_CI_OP( c.addi, x6, 0xfffe000f, -0x20001, 0x10, x11, 52, x18)
90000184:	fffe0337          	lui	t1,0xfffe0
90000188:	fff30313          	addi	t1,t1,-1 # fffdffff <_end+0x6ffdc8fb>
9000018c:	0341                	addi	t1,t1,16
9000018e:	0265aa23          	sw	t1,52(a1)

90000192 <inst_14>:

inst_14:
// rd==x19, imm_val == -2, rs1_val == -2
// opcode:c.addi; op1:x19; dest:x19 op1val:-0x2; immval:-0x2
TEST_CI_OP( c.addi, x19, 0xfffffffc, -0x2, -0x2, x11, 56, x18)
90000192:	ffe00993          	li	s3,-2
90000196:	19f9                	addi	s3,s3,-2
90000198:	0335ac23          	sw	s3,56(a1)

9000019c <inst_15>:

inst_15:
// rd==x25, imm_val == -3, rs1_val == -536870913
// opcode:c.addi; op1:x25; dest:x25 op1val:-0x20000001; immval:-0x3
TEST_CI_OP( c.addi, x25, 0xdffffffc, -0x20000001, -0x3, x11, 60, x18)
9000019c:	e0000cb7          	lui	s9,0xe0000
900001a0:	fffc8c93          	addi	s9,s9,-1 # dfffffff <_end+0x4fffc8fb>
900001a4:	1cf5                	addi	s9,s9,-3
900001a6:	0395ae23          	sw	s9,60(a1)

900001aa <inst_16>:

inst_16:
// rd==x28, imm_val == -5, 
// opcode:c.addi; op1:x28; dest:x28 op1val:-0x7; immval:-0x5
TEST_CI_OP( c.addi, x28, 0xfffffff4, -0x7, -0x5, x11, 64, x18)
900001aa:	ff900e13          	li	t3,-7
900001ae:	1e6d                	addi	t3,t3,-5
900001b0:	05c5a023          	sw	t3,64(a1)

900001b4 <inst_17>:

inst_17:
// rd==x24, imm_val == -9, 
// opcode:c.addi; op1:x24; dest:x24 op1val:-0x7; immval:-0x9
TEST_CI_OP( c.addi, x24, 0xfffffff0, -0x7, -0x9, x11, 68, x18)
900001b4:	ff900c13          	li	s8,-7
900001b8:	1c5d                	addi	s8,s8,-9
900001ba:	0585a223          	sw	s8,68(a1)

900001be <inst_18>:

inst_18:
// rd==x15, imm_val == 21, rs1_val == 8
// opcode:c.addi; op1:x15; dest:x15 op1val:0x8; immval:0x15
TEST_CI_OP( c.addi, x15, 0x1d, 0x8, 0x15, x11, 72, x18)
900001be:	00800793          	li	a5,8
900001c2:	07d5                	addi	a5,a5,21
900001c4:	c5bc                	sw	a5,72(a1)

900001c6 <inst_19>:

inst_19:
// rd==x2, rs1_val == 2, rs1_val==2 and imm_val==2
// opcode:c.addi; op1:x2; dest:x2 op1val:0x2; immval:0x2
TEST_CI_OP( c.addi, x2, 0x4, 0x2, 0x2, x11, 76, x18)
900001c6:	00200113          	li	sp,2
900001ca:	0109                	addi	sp,sp,2
900001cc:	0425a623          	sw	sp,76(a1)

900001d0 <inst_20>:

inst_20:
// rd==x8, rs1_val == 32, 
// opcode:c.addi; op1:x8; dest:x8 op1val:0x20; immval:0x3
TEST_CI_OP( c.addi, x8, 0x23, 0x20, 0x3, x11, 80, x18)
900001d0:	02000413          	li	s0,32
900001d4:	040d                	addi	s0,s0,3
900001d6:	c9a0                	sw	s0,80(a1)

900001d8 <inst_21>:

inst_21:
// rd==x23, rs1_val == 64, 
// opcode:c.addi; op1:x23; dest:x23 op1val:0x40; immval:-0x7
TEST_CI_OP( c.addi, x23, 0x39, 0x40, -0x7, x11, 84, x18)
900001d8:	04000b93          	li	s7,64
900001dc:	1be5                	addi	s7,s7,-7
900001de:	0575aa23          	sw	s7,84(a1)

900001e2 <inst_22>:

inst_22:
// rd==x17, rs1_val == 128, 
// opcode:c.addi; op1:x17; dest:x17 op1val:0x80; immval:-0x4
TEST_CI_OP( c.addi, x17, 0x7c, 0x80, -0x4, x11, 88, x18)
900001e2:	08000893          	li	a7,128
900001e6:	18f1                	addi	a7,a7,-4
900001e8:	0515ac23          	sw	a7,88(a1)

900001ec <inst_23>:

inst_23:
// rd==x20, rs1_val == 512, 
// opcode:c.addi; op1:x20; dest:x20 op1val:0x200; immval:0x2
TEST_CI_OP( c.addi, x20, 0x202, 0x200, 0x2, x11, 92, x18)
900001ec:	20000a13          	li	s4,512
900001f0:	0a09                	addi	s4,s4,2
900001f2:	0545ae23          	sw	s4,92(a1)

900001f6 <inst_24>:

inst_24:
// rd==x5, rs1_val == 1024, 
// opcode:c.addi; op1:x5; dest:x5 op1val:0x400; immval:0x10
TEST_CI_OP( c.addi, x5, 0x410, 0x400, 0x10, x11, 96, x18)
900001f6:	40000293          	li	t0,1024
900001fa:	02c1                	addi	t0,t0,16
900001fc:	0655a023          	sw	t0,96(a1)

90000200 <inst_25>:

inst_25:
// rd==x26, rs1_val == 2048, 
// opcode:c.addi; op1:x26; dest:x26 op1val:0x800; immval:0x10
TEST_CI_OP( c.addi, x26, 0x810, 0x800, 0x10, x11, 100, x18)
90000200:	00001d37          	lui	s10,0x1
90000204:	800d0d13          	addi	s10,s10,-2048 # 800 <offset+0x294>
90000208:	0d41                	addi	s10,s10,16
9000020a:	07a5a223          	sw	s10,100(a1)

9000020e <inst_26>:

inst_26:
// rd==x4, rs1_val == 4096, 
// opcode:c.addi; op1:x4; dest:x4 op1val:0x1000; immval:0x15
TEST_CI_OP( c.addi, x4, 0x1015, 0x1000, 0x15, x11, 104, x18)
9000020e:	00001237          	lui	tp,0x1
90000212:	0255                	addi	tp,tp,21
90000214:	0645a423          	sw	tp,104(a1)

90000218 <inst_27>:

inst_27:
// rd==x29, rs1_val == 8192, 
// opcode:c.addi; op1:x29; dest:x29 op1val:0x2000; immval:-0x4
TEST_CI_OP( c.addi, x29, 0x1ffc, 0x2000, -0x4, x11, 108, x2)
90000218:	00002eb7          	lui	t4,0x2
9000021c:	1ef1                	addi	t4,t4,-4
9000021e:	07d5a623          	sw	t4,108(a1)
RVTEST_SIGBASE( x1,signature_x1_0)
90000222:	00003097          	auipc	ra,0x3
90000226:	e5e08093          	addi	ra,ra,-418 # 90003080 <signature_x1_0>

9000022a <inst_28>:

inst_28:
// rd==x18, rs1_val == 16384, 
// opcode:c.addi; op1:x18; dest:x18 op1val:0x4000; immval:0x0
TEST_CI_OP( c.addi, x18, 0x4000, 0x4000, 0x0, x1, 0, x2)
9000022a:	00004937          	lui	s2,0x4
9000022e:	0901                	addi	s2,s2,0
90000230:	0120a023          	sw	s2,0(ra)

90000234 <inst_29>:

inst_29:
// rd==x11, rs1_val == 32768, 
// opcode:c.addi; op1:x11; dest:x11 op1val:0x8000; immval:0x6
TEST_CI_OP( c.addi, x11, 0x8006, 0x8000, 0x6, x1, 4, x2)
90000234:	000085b7          	lui	a1,0x8
90000238:	0599                	addi	a1,a1,6
9000023a:	00b0a223          	sw	a1,4(ra)

9000023e <inst_30>:

inst_30:
// rd==x21, rs1_val == 65536, 
// opcode:c.addi; op1:x21; dest:x21 op1val:0x10000; immval:0x5
TEST_CI_OP( c.addi, x21, 0x10005, 0x10000, 0x5, x1, 8, x2)
9000023e:	00010ab7          	lui	s5,0x10
90000242:	0a95                	addi	s5,s5,5
90000244:	0150a423          	sw	s5,8(ra)

90000248 <inst_31>:

inst_31:
// rs1_val == 131072, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x20000; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x1fffc, 0x20000, -0x4, x1, 12, x2)
90000248:	00020537          	lui	a0,0x20
9000024c:	1571                	addi	a0,a0,-4
9000024e:	00a0a623          	sw	a0,12(ra)

90000252 <inst_32>:

inst_32:
// rs1_val == 262144, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x40000; immval:-0x7
TEST_CI_OP( c.addi, x10, 0x3fff9, 0x40000, -0x7, x1, 16, x2)
90000252:	00040537          	lui	a0,0x40
90000256:	1565                	addi	a0,a0,-7
90000258:	00a0a823          	sw	a0,16(ra)

9000025c <inst_33>:

inst_33:
// rs1_val == 524288, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x80000; immval:-0x10
TEST_CI_OP( c.addi, x10, 0x7fff0, 0x80000, -0x10, x1, 20, x2)
9000025c:	00080537          	lui	a0,0x80
90000260:	1541                	addi	a0,a0,-16
90000262:	00a0aa23          	sw	a0,20(ra)

90000266 <inst_34>:

inst_34:
// rs1_val == 1048576, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x100000; immval:-0x9
TEST_CI_OP( c.addi, x10, 0xffff7, 0x100000, -0x9, x1, 24, x2)
90000266:	00100537          	lui	a0,0x100
9000026a:	155d                	addi	a0,a0,-9
9000026c:	00a0ac23          	sw	a0,24(ra)

90000270 <inst_35>:

inst_35:
// rs1_val == 2097152, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x200000; immval:-0x16
TEST_CI_OP( c.addi, x10, 0x1fffea, 0x200000, -0x16, x1, 28, x2)
90000270:	00200537          	lui	a0,0x200
90000274:	1529                	addi	a0,a0,-22
90000276:	00a0ae23          	sw	a0,28(ra)

9000027a <inst_36>:

inst_36:
// rs1_val == 4194304, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x400000; immval:0x9
TEST_CI_OP( c.addi, x10, 0x400009, 0x400000, 0x9, x1, 32, x2)
9000027a:	00400537          	lui	a0,0x400
9000027e:	0525                	addi	a0,a0,9
90000280:	02a0a023          	sw	a0,32(ra)

90000284 <inst_37>:

inst_37:
// rs1_val == 8388608, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x800000; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x7ffffc, 0x800000, -0x4, x1, 36, x2)
90000284:	00800537          	lui	a0,0x800
90000288:	1571                	addi	a0,a0,-4
9000028a:	02a0a223          	sw	a0,36(ra)

9000028e <inst_38>:

inst_38:
// rs1_val == 16777216, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x1000000; immval:0x4
TEST_CI_OP( c.addi, x10, 0x1000004, 0x1000000, 0x4, x1, 40, x2)
9000028e:	01000537          	lui	a0,0x1000
90000292:	0511                	addi	a0,a0,4
90000294:	02a0a423          	sw	a0,40(ra)

90000298 <inst_39>:

inst_39:
// rs1_val == 33554432, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2000000; immval:0x4
TEST_CI_OP( c.addi, x10, 0x2000004, 0x2000000, 0x4, x1, 44, x2)
90000298:	02000537          	lui	a0,0x2000
9000029c:	0511                	addi	a0,a0,4
9000029e:	02a0a623          	sw	a0,44(ra)

900002a2 <inst_40>:

inst_40:
// rs1_val == 67108864, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4000000; immval:-0x10
TEST_CI_OP( c.addi, x10, 0x3fffff0, 0x4000000, -0x10, x1, 48, x2)
900002a2:	04000537          	lui	a0,0x4000
900002a6:	1541                	addi	a0,a0,-16
900002a8:	02a0a823          	sw	a0,48(ra)

900002ac <inst_41>:

inst_41:
// rs1_val == 134217728, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x8000000; immval:0x0
TEST_CI_OP( c.addi, x10, 0x8000000, 0x8000000, 0x0, x1, 52, x2)
900002ac:	08000537          	lui	a0,0x8000
900002b0:	0501                	addi	a0,a0,0
900002b2:	02a0aa23          	sw	a0,52(ra)

900002b6 <inst_42>:

inst_42:
// rs1_val == 268435456, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x10000000; immval:0x4
TEST_CI_OP( c.addi, x10, 0x10000004, 0x10000000, 0x4, x1, 56, x2)
900002b6:	10000537          	lui	a0,0x10000
900002ba:	0511                	addi	a0,a0,4
900002bc:	02a0ac23          	sw	a0,56(ra)

900002c0 <inst_43>:

inst_43:
// rs1_val == 536870912, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x20000000; immval:0x0
TEST_CI_OP( c.addi, x10, 0x20000000, 0x20000000, 0x0, x1, 60, x2)
900002c0:	20000537          	lui	a0,0x20000
900002c4:	0501                	addi	a0,a0,0
900002c6:	02a0ae23          	sw	a0,60(ra)

900002ca <inst_44>:

inst_44:
// rs1_val == 1073741824, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x40000000; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x3fffffff, 0x40000000, -0x1, x1, 64, x2)
900002ca:	40000537          	lui	a0,0x40000
900002ce:	157d                	addi	a0,a0,-1
900002d0:	04a0a023          	sw	a0,64(ra)

900002d4 <inst_45>:

inst_45:
// rs1_val == -3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x3; immval:0x6
TEST_CI_OP( c.addi, x10, 0x3, -0x3, 0x6, x1, 68, x2)
900002d4:	ffd00513          	li	a0,-3
900002d8:	0519                	addi	a0,a0,6
900002da:	04a0a223          	sw	a0,68(ra)

900002de <inst_46>:

inst_46:
// rs1_val == -5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x5; immval:-0x20
TEST_CI_OP( c.addi, x10, 0xffffffdb, -0x5, -0x20, x1, 72, x2)
900002de:	ffb00513          	li	a0,-5
900002e2:	1501                	addi	a0,a0,-32
900002e4:	04a0a423          	sw	a0,72(ra)

900002e8 <inst_47>:

inst_47:
// rs1_val == -9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x9; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xfffffff2, -0x9, -0x5, x1, 76, x2)
900002e8:	ff700513          	li	a0,-9
900002ec:	156d                	addi	a0,a0,-5
900002ee:	04a0a623          	sw	a0,76(ra)

900002f2 <inst_48>:

inst_48:
// rs1_val == -17, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x11; immval:0x1f
TEST_CI_OP( c.addi, x10, 0xe, -0x11, 0x1f, x1, 80, x2)
900002f2:	fef00513          	li	a0,-17
900002f6:	057d                	addi	a0,a0,31
900002f8:	04a0a823          	sw	a0,80(ra)

900002fc <inst_49>:

inst_49:
// rs1_val == -33, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x21; immval:-0x1
TEST_CI_OP( c.addi, x10, 0xffffffde, -0x21, -0x1, x1, 84, x2)
900002fc:	fdf00513          	li	a0,-33
90000300:	157d                	addi	a0,a0,-1
90000302:	04a0aa23          	sw	a0,84(ra)

90000306 <inst_50>:

inst_50:
// rs1_val == -65, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x41; immval:-0x16
TEST_CI_OP( c.addi, x10, 0xffffffa9, -0x41, -0x16, x1, 88, x2)
90000306:	fbf00513          	li	a0,-65
9000030a:	1529                	addi	a0,a0,-22
9000030c:	04a0ac23          	sw	a0,88(ra)

90000310 <inst_51>:

inst_51:
// rs1_val == -129, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x81; immval:-0x20
TEST_CI_OP( c.addi, x10, 0xffffff5f, -0x81, -0x20, x1, 92, x2)
90000310:	f7f00513          	li	a0,-129
90000314:	1501                	addi	a0,a0,-32
90000316:	04a0ae23          	sw	a0,92(ra)

9000031a <inst_52>:

inst_52:
// rs1_val == -257, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x101; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xfffffefb, -0x101, -0x4, x1, 96, x2)
9000031a:	eff00513          	li	a0,-257
9000031e:	1571                	addi	a0,a0,-4
90000320:	06a0a023          	sw	a0,96(ra)

90000324 <inst_53>:

inst_53:
// rs1_val == -513, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x201; immval:0x4
TEST_CI_OP( c.addi, x10, 0xfffffe03, -0x201, 0x4, x1, 100, x2)
90000324:	dff00513          	li	a0,-513
90000328:	0511                	addi	a0,a0,4
9000032a:	06a0a223          	sw	a0,100(ra)

9000032e <inst_54>:

inst_54:
// rs1_val == -2049, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x801; immval:0x5
TEST_CI_OP( c.addi, x10, 0xfffff804, -0x801, 0x5, x1, 104, x2)
9000032e:	fffff537          	lui	a0,0xfffff
90000332:	7ff50513          	addi	a0,a0,2047 # fffff7ff <_end+0x6fffc0fb>
90000336:	0515                	addi	a0,a0,5
90000338:	06a0a423          	sw	a0,104(ra)

9000033c <inst_55>:

inst_55:
// rs1_val == -4097, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x1001; immval:0x10
TEST_CI_OP( c.addi, x10, 0xfffff00f, -0x1001, 0x10, x1, 108, x2)
9000033c:	fffff537          	lui	a0,0xfffff
90000340:	fff50513          	addi	a0,a0,-1 # ffffefff <_end+0x6fffb8fb>
90000344:	0541                	addi	a0,a0,16
90000346:	06a0a623          	sw	a0,108(ra)

9000034a <inst_56>:

inst_56:
// rs1_val == -8193, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x2001; immval:0x5
TEST_CI_OP( c.addi, x10, 0xffffe004, -0x2001, 0x5, x1, 112, x2)
9000034a:	ffffe537          	lui	a0,0xffffe
9000034e:	fff50513          	addi	a0,a0,-1 # ffffdfff <_end+0x6fffa8fb>
90000352:	0515                	addi	a0,a0,5
90000354:	06a0a823          	sw	a0,112(ra)

90000358 <inst_57>:

inst_57:
// rs1_val == -16385, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x4001; immval:-0x1
TEST_CI_OP( c.addi, x10, 0xffffbffe, -0x4001, -0x1, x1, 116, x2)
90000358:	ffffc537          	lui	a0,0xffffc
9000035c:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0x6fff88fb>
90000360:	157d                	addi	a0,a0,-1
90000362:	06a0aa23          	sw	a0,116(ra)

90000366 <inst_58>:

inst_58:
// rs1_val == -32769, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x8001; immval:0xf
TEST_CI_OP( c.addi, x10, 0xffff800e, -0x8001, 0xf, x1, 120, x2)
90000366:	ffff8537          	lui	a0,0xffff8
9000036a:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0x6fff48fb>
9000036e:	053d                	addi	a0,a0,15
90000370:	06a0ac23          	sw	a0,120(ra)

90000374 <inst_59>:

inst_59:
// rs1_val == -65537, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x10001; immval:-0x9
TEST_CI_OP( c.addi, x10, 0xfffefff6, -0x10001, -0x9, x1, 124, x2)
90000374:	ffff0537          	lui	a0,0xffff0
90000378:	fff50513          	addi	a0,a0,-1 # fffeffff <_end+0x6ffec8fb>
9000037c:	155d                	addi	a0,a0,-9
9000037e:	06a0ae23          	sw	a0,124(ra)

90000382 <inst_60>:

inst_60:
// rs1_val == -262145, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x40001; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xfffbfffa, -0x40001, -0x5, x1, 128, x2)
90000382:	fffc0537          	lui	a0,0xfffc0
90000386:	fff50513          	addi	a0,a0,-1 # fffbffff <_end+0x6ffbc8fb>
9000038a:	156d                	addi	a0,a0,-5
9000038c:	08a0a023          	sw	a0,128(ra)

90000390 <inst_61>:

inst_61:
// rs1_val == -524289, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x80001; immval:-0x10
TEST_CI_OP( c.addi, x10, 0xfff7ffef, -0x80001, -0x10, x1, 132, x2)
90000390:	fff80537          	lui	a0,0xfff80
90000394:	fff50513          	addi	a0,a0,-1 # fff7ffff <_end+0x6ff7c8fb>
90000398:	1541                	addi	a0,a0,-16
9000039a:	08a0a223          	sw	a0,132(ra)

9000039e <inst_62>:

inst_62:
// rs1_val == -1048577, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x100001; immval:-0x2
TEST_CI_OP( c.addi, x10, 0xffeffffd, -0x100001, -0x2, x1, 136, x2)
9000039e:	fff00537          	lui	a0,0xfff00
900003a2:	fff50513          	addi	a0,a0,-1 # ffefffff <_end+0x6fefc8fb>
900003a6:	1579                	addi	a0,a0,-2
900003a8:	08a0a423          	sw	a0,136(ra)

900003ac <inst_63>:

inst_63:
// rs1_val == -2097153, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x200001; immval:0x5
TEST_CI_OP( c.addi, x10, 0xffe00004, -0x200001, 0x5, x1, 140, x2)
900003ac:	ffe00537          	lui	a0,0xffe00
900003b0:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0x6fdfc8fb>
900003b4:	0515                	addi	a0,a0,5
900003b6:	08a0a623          	sw	a0,140(ra)

900003ba <inst_64>:

inst_64:
// rs1_val == -8388609, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x800001; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xff7ffffb, -0x800001, -0x4, x1, 144, x2)
900003ba:	ff800537          	lui	a0,0xff800
900003be:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0x6f7fc8fb>
900003c2:	1571                	addi	a0,a0,-4
900003c4:	08a0a823          	sw	a0,144(ra)

900003c8 <inst_65>:

inst_65:
// rs1_val == -16777217, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x1000001; immval:0x5
TEST_CI_OP( c.addi, x10, 0xff000004, -0x1000001, 0x5, x1, 148, x2)
900003c8:	ff000537          	lui	a0,0xff000
900003cc:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0x6effc8fb>
900003d0:	0515                	addi	a0,a0,5
900003d2:	08a0aa23          	sw	a0,148(ra)

900003d6 <inst_66>:

inst_66:
// rs1_val == -33554433, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x2000001; immval:-0x8
TEST_CI_OP( c.addi, x10, 0xfdfffff7, -0x2000001, -0x8, x1, 152, x2)
900003d6:	fe000537          	lui	a0,0xfe000
900003da:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0x6dffc8fb>
900003de:	1561                	addi	a0,a0,-8
900003e0:	08a0ac23          	sw	a0,152(ra)

900003e4 <inst_67>:

inst_67:
// rs1_val == -67108865, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x4000001; immval:0x4
TEST_CI_OP( c.addi, x10, 0xfc000003, -0x4000001, 0x4, x1, 156, x2)
900003e4:	fc000537          	lui	a0,0xfc000
900003e8:	fff50513          	addi	a0,a0,-1 # fbffffff <_end+0x6bffc8fb>
900003ec:	0511                	addi	a0,a0,4
900003ee:	08a0ae23          	sw	a0,156(ra)

900003f2 <inst_68>:

inst_68:
// rs1_val == -134217729, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x8000001; immval:0x7
TEST_CI_OP( c.addi, x10, 0xf8000006, -0x8000001, 0x7, x1, 160, x2)
900003f2:	f8000537          	lui	a0,0xf8000
900003f6:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0x67ffc8fb>
900003fa:	051d                	addi	a0,a0,7
900003fc:	0aa0a023          	sw	a0,160(ra)

90000400 <inst_69>:

inst_69:
// rs1_val == -268435457, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x10000001; immval:0x4
TEST_CI_OP( c.addi, x10, 0xf0000003, -0x10000001, 0x4, x1, 164, x2)
90000400:	f0000537          	lui	a0,0xf0000
90000404:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0x5fffc8fb>
90000408:	0511                	addi	a0,a0,4
9000040a:	0aa0a223          	sw	a0,164(ra)

9000040e <inst_70>:

inst_70:
// rs1_val == -1073741825, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x40000001; immval:0x4
TEST_CI_OP( c.addi, x10, 0xc0000003, -0x40000001, 0x4, x1, 168, x2)
9000040e:	c0000537          	lui	a0,0xc0000
90000412:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0x2fffc8fb>
90000416:	0511                	addi	a0,a0,4
90000418:	0aa0a423          	sw	a0,168(ra)

9000041c <inst_71>:

inst_71:
// rs1_val == 1431655765, rs1_val==1431655765 and imm_val==4
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:0x4
TEST_CI_OP( c.addi, x10, 0x55555559, 0x55555555, 0x4, x1, 172, x2)
9000041c:	55555537          	lui	a0,0x55555
90000420:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
90000424:	0511                	addi	a0,a0,4
90000426:	0aa0a623          	sw	a0,172(ra)

9000042a <inst_72>:

inst_72:
// rs1_val == -1431655766, rs1_val==-1431655766 and imm_val==-2
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:-0x2
TEST_CI_OP( c.addi, x10, 0xaaaaaaa8, -0x55555556, -0x2, x1, 176, x2)
9000042a:	aaaab537          	lui	a0,0xaaaab
9000042e:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
90000432:	1579                	addi	a0,a0,-2
90000434:	0aa0a823          	sw	a0,176(ra)

90000438 <inst_73>:

inst_73:
// rs1_val==3 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:0x3
TEST_CI_OP( c.addi, x10, 0x6, 0x3, 0x3, x1, 180, x2)
90000438:	00300513          	li	a0,3
9000043c:	050d                	addi	a0,a0,3
9000043e:	0aa0aa23          	sw	a0,180(ra)

90000442 <inst_74>:

inst_74:
// rs1_val==3 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:0x5
TEST_CI_OP( c.addi, x10, 0x8, 0x3, 0x5, x1, 184, x2)
90000442:	00300513          	li	a0,3
90000446:	0515                	addi	a0,a0,5
90000448:	0aa0ac23          	sw	a0,184(ra)

9000044c <inst_75>:

inst_75:
// rs1_val==3 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:0xa
TEST_CI_OP( c.addi, x10, 0xd, 0x3, 0xa, x1, 188, x2)
9000044c:	00300513          	li	a0,3
90000450:	0529                	addi	a0,a0,10
90000452:	0aa0ae23          	sw	a0,188(ra)

90000456 <inst_76>:

inst_76:
// rs1_val==3 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:0x6
TEST_CI_OP( c.addi, x10, 0x9, 0x3, 0x6, x1, 192, x2)
90000456:	00300513          	li	a0,3
9000045a:	0519                	addi	a0,a0,6
9000045c:	0ca0a023          	sw	a0,192(ra)

90000460 <inst_77>:

inst_77:
// rs1_val==3 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x1, 0x3, -0x2, x1, 196, x2)
90000460:	00300513          	li	a0,3
90000464:	1579                	addi	a0,a0,-2
90000466:	0ca0a223          	sw	a0,196(ra)

9000046a <inst_78>:

inst_78:
// rs1_val==3 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xfffffffe, 0x3, -0x5, x1, 200, x2)
9000046a:	00300513          	li	a0,3
9000046e:	156d                	addi	a0,a0,-5
90000470:	0ca0a423          	sw	a0,200(ra)

90000474 <inst_79>:

inst_79:
// rs1_val==3 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:0x2
TEST_CI_OP( c.addi, x10, 0x5, 0x3, 0x2, x1, 204, x2)
90000474:	00300513          	li	a0,3
90000478:	0509                	addi	a0,a0,2
9000047a:	0ca0a623          	sw	a0,204(ra)

9000047e <inst_80>:

inst_80:
// rs1_val==3 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:0x4
TEST_CI_OP( c.addi, x10, 0x7, 0x3, 0x4, x1, 208, x2)
9000047e:	00300513          	li	a0,3
90000482:	0511                	addi	a0,a0,4
90000484:	0ca0a823          	sw	a0,208(ra)

90000488 <inst_81>:

inst_81:
// rs1_val==3 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:0x9
TEST_CI_OP( c.addi, x10, 0xc, 0x3, 0x9, x1, 212, x2)
90000488:	00300513          	li	a0,3
9000048c:	0525                	addi	a0,a0,9
9000048e:	0ca0aa23          	sw	a0,212(ra)

90000492 <inst_82>:

inst_82:
// rs1_val==3 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:0x0
TEST_CI_OP( c.addi, x10, 0x3, 0x3, 0x0, x1, 216, x2)
90000492:	00300513          	li	a0,3
90000496:	0501                	addi	a0,a0,0
90000498:	0ca0ac23          	sw	a0,216(ra)

9000049c <inst_83>:

inst_83:
// rs1_val==3 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:0xb
TEST_CI_OP( c.addi, x10, 0xe, 0x3, 0xb, x1, 220, x2)
9000049c:	00300513          	li	a0,3
900004a0:	052d                	addi	a0,a0,11
900004a2:	0ca0ae23          	sw	a0,220(ra)

900004a6 <inst_84>:

inst_84:
// rs1_val==3 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:0x7
TEST_CI_OP( c.addi, x10, 0xa, 0x3, 0x7, x1, 224, x2)
900004a6:	00300513          	li	a0,3
900004aa:	051d                	addi	a0,a0,7
900004ac:	0ea0a023          	sw	a0,224(ra)

900004b0 <inst_85>:

inst_85:
// rs1_val==3 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x2, 0x3, -0x1, x1, 228, x2)
900004b0:	00300513          	li	a0,3
900004b4:	157d                	addi	a0,a0,-1
900004b6:	0ea0a223          	sw	a0,228(ra)

900004ba <inst_86>:

inst_86:
// rs1_val==3 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x3; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xffffffff, 0x3, -0x4, x1, 232, x2)
900004ba:	00300513          	li	a0,3
900004be:	1571                	addi	a0,a0,-4
900004c0:	0ea0a423          	sw	a0,232(ra)

900004c4 <inst_87>:

inst_87:
// rs1_val==1431655765 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:0x3
TEST_CI_OP( c.addi, x10, 0x55555558, 0x55555555, 0x3, x1, 236, x2)
900004c4:	55555537          	lui	a0,0x55555
900004c8:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
900004cc:	050d                	addi	a0,a0,3
900004ce:	0ea0a623          	sw	a0,236(ra)

900004d2 <inst_88>:

inst_88:
// rs1_val==1431655765 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:0x5
TEST_CI_OP( c.addi, x10, 0x5555555a, 0x55555555, 0x5, x1, 240, x2)
900004d2:	55555537          	lui	a0,0x55555
900004d6:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
900004da:	0515                	addi	a0,a0,5
900004dc:	0ea0a823          	sw	a0,240(ra)

900004e0 <inst_89>:

inst_89:
// rs1_val==1431655765 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:0xa
TEST_CI_OP( c.addi, x10, 0x5555555f, 0x55555555, 0xa, x1, 244, x2)
900004e0:	55555537          	lui	a0,0x55555
900004e4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
900004e8:	0529                	addi	a0,a0,10
900004ea:	0ea0aa23          	sw	a0,244(ra)

900004ee <inst_90>:

inst_90:
// rs1_val==1431655765 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:0x6
TEST_CI_OP( c.addi, x10, 0x5555555b, 0x55555555, 0x6, x1, 248, x2)
900004ee:	55555537          	lui	a0,0x55555
900004f2:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
900004f6:	0519                	addi	a0,a0,6
900004f8:	0ea0ac23          	sw	a0,248(ra)

900004fc <inst_91>:

inst_91:
// rs1_val==1431655765 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x55555553, 0x55555555, -0x2, x1, 252, x2)
900004fc:	55555537          	lui	a0,0x55555
90000500:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
90000504:	1579                	addi	a0,a0,-2
90000506:	0ea0ae23          	sw	a0,252(ra)

9000050a <inst_92>:

inst_92:
// rs1_val==1431655765 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:-0x5
TEST_CI_OP( c.addi, x10, 0x55555550, 0x55555555, -0x5, x1, 256, x2)
9000050a:	55555537          	lui	a0,0x55555
9000050e:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
90000512:	156d                	addi	a0,a0,-5
90000514:	10a0a023          	sw	a0,256(ra)

90000518 <inst_93>:

inst_93:
// rs1_val==1431655765 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:0x2
TEST_CI_OP( c.addi, x10, 0x55555557, 0x55555555, 0x2, x1, 260, x2)
90000518:	55555537          	lui	a0,0x55555
9000051c:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
90000520:	0509                	addi	a0,a0,2
90000522:	10a0a223          	sw	a0,260(ra)

90000526 <inst_94>:

inst_94:
// rs1_val==1431655765 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:0x9
TEST_CI_OP( c.addi, x10, 0x5555555e, 0x55555555, 0x9, x1, 264, x2)
90000526:	55555537          	lui	a0,0x55555
9000052a:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
9000052e:	0525                	addi	a0,a0,9
90000530:	10a0a423          	sw	a0,264(ra)

90000534 <inst_95>:

inst_95:
// rs1_val==1431655765 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:0x0
TEST_CI_OP( c.addi, x10, 0x55555555, 0x55555555, 0x0, x1, 268, x2)
90000534:	55555537          	lui	a0,0x55555
90000538:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
9000053c:	0501                	addi	a0,a0,0
9000053e:	10a0a623          	sw	a0,268(ra)

90000542 <inst_96>:

inst_96:
// rs1_val==1431655765 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:0xb
TEST_CI_OP( c.addi, x10, 0x55555560, 0x55555555, 0xb, x1, 272, x2)
90000542:	55555537          	lui	a0,0x55555
90000546:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
9000054a:	052d                	addi	a0,a0,11
9000054c:	10a0a823          	sw	a0,272(ra)

90000550 <inst_97>:

inst_97:
// rs1_val==1431655765 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:0x7
TEST_CI_OP( c.addi, x10, 0x5555555c, 0x55555555, 0x7, x1, 276, x2)
90000550:	55555537          	lui	a0,0x55555
90000554:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
90000558:	051d                	addi	a0,a0,7
9000055a:	10a0aa23          	sw	a0,276(ra)

9000055e <inst_98>:

inst_98:
// rs1_val==1431655765 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x55555554, 0x55555555, -0x1, x1, 280, x2)
9000055e:	55555537          	lui	a0,0x55555
90000562:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
90000566:	157d                	addi	a0,a0,-1
90000568:	10a0ac23          	sw	a0,280(ra)

9000056c <inst_99>:

inst_99:
// rs1_val==1431655765 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555555; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x55555551, 0x55555555, -0x4, x1, 284, x2)
9000056c:	55555537          	lui	a0,0x55555
90000570:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55554fe9>
90000574:	1571                	addi	a0,a0,-4
90000576:	10a0ae23          	sw	a0,284(ra)

9000057a <inst_100>:

inst_100:
// rs1_val==-1431655766 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:0x3
TEST_CI_OP( c.addi, x10, 0xaaaaaaad, -0x55555556, 0x3, x1, 288, x2)
9000057a:	aaaab537          	lui	a0,0xaaaab
9000057e:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
90000582:	050d                	addi	a0,a0,3
90000584:	12a0a023          	sw	a0,288(ra)

90000588 <inst_101>:

inst_101:
// rs1_val==-1431655766 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:0x5
TEST_CI_OP( c.addi, x10, 0xaaaaaaaf, -0x55555556, 0x5, x1, 292, x2)
90000588:	aaaab537          	lui	a0,0xaaaab
9000058c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
90000590:	0515                	addi	a0,a0,5
90000592:	12a0a223          	sw	a0,292(ra)

90000596 <inst_102>:

inst_102:
// rs1_val==-1431655766 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:0xa
TEST_CI_OP( c.addi, x10, 0xaaaaaab4, -0x55555556, 0xa, x1, 296, x2)
90000596:	aaaab537          	lui	a0,0xaaaab
9000059a:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
9000059e:	0529                	addi	a0,a0,10
900005a0:	12a0a423          	sw	a0,296(ra)

900005a4 <inst_103>:

inst_103:
// rs1_val==-1431655766 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:0x6
TEST_CI_OP( c.addi, x10, 0xaaaaaab0, -0x55555556, 0x6, x1, 300, x2)
900005a4:	aaaab537          	lui	a0,0xaaaab
900005a8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
900005ac:	0519                	addi	a0,a0,6
900005ae:	12a0a623          	sw	a0,300(ra)

900005b2 <inst_104>:

inst_104:
// rs1_val==-1431655766 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xaaaaaaa5, -0x55555556, -0x5, x1, 304, x2)
900005b2:	aaaab537          	lui	a0,0xaaaab
900005b6:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
900005ba:	156d                	addi	a0,a0,-5
900005bc:	12a0a823          	sw	a0,304(ra)

900005c0 <inst_105>:

inst_105:
// rs1_val==-1431655766 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:0x2
TEST_CI_OP( c.addi, x10, 0xaaaaaaac, -0x55555556, 0x2, x1, 308, x2)
900005c0:	aaaab537          	lui	a0,0xaaaab
900005c4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
900005c8:	0509                	addi	a0,a0,2
900005ca:	12a0aa23          	sw	a0,308(ra)

900005ce <inst_106>:

inst_106:
// rs1_val==-1431655766 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:0x4
TEST_CI_OP( c.addi, x10, 0xaaaaaaae, -0x55555556, 0x4, x1, 312, x2)
900005ce:	aaaab537          	lui	a0,0xaaaab
900005d2:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
900005d6:	0511                	addi	a0,a0,4
900005d8:	12a0ac23          	sw	a0,312(ra)

900005dc <inst_107>:

inst_107:
// rs1_val==-1431655766 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:0x9
TEST_CI_OP( c.addi, x10, 0xaaaaaab3, -0x55555556, 0x9, x1, 316, x2)
900005dc:	aaaab537          	lui	a0,0xaaaab
900005e0:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
900005e4:	0525                	addi	a0,a0,9
900005e6:	12a0ae23          	sw	a0,316(ra)

900005ea <inst_108>:

inst_108:
// rs1_val==-1431655766 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:0x0
TEST_CI_OP( c.addi, x10, 0xaaaaaaaa, -0x55555556, 0x0, x1, 320, x2)
900005ea:	aaaab537          	lui	a0,0xaaaab
900005ee:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
900005f2:	0501                	addi	a0,a0,0
900005f4:	14a0a023          	sw	a0,320(ra)

900005f8 <inst_109>:

inst_109:
// rs1_val==-1431655766 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:0xb
TEST_CI_OP( c.addi, x10, 0xaaaaaab5, -0x55555556, 0xb, x1, 324, x2)
900005f8:	aaaab537          	lui	a0,0xaaaab
900005fc:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
90000600:	052d                	addi	a0,a0,11
90000602:	14a0a223          	sw	a0,324(ra)

90000606 <inst_110>:

inst_110:
// rs1_val==-1431655766 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:0x7
TEST_CI_OP( c.addi, x10, 0xaaaaaab1, -0x55555556, 0x7, x1, 328, x2)
90000606:	aaaab537          	lui	a0,0xaaaab
9000060a:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
9000060e:	051d                	addi	a0,a0,7
90000610:	14a0a423          	sw	a0,328(ra)

90000614 <inst_111>:

inst_111:
// rs1_val==-1431655766 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:-0x1
TEST_CI_OP( c.addi, x10, 0xaaaaaaa9, -0x55555556, -0x1, x1, 332, x2)
90000614:	aaaab537          	lui	a0,0xaaaab
90000618:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
9000061c:	157d                	addi	a0,a0,-1
9000061e:	14a0a623          	sw	a0,332(ra)

90000622 <inst_112>:

inst_112:
// rs1_val==-1431655766 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555556; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xaaaaaaa6, -0x55555556, -0x4, x1, 336, x2)
90000622:	aaaab537          	lui	a0,0xaaaab
90000626:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa73a6>
9000062a:	1571                	addi	a0,a0,-4
9000062c:	14a0a823          	sw	a0,336(ra)

90000630 <inst_113>:

inst_113:
// rs1_val==5 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:0x3
TEST_CI_OP( c.addi, x10, 0x8, 0x5, 0x3, x1, 340, x2)
90000630:	00500513          	li	a0,5
90000634:	050d                	addi	a0,a0,3
90000636:	14a0aa23          	sw	a0,340(ra)

9000063a <inst_114>:

inst_114:
// rs1_val==5 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:0x5
TEST_CI_OP( c.addi, x10, 0xa, 0x5, 0x5, x1, 344, x2)
9000063a:	00500513          	li	a0,5
9000063e:	0515                	addi	a0,a0,5
90000640:	14a0ac23          	sw	a0,344(ra)

90000644 <inst_115>:

inst_115:
// rs1_val==5 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:0xa
TEST_CI_OP( c.addi, x10, 0xf, 0x5, 0xa, x1, 348, x2)
90000644:	00500513          	li	a0,5
90000648:	0529                	addi	a0,a0,10
9000064a:	14a0ae23          	sw	a0,348(ra)

9000064e <inst_116>:

inst_116:
// rs1_val==5 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:0x6
TEST_CI_OP( c.addi, x10, 0xb, 0x5, 0x6, x1, 352, x2)
9000064e:	00500513          	li	a0,5
90000652:	0519                	addi	a0,a0,6
90000654:	16a0a023          	sw	a0,352(ra)

90000658 <inst_117>:

inst_117:
// rs1_val==5 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x3, 0x5, -0x2, x1, 356, x2)
90000658:	00500513          	li	a0,5
9000065c:	1579                	addi	a0,a0,-2
9000065e:	16a0a223          	sw	a0,356(ra)

90000662 <inst_118>:

inst_118:
// rs1_val==5 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:-0x5
TEST_CI_OP( c.addi, x10, 0x0, 0x5, -0x5, x1, 360, x2)
90000662:	00500513          	li	a0,5
90000666:	156d                	addi	a0,a0,-5
90000668:	16a0a423          	sw	a0,360(ra)

9000066c <inst_119>:

inst_119:
// rs1_val==5 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:0x2
TEST_CI_OP( c.addi, x10, 0x7, 0x5, 0x2, x1, 364, x2)
9000066c:	00500513          	li	a0,5
90000670:	0509                	addi	a0,a0,2
90000672:	16a0a623          	sw	a0,364(ra)

90000676 <inst_120>:

inst_120:
// rs1_val==5 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:0x4
TEST_CI_OP( c.addi, x10, 0x9, 0x5, 0x4, x1, 368, x2)
90000676:	00500513          	li	a0,5
9000067a:	0511                	addi	a0,a0,4
9000067c:	16a0a823          	sw	a0,368(ra)

90000680 <inst_121>:

inst_121:
// rs1_val==5 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:0x9
TEST_CI_OP( c.addi, x10, 0xe, 0x5, 0x9, x1, 372, x2)
90000680:	00500513          	li	a0,5
90000684:	0525                	addi	a0,a0,9
90000686:	16a0aa23          	sw	a0,372(ra)

9000068a <inst_122>:

inst_122:
// rs1_val==5 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:0x0
TEST_CI_OP( c.addi, x10, 0x5, 0x5, 0x0, x1, 376, x2)
9000068a:	00500513          	li	a0,5
9000068e:	0501                	addi	a0,a0,0
90000690:	16a0ac23          	sw	a0,376(ra)

90000694 <inst_123>:

inst_123:
// rs1_val==5 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:0xb
TEST_CI_OP( c.addi, x10, 0x10, 0x5, 0xb, x1, 380, x2)
90000694:	00500513          	li	a0,5
90000698:	052d                	addi	a0,a0,11
9000069a:	16a0ae23          	sw	a0,380(ra)

9000069e <inst_124>:

inst_124:
// rs1_val==5 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:0x7
TEST_CI_OP( c.addi, x10, 0xc, 0x5, 0x7, x1, 384, x2)
9000069e:	00500513          	li	a0,5
900006a2:	051d                	addi	a0,a0,7
900006a4:	18a0a023          	sw	a0,384(ra)

900006a8 <inst_125>:

inst_125:
// rs1_val==5 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x4, 0x5, -0x1, x1, 388, x2)
900006a8:	00500513          	li	a0,5
900006ac:	157d                	addi	a0,a0,-1
900006ae:	18a0a223          	sw	a0,388(ra)

900006b2 <inst_126>:

inst_126:
// rs1_val==5 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x5; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x1, 0x5, -0x4, x1, 392, x2)
900006b2:	00500513          	li	a0,5
900006b6:	1571                	addi	a0,a0,-4
900006b8:	18a0a423          	sw	a0,392(ra)

900006bc <inst_127>:

inst_127:
// rs1_val==858993459 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:0x3
TEST_CI_OP( c.addi, x10, 0x33333336, 0x33333333, 0x3, x1, 396, x2)
900006bc:	33333537          	lui	a0,0x33333
900006c0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
900006c4:	050d                	addi	a0,a0,3
900006c6:	18a0a623          	sw	a0,396(ra)

900006ca <inst_128>:

inst_128:
// rs1_val==858993459 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:0x5
TEST_CI_OP( c.addi, x10, 0x33333338, 0x33333333, 0x5, x1, 400, x2)
900006ca:	33333537          	lui	a0,0x33333
900006ce:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
900006d2:	0515                	addi	a0,a0,5
900006d4:	18a0a823          	sw	a0,400(ra)

900006d8 <inst_129>:

inst_129:
// rs1_val==858993459 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:0xa
TEST_CI_OP( c.addi, x10, 0x3333333d, 0x33333333, 0xa, x1, 404, x2)
900006d8:	33333537          	lui	a0,0x33333
900006dc:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
900006e0:	0529                	addi	a0,a0,10
900006e2:	18a0aa23          	sw	a0,404(ra)

900006e6 <inst_130>:

inst_130:
// rs1_val==858993459 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:0x6
TEST_CI_OP( c.addi, x10, 0x33333339, 0x33333333, 0x6, x1, 408, x2)
900006e6:	33333537          	lui	a0,0x33333
900006ea:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
900006ee:	0519                	addi	a0,a0,6
900006f0:	18a0ac23          	sw	a0,408(ra)

900006f4 <inst_131>:

inst_131:
// rs1_val==858993459 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x33333331, 0x33333333, -0x2, x1, 412, x2)
900006f4:	33333537          	lui	a0,0x33333
900006f8:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
900006fc:	1579                	addi	a0,a0,-2
900006fe:	18a0ae23          	sw	a0,412(ra)

90000702 <inst_132>:

inst_132:
// rs1_val==858993459 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:-0x5
TEST_CI_OP( c.addi, x10, 0x3333332e, 0x33333333, -0x5, x1, 416, x2)
90000702:	33333537          	lui	a0,0x33333
90000706:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
9000070a:	156d                	addi	a0,a0,-5
9000070c:	1aa0a023          	sw	a0,416(ra)

90000710 <inst_133>:

inst_133:
// rs1_val==858993459 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:0x2
TEST_CI_OP( c.addi, x10, 0x33333335, 0x33333333, 0x2, x1, 420, x2)
90000710:	33333537          	lui	a0,0x33333
90000714:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
90000718:	0509                	addi	a0,a0,2
9000071a:	1aa0a223          	sw	a0,420(ra)

9000071e <inst_134>:

inst_134:
// rs1_val==858993459 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:0x4
TEST_CI_OP( c.addi, x10, 0x33333337, 0x33333333, 0x4, x1, 424, x2)
9000071e:	33333537          	lui	a0,0x33333
90000722:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
90000726:	0511                	addi	a0,a0,4
90000728:	1aa0a423          	sw	a0,424(ra)

9000072c <inst_135>:

inst_135:
// rs1_val==858993459 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:0x9
TEST_CI_OP( c.addi, x10, 0x3333333c, 0x33333333, 0x9, x1, 428, x2)
9000072c:	33333537          	lui	a0,0x33333
90000730:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
90000734:	0525                	addi	a0,a0,9
90000736:	1aa0a623          	sw	a0,428(ra)

9000073a <inst_136>:

inst_136:
// rs1_val==858993459 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:0x0
TEST_CI_OP( c.addi, x10, 0x33333333, 0x33333333, 0x0, x1, 432, x2)
9000073a:	33333537          	lui	a0,0x33333
9000073e:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
90000742:	0501                	addi	a0,a0,0
90000744:	1aa0a823          	sw	a0,432(ra)

90000748 <inst_137>:

inst_137:
// rs1_val==858993459 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:0xb
TEST_CI_OP( c.addi, x10, 0x3333333e, 0x33333333, 0xb, x1, 436, x2)
90000748:	33333537          	lui	a0,0x33333
9000074c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
90000750:	052d                	addi	a0,a0,11
90000752:	1aa0aa23          	sw	a0,436(ra)

90000756 <inst_138>:

inst_138:
// rs1_val==858993459 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:0x7
TEST_CI_OP( c.addi, x10, 0x3333333a, 0x33333333, 0x7, x1, 440, x2)
90000756:	33333537          	lui	a0,0x33333
9000075a:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
9000075e:	051d                	addi	a0,a0,7
90000760:	1aa0ac23          	sw	a0,440(ra)

90000764 <inst_139>:

inst_139:
// rs1_val==858993459 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x33333332, 0x33333333, -0x1, x1, 444, x2)
90000764:	33333537          	lui	a0,0x33333
90000768:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
9000076c:	157d                	addi	a0,a0,-1
9000076e:	1aa0ae23          	sw	a0,444(ra)

90000772 <inst_140>:

inst_140:
// rs1_val==858993459 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333333; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x3333332f, 0x33333333, -0x4, x1, 448, x2)
90000772:	33333537          	lui	a0,0x33333
90000776:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33332dc7>
9000077a:	1571                	addi	a0,a0,-4
9000077c:	1ca0a023          	sw	a0,448(ra)

90000780 <inst_141>:

inst_141:
// rs1_val==1717986918 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:0x3
TEST_CI_OP( c.addi, x10, 0x66666669, 0x66666666, 0x3, x1, 452, x2)
90000780:	66666537          	lui	a0,0x66666
90000784:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
90000788:	050d                	addi	a0,a0,3
9000078a:	1ca0a223          	sw	a0,452(ra)

9000078e <inst_142>:

inst_142:
// rs1_val==1717986918 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:0x5
TEST_CI_OP( c.addi, x10, 0x6666666b, 0x66666666, 0x5, x1, 456, x2)
9000078e:	66666537          	lui	a0,0x66666
90000792:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
90000796:	0515                	addi	a0,a0,5
90000798:	1ca0a423          	sw	a0,456(ra)

9000079c <inst_143>:

inst_143:
// rs1_val==1717986918 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:0xa
TEST_CI_OP( c.addi, x10, 0x66666670, 0x66666666, 0xa, x1, 460, x2)
9000079c:	66666537          	lui	a0,0x66666
900007a0:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
900007a4:	0529                	addi	a0,a0,10
900007a6:	1ca0a623          	sw	a0,460(ra)

900007aa <inst_144>:

inst_144:
// rs1_val==1717986918 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:0x6
TEST_CI_OP( c.addi, x10, 0x6666666c, 0x66666666, 0x6, x1, 464, x2)
900007aa:	66666537          	lui	a0,0x66666
900007ae:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
900007b2:	0519                	addi	a0,a0,6
900007b4:	1ca0a823          	sw	a0,464(ra)

900007b8 <inst_145>:

inst_145:
// rs1_val==1717986918 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x66666664, 0x66666666, -0x2, x1, 468, x2)
900007b8:	66666537          	lui	a0,0x66666
900007bc:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
900007c0:	1579                	addi	a0,a0,-2
900007c2:	1ca0aa23          	sw	a0,468(ra)

900007c6 <inst_146>:

inst_146:
// rs1_val==1717986918 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:-0x5
TEST_CI_OP( c.addi, x10, 0x66666661, 0x66666666, -0x5, x1, 472, x2)
900007c6:	66666537          	lui	a0,0x66666
900007ca:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
900007ce:	156d                	addi	a0,a0,-5
900007d0:	1ca0ac23          	sw	a0,472(ra)

900007d4 <inst_147>:

inst_147:
// rs1_val==1717986918 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:0x4
TEST_CI_OP( c.addi, x10, 0x6666666a, 0x66666666, 0x4, x1, 476, x2)
900007d4:	66666537          	lui	a0,0x66666
900007d8:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
900007dc:	0511                	addi	a0,a0,4
900007de:	1ca0ae23          	sw	a0,476(ra)

900007e2 <inst_148>:

inst_148:
// rs1_val==1717986918 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:0x9
TEST_CI_OP( c.addi, x10, 0x6666666f, 0x66666666, 0x9, x1, 480, x2)
900007e2:	66666537          	lui	a0,0x66666
900007e6:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
900007ea:	0525                	addi	a0,a0,9
900007ec:	1ea0a023          	sw	a0,480(ra)

900007f0 <inst_149>:

inst_149:
// rs1_val==1717986918 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:0x0
TEST_CI_OP( c.addi, x10, 0x66666666, 0x66666666, 0x0, x1, 484, x2)
900007f0:	66666537          	lui	a0,0x66666
900007f4:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
900007f8:	0501                	addi	a0,a0,0
900007fa:	1ea0a223          	sw	a0,484(ra)

900007fe <inst_150>:

inst_150:
// rs1_val==1717986918 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:0xb
TEST_CI_OP( c.addi, x10, 0x66666671, 0x66666666, 0xb, x1, 488, x2)
900007fe:	66666537          	lui	a0,0x66666
90000802:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
90000806:	052d                	addi	a0,a0,11
90000808:	1ea0a423          	sw	a0,488(ra)

9000080c <inst_151>:

inst_151:
// rs1_val==1717986918 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:0x7
TEST_CI_OP( c.addi, x10, 0x6666666d, 0x66666666, 0x7, x1, 492, x2)
9000080c:	66666537          	lui	a0,0x66666
90000810:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
90000814:	051d                	addi	a0,a0,7
90000816:	1ea0a623          	sw	a0,492(ra)

9000081a <inst_152>:

inst_152:
// rs1_val==1717986918 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x66666665, 0x66666666, -0x1, x1, 496, x2)
9000081a:	66666537          	lui	a0,0x66666
9000081e:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
90000822:	157d                	addi	a0,a0,-1
90000824:	1ea0a823          	sw	a0,496(ra)

90000828 <inst_153>:

inst_153:
// rs1_val==1717986918 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666666; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x66666662, 0x66666666, -0x4, x1, 500, x2)
90000828:	66666537          	lui	a0,0x66666
9000082c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x666660fa>
90000830:	1571                	addi	a0,a0,-4
90000832:	1ea0aa23          	sw	a0,500(ra)

90000836 <inst_154>:

inst_154:
// rs1_val==-46340 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:0x3
TEST_CI_OP( c.addi, x10, 0xffff4aff, -0xb504, 0x3, x1, 504, x2)
90000836:	ffff5537          	lui	a0,0xffff5
9000083a:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
9000083e:	050d                	addi	a0,a0,3
90000840:	1ea0ac23          	sw	a0,504(ra)

90000844 <inst_155>:

inst_155:
// rs1_val==-46340 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:0x5
TEST_CI_OP( c.addi, x10, 0xffff4b01, -0xb504, 0x5, x1, 508, x2)
90000844:	ffff5537          	lui	a0,0xffff5
90000848:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
9000084c:	0515                	addi	a0,a0,5
9000084e:	1ea0ae23          	sw	a0,508(ra)

90000852 <inst_156>:

inst_156:
// rs1_val==-46340 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:0xa
TEST_CI_OP( c.addi, x10, 0xffff4b06, -0xb504, 0xa, x1, 512, x2)
90000852:	ffff5537          	lui	a0,0xffff5
90000856:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
9000085a:	0529                	addi	a0,a0,10
9000085c:	20a0a023          	sw	a0,512(ra)

90000860 <inst_157>:

inst_157:
// rs1_val==-46340 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:0x6
TEST_CI_OP( c.addi, x10, 0xffff4b02, -0xb504, 0x6, x1, 516, x2)
90000860:	ffff5537          	lui	a0,0xffff5
90000864:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
90000868:	0519                	addi	a0,a0,6
9000086a:	20a0a223          	sw	a0,516(ra)

9000086e <inst_158>:

inst_158:
// rs1_val==-46340 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:-0x2
TEST_CI_OP( c.addi, x10, 0xffff4afa, -0xb504, -0x2, x1, 520, x2)
9000086e:	ffff5537          	lui	a0,0xffff5
90000872:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
90000876:	1579                	addi	a0,a0,-2
90000878:	20a0a423          	sw	a0,520(ra)

9000087c <inst_159>:

inst_159:
// rs1_val==-46340 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xffff4af7, -0xb504, -0x5, x1, 524, x2)
9000087c:	ffff5537          	lui	a0,0xffff5
90000880:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
90000884:	156d                	addi	a0,a0,-5
90000886:	20a0a623          	sw	a0,524(ra)

9000088a <inst_160>:

inst_160:
// rs1_val==-46340 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:0x2
TEST_CI_OP( c.addi, x10, 0xffff4afe, -0xb504, 0x2, x1, 528, x2)
9000088a:	ffff5537          	lui	a0,0xffff5
9000088e:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
90000892:	0509                	addi	a0,a0,2
90000894:	20a0a823          	sw	a0,528(ra)

90000898 <inst_161>:

inst_161:
// rs1_val==-46340 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:0x4
TEST_CI_OP( c.addi, x10, 0xffff4b00, -0xb504, 0x4, x1, 532, x2)
90000898:	ffff5537          	lui	a0,0xffff5
9000089c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
900008a0:	0511                	addi	a0,a0,4
900008a2:	20a0aa23          	sw	a0,532(ra)

900008a6 <inst_162>:

inst_162:
// rs1_val==-46340 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:0x9
TEST_CI_OP( c.addi, x10, 0xffff4b05, -0xb504, 0x9, x1, 536, x2)
900008a6:	ffff5537          	lui	a0,0xffff5
900008aa:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
900008ae:	0525                	addi	a0,a0,9
900008b0:	20a0ac23          	sw	a0,536(ra)

900008b4 <inst_163>:

inst_163:
// rs1_val==-46340 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:0x0
TEST_CI_OP( c.addi, x10, 0xffff4afc, -0xb504, 0x0, x1, 540, x2)
900008b4:	ffff5537          	lui	a0,0xffff5
900008b8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
900008bc:	0501                	addi	a0,a0,0
900008be:	20a0ae23          	sw	a0,540(ra)

900008c2 <inst_164>:

inst_164:
// rs1_val==-46340 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:0xb
TEST_CI_OP( c.addi, x10, 0xffff4b07, -0xb504, 0xb, x1, 544, x2)
900008c2:	ffff5537          	lui	a0,0xffff5
900008c6:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
900008ca:	052d                	addi	a0,a0,11
900008cc:	22a0a023          	sw	a0,544(ra)

900008d0 <inst_165>:

inst_165:
// rs1_val==-46340 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:0x7
TEST_CI_OP( c.addi, x10, 0xffff4b03, -0xb504, 0x7, x1, 548, x2)
900008d0:	ffff5537          	lui	a0,0xffff5
900008d4:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
900008d8:	051d                	addi	a0,a0,7
900008da:	22a0a223          	sw	a0,548(ra)

900008de <inst_166>:

inst_166:
// rs1_val==-46340 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:-0x1
TEST_CI_OP( c.addi, x10, 0xffff4afb, -0xb504, -0x1, x1, 552, x2)
900008de:	ffff5537          	lui	a0,0xffff5
900008e2:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
900008e6:	157d                	addi	a0,a0,-1
900008e8:	22a0a423          	sw	a0,552(ra)

900008ec <inst_167>:

inst_167:
// rs1_val==-46340 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb504; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xffff4af8, -0xb504, -0x4, x1, 556, x2)
900008ec:	ffff5537          	lui	a0,0xffff5
900008f0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff13f8>
900008f4:	1571                	addi	a0,a0,-4
900008f6:	22a0a623          	sw	a0,556(ra)

900008fa <inst_168>:

inst_168:
// rs1_val==46340 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:0x3
TEST_CI_OP( c.addi, x10, 0xb507, 0xb504, 0x3, x1, 560, x2)
900008fa:	0000b537          	lui	a0,0xb
900008fe:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
90000902:	050d                	addi	a0,a0,3
90000904:	22a0a823          	sw	a0,560(ra)

90000908 <inst_169>:

inst_169:
// rs1_val==46340 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:0x5
TEST_CI_OP( c.addi, x10, 0xb509, 0xb504, 0x5, x1, 564, x2)
90000908:	0000b537          	lui	a0,0xb
9000090c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
90000910:	0515                	addi	a0,a0,5
90000912:	22a0aa23          	sw	a0,564(ra)

90000916 <inst_170>:

inst_170:
// rs1_val==46340 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:0xa
TEST_CI_OP( c.addi, x10, 0xb50e, 0xb504, 0xa, x1, 568, x2)
90000916:	0000b537          	lui	a0,0xb
9000091a:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
9000091e:	0529                	addi	a0,a0,10
90000920:	22a0ac23          	sw	a0,568(ra)

90000924 <inst_171>:

inst_171:
// rs1_val==46340 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:0x6
TEST_CI_OP( c.addi, x10, 0xb50a, 0xb504, 0x6, x1, 572, x2)
90000924:	0000b537          	lui	a0,0xb
90000928:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
9000092c:	0519                	addi	a0,a0,6
9000092e:	22a0ae23          	sw	a0,572(ra)

90000932 <inst_172>:

inst_172:
// rs1_val==46340 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:-0x2
TEST_CI_OP( c.addi, x10, 0xb502, 0xb504, -0x2, x1, 576, x2)
90000932:	0000b537          	lui	a0,0xb
90000936:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
9000093a:	1579                	addi	a0,a0,-2
9000093c:	24a0a023          	sw	a0,576(ra)

90000940 <inst_173>:

inst_173:
// rs1_val==46340 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xb4ff, 0xb504, -0x5, x1, 580, x2)
90000940:	0000b537          	lui	a0,0xb
90000944:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
90000948:	156d                	addi	a0,a0,-5
9000094a:	24a0a223          	sw	a0,580(ra)

9000094e <inst_174>:

inst_174:
// rs1_val==46340 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:0x2
TEST_CI_OP( c.addi, x10, 0xb506, 0xb504, 0x2, x1, 584, x2)
9000094e:	0000b537          	lui	a0,0xb
90000952:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
90000956:	0509                	addi	a0,a0,2
90000958:	24a0a423          	sw	a0,584(ra)

9000095c <inst_175>:

inst_175:
// rs1_val==46340 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:0x4
TEST_CI_OP( c.addi, x10, 0xb508, 0xb504, 0x4, x1, 588, x2)
9000095c:	0000b537          	lui	a0,0xb
90000960:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
90000964:	0511                	addi	a0,a0,4
90000966:	24a0a623          	sw	a0,588(ra)

9000096a <inst_176>:

inst_176:
// rs1_val==46340 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:0x9
TEST_CI_OP( c.addi, x10, 0xb50d, 0xb504, 0x9, x1, 592, x2)
9000096a:	0000b537          	lui	a0,0xb
9000096e:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
90000972:	0525                	addi	a0,a0,9
90000974:	24a0a823          	sw	a0,592(ra)

90000978 <inst_177>:

inst_177:
// rs1_val==46340 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:0x0
TEST_CI_OP( c.addi, x10, 0xb504, 0xb504, 0x0, x1, 596, x2)
90000978:	0000b537          	lui	a0,0xb
9000097c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
90000980:	0501                	addi	a0,a0,0
90000982:	24a0aa23          	sw	a0,596(ra)

90000986 <inst_178>:

inst_178:
// rs1_val==46340 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:0xb
TEST_CI_OP( c.addi, x10, 0xb50f, 0xb504, 0xb, x1, 600, x2)
90000986:	0000b537          	lui	a0,0xb
9000098a:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
9000098e:	052d                	addi	a0,a0,11
90000990:	24a0ac23          	sw	a0,600(ra)

90000994 <inst_179>:

inst_179:
// rs1_val==46340 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:0x7
TEST_CI_OP( c.addi, x10, 0xb50b, 0xb504, 0x7, x1, 604, x2)
90000994:	0000b537          	lui	a0,0xb
90000998:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
9000099c:	051d                	addi	a0,a0,7
9000099e:	24a0ae23          	sw	a0,604(ra)

900009a2 <inst_180>:

inst_180:
// rs1_val==46340 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:-0x1
TEST_CI_OP( c.addi, x10, 0xb503, 0xb504, -0x1, x1, 608, x2)
900009a2:	0000b537          	lui	a0,0xb
900009a6:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
900009aa:	157d                	addi	a0,a0,-1
900009ac:	26a0a023          	sw	a0,608(ra)

900009b0 <inst_181>:

inst_181:
// rs1_val==46340 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb504; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xb500, 0xb504, -0x4, x1, 612, x2)
900009b0:	0000b537          	lui	a0,0xb
900009b4:	50450513          	addi	a0,a0,1284 # b504 <offset+0xaf98>
900009b8:	1571                	addi	a0,a0,-4
900009ba:	26a0a223          	sw	a0,612(ra)

900009be <inst_182>:

inst_182:
// rs1_val==2 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:0x3
TEST_CI_OP( c.addi, x10, 0x5, 0x2, 0x3, x1, 616, x2)
900009be:	00200513          	li	a0,2
900009c2:	050d                	addi	a0,a0,3
900009c4:	26a0a423          	sw	a0,616(ra)

900009c8 <inst_183>:

inst_183:
// rs1_val==2 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:0x5
TEST_CI_OP( c.addi, x10, 0x7, 0x2, 0x5, x1, 620, x2)
900009c8:	00200513          	li	a0,2
900009cc:	0515                	addi	a0,a0,5
900009ce:	26a0a623          	sw	a0,620(ra)

900009d2 <inst_184>:

inst_184:
// rs1_val==2 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:0xa
TEST_CI_OP( c.addi, x10, 0xc, 0x2, 0xa, x1, 624, x2)
900009d2:	00200513          	li	a0,2
900009d6:	0529                	addi	a0,a0,10
900009d8:	26a0a823          	sw	a0,624(ra)

900009dc <inst_185>:

inst_185:
// rs1_val==2 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:0x6
TEST_CI_OP( c.addi, x10, 0x8, 0x2, 0x6, x1, 628, x2)
900009dc:	00200513          	li	a0,2
900009e0:	0519                	addi	a0,a0,6
900009e2:	26a0aa23          	sw	a0,628(ra)

900009e6 <inst_186>:

inst_186:
// rs1_val==2 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x0, 0x2, -0x2, x1, 632, x2)
900009e6:	00200513          	li	a0,2
900009ea:	1579                	addi	a0,a0,-2
900009ec:	26a0ac23          	sw	a0,632(ra)

900009f0 <inst_187>:

inst_187:
// rs1_val==2 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xfffffffd, 0x2, -0x5, x1, 636, x2)
900009f0:	00200513          	li	a0,2
900009f4:	156d                	addi	a0,a0,-5
900009f6:	26a0ae23          	sw	a0,636(ra)

900009fa <inst_188>:

inst_188:
// rs1_val==2 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:0x4
TEST_CI_OP( c.addi, x10, 0x6, 0x2, 0x4, x1, 640, x2)
900009fa:	00200513          	li	a0,2
900009fe:	0511                	addi	a0,a0,4
90000a00:	28a0a023          	sw	a0,640(ra)

90000a04 <inst_189>:

inst_189:
// rs1_val==2 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:0x9
TEST_CI_OP( c.addi, x10, 0xb, 0x2, 0x9, x1, 644, x2)
90000a04:	00200513          	li	a0,2
90000a08:	0525                	addi	a0,a0,9
90000a0a:	28a0a223          	sw	a0,644(ra)

90000a0e <inst_190>:

inst_190:
// rs1_val==2 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:0x0
TEST_CI_OP( c.addi, x10, 0x2, 0x2, 0x0, x1, 648, x2)
90000a0e:	00200513          	li	a0,2
90000a12:	0501                	addi	a0,a0,0
90000a14:	28a0a423          	sw	a0,648(ra)

90000a18 <inst_191>:

inst_191:
// rs1_val==2 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:0xb
TEST_CI_OP( c.addi, x10, 0xd, 0x2, 0xb, x1, 652, x2)
90000a18:	00200513          	li	a0,2
90000a1c:	052d                	addi	a0,a0,11
90000a1e:	28a0a623          	sw	a0,652(ra)

90000a22 <inst_192>:

inst_192:
// rs1_val==2 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:0x7
TEST_CI_OP( c.addi, x10, 0x9, 0x2, 0x7, x1, 656, x2)
90000a22:	00200513          	li	a0,2
90000a26:	051d                	addi	a0,a0,7
90000a28:	28a0a823          	sw	a0,656(ra)

90000a2c <inst_193>:

inst_193:
// rs1_val==2 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x1, 0x2, -0x1, x1, 660, x2)
90000a2c:	00200513          	li	a0,2
90000a30:	157d                	addi	a0,a0,-1
90000a32:	28a0aa23          	sw	a0,660(ra)

90000a36 <inst_194>:

inst_194:
// rs1_val==2 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x2; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xfffffffe, 0x2, -0x4, x1, 664, x2)
90000a36:	00200513          	li	a0,2
90000a3a:	1571                	addi	a0,a0,-4
90000a3c:	28a0ac23          	sw	a0,664(ra)

90000a40 <inst_195>:

inst_195:
// rs1_val==1431655764 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:0x3
TEST_CI_OP( c.addi, x10, 0x55555557, 0x55555554, 0x3, x1, 668, x2)
90000a40:	55555537          	lui	a0,0x55555
90000a44:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000a48:	050d                	addi	a0,a0,3
90000a4a:	28a0ae23          	sw	a0,668(ra)

90000a4e <inst_196>:

inst_196:
// rs1_val==1431655764 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:0x5
TEST_CI_OP( c.addi, x10, 0x55555559, 0x55555554, 0x5, x1, 672, x2)
90000a4e:	55555537          	lui	a0,0x55555
90000a52:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000a56:	0515                	addi	a0,a0,5
90000a58:	2aa0a023          	sw	a0,672(ra)

90000a5c <inst_197>:

inst_197:
// rs1_val==1431655764 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:0xa
TEST_CI_OP( c.addi, x10, 0x5555555e, 0x55555554, 0xa, x1, 676, x2)
90000a5c:	55555537          	lui	a0,0x55555
90000a60:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000a64:	0529                	addi	a0,a0,10
90000a66:	2aa0a223          	sw	a0,676(ra)

90000a6a <inst_198>:

inst_198:
// rs1_val==1431655764 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:0x6
TEST_CI_OP( c.addi, x10, 0x5555555a, 0x55555554, 0x6, x1, 680, x2)
90000a6a:	55555537          	lui	a0,0x55555
90000a6e:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000a72:	0519                	addi	a0,a0,6
90000a74:	2aa0a423          	sw	a0,680(ra)

90000a78 <inst_199>:

inst_199:
// rs1_val==1431655764 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x55555552, 0x55555554, -0x2, x1, 684, x2)
90000a78:	55555537          	lui	a0,0x55555
90000a7c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000a80:	1579                	addi	a0,a0,-2
90000a82:	2aa0a623          	sw	a0,684(ra)

90000a86 <inst_200>:

inst_200:
// rs1_val==1431655764 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:-0x5
TEST_CI_OP( c.addi, x10, 0x5555554f, 0x55555554, -0x5, x1, 688, x2)
90000a86:	55555537          	lui	a0,0x55555
90000a8a:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000a8e:	156d                	addi	a0,a0,-5
90000a90:	2aa0a823          	sw	a0,688(ra)

90000a94 <inst_201>:

inst_201:
// rs1_val==1431655764 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:0x2
TEST_CI_OP( c.addi, x10, 0x55555556, 0x55555554, 0x2, x1, 692, x2)
90000a94:	55555537          	lui	a0,0x55555
90000a98:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000a9c:	0509                	addi	a0,a0,2
90000a9e:	2aa0aa23          	sw	a0,692(ra)

90000aa2 <inst_202>:

inst_202:
// rs1_val==1431655764 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:0x4
TEST_CI_OP( c.addi, x10, 0x55555558, 0x55555554, 0x4, x1, 696, x2)
90000aa2:	55555537          	lui	a0,0x55555
90000aa6:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000aaa:	0511                	addi	a0,a0,4
90000aac:	2aa0ac23          	sw	a0,696(ra)

90000ab0 <inst_203>:

inst_203:
// rs1_val==1431655764 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:0x9
TEST_CI_OP( c.addi, x10, 0x5555555d, 0x55555554, 0x9, x1, 700, x2)
90000ab0:	55555537          	lui	a0,0x55555
90000ab4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000ab8:	0525                	addi	a0,a0,9
90000aba:	2aa0ae23          	sw	a0,700(ra)

90000abe <inst_204>:

inst_204:
// rs1_val==1431655764 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:0x0
TEST_CI_OP( c.addi, x10, 0x55555554, 0x55555554, 0x0, x1, 704, x2)
90000abe:	55555537          	lui	a0,0x55555
90000ac2:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000ac6:	0501                	addi	a0,a0,0
90000ac8:	2ca0a023          	sw	a0,704(ra)

90000acc <inst_205>:

inst_205:
// rs1_val==1431655764 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:0xb
TEST_CI_OP( c.addi, x10, 0x5555555f, 0x55555554, 0xb, x1, 708, x2)
90000acc:	55555537          	lui	a0,0x55555
90000ad0:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000ad4:	052d                	addi	a0,a0,11
90000ad6:	2ca0a223          	sw	a0,708(ra)

90000ada <inst_206>:

inst_206:
// rs1_val==1431655764 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:0x7
TEST_CI_OP( c.addi, x10, 0x5555555b, 0x55555554, 0x7, x1, 712, x2)
90000ada:	55555537          	lui	a0,0x55555
90000ade:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000ae2:	051d                	addi	a0,a0,7
90000ae4:	2ca0a423          	sw	a0,712(ra)

90000ae8 <inst_207>:

inst_207:
// rs1_val==1431655764 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x55555553, 0x55555554, -0x1, x1, 716, x2)
90000ae8:	55555537          	lui	a0,0x55555
90000aec:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000af0:	157d                	addi	a0,a0,-1
90000af2:	2ca0a623          	sw	a0,716(ra)

90000af6 <inst_208>:

inst_208:
// rs1_val==1431655764 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555554; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x55555550, 0x55555554, -0x4, x1, 720, x2)
90000af6:	55555537          	lui	a0,0x55555
90000afa:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55554fe8>
90000afe:	1571                	addi	a0,a0,-4
90000b00:	2ca0a823          	sw	a0,720(ra)

90000b04 <inst_209>:

inst_209:
// rs1_val==0 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:0x3
TEST_CI_OP( c.addi, x10, 0x3, 0x0, 0x3, x1, 724, x2)
90000b04:	00000513          	li	a0,0
90000b08:	050d                	addi	a0,a0,3
90000b0a:	2ca0aa23          	sw	a0,724(ra)

90000b0e <inst_210>:

inst_210:
// rs1_val==0 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:0x5
TEST_CI_OP( c.addi, x10, 0x5, 0x0, 0x5, x1, 728, x2)
90000b0e:	00000513          	li	a0,0
90000b12:	0515                	addi	a0,a0,5
90000b14:	2ca0ac23          	sw	a0,728(ra)

90000b18 <inst_211>:

inst_211:
// rs1_val==0 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:0xa
TEST_CI_OP( c.addi, x10, 0xa, 0x0, 0xa, x1, 732, x2)
90000b18:	00000513          	li	a0,0
90000b1c:	0529                	addi	a0,a0,10
90000b1e:	2ca0ae23          	sw	a0,732(ra)

90000b22 <inst_212>:

inst_212:
// rs1_val==0 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:0x6
TEST_CI_OP( c.addi, x10, 0x6, 0x0, 0x6, x1, 736, x2)
90000b22:	00000513          	li	a0,0
90000b26:	0519                	addi	a0,a0,6
90000b28:	2ea0a023          	sw	a0,736(ra)

90000b2c <inst_213>:

inst_213:
// rs1_val==0 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:-0x2
TEST_CI_OP( c.addi, x10, 0xfffffffe, 0x0, -0x2, x1, 740, x2)
90000b2c:	00000513          	li	a0,0
90000b30:	1579                	addi	a0,a0,-2
90000b32:	2ea0a223          	sw	a0,740(ra)

90000b36 <inst_214>:

inst_214:
// rs1_val==0 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xfffffffb, 0x0, -0x5, x1, 744, x2)
90000b36:	00000513          	li	a0,0
90000b3a:	156d                	addi	a0,a0,-5
90000b3c:	2ea0a423          	sw	a0,744(ra)

90000b40 <inst_215>:

inst_215:
// rs1_val==0 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:0x2
TEST_CI_OP( c.addi, x10, 0x2, 0x0, 0x2, x1, 748, x2)
90000b40:	00000513          	li	a0,0
90000b44:	0509                	addi	a0,a0,2
90000b46:	2ea0a623          	sw	a0,748(ra)

90000b4a <inst_216>:

inst_216:
// rs1_val==0 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:0x4
TEST_CI_OP( c.addi, x10, 0x4, 0x0, 0x4, x1, 752, x2)
90000b4a:	00000513          	li	a0,0
90000b4e:	0511                	addi	a0,a0,4
90000b50:	2ea0a823          	sw	a0,752(ra)

90000b54 <inst_217>:

inst_217:
// rs1_val==0 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:0x9
TEST_CI_OP( c.addi, x10, 0x9, 0x0, 0x9, x1, 756, x2)
90000b54:	00000513          	li	a0,0
90000b58:	0525                	addi	a0,a0,9
90000b5a:	2ea0aa23          	sw	a0,756(ra)

90000b5e <inst_218>:

inst_218:
// rs1_val==0 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:0xb
TEST_CI_OP( c.addi, x10, 0xb, 0x0, 0xb, x1, 760, x2)
90000b5e:	00000513          	li	a0,0
90000b62:	052d                	addi	a0,a0,11
90000b64:	2ea0ac23          	sw	a0,760(ra)

90000b68 <inst_219>:

inst_219:
// rs1_val==0 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:0x7
TEST_CI_OP( c.addi, x10, 0x7, 0x0, 0x7, x1, 764, x2)
90000b68:	00000513          	li	a0,0
90000b6c:	051d                	addi	a0,a0,7
90000b6e:	2ea0ae23          	sw	a0,764(ra)

90000b72 <inst_220>:

inst_220:
// rs1_val==0 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:-0x1
TEST_CI_OP( c.addi, x10, 0xffffffff, 0x0, -0x1, x1, 768, x2)
90000b72:	00000513          	li	a0,0
90000b76:	157d                	addi	a0,a0,-1
90000b78:	30a0a023          	sw	a0,768(ra)

90000b7c <inst_221>:

inst_221:
// rs1_val==0 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x0; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xfffffffc, 0x0, -0x4, x1, 772, x2)
90000b7c:	00000513          	li	a0,0
90000b80:	1571                	addi	a0,a0,-4
90000b82:	30a0a223          	sw	a0,772(ra)

90000b86 <inst_222>:

inst_222:
// rs1_val==4 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:0x3
TEST_CI_OP( c.addi, x10, 0x7, 0x4, 0x3, x1, 776, x2)
90000b86:	00400513          	li	a0,4
90000b8a:	050d                	addi	a0,a0,3
90000b8c:	30a0a423          	sw	a0,776(ra)

90000b90 <inst_223>:

inst_223:
// rs1_val==4 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:0x5
TEST_CI_OP( c.addi, x10, 0x9, 0x4, 0x5, x1, 780, x2)
90000b90:	00400513          	li	a0,4
90000b94:	0515                	addi	a0,a0,5
90000b96:	30a0a623          	sw	a0,780(ra)

90000b9a <inst_224>:

inst_224:
// rs1_val==4 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:0xa
TEST_CI_OP( c.addi, x10, 0xe, 0x4, 0xa, x1, 784, x2)
90000b9a:	00400513          	li	a0,4
90000b9e:	0529                	addi	a0,a0,10
90000ba0:	30a0a823          	sw	a0,784(ra)

90000ba4 <inst_225>:

inst_225:
// rs1_val==4 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:0x6
TEST_CI_OP( c.addi, x10, 0xa, 0x4, 0x6, x1, 788, x2)
90000ba4:	00400513          	li	a0,4
90000ba8:	0519                	addi	a0,a0,6
90000baa:	30a0aa23          	sw	a0,788(ra)

90000bae <inst_226>:

inst_226:
// rs1_val==4 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x2, 0x4, -0x2, x1, 792, x2)
90000bae:	00400513          	li	a0,4
90000bb2:	1579                	addi	a0,a0,-2
90000bb4:	30a0ac23          	sw	a0,792(ra)

90000bb8 <inst_227>:

inst_227:
// rs1_val==4 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xffffffff, 0x4, -0x5, x1, 796, x2)
90000bb8:	00400513          	li	a0,4
90000bbc:	156d                	addi	a0,a0,-5
90000bbe:	30a0ae23          	sw	a0,796(ra)

90000bc2 <inst_228>:

inst_228:
// rs1_val==4 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:0x2
TEST_CI_OP( c.addi, x10, 0x6, 0x4, 0x2, x1, 800, x2)
90000bc2:	00400513          	li	a0,4
90000bc6:	0509                	addi	a0,a0,2
90000bc8:	32a0a023          	sw	a0,800(ra)

90000bcc <inst_229>:

inst_229:
// rs1_val==4 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:0x4
TEST_CI_OP( c.addi, x10, 0x8, 0x4, 0x4, x1, 804, x2)
90000bcc:	00400513          	li	a0,4
90000bd0:	0511                	addi	a0,a0,4
90000bd2:	32a0a223          	sw	a0,804(ra)

90000bd6 <inst_230>:

inst_230:
// rs1_val==4 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:0x9
TEST_CI_OP( c.addi, x10, 0xd, 0x4, 0x9, x1, 808, x2)
90000bd6:	00400513          	li	a0,4
90000bda:	0525                	addi	a0,a0,9
90000bdc:	32a0a423          	sw	a0,808(ra)

90000be0 <inst_231>:

inst_231:
// rs1_val==4 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:0xb
TEST_CI_OP( c.addi, x10, 0xf, 0x4, 0xb, x1, 812, x2)
90000be0:	00400513          	li	a0,4
90000be4:	052d                	addi	a0,a0,11
90000be6:	32a0a623          	sw	a0,812(ra)

90000bea <inst_232>:

inst_232:
// rs1_val==4 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:0x7
TEST_CI_OP( c.addi, x10, 0xb, 0x4, 0x7, x1, 816, x2)
90000bea:	00400513          	li	a0,4
90000bee:	051d                	addi	a0,a0,7
90000bf0:	32a0a823          	sw	a0,816(ra)

90000bf4 <inst_233>:

inst_233:
// rs1_val==4 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x3, 0x4, -0x1, x1, 820, x2)
90000bf4:	00400513          	li	a0,4
90000bf8:	157d                	addi	a0,a0,-1
90000bfa:	32a0aa23          	sw	a0,820(ra)

90000bfe <inst_234>:

inst_234:
// rs1_val==4 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x4; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x0, 0x4, -0x4, x1, 824, x2)
90000bfe:	00400513          	li	a0,4
90000c02:	1571                	addi	a0,a0,-4
90000c04:	32a0ac23          	sw	a0,824(ra)

90000c08 <inst_235>:

inst_235:
// rs1_val==858993458 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:0x3
TEST_CI_OP( c.addi, x10, 0x33333335, 0x33333332, 0x3, x1, 828, x2)
90000c08:	33333537          	lui	a0,0x33333
90000c0c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000c10:	050d                	addi	a0,a0,3
90000c12:	32a0ae23          	sw	a0,828(ra)

90000c16 <inst_236>:

inst_236:
// rs1_val==858993458 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:0x5
TEST_CI_OP( c.addi, x10, 0x33333337, 0x33333332, 0x5, x1, 832, x2)
90000c16:	33333537          	lui	a0,0x33333
90000c1a:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000c1e:	0515                	addi	a0,a0,5
90000c20:	34a0a023          	sw	a0,832(ra)

90000c24 <inst_237>:

inst_237:
// rs1_val==858993458 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:0xa
TEST_CI_OP( c.addi, x10, 0x3333333c, 0x33333332, 0xa, x1, 836, x2)
90000c24:	33333537          	lui	a0,0x33333
90000c28:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000c2c:	0529                	addi	a0,a0,10
90000c2e:	34a0a223          	sw	a0,836(ra)

90000c32 <inst_238>:

inst_238:
// rs1_val==858993458 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:0x6
TEST_CI_OP( c.addi, x10, 0x33333338, 0x33333332, 0x6, x1, 840, x2)
90000c32:	33333537          	lui	a0,0x33333
90000c36:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000c3a:	0519                	addi	a0,a0,6
90000c3c:	34a0a423          	sw	a0,840(ra)

90000c40 <inst_239>:

inst_239:
// rs1_val==858993458 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x33333330, 0x33333332, -0x2, x1, 844, x2)
90000c40:	33333537          	lui	a0,0x33333
90000c44:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000c48:	1579                	addi	a0,a0,-2
90000c4a:	34a0a623          	sw	a0,844(ra)

90000c4e <inst_240>:

inst_240:
// rs1_val==858993458 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:-0x5
TEST_CI_OP( c.addi, x10, 0x3333332d, 0x33333332, -0x5, x1, 848, x2)
90000c4e:	33333537          	lui	a0,0x33333
90000c52:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000c56:	156d                	addi	a0,a0,-5
90000c58:	34a0a823          	sw	a0,848(ra)

90000c5c <inst_241>:

inst_241:
// rs1_val==858993458 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:0x2
TEST_CI_OP( c.addi, x10, 0x33333334, 0x33333332, 0x2, x1, 852, x2)
90000c5c:	33333537          	lui	a0,0x33333
90000c60:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000c64:	0509                	addi	a0,a0,2
90000c66:	34a0aa23          	sw	a0,852(ra)

90000c6a <inst_242>:

inst_242:
// rs1_val==858993458 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:0x4
TEST_CI_OP( c.addi, x10, 0x33333336, 0x33333332, 0x4, x1, 856, x2)
90000c6a:	33333537          	lui	a0,0x33333
90000c6e:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000c72:	0511                	addi	a0,a0,4
90000c74:	34a0ac23          	sw	a0,856(ra)

90000c78 <inst_243>:

inst_243:
// rs1_val==858993458 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:0x9
TEST_CI_OP( c.addi, x10, 0x3333333b, 0x33333332, 0x9, x1, 860, x2)
90000c78:	33333537          	lui	a0,0x33333
90000c7c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000c80:	0525                	addi	a0,a0,9
90000c82:	34a0ae23          	sw	a0,860(ra)

90000c86 <inst_244>:

inst_244:
// rs1_val==858993458 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:0x0
TEST_CI_OP( c.addi, x10, 0x33333332, 0x33333332, 0x0, x1, 864, x2)
90000c86:	33333537          	lui	a0,0x33333
90000c8a:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000c8e:	0501                	addi	a0,a0,0
90000c90:	36a0a023          	sw	a0,864(ra)

90000c94 <inst_245>:

inst_245:
// rs1_val==858993458 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:0xb
TEST_CI_OP( c.addi, x10, 0x3333333d, 0x33333332, 0xb, x1, 868, x2)
90000c94:	33333537          	lui	a0,0x33333
90000c98:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000c9c:	052d                	addi	a0,a0,11
90000c9e:	36a0a223          	sw	a0,868(ra)

90000ca2 <inst_246>:

inst_246:
// rs1_val==858993458 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:0x7
TEST_CI_OP( c.addi, x10, 0x33333339, 0x33333332, 0x7, x1, 872, x2)
90000ca2:	33333537          	lui	a0,0x33333
90000ca6:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000caa:	051d                	addi	a0,a0,7
90000cac:	36a0a423          	sw	a0,872(ra)

90000cb0 <inst_247>:

inst_247:
// rs1_val==858993458 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x33333331, 0x33333332, -0x1, x1, 876, x2)
90000cb0:	33333537          	lui	a0,0x33333
90000cb4:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000cb8:	157d                	addi	a0,a0,-1
90000cba:	36a0a623          	sw	a0,876(ra)

90000cbe <inst_248>:

inst_248:
// rs1_val==858993458 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333332; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x3333332e, 0x33333332, -0x4, x1, 880, x2)
90000cbe:	33333537          	lui	a0,0x33333
90000cc2:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33332dc6>
90000cc6:	1571                	addi	a0,a0,-4
90000cc8:	36a0a823          	sw	a0,880(ra)

90000ccc <inst_249>:

inst_249:
// rs1_val==1717986917 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:0x3
TEST_CI_OP( c.addi, x10, 0x66666668, 0x66666665, 0x3, x1, 884, x2)
90000ccc:	66666537          	lui	a0,0x66666
90000cd0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000cd4:	050d                	addi	a0,a0,3
90000cd6:	36a0aa23          	sw	a0,884(ra)

90000cda <inst_250>:

inst_250:
// rs1_val==1717986917 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:0x5
TEST_CI_OP( c.addi, x10, 0x6666666a, 0x66666665, 0x5, x1, 888, x2)
90000cda:	66666537          	lui	a0,0x66666
90000cde:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000ce2:	0515                	addi	a0,a0,5
90000ce4:	36a0ac23          	sw	a0,888(ra)

90000ce8 <inst_251>:

inst_251:
// rs1_val==1717986917 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:0xa
TEST_CI_OP( c.addi, x10, 0x6666666f, 0x66666665, 0xa, x1, 892, x2)
90000ce8:	66666537          	lui	a0,0x66666
90000cec:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000cf0:	0529                	addi	a0,a0,10
90000cf2:	36a0ae23          	sw	a0,892(ra)

90000cf6 <inst_252>:

inst_252:
// rs1_val==1717986917 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:0x6
TEST_CI_OP( c.addi, x10, 0x6666666b, 0x66666665, 0x6, x1, 896, x2)
90000cf6:	66666537          	lui	a0,0x66666
90000cfa:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000cfe:	0519                	addi	a0,a0,6
90000d00:	38a0a023          	sw	a0,896(ra)

90000d04 <inst_253>:

inst_253:
// rs1_val==1717986917 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x66666663, 0x66666665, -0x2, x1, 900, x2)
90000d04:	66666537          	lui	a0,0x66666
90000d08:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000d0c:	1579                	addi	a0,a0,-2
90000d0e:	38a0a223          	sw	a0,900(ra)

90000d12 <inst_254>:

inst_254:
// rs1_val==1717986917 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:-0x5
TEST_CI_OP( c.addi, x10, 0x66666660, 0x66666665, -0x5, x1, 904, x2)
90000d12:	66666537          	lui	a0,0x66666
90000d16:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000d1a:	156d                	addi	a0,a0,-5
90000d1c:	38a0a423          	sw	a0,904(ra)

90000d20 <inst_255>:

inst_255:
// rs1_val==1717986917 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:0x2
TEST_CI_OP( c.addi, x10, 0x66666667, 0x66666665, 0x2, x1, 908, x2)
90000d20:	66666537          	lui	a0,0x66666
90000d24:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000d28:	0509                	addi	a0,a0,2
90000d2a:	38a0a623          	sw	a0,908(ra)

90000d2e <inst_256>:

inst_256:
// rs1_val==1717986917 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:0x4
TEST_CI_OP( c.addi, x10, 0x66666669, 0x66666665, 0x4, x1, 912, x2)
90000d2e:	66666537          	lui	a0,0x66666
90000d32:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000d36:	0511                	addi	a0,a0,4
90000d38:	38a0a823          	sw	a0,912(ra)

90000d3c <inst_257>:

inst_257:
// rs1_val==1717986917 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:0x9
TEST_CI_OP( c.addi, x10, 0x6666666e, 0x66666665, 0x9, x1, 916, x2)
90000d3c:	66666537          	lui	a0,0x66666
90000d40:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000d44:	0525                	addi	a0,a0,9
90000d46:	38a0aa23          	sw	a0,916(ra)

90000d4a <inst_258>:

inst_258:
// rs1_val==1717986917 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:0x0
TEST_CI_OP( c.addi, x10, 0x66666665, 0x66666665, 0x0, x1, 920, x2)
90000d4a:	66666537          	lui	a0,0x66666
90000d4e:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000d52:	0501                	addi	a0,a0,0
90000d54:	38a0ac23          	sw	a0,920(ra)

90000d58 <inst_259>:

inst_259:
// rs1_val==1717986917 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:0xb
TEST_CI_OP( c.addi, x10, 0x66666670, 0x66666665, 0xb, x1, 924, x2)
90000d58:	66666537          	lui	a0,0x66666
90000d5c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000d60:	052d                	addi	a0,a0,11
90000d62:	38a0ae23          	sw	a0,924(ra)

90000d66 <inst_260>:

inst_260:
// rs1_val==1717986917 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:0x7
TEST_CI_OP( c.addi, x10, 0x6666666c, 0x66666665, 0x7, x1, 928, x2)
90000d66:	66666537          	lui	a0,0x66666
90000d6a:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000d6e:	051d                	addi	a0,a0,7
90000d70:	3aa0a023          	sw	a0,928(ra)

90000d74 <inst_261>:

inst_261:
// rs1_val==1717986917 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x66666664, 0x66666665, -0x1, x1, 932, x2)
90000d74:	66666537          	lui	a0,0x66666
90000d78:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000d7c:	157d                	addi	a0,a0,-1
90000d7e:	3aa0a223          	sw	a0,932(ra)

90000d82 <inst_262>:

inst_262:
// rs1_val==1717986917 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666665; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x66666661, 0x66666665, -0x4, x1, 936, x2)
90000d82:	66666537          	lui	a0,0x66666
90000d86:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x666660f9>
90000d8a:	1571                	addi	a0,a0,-4
90000d8c:	3aa0a423          	sw	a0,936(ra)

90000d90 <inst_263>:

inst_263:
// rs1_val==46339 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:0x3
TEST_CI_OP( c.addi, x10, 0xb506, 0xb503, 0x3, x1, 940, x2)
90000d90:	0000b537          	lui	a0,0xb
90000d94:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000d98:	050d                	addi	a0,a0,3
90000d9a:	3aa0a623          	sw	a0,940(ra)

90000d9e <inst_264>:

inst_264:
// rs1_val==46339 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:0x5
TEST_CI_OP( c.addi, x10, 0xb508, 0xb503, 0x5, x1, 944, x2)
90000d9e:	0000b537          	lui	a0,0xb
90000da2:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000da6:	0515                	addi	a0,a0,5
90000da8:	3aa0a823          	sw	a0,944(ra)

90000dac <inst_265>:

inst_265:
// rs1_val==46339 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:0xa
TEST_CI_OP( c.addi, x10, 0xb50d, 0xb503, 0xa, x1, 948, x2)
90000dac:	0000b537          	lui	a0,0xb
90000db0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000db4:	0529                	addi	a0,a0,10
90000db6:	3aa0aa23          	sw	a0,948(ra)

90000dba <inst_266>:

inst_266:
// rs1_val==46339 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:0x6
TEST_CI_OP( c.addi, x10, 0xb509, 0xb503, 0x6, x1, 952, x2)
90000dba:	0000b537          	lui	a0,0xb
90000dbe:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000dc2:	0519                	addi	a0,a0,6
90000dc4:	3aa0ac23          	sw	a0,952(ra)

90000dc8 <inst_267>:

inst_267:
// rs1_val==46339 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:-0x2
TEST_CI_OP( c.addi, x10, 0xb501, 0xb503, -0x2, x1, 956, x2)
90000dc8:	0000b537          	lui	a0,0xb
90000dcc:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000dd0:	1579                	addi	a0,a0,-2
90000dd2:	3aa0ae23          	sw	a0,956(ra)

90000dd6 <inst_268>:

inst_268:
// rs1_val==46339 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xb4fe, 0xb503, -0x5, x1, 960, x2)
90000dd6:	0000b537          	lui	a0,0xb
90000dda:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000dde:	156d                	addi	a0,a0,-5
90000de0:	3ca0a023          	sw	a0,960(ra)

90000de4 <inst_269>:

inst_269:
// rs1_val==46339 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:0x2
TEST_CI_OP( c.addi, x10, 0xb505, 0xb503, 0x2, x1, 964, x2)
90000de4:	0000b537          	lui	a0,0xb
90000de8:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000dec:	0509                	addi	a0,a0,2
90000dee:	3ca0a223          	sw	a0,964(ra)

90000df2 <inst_270>:

inst_270:
// rs1_val==46339 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:0x4
TEST_CI_OP( c.addi, x10, 0xb507, 0xb503, 0x4, x1, 968, x2)
90000df2:	0000b537          	lui	a0,0xb
90000df6:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000dfa:	0511                	addi	a0,a0,4
90000dfc:	3ca0a423          	sw	a0,968(ra)

90000e00 <inst_271>:

inst_271:
// rs1_val==46339 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:0x9
TEST_CI_OP( c.addi, x10, 0xb50c, 0xb503, 0x9, x1, 972, x2)
90000e00:	0000b537          	lui	a0,0xb
90000e04:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000e08:	0525                	addi	a0,a0,9
90000e0a:	3ca0a623          	sw	a0,972(ra)

90000e0e <inst_272>:

inst_272:
// rs1_val==46339 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:0x0
TEST_CI_OP( c.addi, x10, 0xb503, 0xb503, 0x0, x1, 976, x2)
90000e0e:	0000b537          	lui	a0,0xb
90000e12:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000e16:	0501                	addi	a0,a0,0
90000e18:	3ca0a823          	sw	a0,976(ra)

90000e1c <inst_273>:

inst_273:
// rs1_val==46339 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:0xb
TEST_CI_OP( c.addi, x10, 0xb50e, 0xb503, 0xb, x1, 980, x2)
90000e1c:	0000b537          	lui	a0,0xb
90000e20:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000e24:	052d                	addi	a0,a0,11
90000e26:	3ca0aa23          	sw	a0,980(ra)

90000e2a <inst_274>:

inst_274:
// rs1_val==46339 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:0x7
TEST_CI_OP( c.addi, x10, 0xb50a, 0xb503, 0x7, x1, 984, x2)
90000e2a:	0000b537          	lui	a0,0xb
90000e2e:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000e32:	051d                	addi	a0,a0,7
90000e34:	3ca0ac23          	sw	a0,984(ra)

90000e38 <inst_275>:

inst_275:
// rs1_val==46339 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:-0x1
TEST_CI_OP( c.addi, x10, 0xb502, 0xb503, -0x1, x1, 988, x2)
90000e38:	0000b537          	lui	a0,0xb
90000e3c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000e40:	157d                	addi	a0,a0,-1
90000e42:	3ca0ae23          	sw	a0,988(ra)

90000e46 <inst_276>:

inst_276:
// rs1_val==46339 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb503; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xb4ff, 0xb503, -0x4, x1, 992, x2)
90000e46:	0000b537          	lui	a0,0xb
90000e4a:	50350513          	addi	a0,a0,1283 # b503 <offset+0xaf97>
90000e4e:	1571                	addi	a0,a0,-4
90000e50:	3ea0a023          	sw	a0,992(ra)

90000e54 <inst_277>:

inst_277:
// rs1_val==1431655766 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:0x3
TEST_CI_OP( c.addi, x10, 0x55555559, 0x55555556, 0x3, x1, 996, x2)
90000e54:	55555537          	lui	a0,0x55555
90000e58:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000e5c:	050d                	addi	a0,a0,3
90000e5e:	3ea0a223          	sw	a0,996(ra)

90000e62 <inst_278>:

inst_278:
// rs1_val==1431655766 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:0x5
TEST_CI_OP( c.addi, x10, 0x5555555b, 0x55555556, 0x5, x1, 1000, x2)
90000e62:	55555537          	lui	a0,0x55555
90000e66:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000e6a:	0515                	addi	a0,a0,5
90000e6c:	3ea0a423          	sw	a0,1000(ra)

90000e70 <inst_279>:

inst_279:
// rs1_val==1431655766 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:0xa
TEST_CI_OP( c.addi, x10, 0x55555560, 0x55555556, 0xa, x1, 1004, x2)
90000e70:	55555537          	lui	a0,0x55555
90000e74:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000e78:	0529                	addi	a0,a0,10
90000e7a:	3ea0a623          	sw	a0,1004(ra)

90000e7e <inst_280>:

inst_280:
// rs1_val==1431655766 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:0x6
TEST_CI_OP( c.addi, x10, 0x5555555c, 0x55555556, 0x6, x1, 1008, x2)
90000e7e:	55555537          	lui	a0,0x55555
90000e82:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000e86:	0519                	addi	a0,a0,6
90000e88:	3ea0a823          	sw	a0,1008(ra)

90000e8c <inst_281>:

inst_281:
// rs1_val==1431655766 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x55555554, 0x55555556, -0x2, x1, 1012, x2)
90000e8c:	55555537          	lui	a0,0x55555
90000e90:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000e94:	1579                	addi	a0,a0,-2
90000e96:	3ea0aa23          	sw	a0,1012(ra)

90000e9a <inst_282>:

inst_282:
// rs1_val==1431655766 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:-0x5
TEST_CI_OP( c.addi, x10, 0x55555551, 0x55555556, -0x5, x1, 1016, x2)
90000e9a:	55555537          	lui	a0,0x55555
90000e9e:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000ea2:	156d                	addi	a0,a0,-5
90000ea4:	3ea0ac23          	sw	a0,1016(ra)

90000ea8 <inst_283>:

inst_283:
// rs1_val==1431655766 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:0x2
TEST_CI_OP( c.addi, x10, 0x55555558, 0x55555556, 0x2, x1, 1020, x2)
90000ea8:	55555537          	lui	a0,0x55555
90000eac:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000eb0:	0509                	addi	a0,a0,2
90000eb2:	3ea0ae23          	sw	a0,1020(ra)

90000eb6 <inst_284>:

inst_284:
// rs1_val==1431655766 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:0x4
TEST_CI_OP( c.addi, x10, 0x5555555a, 0x55555556, 0x4, x1, 1024, x2)
90000eb6:	55555537          	lui	a0,0x55555
90000eba:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000ebe:	0511                	addi	a0,a0,4
90000ec0:	40a0a023          	sw	a0,1024(ra)

90000ec4 <inst_285>:

inst_285:
// rs1_val==1431655766 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:0x9
TEST_CI_OP( c.addi, x10, 0x5555555f, 0x55555556, 0x9, x1, 1028, x2)
90000ec4:	55555537          	lui	a0,0x55555
90000ec8:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000ecc:	0525                	addi	a0,a0,9
90000ece:	40a0a223          	sw	a0,1028(ra)

90000ed2 <inst_286>:

inst_286:
// rs1_val==1431655766 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:0x0
TEST_CI_OP( c.addi, x10, 0x55555556, 0x55555556, 0x0, x1, 1032, x2)
90000ed2:	55555537          	lui	a0,0x55555
90000ed6:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000eda:	0501                	addi	a0,a0,0
90000edc:	40a0a423          	sw	a0,1032(ra)

90000ee0 <inst_287>:

inst_287:
// rs1_val==1431655766 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:0xb
TEST_CI_OP( c.addi, x10, 0x55555561, 0x55555556, 0xb, x1, 1036, x2)
90000ee0:	55555537          	lui	a0,0x55555
90000ee4:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000ee8:	052d                	addi	a0,a0,11
90000eea:	40a0a623          	sw	a0,1036(ra)

90000eee <inst_288>:

inst_288:
// rs1_val==1431655766 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:0x7
TEST_CI_OP( c.addi, x10, 0x5555555d, 0x55555556, 0x7, x1, 1040, x2)
90000eee:	55555537          	lui	a0,0x55555
90000ef2:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000ef6:	051d                	addi	a0,a0,7
90000ef8:	40a0a823          	sw	a0,1040(ra)

90000efc <inst_289>:

inst_289:
// rs1_val==1431655766 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x55555555, 0x55555556, -0x1, x1, 1044, x2)
90000efc:	55555537          	lui	a0,0x55555
90000f00:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000f04:	157d                	addi	a0,a0,-1
90000f06:	40a0aa23          	sw	a0,1044(ra)

90000f0a <inst_290>:

inst_290:
// rs1_val==1431655766 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x55555556; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x55555552, 0x55555556, -0x4, x1, 1048, x2)
90000f0a:	55555537          	lui	a0,0x55555
90000f0e:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x55554fea>
90000f12:	1571                	addi	a0,a0,-4
90000f14:	40a0ac23          	sw	a0,1048(ra)

90000f18 <inst_291>:

inst_291:
// rs1_val==-1431655765 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:0x3
TEST_CI_OP( c.addi, x10, 0xaaaaaaae, -0x55555555, 0x3, x1, 1052, x2)
90000f18:	aaaab537          	lui	a0,0xaaaab
90000f1c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000f20:	050d                	addi	a0,a0,3
90000f22:	40a0ae23          	sw	a0,1052(ra)

90000f26 <inst_292>:

inst_292:
// rs1_val==-1431655765 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:0x5
TEST_CI_OP( c.addi, x10, 0xaaaaaab0, -0x55555555, 0x5, x1, 1056, x2)
90000f26:	aaaab537          	lui	a0,0xaaaab
90000f2a:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000f2e:	0515                	addi	a0,a0,5
90000f30:	42a0a023          	sw	a0,1056(ra)

90000f34 <inst_293>:

inst_293:
// rs1_val==-1431655765 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:0xa
TEST_CI_OP( c.addi, x10, 0xaaaaaab5, -0x55555555, 0xa, x1, 1060, x2)
90000f34:	aaaab537          	lui	a0,0xaaaab
90000f38:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000f3c:	0529                	addi	a0,a0,10
90000f3e:	42a0a223          	sw	a0,1060(ra)

90000f42 <inst_294>:

inst_294:
// rs1_val==-1431655765 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:0x6
TEST_CI_OP( c.addi, x10, 0xaaaaaab1, -0x55555555, 0x6, x1, 1064, x2)
90000f42:	aaaab537          	lui	a0,0xaaaab
90000f46:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000f4a:	0519                	addi	a0,a0,6
90000f4c:	42a0a423          	sw	a0,1064(ra)

90000f50 <inst_295>:

inst_295:
// rs1_val==-1431655765 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:-0x2
TEST_CI_OP( c.addi, x10, 0xaaaaaaa9, -0x55555555, -0x2, x1, 1068, x2)
90000f50:	aaaab537          	lui	a0,0xaaaab
90000f54:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000f58:	1579                	addi	a0,a0,-2
90000f5a:	42a0a623          	sw	a0,1068(ra)

90000f5e <inst_296>:

inst_296:
// rs1_val==-1431655765 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xaaaaaaa6, -0x55555555, -0x5, x1, 1072, x2)
90000f5e:	aaaab537          	lui	a0,0xaaaab
90000f62:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000f66:	156d                	addi	a0,a0,-5
90000f68:	42a0a823          	sw	a0,1072(ra)

90000f6c <inst_297>:

inst_297:
// rs1_val==-1431655765 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:0x2
TEST_CI_OP( c.addi, x10, 0xaaaaaaad, -0x55555555, 0x2, x1, 1076, x2)
90000f6c:	aaaab537          	lui	a0,0xaaaab
90000f70:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000f74:	0509                	addi	a0,a0,2
90000f76:	42a0aa23          	sw	a0,1076(ra)

90000f7a <inst_298>:

inst_298:
// rs1_val==-1431655765 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:0x4
TEST_CI_OP( c.addi, x10, 0xaaaaaaaf, -0x55555555, 0x4, x1, 1080, x2)
90000f7a:	aaaab537          	lui	a0,0xaaaab
90000f7e:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000f82:	0511                	addi	a0,a0,4
90000f84:	42a0ac23          	sw	a0,1080(ra)

90000f88 <inst_299>:

inst_299:
// rs1_val==-1431655765 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:0x9
TEST_CI_OP( c.addi, x10, 0xaaaaaab4, -0x55555555, 0x9, x1, 1084, x2)
90000f88:	aaaab537          	lui	a0,0xaaaab
90000f8c:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000f90:	0525                	addi	a0,a0,9
90000f92:	42a0ae23          	sw	a0,1084(ra)

90000f96 <inst_300>:

inst_300:
// rs1_val==-1431655765 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:0x0
TEST_CI_OP( c.addi, x10, 0xaaaaaaab, -0x55555555, 0x0, x1, 1088, x2)
90000f96:	aaaab537          	lui	a0,0xaaaab
90000f9a:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000f9e:	0501                	addi	a0,a0,0
90000fa0:	44a0a023          	sw	a0,1088(ra)

90000fa4 <inst_301>:

inst_301:
// rs1_val==-1431655765 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:0xb
TEST_CI_OP( c.addi, x10, 0xaaaaaab6, -0x55555555, 0xb, x1, 1092, x2)
90000fa4:	aaaab537          	lui	a0,0xaaaab
90000fa8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000fac:	052d                	addi	a0,a0,11
90000fae:	44a0a223          	sw	a0,1092(ra)

90000fb2 <inst_302>:

inst_302:
// rs1_val==-1431655765 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:0x7
TEST_CI_OP( c.addi, x10, 0xaaaaaab2, -0x55555555, 0x7, x1, 1096, x2)
90000fb2:	aaaab537          	lui	a0,0xaaaab
90000fb6:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000fba:	051d                	addi	a0,a0,7
90000fbc:	44a0a423          	sw	a0,1096(ra)

90000fc0 <inst_303>:

inst_303:
// rs1_val==-1431655765 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:-0x1
TEST_CI_OP( c.addi, x10, 0xaaaaaaaa, -0x55555555, -0x1, x1, 1100, x2)
90000fc0:	aaaab537          	lui	a0,0xaaaab
90000fc4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000fc8:	157d                	addi	a0,a0,-1
90000fca:	44a0a623          	sw	a0,1100(ra)

90000fce <inst_304>:

inst_304:
// rs1_val==-1431655765 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0x55555555; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xaaaaaaa7, -0x55555555, -0x4, x1, 1104, x2)
90000fce:	aaaab537          	lui	a0,0xaaaab
90000fd2:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa73a7>
90000fd6:	1571                	addi	a0,a0,-4
90000fd8:	44a0a823          	sw	a0,1104(ra)

90000fdc <inst_305>:

inst_305:
// rs1_val==6 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:0x3
TEST_CI_OP( c.addi, x10, 0x9, 0x6, 0x3, x1, 1108, x2)
90000fdc:	00600513          	li	a0,6
90000fe0:	050d                	addi	a0,a0,3
90000fe2:	44a0aa23          	sw	a0,1108(ra)

90000fe6 <inst_306>:

inst_306:
// rs1_val==6 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:0x5
TEST_CI_OP( c.addi, x10, 0xb, 0x6, 0x5, x1, 1112, x2)
90000fe6:	00600513          	li	a0,6
90000fea:	0515                	addi	a0,a0,5
90000fec:	44a0ac23          	sw	a0,1112(ra)

90000ff0 <inst_307>:

inst_307:
// rs1_val==6 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:0xa
TEST_CI_OP( c.addi, x10, 0x10, 0x6, 0xa, x1, 1116, x2)
90000ff0:	00600513          	li	a0,6
90000ff4:	0529                	addi	a0,a0,10
90000ff6:	44a0ae23          	sw	a0,1116(ra)

90000ffa <inst_308>:

inst_308:
// rs1_val==6 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:0x6
TEST_CI_OP( c.addi, x10, 0xc, 0x6, 0x6, x1, 1120, x2)
90000ffa:	00600513          	li	a0,6
90000ffe:	0519                	addi	a0,a0,6
90001000:	46a0a023          	sw	a0,1120(ra)

90001004 <inst_309>:

inst_309:
// rs1_val==6 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x4, 0x6, -0x2, x1, 1124, x2)
90001004:	00600513          	li	a0,6
90001008:	1579                	addi	a0,a0,-2
9000100a:	46a0a223          	sw	a0,1124(ra)

9000100e <inst_310>:

inst_310:
// rs1_val==6 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:-0x5
TEST_CI_OP( c.addi, x10, 0x1, 0x6, -0x5, x1, 1128, x2)
9000100e:	00600513          	li	a0,6
90001012:	156d                	addi	a0,a0,-5
90001014:	46a0a423          	sw	a0,1128(ra)

90001018 <inst_311>:

inst_311:
// rs1_val==6 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:0x2
TEST_CI_OP( c.addi, x10, 0x8, 0x6, 0x2, x1, 1132, x2)
90001018:	00600513          	li	a0,6
9000101c:	0509                	addi	a0,a0,2
9000101e:	46a0a623          	sw	a0,1132(ra)

90001022 <inst_312>:

inst_312:
// rs1_val==-46339 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:-0x1
TEST_CI_OP( c.addi, x10, 0xffff4afc, -0xb503, -0x1, x1, 1136, x2)
90001022:	ffff5537          	lui	a0,0xffff5
90001026:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
9000102a:	157d                	addi	a0,a0,-1
9000102c:	46a0a823          	sw	a0,1136(ra)

90001030 <inst_313>:

inst_313:
// rs1_val==-46339 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xffff4af9, -0xb503, -0x4, x1, 1140, x2)
90001030:	ffff5537          	lui	a0,0xffff5
90001034:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
90001038:	1571                	addi	a0,a0,-4
9000103a:	46a0aa23          	sw	a0,1140(ra)

9000103e <inst_314>:

inst_314:
// rs1_val==46341 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:0x3
TEST_CI_OP( c.addi, x10, 0xb508, 0xb505, 0x3, x1, 1144, x2)
9000103e:	0000b537          	lui	a0,0xb
90001042:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
90001046:	050d                	addi	a0,a0,3
90001048:	46a0ac23          	sw	a0,1144(ra)

9000104c <inst_315>:

inst_315:
// rs1_val==46341 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:0x5
TEST_CI_OP( c.addi, x10, 0xb50a, 0xb505, 0x5, x1, 1148, x2)
9000104c:	0000b537          	lui	a0,0xb
90001050:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
90001054:	0515                	addi	a0,a0,5
90001056:	46a0ae23          	sw	a0,1148(ra)

9000105a <inst_316>:

inst_316:
// rs1_val==46341 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:0xa
TEST_CI_OP( c.addi, x10, 0xb50f, 0xb505, 0xa, x1, 1152, x2)
9000105a:	0000b537          	lui	a0,0xb
9000105e:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
90001062:	0529                	addi	a0,a0,10
90001064:	48a0a023          	sw	a0,1152(ra)

90001068 <inst_317>:

inst_317:
// rs1_val==46341 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:0x6
TEST_CI_OP( c.addi, x10, 0xb50b, 0xb505, 0x6, x1, 1156, x2)
90001068:	0000b537          	lui	a0,0xb
9000106c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
90001070:	0519                	addi	a0,a0,6
90001072:	48a0a223          	sw	a0,1156(ra)

90001076 <inst_318>:

inst_318:
// rs1_val==46341 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:-0x2
TEST_CI_OP( c.addi, x10, 0xb503, 0xb505, -0x2, x1, 1160, x2)
90001076:	0000b537          	lui	a0,0xb
9000107a:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
9000107e:	1579                	addi	a0,a0,-2
90001080:	48a0a423          	sw	a0,1160(ra)

90001084 <inst_319>:

inst_319:
// rs1_val==46341 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xb500, 0xb505, -0x5, x1, 1164, x2)
90001084:	0000b537          	lui	a0,0xb
90001088:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
9000108c:	156d                	addi	a0,a0,-5
9000108e:	48a0a623          	sw	a0,1164(ra)

90001092 <inst_320>:

inst_320:
// rs1_val==46341 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:0x2
TEST_CI_OP( c.addi, x10, 0xb507, 0xb505, 0x2, x1, 1168, x2)
90001092:	0000b537          	lui	a0,0xb
90001096:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
9000109a:	0509                	addi	a0,a0,2
9000109c:	48a0a823          	sw	a0,1168(ra)

900010a0 <inst_321>:

inst_321:
// rs1_val==46341 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:0x4
TEST_CI_OP( c.addi, x10, 0xb509, 0xb505, 0x4, x1, 1172, x2)
900010a0:	0000b537          	lui	a0,0xb
900010a4:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
900010a8:	0511                	addi	a0,a0,4
900010aa:	48a0aa23          	sw	a0,1172(ra)

900010ae <inst_322>:

inst_322:
// rs1_val==46341 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:0x9
TEST_CI_OP( c.addi, x10, 0xb50e, 0xb505, 0x9, x1, 1176, x2)
900010ae:	0000b537          	lui	a0,0xb
900010b2:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
900010b6:	0525                	addi	a0,a0,9
900010b8:	48a0ac23          	sw	a0,1176(ra)

900010bc <inst_323>:

inst_323:
// rs1_val==46341 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:0x0
TEST_CI_OP( c.addi, x10, 0xb505, 0xb505, 0x0, x1, 1180, x2)
900010bc:	0000b537          	lui	a0,0xb
900010c0:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
900010c4:	0501                	addi	a0,a0,0
900010c6:	48a0ae23          	sw	a0,1180(ra)

900010ca <inst_324>:

inst_324:
// rs1_val==46341 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:0xb
TEST_CI_OP( c.addi, x10, 0xb510, 0xb505, 0xb, x1, 1184, x2)
900010ca:	0000b537          	lui	a0,0xb
900010ce:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
900010d2:	052d                	addi	a0,a0,11
900010d4:	4aa0a023          	sw	a0,1184(ra)

900010d8 <inst_325>:

inst_325:
// rs1_val==46341 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:0x7
TEST_CI_OP( c.addi, x10, 0xb50c, 0xb505, 0x7, x1, 1188, x2)
900010d8:	0000b537          	lui	a0,0xb
900010dc:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
900010e0:	051d                	addi	a0,a0,7
900010e2:	4aa0a223          	sw	a0,1188(ra)

900010e6 <inst_326>:

inst_326:
// rs1_val==46341 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:-0x1
TEST_CI_OP( c.addi, x10, 0xb504, 0xb505, -0x1, x1, 1192, x2)
900010e6:	0000b537          	lui	a0,0xb
900010ea:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
900010ee:	157d                	addi	a0,a0,-1
900010f0:	4aa0a423          	sw	a0,1192(ra)

900010f4 <inst_327>:

inst_327:
// rs1_val==46341 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0xb505; immval:-0x4
TEST_CI_OP( c.addi, x10, 0xb501, 0xb505, -0x4, x1, 1196, x2)
900010f4:	0000b537          	lui	a0,0xb
900010f8:	50550513          	addi	a0,a0,1285 # b505 <offset+0xaf99>
900010fc:	1571                	addi	a0,a0,-4
900010fe:	4aa0a623          	sw	a0,1196(ra)

90001102 <inst_328>:

inst_328:
// rs1_val==6 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:0x4
TEST_CI_OP( c.addi, x10, 0xa, 0x6, 0x4, x1, 1200, x2)
90001102:	00600513          	li	a0,6
90001106:	0511                	addi	a0,a0,4
90001108:	4aa0a823          	sw	a0,1200(ra)

9000110c <inst_329>:

inst_329:
// rs1_val==6 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:0x9
TEST_CI_OP( c.addi, x10, 0xf, 0x6, 0x9, x1, 1204, x2)
9000110c:	00600513          	li	a0,6
90001110:	0525                	addi	a0,a0,9
90001112:	4aa0aa23          	sw	a0,1204(ra)

90001116 <inst_330>:

inst_330:
// rs1_val==6 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:0x0
TEST_CI_OP( c.addi, x10, 0x6, 0x6, 0x0, x1, 1208, x2)
90001116:	00600513          	li	a0,6
9000111a:	0501                	addi	a0,a0,0
9000111c:	4aa0ac23          	sw	a0,1208(ra)

90001120 <inst_331>:

inst_331:
// rs1_val==6 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:0xb
TEST_CI_OP( c.addi, x10, 0x11, 0x6, 0xb, x1, 1212, x2)
90001120:	00600513          	li	a0,6
90001124:	052d                	addi	a0,a0,11
90001126:	4aa0ae23          	sw	a0,1212(ra)

9000112a <inst_332>:

inst_332:
// rs1_val==6 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:0x7
TEST_CI_OP( c.addi, x10, 0xd, 0x6, 0x7, x1, 1216, x2)
9000112a:	00600513          	li	a0,6
9000112e:	051d                	addi	a0,a0,7
90001130:	4ca0a023          	sw	a0,1216(ra)

90001134 <inst_333>:

inst_333:
// rs1_val==6 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x5, 0x6, -0x1, x1, 1220, x2)
90001134:	00600513          	li	a0,6
90001138:	157d                	addi	a0,a0,-1
9000113a:	4ca0a223          	sw	a0,1220(ra)

9000113e <inst_334>:

inst_334:
// rs1_val==6 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x6; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x2, 0x6, -0x4, x1, 1224, x2)
9000113e:	00600513          	li	a0,6
90001142:	1571                	addi	a0,a0,-4
90001144:	4ca0a423          	sw	a0,1224(ra)

90001148 <inst_335>:

inst_335:
// rs1_val==858993460 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:0x3
TEST_CI_OP( c.addi, x10, 0x33333337, 0x33333334, 0x3, x1, 1228, x2)
90001148:	33333537          	lui	a0,0x33333
9000114c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
90001150:	050d                	addi	a0,a0,3
90001152:	4ca0a623          	sw	a0,1228(ra)

90001156 <inst_336>:

inst_336:
// rs1_val==858993460 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:0x5
TEST_CI_OP( c.addi, x10, 0x33333339, 0x33333334, 0x5, x1, 1232, x2)
90001156:	33333537          	lui	a0,0x33333
9000115a:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
9000115e:	0515                	addi	a0,a0,5
90001160:	4ca0a823          	sw	a0,1232(ra)

90001164 <inst_337>:

inst_337:
// rs1_val==858993460 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:0xa
TEST_CI_OP( c.addi, x10, 0x3333333e, 0x33333334, 0xa, x1, 1236, x2)
90001164:	33333537          	lui	a0,0x33333
90001168:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
9000116c:	0529                	addi	a0,a0,10
9000116e:	4ca0aa23          	sw	a0,1236(ra)

90001172 <inst_338>:

inst_338:
// rs1_val==858993460 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:0x6
TEST_CI_OP( c.addi, x10, 0x3333333a, 0x33333334, 0x6, x1, 1240, x2)
90001172:	33333537          	lui	a0,0x33333
90001176:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
9000117a:	0519                	addi	a0,a0,6
9000117c:	4ca0ac23          	sw	a0,1240(ra)

90001180 <inst_339>:

inst_339:
// rs1_val==858993460 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x33333332, 0x33333334, -0x2, x1, 1244, x2)
90001180:	33333537          	lui	a0,0x33333
90001184:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
90001188:	1579                	addi	a0,a0,-2
9000118a:	4ca0ae23          	sw	a0,1244(ra)

9000118e <inst_340>:

inst_340:
// rs1_val==858993460 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:-0x5
TEST_CI_OP( c.addi, x10, 0x3333332f, 0x33333334, -0x5, x1, 1248, x2)
9000118e:	33333537          	lui	a0,0x33333
90001192:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
90001196:	156d                	addi	a0,a0,-5
90001198:	4ea0a023          	sw	a0,1248(ra)

9000119c <inst_341>:

inst_341:
// rs1_val==858993460 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:0x2
TEST_CI_OP( c.addi, x10, 0x33333336, 0x33333334, 0x2, x1, 1252, x2)
9000119c:	33333537          	lui	a0,0x33333
900011a0:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
900011a4:	0509                	addi	a0,a0,2
900011a6:	4ea0a223          	sw	a0,1252(ra)

900011aa <inst_342>:

inst_342:
// rs1_val==858993460 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:0x4
TEST_CI_OP( c.addi, x10, 0x33333338, 0x33333334, 0x4, x1, 1256, x2)
900011aa:	33333537          	lui	a0,0x33333
900011ae:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
900011b2:	0511                	addi	a0,a0,4
900011b4:	4ea0a423          	sw	a0,1256(ra)

900011b8 <inst_343>:

inst_343:
// rs1_val==858993460 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:0x9
TEST_CI_OP( c.addi, x10, 0x3333333d, 0x33333334, 0x9, x1, 1260, x2)
900011b8:	33333537          	lui	a0,0x33333
900011bc:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
900011c0:	0525                	addi	a0,a0,9
900011c2:	4ea0a623          	sw	a0,1260(ra)

900011c6 <inst_344>:

inst_344:
// rs1_val==858993460 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:0x0
TEST_CI_OP( c.addi, x10, 0x33333334, 0x33333334, 0x0, x1, 1264, x2)
900011c6:	33333537          	lui	a0,0x33333
900011ca:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
900011ce:	0501                	addi	a0,a0,0
900011d0:	4ea0a823          	sw	a0,1264(ra)

900011d4 <inst_345>:

inst_345:
// rs1_val==858993460 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:0xb
TEST_CI_OP( c.addi, x10, 0x3333333f, 0x33333334, 0xb, x1, 1268, x2)
900011d4:	33333537          	lui	a0,0x33333
900011d8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
900011dc:	052d                	addi	a0,a0,11
900011de:	4ea0aa23          	sw	a0,1268(ra)

900011e2 <inst_346>:

inst_346:
// rs1_val==858993460 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:0x7
TEST_CI_OP( c.addi, x10, 0x3333333b, 0x33333334, 0x7, x1, 1272, x2)
900011e2:	33333537          	lui	a0,0x33333
900011e6:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
900011ea:	051d                	addi	a0,a0,7
900011ec:	4ea0ac23          	sw	a0,1272(ra)

900011f0 <inst_347>:

inst_347:
// rs1_val==858993460 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x33333333, 0x33333334, -0x1, x1, 1276, x2)
900011f0:	33333537          	lui	a0,0x33333
900011f4:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
900011f8:	157d                	addi	a0,a0,-1
900011fa:	4ea0ae23          	sw	a0,1276(ra)

900011fe <inst_348>:

inst_348:
// rs1_val==858993460 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x33333334; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x33333330, 0x33333334, -0x4, x1, 1280, x2)
900011fe:	33333537          	lui	a0,0x33333
90001202:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33332dc8>
90001206:	1571                	addi	a0,a0,-4
90001208:	50a0a023          	sw	a0,1280(ra)

9000120c <inst_349>:

inst_349:
// rs1_val==1717986919 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:0x3
TEST_CI_OP( c.addi, x10, 0x6666666a, 0x66666667, 0x3, x1, 1284, x2)
9000120c:	66666537          	lui	a0,0x66666
90001210:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
90001214:	050d                	addi	a0,a0,3
90001216:	50a0a223          	sw	a0,1284(ra)

9000121a <inst_350>:

inst_350:
// rs1_val==1717986919 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:0x5
TEST_CI_OP( c.addi, x10, 0x6666666c, 0x66666667, 0x5, x1, 1288, x2)
9000121a:	66666537          	lui	a0,0x66666
9000121e:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
90001222:	0515                	addi	a0,a0,5
90001224:	50a0a423          	sw	a0,1288(ra)

90001228 <inst_351>:

inst_351:
// rs1_val==1717986919 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:0xa
TEST_CI_OP( c.addi, x10, 0x66666671, 0x66666667, 0xa, x1, 1292, x2)
90001228:	66666537          	lui	a0,0x66666
9000122c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
90001230:	0529                	addi	a0,a0,10
90001232:	50a0a623          	sw	a0,1292(ra)

90001236 <inst_352>:

inst_352:
// rs1_val==1717986919 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:0x6
TEST_CI_OP( c.addi, x10, 0x6666666d, 0x66666667, 0x6, x1, 1296, x2)
90001236:	66666537          	lui	a0,0x66666
9000123a:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
9000123e:	0519                	addi	a0,a0,6
90001240:	50a0a823          	sw	a0,1296(ra)

90001244 <inst_353>:

inst_353:
// rs1_val==1717986919 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:-0x2
TEST_CI_OP( c.addi, x10, 0x66666665, 0x66666667, -0x2, x1, 1300, x2)
90001244:	66666537          	lui	a0,0x66666
90001248:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
9000124c:	1579                	addi	a0,a0,-2
9000124e:	50a0aa23          	sw	a0,1300(ra)

90001252 <inst_354>:

inst_354:
// rs1_val==1717986919 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:-0x5
TEST_CI_OP( c.addi, x10, 0x66666662, 0x66666667, -0x5, x1, 1304, x2)
90001252:	66666537          	lui	a0,0x66666
90001256:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
9000125a:	156d                	addi	a0,a0,-5
9000125c:	50a0ac23          	sw	a0,1304(ra)

90001260 <inst_355>:

inst_355:
// rs1_val==1717986919 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:0x2
TEST_CI_OP( c.addi, x10, 0x66666669, 0x66666667, 0x2, x1, 1308, x2)
90001260:	66666537          	lui	a0,0x66666
90001264:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
90001268:	0509                	addi	a0,a0,2
9000126a:	50a0ae23          	sw	a0,1308(ra)

9000126e <inst_356>:

inst_356:
// rs1_val==1717986919 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:0x4
TEST_CI_OP( c.addi, x10, 0x6666666b, 0x66666667, 0x4, x1, 1312, x2)
9000126e:	66666537          	lui	a0,0x66666
90001272:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
90001276:	0511                	addi	a0,a0,4
90001278:	52a0a023          	sw	a0,1312(ra)

9000127c <inst_357>:

inst_357:
// rs1_val==1717986919 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:0x9
TEST_CI_OP( c.addi, x10, 0x66666670, 0x66666667, 0x9, x1, 1316, x2)
9000127c:	66666537          	lui	a0,0x66666
90001280:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
90001284:	0525                	addi	a0,a0,9
90001286:	52a0a223          	sw	a0,1316(ra)

9000128a <inst_358>:

inst_358:
// rs1_val==1717986919 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:0x0
TEST_CI_OP( c.addi, x10, 0x66666667, 0x66666667, 0x0, x1, 1320, x2)
9000128a:	66666537          	lui	a0,0x66666
9000128e:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
90001292:	0501                	addi	a0,a0,0
90001294:	52a0a423          	sw	a0,1320(ra)

90001298 <inst_359>:

inst_359:
// rs1_val==1717986919 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:0xb
TEST_CI_OP( c.addi, x10, 0x66666672, 0x66666667, 0xb, x1, 1324, x2)
90001298:	66666537          	lui	a0,0x66666
9000129c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
900012a0:	052d                	addi	a0,a0,11
900012a2:	52a0a623          	sw	a0,1324(ra)

900012a6 <inst_360>:

inst_360:
// rs1_val==1717986919 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:0x7
TEST_CI_OP( c.addi, x10, 0x6666666e, 0x66666667, 0x7, x1, 1328, x2)
900012a6:	66666537          	lui	a0,0x66666
900012aa:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
900012ae:	051d                	addi	a0,a0,7
900012b0:	52a0a823          	sw	a0,1328(ra)

900012b4 <inst_361>:

inst_361:
// rs1_val==1717986919 and imm_val==-1, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:-0x1
TEST_CI_OP( c.addi, x10, 0x66666666, 0x66666667, -0x1, x1, 1332, x2)
900012b4:	66666537          	lui	a0,0x66666
900012b8:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
900012bc:	157d                	addi	a0,a0,-1
900012be:	52a0aa23          	sw	a0,1332(ra)

900012c2 <inst_362>:

inst_362:
// rs1_val==1717986919 and imm_val==-4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:0x66666667; immval:-0x4
TEST_CI_OP( c.addi, x10, 0x66666663, 0x66666667, -0x4, x1, 1336, x2)
900012c2:	66666537          	lui	a0,0x66666
900012c6:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x666660fb>
900012ca:	1571                	addi	a0,a0,-4
900012cc:	52a0ac23          	sw	a0,1336(ra)

900012d0 <inst_363>:

inst_363:
// rs1_val==-46339 and imm_val==3, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:0x3
TEST_CI_OP( c.addi, x10, 0xffff4b00, -0xb503, 0x3, x1, 1340, x2)
900012d0:	ffff5537          	lui	a0,0xffff5
900012d4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
900012d8:	050d                	addi	a0,a0,3
900012da:	52a0ae23          	sw	a0,1340(ra)

900012de <inst_364>:

inst_364:
// rs1_val==-46339 and imm_val==5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:0x5
TEST_CI_OP( c.addi, x10, 0xffff4b02, -0xb503, 0x5, x1, 1344, x2)
900012de:	ffff5537          	lui	a0,0xffff5
900012e2:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
900012e6:	0515                	addi	a0,a0,5
900012e8:	54a0a023          	sw	a0,1344(ra)

900012ec <inst_365>:

inst_365:
// rs1_val==-46339 and imm_val==10, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:0xa
TEST_CI_OP( c.addi, x10, 0xffff4b07, -0xb503, 0xa, x1, 1348, x2)
900012ec:	ffff5537          	lui	a0,0xffff5
900012f0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
900012f4:	0529                	addi	a0,a0,10
900012f6:	54a0a223          	sw	a0,1348(ra)

900012fa <inst_366>:

inst_366:
// rs1_val==-46339 and imm_val==6, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:0x6
TEST_CI_OP( c.addi, x10, 0xffff4b03, -0xb503, 0x6, x1, 1352, x2)
900012fa:	ffff5537          	lui	a0,0xffff5
900012fe:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
90001302:	0519                	addi	a0,a0,6
90001304:	54a0a423          	sw	a0,1352(ra)

90001308 <inst_367>:

inst_367:
// rs1_val==-46339 and imm_val==-2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:-0x2
TEST_CI_OP( c.addi, x10, 0xffff4afb, -0xb503, -0x2, x1, 1356, x2)
90001308:	ffff5537          	lui	a0,0xffff5
9000130c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
90001310:	1579                	addi	a0,a0,-2
90001312:	54a0a623          	sw	a0,1356(ra)

90001316 <inst_368>:

inst_368:
// rs1_val==-46339 and imm_val==-5, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:-0x5
TEST_CI_OP( c.addi, x10, 0xffff4af8, -0xb503, -0x5, x1, 1360, x2)
90001316:	ffff5537          	lui	a0,0xffff5
9000131a:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
9000131e:	156d                	addi	a0,a0,-5
90001320:	54a0a823          	sw	a0,1360(ra)

90001324 <inst_369>:

inst_369:
// rs1_val==-46339 and imm_val==2, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:0x2
TEST_CI_OP( c.addi, x10, 0xffff4aff, -0xb503, 0x2, x1, 1364, x2)
90001324:	ffff5537          	lui	a0,0xffff5
90001328:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
9000132c:	0509                	addi	a0,a0,2
9000132e:	54a0aa23          	sw	a0,1364(ra)

90001332 <inst_370>:

inst_370:
// rs1_val==-46339 and imm_val==4, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:0x4
TEST_CI_OP( c.addi, x10, 0xffff4b01, -0xb503, 0x4, x1, 1368, x2)
90001332:	ffff5537          	lui	a0,0xffff5
90001336:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
9000133a:	0511                	addi	a0,a0,4
9000133c:	54a0ac23          	sw	a0,1368(ra)

90001340 <inst_371>:

inst_371:
// rs1_val==-46339 and imm_val==9, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:0x9
TEST_CI_OP( c.addi, x10, 0xffff4b06, -0xb503, 0x9, x1, 1372, x2)
90001340:	ffff5537          	lui	a0,0xffff5
90001344:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
90001348:	0525                	addi	a0,a0,9
9000134a:	54a0ae23          	sw	a0,1372(ra)

9000134e <inst_372>:

inst_372:
// rs1_val==-46339 and imm_val==0, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:0x0
TEST_CI_OP( c.addi, x10, 0xffff4afd, -0xb503, 0x0, x1, 1376, x2)
9000134e:	ffff5537          	lui	a0,0xffff5
90001352:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
90001356:	0501                	addi	a0,a0,0
90001358:	56a0a023          	sw	a0,1376(ra)

9000135c <inst_373>:

inst_373:
// rs1_val==-46339 and imm_val==11, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:0xb
TEST_CI_OP( c.addi, x10, 0xffff4b08, -0xb503, 0xb, x1, 1380, x2)
9000135c:	ffff5537          	lui	a0,0xffff5
90001360:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
90001364:	052d                	addi	a0,a0,11
90001366:	56a0a223          	sw	a0,1380(ra)

9000136a <inst_374>:

inst_374:
// rs1_val==-46339 and imm_val==7, 
// opcode:c.addi; op1:x10; dest:x10 op1val:-0xb503; immval:0x7
TEST_CI_OP( c.addi, x10, 0xffff4b04, -0xb503, 0x7, x1, 1384, x2)
9000136a:	ffff5537          	lui	a0,0xffff5
9000136e:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff13f9>
90001372:	051d                	addi	a0,a0,7
90001374:	56a0a423          	sw	a0,1384(ra)
90001378:	00000013          	nop
9000137c:	00000013          	nop

90001380 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
90001380:	0091                	addi	ra,ra,4
90001382:	4085                	li	ra,1

90001384 <write_tohost>:
90001384:	00001f17          	auipc	t5,0x1
90001388:	c61f2e23          	sw	ra,-900(t5) # 90002000 <tohost>

9000138c <self_loop>:
9000138c:	a001                	j	9000138c <self_loop>
	...
