
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/C/clw-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed9ca9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f76bd52>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6f73>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd95d1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00002317          	auipc	t1,0x2
9000002c:	fd830313          	addi	t1,t1,-40 # 90002000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb94f6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfddb45>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfecbba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff76a7>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f996b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bfbbb3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adfccd7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656fd569>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7d9b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfda3>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eaddce9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56dd72>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7f83>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d59dd9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4beabdea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56fbf>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa95f7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d39f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe8bfa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df56c7>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f897b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db7b3bb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edbc8db>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676dd36b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb6d8b3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*);def TEST_CASE_1=True;",clw)

RVTEST_SIGBASE( x1,signature_x1_1)
900000f8:	00002097          	auipc	ra,0x2
900000fc:	f1808093          	addi	ra,ra,-232 # 90002010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rs1 == rd, rd==x12, rs1==x12, imm_val > 0, 
// opcode: c.lw; op1:x12; dest:x12; immval:0x30
TEST_LOAD(x1,x2,0,x12,x12,0x30,0,c.lw,0)
90000100:	00002617          	auipc	a2,0x2
90000104:	ed060613          	addi	a2,a2,-304 # 90001fd0 <fromhost+0xed0>
90000108:	5a10                	lw	a2,48(a2)
9000010a:	0001                	nop
9000010c:	0001                	nop
9000010e:	00c0a023          	sw	a2,0(ra)

90000112 <inst_1>:

inst_1:
// rs1 != rd, rd==x11, rs1==x10, imm_val == 0, 
// opcode: c.lw; op1:x10; dest:x11; immval:0x0
TEST_LOAD(x1,x2,0,x10,x11,0x0,4,c.lw,0)
90000112:	00002517          	auipc	a0,0x2
90000116:	eee50513          	addi	a0,a0,-274 # 90002000 <rvtest_data_begin>
9000011a:	410c                	lw	a1,0(a0)
9000011c:	0001                	nop
9000011e:	0001                	nop
90000120:	00b0a223          	sw	a1,4(ra)

90000124 <inst_2>:

inst_2:
// rd==x14, rs1==x9, imm_val == 4, 
// opcode: c.lw; op1:x9; dest:x14; immval:0x4
TEST_LOAD(x1,x2,0,x9,x14,0x4,8,c.lw,0)
90000124:	00002497          	auipc	s1,0x2
90000128:	ed848493          	addi	s1,s1,-296 # 90001ffc <fromhost+0xefc>
9000012c:	40d8                	lw	a4,4(s1)
9000012e:	0001                	nop
90000130:	0001                	nop
90000132:	00e0a423          	sw	a4,8(ra)

90000136 <inst_3>:

inst_3:
// rd==x13, rs1==x15, imm_val == 8, 
// opcode: c.lw; op1:x15; dest:x13; immval:0x8
TEST_LOAD(x1,x2,0,x15,x13,0x8,12,c.lw,0)
90000136:	00002797          	auipc	a5,0x2
9000013a:	ec278793          	addi	a5,a5,-318 # 90001ff8 <fromhost+0xef8>
9000013e:	4794                	lw	a3,8(a5)
90000140:	0001                	nop
90000142:	0001                	nop
90000144:	00d0a623          	sw	a3,12(ra)

90000148 <inst_4>:

inst_4:
// rd==x10, rs1==x14, imm_val == 16, 
// opcode: c.lw; op1:x14; dest:x10; immval:0x10
TEST_LOAD(x1,x2,0,x14,x10,0x10,16,c.lw,0)
90000148:	00002717          	auipc	a4,0x2
9000014c:	ea870713          	addi	a4,a4,-344 # 90001ff0 <fromhost+0xef0>
90000150:	4b08                	lw	a0,16(a4)
90000152:	0001                	nop
90000154:	0001                	nop
90000156:	00a0a823          	sw	a0,16(ra)

9000015a <inst_5>:

inst_5:
// rd==x15, rs1==x8, imm_val == 32, 
// opcode: c.lw; op1:x8; dest:x15; immval:0x20
TEST_LOAD(x1,x2,0,x8,x15,0x20,20,c.lw,0)
9000015a:	00002417          	auipc	s0,0x2
9000015e:	e8640413          	addi	s0,s0,-378 # 90001fe0 <fromhost+0xee0>
90000162:	501c                	lw	a5,32(s0)
90000164:	0001                	nop
90000166:	0001                	nop
90000168:	00f0aa23          	sw	a5,20(ra)

9000016c <inst_6>:

inst_6:
// rd==x8, rs1==x11, imm_val == 64, 
// opcode: c.lw; op1:x11; dest:x8; immval:0x40
TEST_LOAD(x1,x2,0,x11,x8,0x40,24,c.lw,0)
9000016c:	00002597          	auipc	a1,0x2
90000170:	e5458593          	addi	a1,a1,-428 # 90001fc0 <fromhost+0xec0>
90000174:	41a0                	lw	s0,64(a1)
90000176:	0001                	nop
90000178:	0001                	nop
9000017a:	0080ac23          	sw	s0,24(ra)

9000017e <inst_7>:

inst_7:
// rd==x9, rs1==x13, imm_val == 120, 
// opcode: c.lw; op1:x13; dest:x9; immval:0x78
TEST_LOAD(x1,x2,0,x13,x9,0x78,28,c.lw,0)
9000017e:	00002697          	auipc	a3,0x2
90000182:	e0a68693          	addi	a3,a3,-502 # 90001f88 <fromhost+0xe88>
90000186:	5ea4                	lw	s1,120(a3)
90000188:	0001                	nop
9000018a:	0001                	nop
9000018c:	0090ae23          	sw	s1,28(ra)

90000190 <inst_8>:

inst_8:
// imm_val == 116, 
// opcode: c.lw; op1:x11; dest:x10; immval:0x74
TEST_LOAD(x1,x2,0,x11,x10,0x74,32,c.lw,0)
90000190:	00002597          	auipc	a1,0x2
90000194:	dfc58593          	addi	a1,a1,-516 # 90001f8c <fromhost+0xe8c>
90000198:	59e8                	lw	a0,116(a1)
9000019a:	0001                	nop
9000019c:	0001                	nop
9000019e:	02a0a023          	sw	a0,32(ra)

900001a2 <inst_9>:

inst_9:
// imm_val == 108, 
// opcode: c.lw; op1:x11; dest:x10; immval:0x6c
TEST_LOAD(x1,x2,0,x11,x10,0x6c,36,c.lw,0)
900001a2:	00002597          	auipc	a1,0x2
900001a6:	df258593          	addi	a1,a1,-526 # 90001f94 <fromhost+0xe94>
900001aa:	55e8                	lw	a0,108(a1)
900001ac:	0001                	nop
900001ae:	0001                	nop
900001b0:	02a0a223          	sw	a0,36(ra)

900001b4 <inst_10>:

inst_10:
// imm_val == 92, 
// opcode: c.lw; op1:x11; dest:x10; immval:0x5c
TEST_LOAD(x1,x2,0,x11,x10,0x5c,40,c.lw,0)
900001b4:	00002597          	auipc	a1,0x2
900001b8:	df058593          	addi	a1,a1,-528 # 90001fa4 <fromhost+0xea4>
900001bc:	4de8                	lw	a0,92(a1)
900001be:	0001                	nop
900001c0:	0001                	nop
900001c2:	02a0a423          	sw	a0,40(ra)

900001c6 <inst_11>:

inst_11:
// imm_val == 60, 
// opcode: c.lw; op1:x11; dest:x10; immval:0x3c
TEST_LOAD(x1,x2,0,x11,x10,0x3c,44,c.lw,0)
900001c6:	00002597          	auipc	a1,0x2
900001ca:	dfe58593          	addi	a1,a1,-514 # 90001fc4 <fromhost+0xec4>
900001ce:	5dc8                	lw	a0,60(a1)
900001d0:	0001                	nop
900001d2:	0001                	nop
900001d4:	02a0a623          	sw	a0,44(ra)

900001d8 <inst_12>:

inst_12:
// imm_val == 84, 
// opcode: c.lw; op1:x11; dest:x10; immval:0x54
TEST_LOAD(x1,x2,0,x11,x10,0x54,48,c.lw,0)
900001d8:	00002597          	auipc	a1,0x2
900001dc:	dd458593          	addi	a1,a1,-556 # 90001fac <fromhost+0xeac>
900001e0:	49e8                	lw	a0,84(a1)
900001e2:	0001                	nop
900001e4:	0001                	nop
900001e6:	02a0a823          	sw	a0,48(ra)

900001ea <inst_13>:

inst_13:
// imm_val == 40, 
// opcode: c.lw; op1:x11; dest:x10; immval:0x28
TEST_LOAD(x1,x2,0,x11,x10,0x28,52,c.lw,0)
900001ea:	00002597          	auipc	a1,0x2
900001ee:	dee58593          	addi	a1,a1,-530 # 90001fd8 <fromhost+0xed8>
900001f2:	5588                	lw	a0,40(a1)
900001f4:	0001                	nop
900001f6:	0001                	nop
900001f8:	02a0aa23          	sw	a0,52(ra)
900001fc:	00000013          	nop

90000200 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
90000200:	0091                	addi	ra,ra,4
90000202:	4085                	li	ra,1

90000204 <write_tohost>:
90000204:	00001f17          	auipc	t5,0x1
90000208:	de1f2e23          	sw	ra,-516(t5) # 90001000 <tohost>

9000020c <self_loop>:
9000020c:	a001                	j	9000020c <self_loop>
	...
