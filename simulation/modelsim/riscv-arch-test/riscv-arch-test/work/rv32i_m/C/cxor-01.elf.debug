
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/C/cxor-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed73a9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f769452>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6e8f>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd6cd1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00004317          	auipc	t1,0x4
9000002c:	fd830313          	addi	t1,t1,-40 # 90004000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb6bf6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfdda61>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfea2ba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff75c3>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f706b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bf92b3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adfa3d7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656fac69>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7b0b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfcbf>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eadb3e9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56b472>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7e9f>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d574d9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4bea94ea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56edb>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa6cf7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d10f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe62fa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df55e3>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f607b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db78abb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edb9fdb>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676daa6b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb6afb3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*);def TEST_CASE_1=True;",cxor)

RVTEST_SIGBASE( x1,signature_x1_1)
900000f8:	00004097          	auipc	ra,0x4
900000fc:	f1808093          	addi	ra,ra,-232 # 90004010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rs1 != rs2, rs1==x10, rs2==x14, rs2_val == (-2**(xlen-1)), rs2_val == -2147483648, rs2_val < 0
// opcode: c.xor; op1:x10; op2:x14; op1val:0x5; op2val:-0x80000000
TEST_CR_OP( c.xor, x10, x14, 0x80000005, 0x5, -0x80000000, x1, 0, x2)
90000100:	80000737          	lui	a4,0x80000
90000104:	00500513          	li	a0,5
90000108:	8d39                	xor	a0,a0,a4
9000010a:	00a0a023          	sw	a0,0(ra)

9000010e <inst_1>:

inst_1:
// rs1 == rs2, rs1==x9, rs2==x9, rs2_val == 0, rs1_val == 32768
// opcode: c.xor; op1:x9; op2:x9; op1val:0x8000; op2val:0x8000
TEST_CR_OP( c.xor, x9, x9, 0x0, 0x8000, 0x8000, x1, 4, x2)
9000010e:	000084b7          	lui	s1,0x8
90000112:	000084b7          	lui	s1,0x8
90000116:	8ca5                	xor	s1,s1,s1
90000118:	0090a223          	sw	s1,4(ra)

9000011c <inst_2>:

inst_2:
// rs1==x12, rs2==x15, rs2_val == (2**(xlen-1)-1), rs2_val > 0, rs2_val == 2147483647
// opcode: c.xor; op1:x12; op2:x15; op1val:-0x4; op2val:0x7fffffff
TEST_CR_OP( c.xor, x12, x15, 0x80000003, -0x4, 0x7fffffff, x1, 8, x2)
9000011c:	800007b7          	lui	a5,0x80000
90000120:	fff78793          	addi	a5,a5,-1 # 7fffffff <_end+0xefffb4fb>
90000124:	ffc00613          	li	a2,-4
90000128:	8e3d                	xor	a2,a2,a5
9000012a:	00c0a423          	sw	a2,8(ra)

9000012e <inst_3>:

inst_3:
// rs1==x15, rs2==x13, rs2_val == 1, 
// opcode: c.xor; op1:x15; op2:x13; op1val:0x6; op2val:0x1
TEST_CR_OP( c.xor, x15, x13, 0x7, 0x6, 0x1, x1, 12, x2)
9000012e:	00100693          	li	a3,1
90000132:	00600793          	li	a5,6
90000136:	8fb5                	xor	a5,a5,a3
90000138:	00f0a623          	sw	a5,12(ra)

9000013c <inst_4>:

inst_4:
// rs1==x8, rs2==x12, rs1_val == (-2**(xlen-1)), rs1_val == -2147483648
// opcode: c.xor; op1:x8; op2:x12; op1val:-0x80000000; op2val:-0xb504
TEST_CR_OP( c.xor, x8, x12, 0x7fff4afc, -0x80000000, -0xb504, x1, 16, x2)
9000013c:	ffff5637          	lui	a2,0xffff5
90000140:	afc60613          	addi	a2,a2,-1284 # ffff4afc <_end+0x6ffefff8>
90000144:	80000437          	lui	s0,0x80000
90000148:	8c31                	xor	s0,s0,a2
9000014a:	0080a823          	sw	s0,16(ra)

9000014e <inst_5>:

inst_5:
// rs1==x14, rs2==x10, rs1_val == 0, rs2_val == 1024
// opcode: c.xor; op1:x14; op2:x10; op1val:0x0; op2val:0x400
TEST_CR_OP( c.xor, x14, x10, 0x400, 0x0, 0x400, x1, 20, x2)
9000014e:	40000513          	li	a0,1024
90000152:	00000713          	li	a4,0
90000156:	8f29                	xor	a4,a4,a0
90000158:	00e0aa23          	sw	a4,20(ra)

9000015c <inst_6>:

inst_6:
// rs1==x11, rs2==x8, rs1_val == (2**(xlen-1)-1), rs1_val == 2147483647
// opcode: c.xor; op1:x11; op2:x8; op1val:0x7fffffff; op2val:0x6
TEST_CR_OP( c.xor, x11, x8, 0x7ffffff9, 0x7fffffff, 0x6, x1, 24, x2)
9000015c:	00600413          	li	s0,6
90000160:	800005b7          	lui	a1,0x80000
90000164:	fff58593          	addi	a1,a1,-1 # 7fffffff <_end+0xefffb4fb>
90000168:	8da1                	xor	a1,a1,s0
9000016a:	00b0ac23          	sw	a1,24(ra)

9000016e <inst_7>:

inst_7:
// rs1==x13, rs2==x11, rs1_val == 1, rs2_val == 64
// opcode: c.xor; op1:x13; op2:x11; op1val:0x1; op2val:0x40
TEST_CR_OP( c.xor, x13, x11, 0x41, 0x1, 0x40, x1, 28, x2)
9000016e:	04000593          	li	a1,64
90000172:	00100693          	li	a3,1
90000176:	8ead                	xor	a3,a3,a1
90000178:	00d0ae23          	sw	a3,28(ra)

9000017c <inst_8>:

inst_8:
// rs2_val == 2, rs1_val == -5
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x5; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0xfffffff9, -0x5, 0x2, x1, 32, x2)
9000017c:	00200593          	li	a1,2
90000180:	ffb00513          	li	a0,-5
90000184:	8d2d                	xor	a0,a0,a1
90000186:	02a0a023          	sw	a0,32(ra)

9000018a <inst_9>:

inst_9:
// rs2_val == 4, rs1_val == -1431655766, rs1_val==-1431655766 and rs2_val==4
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaae, -0x55555556, 0x4, x1, 36, x2)
9000018a:	00400593          	li	a1,4
9000018e:	aaaab537          	lui	a0,0xaaaab
90000192:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000196:	8d2d                	xor	a0,a0,a1
90000198:	02a0a223          	sw	a0,36(ra)

9000019c <inst_10>:

inst_10:
// rs2_val == 8, rs1_val == 2048
// opcode: c.xor; op1:x10; op2:x11; op1val:0x800; op2val:0x8
TEST_CR_OP( c.xor, x10, x11, 0x808, 0x800, 0x8, x1, 40, x2)
9000019c:	00800593          	li	a1,8
900001a0:	00001537          	lui	a0,0x1
900001a4:	80050513          	addi	a0,a0,-2048 # 800 <offset+0x6e4>
900001a8:	8d2d                	xor	a0,a0,a1
900001aa:	02a0a423          	sw	a0,40(ra)

900001ae <inst_11>:

inst_11:
// rs2_val == 16, rs1_val == -32769
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x8001; op2val:0x10
TEST_CR_OP( c.xor, x10, x11, 0xffff7fef, -0x8001, 0x10, x1, 44, x2)
900001ae:	01000593          	li	a1,16
900001b2:	ffff8537          	lui	a0,0xffff8
900001b6:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0x6fff34fb>
900001ba:	8d2d                	xor	a0,a0,a1
900001bc:	02a0a623          	sw	a0,44(ra)

900001c0 <inst_12>:

inst_12:
// rs2_val == 32, rs1_val == 268435456
// opcode: c.xor; op1:x10; op2:x11; op1val:0x10000000; op2val:0x20
TEST_CR_OP( c.xor, x10, x11, 0x10000020, 0x10000000, 0x20, x1, 48, x2)
900001c0:	02000593          	li	a1,32
900001c4:	10000537          	lui	a0,0x10000
900001c8:	8d2d                	xor	a0,a0,a1
900001ca:	02a0a823          	sw	a0,48(ra)

900001ce <inst_13>:

inst_13:
// rs2_val == 128, rs1_val == -4194305
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x400001; op2val:0x80
TEST_CR_OP( c.xor, x10, x11, 0xffbfff7f, -0x400001, 0x80, x1, 52, x2)
900001ce:	08000593          	li	a1,128
900001d2:	ffc00537          	lui	a0,0xffc00
900001d6:	fff50513          	addi	a0,a0,-1 # ffbfffff <_end+0x6fbfb4fb>
900001da:	8d2d                	xor	a0,a0,a1
900001dc:	02a0aa23          	sw	a0,52(ra)

900001e0 <inst_14>:

inst_14:
// rs2_val == 256, rs1_val == 536870912
// opcode: c.xor; op1:x10; op2:x11; op1val:0x20000000; op2val:0x100
TEST_CR_OP( c.xor, x10, x11, 0x20000100, 0x20000000, 0x100, x1, 56, x2)
900001e0:	10000593          	li	a1,256
900001e4:	20000537          	lui	a0,0x20000
900001e8:	8d2d                	xor	a0,a0,a1
900001ea:	02a0ac23          	sw	a0,56(ra)

900001ee <inst_15>:

inst_15:
// rs2_val == 512, rs1_val == -33
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x21; op2val:0x200
TEST_CR_OP( c.xor, x10, x11, 0xfffffddf, -0x21, 0x200, x1, 60, x2)
900001ee:	20000593          	li	a1,512
900001f2:	fdf00513          	li	a0,-33
900001f6:	8d2d                	xor	a0,a0,a1
900001f8:	02a0ae23          	sw	a0,60(ra)

900001fc <inst_16>:

inst_16:
// rs2_val == 2048, rs1_val == -67108865
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x4000001; op2val:0x800
TEST_CR_OP( c.xor, x10, x11, 0xfbfff7ff, -0x4000001, 0x800, x1, 64, x2)
900001fc:	000015b7          	lui	a1,0x1
90000200:	80058593          	addi	a1,a1,-2048 # 800 <offset+0x6e4>
90000204:	fc000537          	lui	a0,0xfc000
90000208:	fff50513          	addi	a0,a0,-1 # fbffffff <_end+0x6bffb4fb>
9000020c:	8d2d                	xor	a0,a0,a1
9000020e:	04a0a023          	sw	a0,64(ra)

90000212 <inst_17>:

inst_17:
// rs2_val == 4096, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x8; op2val:0x1000
TEST_CR_OP( c.xor, x10, x11, 0xffffeff8, -0x8, 0x1000, x1, 68, x2)
90000212:	000015b7          	lui	a1,0x1
90000216:	ff800513          	li	a0,-8
9000021a:	8d2d                	xor	a0,a0,a1
9000021c:	04a0a223          	sw	a0,68(ra)

90000220 <inst_18>:

inst_18:
// rs2_val == 8192, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x80000000; op2val:0x2000
TEST_CR_OP( c.xor, x10, x11, 0x80002000, -0x80000000, 0x2000, x1, 72, x2)
90000220:	000025b7          	lui	a1,0x2
90000224:	80000537          	lui	a0,0x80000
90000228:	8d2d                	xor	a0,a0,a1
9000022a:	04a0a423          	sw	a0,72(ra)

9000022e <inst_19>:

inst_19:
// rs2_val == 16384, rs1_val == -2
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x2; op2val:0x4000
TEST_CR_OP( c.xor, x10, x11, 0xffffbffe, -0x2, 0x4000, x1, 76, x2)
9000022e:	000045b7          	lui	a1,0x4
90000232:	ffe00513          	li	a0,-2
90000236:	8d2d                	xor	a0,a0,a1
90000238:	04a0a623          	sw	a0,76(ra)

9000023c <inst_20>:

inst_20:
// rs2_val == 32768, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x8000
TEST_CR_OP( c.xor, x10, x11, 0xaaaa2aab, -0x55555555, 0x8000, x1, 80, x2)
9000023c:	000085b7          	lui	a1,0x8
90000240:	aaaab537          	lui	a0,0xaaaab
90000244:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90000248:	8d2d                	xor	a0,a0,a1
9000024a:	04a0a823          	sw	a0,80(ra)

9000024e <inst_21>:

inst_21:
// rs2_val == 65536, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x10000
TEST_CR_OP( c.xor, x10, x11, 0x55545554, 0x55555554, 0x10000, x1, 84, x2)
9000024e:	000105b7          	lui	a1,0x10
90000252:	55555537          	lui	a0,0x55555
90000256:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
9000025a:	8d2d                	xor	a0,a0,a1
9000025c:	04a0aa23          	sw	a0,84(ra)

90000260 <inst_22>:

inst_22:
// rs2_val == 131072, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x20000
TEST_CR_OP( c.xor, x10, x11, 0x66646665, 0x66666665, 0x20000, x1, 88, x2)
90000260:	000205b7          	lui	a1,0x20
90000264:	66666537          	lui	a0,0x66666
90000268:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
9000026c:	8d2d                	xor	a0,a0,a1
9000026e:	04a0ac23          	sw	a0,88(ra)

90000272 <inst_23>:

inst_23:
// rs2_val == 262144, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x40000
TEST_CR_OP( c.xor, x10, x11, 0x66626667, 0x66666667, 0x40000, x1, 92, x2)
90000272:	000405b7          	lui	a1,0x40
90000276:	66666537          	lui	a0,0x66666
9000027a:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
9000027e:	8d2d                	xor	a0,a0,a1
90000280:	04a0ae23          	sw	a0,92(ra)

90000284 <inst_24>:

inst_24:
// rs2_val == 524288, rs1_val == -524289
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x80001; op2val:0x80000
TEST_CR_OP( c.xor, x10, x11, 0xffffffff, -0x80001, 0x80000, x1, 96, x2)
90000284:	000805b7          	lui	a1,0x80
90000288:	fff80537          	lui	a0,0xfff80
9000028c:	fff50513          	addi	a0,a0,-1 # fff7ffff <_end+0x6ff7b4fb>
90000290:	8d2d                	xor	a0,a0,a1
90000292:	06a0a023          	sw	a0,96(ra)

90000296 <inst_25>:

inst_25:
// rs2_val == 1048576, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x80001; op2val:0x100000
TEST_CR_OP( c.xor, x10, x11, 0xffe7ffff, -0x80001, 0x100000, x1, 100, x2)
90000296:	001005b7          	lui	a1,0x100
9000029a:	fff80537          	lui	a0,0xfff80
9000029e:	fff50513          	addi	a0,a0,-1 # fff7ffff <_end+0x6ff7b4fb>
900002a2:	8d2d                	xor	a0,a0,a1
900002a4:	06a0a223          	sw	a0,100(ra)

900002a8 <inst_26>:

inst_26:
// rs2_val == 2097152, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x200000
TEST_CR_OP( c.xor, x10, x11, 0x200005, 0x5, 0x200000, x1, 104, x2)
900002a8:	002005b7          	lui	a1,0x200
900002ac:	00500513          	li	a0,5
900002b0:	8d2d                	xor	a0,a0,a1
900002b2:	06a0a423          	sw	a0,104(ra)

900002b6 <inst_27>:

inst_27:
// rs2_val == 4194304, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x400001; op2val:0x400000
TEST_CR_OP( c.xor, x10, x11, 0xffffffff, -0x400001, 0x400000, x1, 108, x2)
900002b6:	004005b7          	lui	a1,0x400
900002ba:	ffc00537          	lui	a0,0xffc00
900002be:	fff50513          	addi	a0,a0,-1 # ffbfffff <_end+0x6fbfb4fb>
900002c2:	8d2d                	xor	a0,a0,a1
900002c4:	06a0a623          	sw	a0,108(ra)

900002c8 <inst_28>:

inst_28:
// rs2_val == 8388608, rs1_val == 512
// opcode: c.xor; op1:x10; op2:x11; op1val:0x200; op2val:0x800000
TEST_CR_OP( c.xor, x10, x11, 0x800200, 0x200, 0x800000, x1, 112, x2)
900002c8:	008005b7          	lui	a1,0x800
900002cc:	20000513          	li	a0,512
900002d0:	8d2d                	xor	a0,a0,a1
900002d2:	06a0a823          	sw	a0,112(ra)

900002d6 <inst_29>:

inst_29:
// rs2_val == 16777216, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xa; op2val:0x1000000
TEST_CR_OP( c.xor, x10, x11, 0xfefffff6, -0xa, 0x1000000, x1, 116, x2)
900002d6:	010005b7          	lui	a1,0x1000
900002da:	ff600513          	li	a0,-10
900002de:	8d2d                	xor	a0,a0,a1
900002e0:	06a0aa23          	sw	a0,116(ra)

900002e4 <inst_30>:

inst_30:
// rs2_val == 33554432, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x2000000
TEST_CR_OP( c.xor, x10, x11, 0x57555554, 0x55555554, 0x2000000, x1, 120, x2)
900002e4:	020005b7          	lui	a1,0x2000
900002e8:	55555537          	lui	a0,0x55555
900002ec:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
900002f0:	8d2d                	xor	a0,a0,a1
900002f2:	06a0ac23          	sw	a0,120(ra)

900002f6 <inst_31>:

inst_31:
// rs2_val == 67108864, rs1_val == -513
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x201; op2val:0x4000000
TEST_CR_OP( c.xor, x10, x11, 0xfbfffdff, -0x201, 0x4000000, x1, 124, x2)
900002f6:	040005b7          	lui	a1,0x4000
900002fa:	dff00513          	li	a0,-513
900002fe:	8d2d                	xor	a0,a0,a1
90000300:	06a0ae23          	sw	a0,124(ra)

90000304 <inst_32>:

inst_32:
// rs2_val == 134217728, rs1_val == -65
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x41; op2val:0x8000000
TEST_CR_OP( c.xor, x10, x11, 0xf7ffffbf, -0x41, 0x8000000, x1, 128, x2)
90000304:	080005b7          	lui	a1,0x8000
90000308:	fbf00513          	li	a0,-65
9000030c:	8d2d                	xor	a0,a0,a1
9000030e:	08a0a023          	sw	a0,128(ra)

90000312 <inst_33>:

inst_33:
// rs2_val == 268435456, rs1_val == 16384
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4000; op2val:0x10000000
TEST_CR_OP( c.xor, x10, x11, 0x10004000, 0x4000, 0x10000000, x1, 132, x2)
90000312:	100005b7          	lui	a1,0x10000
90000316:	00004537          	lui	a0,0x4
9000031a:	8d2d                	xor	a0,a0,a1
9000031c:	08a0a223          	sw	a0,132(ra)

90000320 <inst_34>:

inst_34:
// rs2_val == 536870912, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x20000000
TEST_CR_OP( c.xor, x10, x11, 0x20000000, 0x0, 0x20000000, x1, 136, x2)
90000320:	200005b7          	lui	a1,0x20000
90000324:	00000513          	li	a0,0
90000328:	8d2d                	xor	a0,a0,a1
9000032a:	08a0a423          	sw	a0,136(ra)

9000032e <inst_35>:

inst_35:
// rs2_val == 1073741824, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x40000000
TEST_CR_OP( c.xor, x10, x11, 0x4000b504, 0xb504, 0x40000000, x1, 140, x2)
9000032e:	400005b7          	lui	a1,0x40000
90000332:	0000b537          	lui	a0,0xb
90000336:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
9000033a:	8d2d                	xor	a0,a0,a1
9000033c:	08a0a623          	sw	a0,140(ra)

90000340 <inst_36>:

inst_36:
// rs2_val == -2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:-0x2
TEST_CR_OP( c.xor, x10, x11, 0xffff4afb, 0xb505, -0x2, x1, 144, x2)
90000340:	ffe00593          	li	a1,-2
90000344:	0000b537          	lui	a0,0xb
90000348:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
9000034c:	8d2d                	xor	a0,a0,a1
9000034e:	08a0a823          	sw	a0,144(ra)

90000352 <inst_37>:

inst_37:
// rs2_val == -3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3fffffff; op2val:-0x3
TEST_CR_OP( c.xor, x10, x11, 0xc0000002, 0x3fffffff, -0x3, x1, 148, x2)
90000352:	ffd00593          	li	a1,-3
90000356:	40000537          	lui	a0,0x40000
9000035a:	fff50513          	addi	a0,a0,-1 # 3fffffff <offset+0x3ffffee3>
9000035e:	8d2d                	xor	a0,a0,a1
90000360:	08a0aa23          	sw	a0,148(ra)

90000364 <inst_38>:

inst_38:
// rs2_val == -5, rs1_val == -257
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x101; op2val:-0x5
TEST_CR_OP( c.xor, x10, x11, 0x104, -0x101, -0x5, x1, 152, x2)
90000364:	ffb00593          	li	a1,-5
90000368:	eff00513          	li	a0,-257
9000036c:	8d2d                	xor	a0,a0,a1
9000036e:	08a0ac23          	sw	a0,152(ra)

90000372 <inst_39>:

inst_39:
// rs2_val == -9, rs1_val == 65536
// opcode: c.xor; op1:x10; op2:x11; op1val:0x10000; op2val:-0x9
TEST_CR_OP( c.xor, x10, x11, 0xfffefff7, 0x10000, -0x9, x1, 156, x2)
90000372:	ff700593          	li	a1,-9
90000376:	00010537          	lui	a0,0x10
9000037a:	8d2d                	xor	a0,a0,a1
9000037c:	08a0ae23          	sw	a0,156(ra)

90000380 <inst_40>:

inst_40:
// rs2_val == -17, rs1_val == 134217728
// opcode: c.xor; op1:x10; op2:x11; op1val:0x8000000; op2val:-0x11
TEST_CR_OP( c.xor, x10, x11, 0xf7ffffef, 0x8000000, -0x11, x1, 160, x2)
90000380:	fef00593          	li	a1,-17
90000384:	08000537          	lui	a0,0x8000
90000388:	8d2d                	xor	a0,a0,a1
9000038a:	0aa0a023          	sw	a0,160(ra)

9000038e <inst_41>:

inst_41:
// rs2_val == -33, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:-0x21
TEST_CR_OP( c.xor, x10, x11, 0x55555574, -0x55555555, -0x21, x1, 164, x2)
9000038e:	fdf00593          	li	a1,-33
90000392:	aaaab537          	lui	a0,0xaaaab
90000396:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
9000039a:	8d2d                	xor	a0,a0,a1
9000039c:	0aa0a223          	sw	a0,164(ra)

900003a0 <inst_42>:

inst_42:
// rs2_val == -65, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:-0x41
TEST_CR_OP( c.xor, x10, x11, 0xffffffb9, 0x6, -0x41, x1, 168, x2)
900003a0:	fbf00593          	li	a1,-65
900003a4:	00600513          	li	a0,6
900003a8:	8d2d                	xor	a0,a0,a1
900003aa:	0aa0a423          	sw	a0,168(ra)

900003ae <inst_43>:

inst_43:
// rs2_val == -129, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x21; op2val:-0x81
TEST_CR_OP( c.xor, x10, x11, 0xa0, -0x21, -0x81, x1, 172, x2)
900003ae:	f7f00593          	li	a1,-129
900003b2:	fdf00513          	li	a0,-33
900003b6:	8d2d                	xor	a0,a0,a1
900003b8:	0aa0a623          	sw	a0,172(ra)

900003bc <inst_44>:

inst_44:
// rs2_val == -257, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:-0x101
TEST_CR_OP( c.xor, x10, x11, 0xfffffeff, 0x0, -0x101, x1, 176, x2)
900003bc:	eff00593          	li	a1,-257
900003c0:	00000513          	li	a0,0
900003c4:	8d2d                	xor	a0,a0,a1
900003c6:	0aa0a823          	sw	a0,176(ra)

900003ca <inst_45>:

inst_45:
// rs2_val == -513, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:-0x201
TEST_CR_OP( c.xor, x10, x11, 0xb702, -0xb503, -0x201, x1, 180, x2)
900003ca:	dff00593          	li	a1,-513
900003ce:	ffff5537          	lui	a0,0xffff5
900003d2:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
900003d6:	8d2d                	xor	a0,a0,a1
900003d8:	0aa0aa23          	sw	a0,180(ra)

900003dc <inst_46>:

inst_46:
// rs2_val == -1025, rs1_val == -262145
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x40001; op2val:-0x401
TEST_CR_OP( c.xor, x10, x11, 0x40400, -0x40001, -0x401, x1, 184, x2)
900003dc:	bff00593          	li	a1,-1025
900003e0:	fffc0537          	lui	a0,0xfffc0
900003e4:	fff50513          	addi	a0,a0,-1 # fffbffff <_end+0x6ffbb4fb>
900003e8:	8d2d                	xor	a0,a0,a1
900003ea:	0aa0ac23          	sw	a0,184(ra)

900003ee <inst_47>:

inst_47:
// rs2_val == -2049, rs1_val == 67108864
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4000000; op2val:-0x801
TEST_CR_OP( c.xor, x10, x11, 0xfbfff7ff, 0x4000000, -0x801, x1, 188, x2)
900003ee:	fffff5b7          	lui	a1,0xfffff
900003f2:	7ff58593          	addi	a1,a1,2047 # fffff7ff <_end+0x6fffacfb>
900003f6:	04000537          	lui	a0,0x4000
900003fa:	8d2d                	xor	a0,a0,a1
900003fc:	0aa0ae23          	sw	a0,188(ra)

90000400 <inst_48>:

inst_48:
// rs2_val == -4097, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x80000000; op2val:-0x1001
TEST_CR_OP( c.xor, x10, x11, 0x7fffefff, -0x80000000, -0x1001, x1, 192, x2)
90000400:	fffff5b7          	lui	a1,0xfffff
90000404:	fff58593          	addi	a1,a1,-1 # ffffefff <_end+0x6fffa4fb>
90000408:	80000537          	lui	a0,0x80000
9000040c:	8d2d                	xor	a0,a0,a1
9000040e:	0ca0a023          	sw	a0,192(ra)

90000412 <inst_49>:

inst_49:
// rs2_val == -8193, rs1_val == 2
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:-0x2001
TEST_CR_OP( c.xor, x10, x11, 0xffffdffd, 0x2, -0x2001, x1, 196, x2)
90000412:	ffffe5b7          	lui	a1,0xffffe
90000416:	fff58593          	addi	a1,a1,-1 # ffffdfff <_end+0x6fff94fb>
9000041a:	00200513          	li	a0,2
9000041e:	8d2d                	xor	a0,a0,a1
90000420:	0ca0a223          	sw	a0,196(ra)

90000424 <inst_50>:

inst_50:
// rs2_val == -16385, rs1_val == 1073741824
// opcode: c.xor; op1:x10; op2:x11; op1val:0x40000000; op2val:-0x4001
TEST_CR_OP( c.xor, x10, x11, 0xbfffbfff, 0x40000000, -0x4001, x1, 200, x2)
90000424:	ffffc5b7          	lui	a1,0xffffc
90000428:	fff58593          	addi	a1,a1,-1 # ffffbfff <_end+0x6fff74fb>
9000042c:	40000537          	lui	a0,0x40000
90000430:	8d2d                	xor	a0,a0,a1
90000432:	0ca0a423          	sw	a0,200(ra)

90000436 <inst_51>:

inst_51:
// rs2_val == -32769, rs1_val == -33554433
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x2000001; op2val:-0x8001
TEST_CR_OP( c.xor, x10, x11, 0x2008000, -0x2000001, -0x8001, x1, 204, x2)
90000436:	ffff85b7          	lui	a1,0xffff8
9000043a:	fff58593          	addi	a1,a1,-1 # ffff7fff <_end+0x6fff34fb>
9000043e:	fe000537          	lui	a0,0xfe000
90000442:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0x6dffb4fb>
90000446:	8d2d                	xor	a0,a0,a1
90000448:	0ca0a623          	sw	a0,204(ra)

9000044c <inst_52>:

inst_52:
// rs2_val == -65537, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x6; op2val:-0x10001
TEST_CR_OP( c.xor, x10, x11, 0x10005, -0x6, -0x10001, x1, 208, x2)
9000044c:	ffff05b7          	lui	a1,0xffff0
90000450:	fff58593          	addi	a1,a1,-1 # fffeffff <_end+0x6ffeb4fb>
90000454:	ffa00513          	li	a0,-6
90000458:	8d2d                	xor	a0,a0,a1
9000045a:	0ca0a823          	sw	a0,208(ra)

9000045e <inst_53>:

inst_53:
// rs2_val == -131073, rs1_val == -536870913
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x20000001; op2val:-0x20001
TEST_CR_OP( c.xor, x10, x11, 0x20020000, -0x20000001, -0x20001, x1, 212, x2)
9000045e:	fffe05b7          	lui	a1,0xfffe0
90000462:	fff58593          	addi	a1,a1,-1 # fffdffff <_end+0x6ffdb4fb>
90000466:	e0000537          	lui	a0,0xe0000
9000046a:	fff50513          	addi	a0,a0,-1 # dfffffff <_end+0x4fffb4fb>
9000046e:	8d2d                	xor	a0,a0,a1
90000470:	0ca0aa23          	sw	a0,212(ra)

90000474 <inst_54>:

inst_54:
// rs2_val == -262145, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x80001; op2val:-0x40001
TEST_CR_OP( c.xor, x10, x11, 0xc0000, -0x80001, -0x40001, x1, 216, x2)
90000474:	fffc05b7          	lui	a1,0xfffc0
90000478:	fff58593          	addi	a1,a1,-1 # fffbffff <_end+0x6ffbb4fb>
9000047c:	fff80537          	lui	a0,0xfff80
90000480:	fff50513          	addi	a0,a0,-1 # fff7ffff <_end+0x6ff7b4fb>
90000484:	8d2d                	xor	a0,a0,a1
90000486:	0ca0ac23          	sw	a0,216(ra)

9000048a <inst_55>:

inst_55:
// rs2_val == -524289, rs1_val == 1048576
// opcode: c.xor; op1:x10; op2:x11; op1val:0x100000; op2val:-0x80001
TEST_CR_OP( c.xor, x10, x11, 0xffe7ffff, 0x100000, -0x80001, x1, 220, x2)
9000048a:	fff805b7          	lui	a1,0xfff80
9000048e:	fff58593          	addi	a1,a1,-1 # fff7ffff <_end+0x6ff7b4fb>
90000492:	00100537          	lui	a0,0x100
90000496:	8d2d                	xor	a0,a0,a1
90000498:	0ca0ae23          	sw	a0,220(ra)

9000049c <inst_56>:

inst_56:
// rs2_val == -1048577, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x20000000; op2val:-0x100001
TEST_CR_OP( c.xor, x10, x11, 0xdfefffff, 0x20000000, -0x100001, x1, 224, x2)
9000049c:	fff005b7          	lui	a1,0xfff00
900004a0:	fff58593          	addi	a1,a1,-1 # ffefffff <_end+0x6fefb4fb>
900004a4:	20000537          	lui	a0,0x20000
900004a8:	8d2d                	xor	a0,a0,a1
900004aa:	0ea0a023          	sw	a0,224(ra)

900004ae <inst_57>:

inst_57:
// rs2_val == -2097153, rs1_val == 262144
// opcode: c.xor; op1:x10; op2:x11; op1val:0x40000; op2val:-0x200001
TEST_CR_OP( c.xor, x10, x11, 0xffdbffff, 0x40000, -0x200001, x1, 228, x2)
900004ae:	ffe005b7          	lui	a1,0xffe00
900004b2:	fff58593          	addi	a1,a1,-1 # ffdfffff <_end+0x6fdfb4fb>
900004b6:	00040537          	lui	a0,0x40
900004ba:	8d2d                	xor	a0,a0,a1
900004bc:	0ea0a223          	sw	a0,228(ra)

900004c0 <inst_58>:

inst_58:
// rs2_val == -4194305, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:-0x400001
TEST_CR_OP( c.xor, x10, x11, 0xcc8ccccd, 0x33333332, -0x400001, x1, 232, x2)
900004c0:	ffc005b7          	lui	a1,0xffc00
900004c4:	fff58593          	addi	a1,a1,-1 # ffbfffff <_end+0x6fbfb4fb>
900004c8:	33333537          	lui	a0,0x33333
900004cc:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
900004d0:	8d2d                	xor	a0,a0,a1
900004d2:	0ea0a423          	sw	a0,232(ra)

900004d6 <inst_59>:

inst_59:
// rs2_val == -8388609, rs1_val == 32
// opcode: c.xor; op1:x10; op2:x11; op1val:0x20; op2val:-0x800001
TEST_CR_OP( c.xor, x10, x11, 0xff7fffdf, 0x20, -0x800001, x1, 236, x2)
900004d6:	ff8005b7          	lui	a1,0xff800
900004da:	fff58593          	addi	a1,a1,-1 # ff7fffff <_end+0x6f7fb4fb>
900004de:	02000513          	li	a0,32
900004e2:	8d2d                	xor	a0,a0,a1
900004e4:	0ea0a623          	sw	a0,236(ra)

900004e8 <inst_60>:

inst_60:
// rs2_val == -16777217, rs1_val == -2097153
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x200001; op2val:-0x1000001
TEST_CR_OP( c.xor, x10, x11, 0x1200000, -0x200001, -0x1000001, x1, 240, x2)
900004e8:	ff0005b7          	lui	a1,0xff000
900004ec:	fff58593          	addi	a1,a1,-1 # feffffff <_end+0x6effb4fb>
900004f0:	ffe00537          	lui	a0,0xffe00
900004f4:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0x6fdfb4fb>
900004f8:	8d2d                	xor	a0,a0,a1
900004fa:	0ea0a823          	sw	a0,240(ra)

900004fe <inst_61>:

inst_61:
// rs2_val == -33554433, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:-0x2000001
TEST_CR_OP( c.xor, x10, x11, 0xcecccccd, 0x33333332, -0x2000001, x1, 244, x2)
900004fe:	fe0005b7          	lui	a1,0xfe000
90000502:	fff58593          	addi	a1,a1,-1 # fdffffff <_end+0x6dffb4fb>
90000506:	33333537          	lui	a0,0x33333
9000050a:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
9000050e:	8d2d                	xor	a0,a0,a1
90000510:	0ea0aa23          	sw	a0,244(ra)

90000514 <inst_62>:

inst_62:
// rs2_val == -67108865, rs1_val == -4097
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x1001; op2val:-0x4000001
TEST_CR_OP( c.xor, x10, x11, 0x4001000, -0x1001, -0x4000001, x1, 248, x2)
90000514:	fc0005b7          	lui	a1,0xfc000
90000518:	fff58593          	addi	a1,a1,-1 # fbffffff <_end+0x6bffb4fb>
9000051c:	fffff537          	lui	a0,0xfffff
90000520:	fff50513          	addi	a0,a0,-1 # ffffefff <_end+0x6fffa4fb>
90000524:	8d2d                	xor	a0,a0,a1
90000526:	0ea0ac23          	sw	a0,248(ra)

9000052a <inst_63>:

inst_63:
// rs2_val == -134217729, rs1_val == 131072
// opcode: c.xor; op1:x10; op2:x11; op1val:0x20000; op2val:-0x8000001
TEST_CR_OP( c.xor, x10, x11, 0xf7fdffff, 0x20000, -0x8000001, x1, 252, x2)
9000052a:	f80005b7          	lui	a1,0xf8000
9000052e:	fff58593          	addi	a1,a1,-1 # f7ffffff <_end+0x67ffb4fb>
90000532:	00020537          	lui	a0,0x20
90000536:	8d2d                	xor	a0,a0,a1
90000538:	0ea0ae23          	sw	a0,252(ra)

9000053c <inst_64>:

inst_64:
// rs2_val == -268435457, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x20; op2val:-0x10000001
TEST_CR_OP( c.xor, x10, x11, 0xefffffdf, 0x20, -0x10000001, x1, 256, x2)
9000053c:	f00005b7          	lui	a1,0xf0000
90000540:	fff58593          	addi	a1,a1,-1 # efffffff <_end+0x5fffb4fb>
90000544:	02000513          	li	a0,32
90000548:	8d2d                	xor	a0,a0,a1
9000054a:	10a0a023          	sw	a0,256(ra)

9000054e <inst_65>:

inst_65:
// rs2_val == -536870913, rs1_val == 2097152
// opcode: c.xor; op1:x10; op2:x11; op1val:0x200000; op2val:-0x20000001
TEST_CR_OP( c.xor, x10, x11, 0xdfdfffff, 0x200000, -0x20000001, x1, 260, x2)
9000054e:	e00005b7          	lui	a1,0xe0000
90000552:	fff58593          	addi	a1,a1,-1 # dfffffff <_end+0x4fffb4fb>
90000556:	00200537          	lui	a0,0x200
9000055a:	8d2d                	xor	a0,a0,a1
9000055c:	10a0a223          	sw	a0,260(ra)

90000560 <inst_66>:

inst_66:
// rs2_val == -1073741825, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:-0x40000001
TEST_CR_OP( c.xor, x10, x11, 0xbfffffff, 0x0, -0x40000001, x1, 264, x2)
90000560:	c00005b7          	lui	a1,0xc0000
90000564:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0x2fffb4fb>
90000568:	00000513          	li	a0,0
9000056c:	8d2d                	xor	a0,a0,a1
9000056e:	10a0a423          	sw	a0,264(ra)

90000572 <inst_67>:

inst_67:
// rs2_val == 1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x7fffffff; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x2aaaaaaa, 0x7fffffff, 0x55555555, x1, 268, x2)
90000572:	555555b7          	lui	a1,0x55555
90000576:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
9000057a:	80000537          	lui	a0,0x80000
9000057e:	fff50513          	addi	a0,a0,-1 # 7fffffff <_end+0xefffb4fb>
90000582:	8d2d                	xor	a0,a0,a1
90000584:	10a0a623          	sw	a0,268(ra)

90000588 <inst_68>:

inst_68:
// rs2_val == -1431655766, rs1_val == 4194304
// opcode: c.xor; op1:x10; op2:x11; op1val:0x400000; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaeaaaaa, 0x400000, -0x55555556, x1, 272, x2)
90000588:	aaaab5b7          	lui	a1,0xaaaab
9000058c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000590:	00400537          	lui	a0,0x400
90000594:	8d2d                	xor	a0,a0,a1
90000596:	10a0a823          	sw	a0,272(ra)

9000059a <inst_69>:

inst_69:
// rs1_val == 4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x2000
TEST_CR_OP( c.xor, x10, x11, 0x2004, 0x4, 0x2000, x1, 276, x2)
9000059a:	000025b7          	lui	a1,0x2
9000059e:	00400513          	li	a0,4
900005a2:	8d2d                	xor	a0,a0,a1
900005a4:	10a0aa23          	sw	a0,276(ra)

900005a8 <inst_70>:

inst_70:
// rs1_val == 8, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x8; op2val:0x20000
TEST_CR_OP( c.xor, x10, x11, 0x20008, 0x8, 0x20000, x1, 280, x2)
900005a8:	000205b7          	lui	a1,0x20
900005ac:	00800513          	li	a0,8
900005b0:	8d2d                	xor	a0,a0,a1
900005b2:	10a0ac23          	sw	a0,280(ra)

900005b6 <inst_71>:

inst_71:
// rs1_val == 16, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x10; op2val:0x100
TEST_CR_OP( c.xor, x10, x11, 0x110, 0x10, 0x100, x1, 284, x2)
900005b6:	10000593          	li	a1,256
900005ba:	01000513          	li	a0,16
900005be:	8d2d                	xor	a0,a0,a1
900005c0:	10a0ae23          	sw	a0,284(ra)

900005c4 <inst_72>:

inst_72:
// rs1_val == 64, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x40; op2val:-0x401
TEST_CR_OP( c.xor, x10, x11, 0xfffffbbf, 0x40, -0x401, x1, 288, x2)
900005c4:	bff00593          	li	a1,-1025
900005c8:	04000513          	li	a0,64
900005cc:	8d2d                	xor	a0,a0,a1
900005ce:	12a0a023          	sw	a0,288(ra)

900005d2 <inst_73>:

inst_73:
// rs1_val == 128, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x80; op2val:-0x40000001
TEST_CR_OP( c.xor, x10, x11, 0xbfffff7f, 0x80, -0x40000001, x1, 292, x2)
900005d2:	c00005b7          	lui	a1,0xc0000
900005d6:	fff58593          	addi	a1,a1,-1 # bfffffff <_end+0x2fffb4fb>
900005da:	08000513          	li	a0,128
900005de:	8d2d                	xor	a0,a0,a1
900005e0:	12a0a223          	sw	a0,292(ra)

900005e4 <inst_74>:

inst_74:
// rs1_val == 256, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x100; op2val:0x4000000
TEST_CR_OP( c.xor, x10, x11, 0x4000100, 0x100, 0x4000000, x1, 296, x2)
900005e4:	040005b7          	lui	a1,0x4000
900005e8:	10000513          	li	a0,256
900005ec:	8d2d                	xor	a0,a0,a1
900005ee:	12a0a423          	sw	a0,296(ra)

900005f2 <inst_75>:

inst_75:
// rs1_val == 1024, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x400; op2val:-0x10000001
TEST_CR_OP( c.xor, x10, x11, 0xeffffbff, 0x400, -0x10000001, x1, 300, x2)
900005f2:	f00005b7          	lui	a1,0xf0000
900005f6:	fff58593          	addi	a1,a1,-1 # efffffff <_end+0x5fffb4fb>
900005fa:	40000513          	li	a0,1024
900005fe:	8d2d                	xor	a0,a0,a1
90000600:	12a0a623          	sw	a0,300(ra)

90000604 <inst_76>:

inst_76:
// rs1_val == 4096, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x1000; op2val:0x20
TEST_CR_OP( c.xor, x10, x11, 0x1020, 0x1000, 0x20, x1, 304, x2)
90000604:	02000593          	li	a1,32
90000608:	00001537          	lui	a0,0x1
9000060c:	8d2d                	xor	a0,a0,a1
9000060e:	12a0a823          	sw	a0,304(ra)

90000612 <inst_77>:

inst_77:
// rs1_val == 8192, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2000; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x2005, 0x2000, 0x5, x1, 308, x2)
90000612:	00500593          	li	a1,5
90000616:	00002537          	lui	a0,0x2
9000061a:	8d2d                	xor	a0,a0,a1
9000061c:	12a0aa23          	sw	a0,308(ra)

90000620 <inst_78>:

inst_78:
// rs1_val == 524288, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x80000; op2val:-0x1000001
TEST_CR_OP( c.xor, x10, x11, 0xfef7ffff, 0x80000, -0x1000001, x1, 312, x2)
90000620:	ff0005b7          	lui	a1,0xff000
90000624:	fff58593          	addi	a1,a1,-1 # feffffff <_end+0x6effb4fb>
90000628:	00080537          	lui	a0,0x80
9000062c:	8d2d                	xor	a0,a0,a1
9000062e:	12a0ac23          	sw	a0,312(ra)

90000632 <inst_79>:

inst_79:
// rs1_val == 8388608, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x800000; op2val:-0x2000001
TEST_CR_OP( c.xor, x10, x11, 0xfd7fffff, 0x800000, -0x2000001, x1, 316, x2)
90000632:	fe0005b7          	lui	a1,0xfe000
90000636:	fff58593          	addi	a1,a1,-1 # fdffffff <_end+0x6dffb4fb>
9000063a:	00800537          	lui	a0,0x800
9000063e:	8d2d                	xor	a0,a0,a1
90000640:	12a0ae23          	sw	a0,316(ra)

90000644 <inst_80>:

inst_80:
// rs1_val == 16777216, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x1000000; op2val:-0x100001
TEST_CR_OP( c.xor, x10, x11, 0xfeefffff, 0x1000000, -0x100001, x1, 320, x2)
90000644:	fff005b7          	lui	a1,0xfff00
90000648:	fff58593          	addi	a1,a1,-1 # ffefffff <_end+0x6fefb4fb>
9000064c:	01000537          	lui	a0,0x1000
90000650:	8d2d                	xor	a0,a0,a1
90000652:	14a0a023          	sw	a0,320(ra)

90000656 <inst_81>:

inst_81:
// rs1_val == 33554432, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2000000; op2val:-0x7
TEST_CR_OP( c.xor, x10, x11, 0xfdfffff9, 0x2000000, -0x7, x1, 324, x2)
90000656:	ff900593          	li	a1,-7
9000065a:	02000537          	lui	a0,0x2000
9000065e:	8d2d                	xor	a0,a0,a1
90000660:	14a0a223          	sw	a0,324(ra)

90000664 <inst_82>:

inst_82:
// rs1_val == -3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x3; op2val:-0x100001
TEST_CR_OP( c.xor, x10, x11, 0x100002, -0x3, -0x100001, x1, 328, x2)
90000664:	fff005b7          	lui	a1,0xfff00
90000668:	fff58593          	addi	a1,a1,-1 # ffefffff <_end+0x6fefb4fb>
9000066c:	ffd00513          	li	a0,-3
90000670:	8d2d                	xor	a0,a0,a1
90000672:	14a0a423          	sw	a0,328(ra)

90000676 <inst_83>:

inst_83:
// rs1_val == -9, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x9; op2val:-0x201
TEST_CR_OP( c.xor, x10, x11, 0x208, -0x9, -0x201, x1, 332, x2)
90000676:	dff00593          	li	a1,-513
9000067a:	ff700513          	li	a0,-9
9000067e:	8d2d                	xor	a0,a0,a1
90000680:	14a0a623          	sw	a0,332(ra)

90000684 <inst_84>:

inst_84:
// rs1_val == -17, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x11; op2val:-0x10001
TEST_CR_OP( c.xor, x10, x11, 0x10010, -0x11, -0x10001, x1, 336, x2)
90000684:	ffff05b7          	lui	a1,0xffff0
90000688:	fff58593          	addi	a1,a1,-1 # fffeffff <_end+0x6ffeb4fb>
9000068c:	fef00513          	li	a0,-17
90000690:	8d2d                	xor	a0,a0,a1
90000692:	14a0a823          	sw	a0,336(ra)

90000696 <inst_85>:

inst_85:
// rs1_val == -129, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x81; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0xffffff7d, -0x81, 0x2, x1, 340, x2)
90000696:	00200593          	li	a1,2
9000069a:	f7f00513          	li	a0,-129
9000069e:	8d2d                	xor	a0,a0,a1
900006a0:	14a0aa23          	sw	a0,340(ra)

900006a4 <inst_86>:

inst_86:
// rs1_val == -1025, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x401; op2val:-0x20000001
TEST_CR_OP( c.xor, x10, x11, 0x20000400, -0x401, -0x20000001, x1, 344, x2)
900006a4:	e00005b7          	lui	a1,0xe0000
900006a8:	fff58593          	addi	a1,a1,-1 # dfffffff <_end+0x4fffb4fb>
900006ac:	bff00513          	li	a0,-1025
900006b0:	8d2d                	xor	a0,a0,a1
900006b2:	14a0ac23          	sw	a0,344(ra)

900006b6 <inst_87>:

inst_87:
// rs1_val == -2049, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x801; op2val:0x200000
TEST_CR_OP( c.xor, x10, x11, 0xffdff7ff, -0x801, 0x200000, x1, 348, x2)
900006b6:	002005b7          	lui	a1,0x200
900006ba:	fffff537          	lui	a0,0xfffff
900006be:	7ff50513          	addi	a0,a0,2047 # fffff7ff <_end+0x6fffacfb>
900006c2:	8d2d                	xor	a0,a0,a1
900006c4:	14a0ae23          	sw	a0,348(ra)

900006c8 <inst_88>:

inst_88:
// rs1_val == -8193, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x2001; op2val:-0x20001
TEST_CR_OP( c.xor, x10, x11, 0x22000, -0x2001, -0x20001, x1, 352, x2)
900006c8:	fffe05b7          	lui	a1,0xfffe0
900006cc:	fff58593          	addi	a1,a1,-1 # fffdffff <_end+0x6ffdb4fb>
900006d0:	ffffe537          	lui	a0,0xffffe
900006d4:	fff50513          	addi	a0,a0,-1 # ffffdfff <_end+0x6fff94fb>
900006d8:	8d2d                	xor	a0,a0,a1
900006da:	16a0a023          	sw	a0,352(ra)

900006de <inst_89>:

inst_89:
// rs1_val == -16385, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x4001; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xf503, -0x4001, -0xb504, x1, 356, x2)
900006de:	ffff55b7          	lui	a1,0xffff5
900006e2:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
900006e6:	ffffc537          	lui	a0,0xffffc
900006ea:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0x6fff74fb>
900006ee:	8d2d                	xor	a0,a0,a1
900006f0:	16a0a223          	sw	a0,356(ra)

900006f4 <inst_90>:

inst_90:
// rs1_val == -65537, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x10001; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0x1b502, -0x10001, -0xb503, x1, 360, x2)
900006f4:	ffff55b7          	lui	a1,0xffff5
900006f8:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
900006fc:	ffff0537          	lui	a0,0xffff0
90000700:	fff50513          	addi	a0,a0,-1 # fffeffff <_end+0x6ffeb4fb>
90000704:	8d2d                	xor	a0,a0,a1
90000706:	16a0a423          	sw	a0,360(ra)

9000070a <inst_91>:

inst_91:
// rs1_val == -131073, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x20001; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x999b9999, -0x20001, 0x66666666, x1, 364, x2)
9000070a:	666665b7          	lui	a1,0x66666
9000070e:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90000712:	fffe0537          	lui	a0,0xfffe0
90000716:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0x6ffdb4fb>
9000071a:	8d2d                	xor	a0,a0,a1
9000071c:	16a0a623          	sw	a0,364(ra)

90000720 <inst_92>:

inst_92:
// rs1_val == -1048577, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x100001; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0xffeffffa, -0x100001, 0x5, x1, 368, x2)
90000720:	00500593          	li	a1,5
90000724:	fff00537          	lui	a0,0xfff00
90000728:	fff50513          	addi	a0,a0,-1 # ffefffff <_end+0x6fefb4fb>
9000072c:	8d2d                	xor	a0,a0,a1
9000072e:	16a0a823          	sw	a0,368(ra)

90000732 <inst_93>:

inst_93:
// rs1_val == -8388609, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x800001; op2val:0x4000000
TEST_CR_OP( c.xor, x10, x11, 0xfb7fffff, -0x800001, 0x4000000, x1, 372, x2)
90000732:	040005b7          	lui	a1,0x4000
90000736:	ff800537          	lui	a0,0xff800
9000073a:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0x6f7fb4fb>
9000073e:	8d2d                	xor	a0,a0,a1
90000740:	16a0aa23          	sw	a0,372(ra)

90000744 <inst_94>:

inst_94:
// rs1_val == -16777217, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x1000001; op2val:-0x400001
TEST_CR_OP( c.xor, x10, x11, 0x1400000, -0x1000001, -0x400001, x1, 376, x2)
90000744:	ffc005b7          	lui	a1,0xffc00
90000748:	fff58593          	addi	a1,a1,-1 # ffbfffff <_end+0x6fbfb4fb>
9000074c:	ff000537          	lui	a0,0xff000
90000750:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0x6effb4fb>
90000754:	8d2d                	xor	a0,a0,a1
90000756:	16a0ac23          	sw	a0,376(ra)

9000075a <inst_95>:

inst_95:
// rs1_val == -134217729, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x8000001; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0xc4cccccd, -0x8000001, 0x33333332, x1, 380, x2)
9000075a:	333335b7          	lui	a1,0x33333
9000075e:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90000762:	f8000537          	lui	a0,0xf8000
90000766:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0x67ffb4fb>
9000076a:	8d2d                	xor	a0,a0,a1
9000076c:	16a0ae23          	sw	a0,380(ra)

90000770 <inst_96>:

inst_96:
// rs1_val == -268435457, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x10000001; op2val:0x20000000
TEST_CR_OP( c.xor, x10, x11, 0xcfffffff, -0x10000001, 0x20000000, x1, 384, x2)
90000770:	200005b7          	lui	a1,0x20000
90000774:	f0000537          	lui	a0,0xf0000
90000778:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0x5fffb4fb>
9000077c:	8d2d                	xor	a0,a0,a1
9000077e:	18a0a023          	sw	a0,384(ra)

90000782 <inst_97>:

inst_97:
// rs1_val == -1073741825, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x40000001; op2val:-0x11
TEST_CR_OP( c.xor, x10, x11, 0x40000010, -0x40000001, -0x11, x1, 388, x2)
90000782:	fef00593          	li	a1,-17
90000786:	c0000537          	lui	a0,0xc0000
9000078a:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0x2fffb4fb>
9000078e:	8d2d                	xor	a0,a0,a1
90000790:	18a0a223          	sw	a0,388(ra)

90000794 <inst_98>:

inst_98:
// rs1_val == 1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:-0x100001
TEST_CR_OP( c.xor, x10, x11, 0xaabaaaaa, 0x55555555, -0x100001, x1, 392, x2)
90000794:	fff005b7          	lui	a1,0xfff00
90000798:	fff58593          	addi	a1,a1,-1 # ffefffff <_end+0x6fefb4fb>
9000079c:	55555537          	lui	a0,0x55555
900007a0:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
900007a4:	8d2d                	xor	a0,a0,a1
900007a6:	18a0a423          	sw	a0,392(ra)

900007aa <inst_99>:

inst_99:
// rs1_val==3 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x3, 0x3, x1, 396, x2)
900007aa:	00300593          	li	a1,3
900007ae:	00300513          	li	a0,3
900007b2:	8d2d                	xor	a0,a0,a1
900007b4:	18a0a623          	sw	a0,396(ra)

900007b8 <inst_100>:

inst_100:
// rs1_val==3 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x55555556, 0x3, 0x55555555, x1, 400, x2)
900007b8:	555555b7          	lui	a1,0x55555
900007bc:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
900007c0:	00300513          	li	a0,3
900007c4:	8d2d                	xor	a0,a0,a1
900007c6:	18a0a823          	sw	a0,400(ra)

900007ca <inst_101>:

inst_101:
// rs1_val==3 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaa9, 0x3, -0x55555556, x1, 404, x2)
900007ca:	aaaab5b7          	lui	a1,0xaaaab
900007ce:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
900007d2:	00300513          	li	a0,3
900007d6:	8d2d                	xor	a0,a0,a1
900007d8:	18a0aa23          	sw	a0,404(ra)

900007dc <inst_102>:

inst_102:
// rs1_val==3 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x6, 0x3, 0x5, x1, 408, x2)
900007dc:	00500593          	li	a1,5
900007e0:	00300513          	li	a0,3
900007e4:	8d2d                	xor	a0,a0,a1
900007e6:	18a0ac23          	sw	a0,408(ra)

900007ea <inst_103>:

inst_103:
// rs1_val==3 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x33333330, 0x3, 0x33333333, x1, 412, x2)
900007ea:	333335b7          	lui	a1,0x33333
900007ee:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
900007f2:	00300513          	li	a0,3
900007f6:	8d2d                	xor	a0,a0,a1
900007f8:	18a0ae23          	sw	a0,412(ra)

900007fc <inst_104>:

inst_104:
// rs1_val==3 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x66666665, 0x3, 0x66666666, x1, 416, x2)
900007fc:	666665b7          	lui	a1,0x66666
90000800:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90000804:	00300513          	li	a0,3
90000808:	8d2d                	xor	a0,a0,a1
9000080a:	1aa0a023          	sw	a0,416(ra)

9000080e <inst_105>:

inst_105:
// rs1_val==3 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xffff4aff, 0x3, -0xb504, x1, 420, x2)
9000080e:	ffff55b7          	lui	a1,0xffff5
90000812:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90000816:	00300513          	li	a0,3
9000081a:	8d2d                	xor	a0,a0,a1
9000081c:	1aa0a223          	sw	a0,420(ra)

90000820 <inst_106>:

inst_106:
// rs1_val==3 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0xb507, 0x3, 0xb504, x1, 424, x2)
90000820:	0000b5b7          	lui	a1,0xb
90000824:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90000828:	00300513          	li	a0,3
9000082c:	8d2d                	xor	a0,a0,a1
9000082e:	1aa0a423          	sw	a0,424(ra)

90000832 <inst_107>:

inst_107:
// rs1_val==3 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x1, 0x3, 0x2, x1, 428, x2)
90000832:	00200593          	li	a1,2
90000836:	00300513          	li	a0,3
9000083a:	8d2d                	xor	a0,a0,a1
9000083c:	1aa0a623          	sw	a0,428(ra)

90000840 <inst_108>:

inst_108:
// rs1_val==3 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x55555557, 0x3, 0x55555554, x1, 432, x2)
90000840:	555555b7          	lui	a1,0x55555
90000844:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
90000848:	00300513          	li	a0,3
9000084c:	8d2d                	xor	a0,a0,a1
9000084e:	1aa0a823          	sw	a0,432(ra)

90000852 <inst_109>:

inst_109:
// rs1_val==3 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x3, 0x3, 0x0, x1, 436, x2)
90000852:	00000593          	li	a1,0
90000856:	00300513          	li	a0,3
9000085a:	8d2d                	xor	a0,a0,a1
9000085c:	1aa0aa23          	sw	a0,436(ra)

90000860 <inst_110>:

inst_110:
// rs1_val==3 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x7, 0x3, 0x4, x1, 440, x2)
90000860:	00400593          	li	a1,4
90000864:	00300513          	li	a0,3
90000868:	8d2d                	xor	a0,a0,a1
9000086a:	1aa0ac23          	sw	a0,440(ra)

9000086e <inst_111>:

inst_111:
// rs1_val==3 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x33333331, 0x3, 0x33333332, x1, 444, x2)
9000086e:	333335b7          	lui	a1,0x33333
90000872:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90000876:	00300513          	li	a0,3
9000087a:	8d2d                	xor	a0,a0,a1
9000087c:	1aa0ae23          	sw	a0,444(ra)

90000880 <inst_112>:

inst_112:
// rs1_val==3 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x66666666, 0x3, 0x66666665, x1, 448, x2)
90000880:	666665b7          	lui	a1,0x66666
90000884:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90000888:	00300513          	li	a0,3
9000088c:	8d2d                	xor	a0,a0,a1
9000088e:	1ca0a023          	sw	a0,448(ra)

90000892 <inst_113>:

inst_113:
// rs1_val==3 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0xb500, 0x3, 0xb503, x1, 452, x2)
90000892:	0000b5b7          	lui	a1,0xb
90000896:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
9000089a:	00300513          	li	a0,3
9000089e:	8d2d                	xor	a0,a0,a1
900008a0:	1ca0a223          	sw	a0,452(ra)

900008a4 <inst_114>:

inst_114:
// rs1_val==3 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x55555555, 0x3, 0x55555556, x1, 456, x2)
900008a4:	555555b7          	lui	a1,0x55555
900008a8:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
900008ac:	00300513          	li	a0,3
900008b0:	8d2d                	xor	a0,a0,a1
900008b2:	1ca0a423          	sw	a0,456(ra)

900008b6 <inst_115>:

inst_115:
// rs1_val==3 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaa8, 0x3, -0x55555555, x1, 460, x2)
900008b6:	aaaab5b7          	lui	a1,0xaaaab
900008ba:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
900008be:	00300513          	li	a0,3
900008c2:	8d2d                	xor	a0,a0,a1
900008c4:	1ca0a623          	sw	a0,460(ra)

900008c8 <inst_116>:

inst_116:
// rs1_val==3 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x5, 0x3, 0x6, x1, 464, x2)
900008c8:	00600593          	li	a1,6
900008cc:	00300513          	li	a0,3
900008d0:	8d2d                	xor	a0,a0,a1
900008d2:	1ca0a823          	sw	a0,464(ra)

900008d6 <inst_117>:

inst_117:
// rs1_val==3 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x33333337, 0x3, 0x33333334, x1, 468, x2)
900008d6:	333335b7          	lui	a1,0x33333
900008da:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
900008de:	00300513          	li	a0,3
900008e2:	8d2d                	xor	a0,a0,a1
900008e4:	1ca0aa23          	sw	a0,468(ra)

900008e8 <inst_118>:

inst_118:
// rs1_val==3 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x66666664, 0x3, 0x66666667, x1, 472, x2)
900008e8:	666665b7          	lui	a1,0x66666
900008ec:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
900008f0:	00300513          	li	a0,3
900008f4:	8d2d                	xor	a0,a0,a1
900008f6:	1ca0ac23          	sw	a0,472(ra)

900008fa <inst_119>:

inst_119:
// rs1_val==3 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xffff4afe, 0x3, -0xb503, x1, 476, x2)
900008fa:	ffff55b7          	lui	a1,0xffff5
900008fe:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90000902:	00300513          	li	a0,3
90000906:	8d2d                	xor	a0,a0,a1
90000908:	1ca0ae23          	sw	a0,476(ra)

9000090c <inst_120>:

inst_120:
// rs1_val==3 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x3; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0xb506, 0x3, 0xb505, x1, 480, x2)
9000090c:	0000b5b7          	lui	a1,0xb
90000910:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
90000914:	00300513          	li	a0,3
90000918:	8d2d                	xor	a0,a0,a1
9000091a:	1ea0a023          	sw	a0,480(ra)

9000091e <inst_121>:

inst_121:
// rs1_val==1431655765 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x55555556, 0x55555555, 0x3, x1, 484, x2)
9000091e:	00300593          	li	a1,3
90000922:	55555537          	lui	a0,0x55555
90000926:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
9000092a:	8d2d                	xor	a0,a0,a1
9000092c:	1ea0a223          	sw	a0,484(ra)

90000930 <inst_122>:

inst_122:
// rs1_val==1431655765 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x55555555, 0x55555555, x1, 488, x2)
90000930:	555555b7          	lui	a1,0x55555
90000934:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90000938:	55555537          	lui	a0,0x55555
9000093c:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000940:	8d2d                	xor	a0,a0,a1
90000942:	1ea0a423          	sw	a0,488(ra)

90000946 <inst_123>:

inst_123:
// rs1_val==1431655765 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xffffffff, 0x55555555, -0x55555556, x1, 492, x2)
90000946:	aaaab5b7          	lui	a1,0xaaaab
9000094a:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
9000094e:	55555537          	lui	a0,0x55555
90000952:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000956:	8d2d                	xor	a0,a0,a1
90000958:	1ea0a623          	sw	a0,492(ra)

9000095c <inst_124>:

inst_124:
// rs1_val==1431655765 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x55555550, 0x55555555, 0x5, x1, 496, x2)
9000095c:	00500593          	li	a1,5
90000960:	55555537          	lui	a0,0x55555
90000964:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000968:	8d2d                	xor	a0,a0,a1
9000096a:	1ea0a823          	sw	a0,496(ra)

9000096e <inst_125>:

inst_125:
// rs1_val==1431655765 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x66666666, 0x55555555, 0x33333333, x1, 500, x2)
9000096e:	333335b7          	lui	a1,0x33333
90000972:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90000976:	55555537          	lui	a0,0x55555
9000097a:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
9000097e:	8d2d                	xor	a0,a0,a1
90000980:	1ea0aa23          	sw	a0,500(ra)

90000984 <inst_126>:

inst_126:
// rs1_val==1431655765 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x33333333, 0x55555555, 0x66666666, x1, 504, x2)
90000984:	666665b7          	lui	a1,0x66666
90000988:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
9000098c:	55555537          	lui	a0,0x55555
90000990:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000994:	8d2d                	xor	a0,a0,a1
90000996:	1ea0ac23          	sw	a0,504(ra)

9000099a <inst_127>:

inst_127:
// rs1_val==1431655765 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa9, 0x55555555, -0xb504, x1, 508, x2)
9000099a:	ffff55b7          	lui	a1,0xffff5
9000099e:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
900009a2:	55555537          	lui	a0,0x55555
900009a6:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
900009aa:	8d2d                	xor	a0,a0,a1
900009ac:	1ea0ae23          	sw	a0,508(ra)

900009b0 <inst_128>:

inst_128:
// rs1_val==1431655765 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x5555e051, 0x55555555, 0xb504, x1, 512, x2)
900009b0:	0000b5b7          	lui	a1,0xb
900009b4:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
900009b8:	55555537          	lui	a0,0x55555
900009bc:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
900009c0:	8d2d                	xor	a0,a0,a1
900009c2:	20a0a023          	sw	a0,512(ra)

900009c6 <inst_129>:

inst_129:
// rs1_val==1431655765 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x55555557, 0x55555555, 0x2, x1, 516, x2)
900009c6:	00200593          	li	a1,2
900009ca:	55555537          	lui	a0,0x55555
900009ce:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
900009d2:	8d2d                	xor	a0,a0,a1
900009d4:	20a0a223          	sw	a0,516(ra)

900009d8 <inst_130>:

inst_130:
// rs1_val==1431655765 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x1, 0x55555555, 0x55555554, x1, 520, x2)
900009d8:	555555b7          	lui	a1,0x55555
900009dc:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
900009e0:	55555537          	lui	a0,0x55555
900009e4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
900009e8:	8d2d                	xor	a0,a0,a1
900009ea:	20a0a423          	sw	a0,520(ra)

900009ee <inst_131>:

inst_131:
// rs1_val==1431655765 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x55555555, 0x55555555, 0x0, x1, 524, x2)
900009ee:	00000593          	li	a1,0
900009f2:	55555537          	lui	a0,0x55555
900009f6:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
900009fa:	8d2d                	xor	a0,a0,a1
900009fc:	20a0a623          	sw	a0,524(ra)

90000a00 <inst_132>:

inst_132:
// rs1_val==1431655765 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x55555551, 0x55555555, 0x4, x1, 528, x2)
90000a00:	00400593          	li	a1,4
90000a04:	55555537          	lui	a0,0x55555
90000a08:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000a0c:	8d2d                	xor	a0,a0,a1
90000a0e:	20a0a823          	sw	a0,528(ra)

90000a12 <inst_133>:

inst_133:
// rs1_val==1431655765 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x66666667, 0x55555555, 0x33333332, x1, 532, x2)
90000a12:	333335b7          	lui	a1,0x33333
90000a16:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90000a1a:	55555537          	lui	a0,0x55555
90000a1e:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000a22:	8d2d                	xor	a0,a0,a1
90000a24:	20a0aa23          	sw	a0,532(ra)

90000a28 <inst_134>:

inst_134:
// rs1_val==1431655765 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x33333330, 0x55555555, 0x66666665, x1, 536, x2)
90000a28:	666665b7          	lui	a1,0x66666
90000a2c:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90000a30:	55555537          	lui	a0,0x55555
90000a34:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000a38:	8d2d                	xor	a0,a0,a1
90000a3a:	20a0ac23          	sw	a0,536(ra)

90000a3e <inst_135>:

inst_135:
// rs1_val==1431655765 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x5555e056, 0x55555555, 0xb503, x1, 540, x2)
90000a3e:	0000b5b7          	lui	a1,0xb
90000a42:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90000a46:	55555537          	lui	a0,0x55555
90000a4a:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000a4e:	8d2d                	xor	a0,a0,a1
90000a50:	20a0ae23          	sw	a0,540(ra)

90000a54 <inst_136>:

inst_136:
// rs1_val==1431655765 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x3, 0x55555555, 0x55555556, x1, 544, x2)
90000a54:	555555b7          	lui	a1,0x55555
90000a58:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90000a5c:	55555537          	lui	a0,0x55555
90000a60:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000a64:	8d2d                	xor	a0,a0,a1
90000a66:	22a0a023          	sw	a0,544(ra)

90000a6a <inst_137>:

inst_137:
// rs1_val==1431655765 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xfffffffe, 0x55555555, -0x55555555, x1, 548, x2)
90000a6a:	aaaab5b7          	lui	a1,0xaaaab
90000a6e:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90000a72:	55555537          	lui	a0,0x55555
90000a76:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000a7a:	8d2d                	xor	a0,a0,a1
90000a7c:	22a0a223          	sw	a0,548(ra)

90000a80 <inst_138>:

inst_138:
// rs1_val==1431655765 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x55555553, 0x55555555, 0x6, x1, 552, x2)
90000a80:	00600593          	li	a1,6
90000a84:	55555537          	lui	a0,0x55555
90000a88:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000a8c:	8d2d                	xor	a0,a0,a1
90000a8e:	22a0a423          	sw	a0,552(ra)

90000a92 <inst_139>:

inst_139:
// rs1_val==1431655765 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x66666661, 0x55555555, 0x33333334, x1, 556, x2)
90000a92:	333335b7          	lui	a1,0x33333
90000a96:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90000a9a:	55555537          	lui	a0,0x55555
90000a9e:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000aa2:	8d2d                	xor	a0,a0,a1
90000aa4:	22a0a623          	sw	a0,556(ra)

90000aa8 <inst_140>:

inst_140:
// rs1_val==1431655765 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x33333332, 0x55555555, 0x66666667, x1, 560, x2)
90000aa8:	666665b7          	lui	a1,0x66666
90000aac:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90000ab0:	55555537          	lui	a0,0x55555
90000ab4:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000ab8:	8d2d                	xor	a0,a0,a1
90000aba:	22a0a823          	sw	a0,560(ra)

90000abe <inst_141>:

inst_141:
// rs1_val==1431655765 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa8, 0x55555555, -0xb503, x1, 564, x2)
90000abe:	ffff55b7          	lui	a1,0xffff5
90000ac2:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90000ac6:	55555537          	lui	a0,0x55555
90000aca:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000ace:	8d2d                	xor	a0,a0,a1
90000ad0:	22a0aa23          	sw	a0,564(ra)

90000ad4 <inst_142>:

inst_142:
// rs1_val==1431655765 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555555; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x5555e050, 0x55555555, 0xb505, x1, 568, x2)
90000ad4:	0000b5b7          	lui	a1,0xb
90000ad8:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
90000adc:	55555537          	lui	a0,0x55555
90000ae0:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x55555439>
90000ae4:	8d2d                	xor	a0,a0,a1
90000ae6:	22a0ac23          	sw	a0,568(ra)

90000aea <inst_143>:

inst_143:
// rs1_val==-1431655766 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaa9, -0x55555556, 0x3, x1, 572, x2)
90000aea:	00300593          	li	a1,3
90000aee:	aaaab537          	lui	a0,0xaaaab
90000af2:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000af6:	8d2d                	xor	a0,a0,a1
90000af8:	22a0ae23          	sw	a0,572(ra)

90000afc <inst_144>:

inst_144:
// rs1_val==-1431655766 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xffffffff, -0x55555556, 0x55555555, x1, 576, x2)
90000afc:	555555b7          	lui	a1,0x55555
90000b00:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90000b04:	aaaab537          	lui	a0,0xaaaab
90000b08:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000b0c:	8d2d                	xor	a0,a0,a1
90000b0e:	24a0a023          	sw	a0,576(ra)

90000b12 <inst_145>:

inst_145:
// rs1_val==-1431655766 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x0, -0x55555556, -0x55555556, x1, 580, x2)
90000b12:	aaaab5b7          	lui	a1,0xaaaab
90000b16:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000b1a:	aaaab537          	lui	a0,0xaaaab
90000b1e:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000b22:	8d2d                	xor	a0,a0,a1
90000b24:	24a0a223          	sw	a0,580(ra)

90000b28 <inst_146>:

inst_146:
// rs1_val==-1431655766 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaaf, -0x55555556, 0x5, x1, 584, x2)
90000b28:	00500593          	li	a1,5
90000b2c:	aaaab537          	lui	a0,0xaaaab
90000b30:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000b34:	8d2d                	xor	a0,a0,a1
90000b36:	24a0a423          	sw	a0,584(ra)

90000b3a <inst_147>:

inst_147:
// rs1_val==-1431655766 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x99999999, -0x55555556, 0x33333333, x1, 588, x2)
90000b3a:	333335b7          	lui	a1,0x33333
90000b3e:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90000b42:	aaaab537          	lui	a0,0xaaaab
90000b46:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000b4a:	8d2d                	xor	a0,a0,a1
90000b4c:	24a0a623          	sw	a0,588(ra)

90000b50 <inst_148>:

inst_148:
// rs1_val==-1431655766 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0xcccccccc, -0x55555556, 0x66666666, x1, 592, x2)
90000b50:	666665b7          	lui	a1,0x66666
90000b54:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90000b58:	aaaab537          	lui	a0,0xaaaab
90000b5c:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000b60:	8d2d                	xor	a0,a0,a1
90000b62:	24a0a823          	sw	a0,592(ra)

90000b66 <inst_149>:

inst_149:
// rs1_val==-1431655766 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0x5555e056, -0x55555556, -0xb504, x1, 596, x2)
90000b66:	ffff55b7          	lui	a1,0xffff5
90000b6a:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90000b6e:	aaaab537          	lui	a0,0xaaaab
90000b72:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000b76:	8d2d                	xor	a0,a0,a1
90000b78:	24a0aa23          	sw	a0,596(ra)

90000b7c <inst_150>:

inst_150:
// rs1_val==-1431655766 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fae, -0x55555556, 0xb504, x1, 600, x2)
90000b7c:	0000b5b7          	lui	a1,0xb
90000b80:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90000b84:	aaaab537          	lui	a0,0xaaaab
90000b88:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000b8c:	8d2d                	xor	a0,a0,a1
90000b8e:	24a0ac23          	sw	a0,600(ra)

90000b92 <inst_151>:

inst_151:
// rs1_val==-1431655766 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaa8, -0x55555556, 0x2, x1, 604, x2)
90000b92:	00200593          	li	a1,2
90000b96:	aaaab537          	lui	a0,0xaaaab
90000b9a:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000b9e:	8d2d                	xor	a0,a0,a1
90000ba0:	24a0ae23          	sw	a0,604(ra)

90000ba4 <inst_152>:

inst_152:
// rs1_val==-1431655766 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0xfffffffe, -0x55555556, 0x55555554, x1, 608, x2)
90000ba4:	555555b7          	lui	a1,0x55555
90000ba8:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
90000bac:	aaaab537          	lui	a0,0xaaaab
90000bb0:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000bb4:	8d2d                	xor	a0,a0,a1
90000bb6:	26a0a023          	sw	a0,608(ra)

90000bba <inst_153>:

inst_153:
// rs1_val==-1431655766 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaaa, -0x55555556, 0x0, x1, 612, x2)
90000bba:	00000593          	li	a1,0
90000bbe:	aaaab537          	lui	a0,0xaaaab
90000bc2:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000bc6:	8d2d                	xor	a0,a0,a1
90000bc8:	26a0a223          	sw	a0,612(ra)

90000bcc <inst_154>:

inst_154:
// rs1_val==-1431655766 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x99999998, -0x55555556, 0x33333332, x1, 616, x2)
90000bcc:	333335b7          	lui	a1,0x33333
90000bd0:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90000bd4:	aaaab537          	lui	a0,0xaaaab
90000bd8:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000bdc:	8d2d                	xor	a0,a0,a1
90000bde:	26a0a423          	sw	a0,616(ra)

90000be2 <inst_155>:

inst_155:
// rs1_val==-1431655766 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0xcccccccf, -0x55555556, 0x66666665, x1, 620, x2)
90000be2:	666665b7          	lui	a1,0x66666
90000be6:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90000bea:	aaaab537          	lui	a0,0xaaaab
90000bee:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000bf2:	8d2d                	xor	a0,a0,a1
90000bf4:	26a0a623          	sw	a0,620(ra)

90000bf8 <inst_156>:

inst_156:
// rs1_val==-1431655766 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa9, -0x55555556, 0xb503, x1, 624, x2)
90000bf8:	0000b5b7          	lui	a1,0xb
90000bfc:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90000c00:	aaaab537          	lui	a0,0xaaaab
90000c04:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000c08:	8d2d                	xor	a0,a0,a1
90000c0a:	26a0a823          	sw	a0,624(ra)

90000c0e <inst_157>:

inst_157:
// rs1_val==-1431655766 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xfffffffc, -0x55555556, 0x55555556, x1, 628, x2)
90000c0e:	555555b7          	lui	a1,0x55555
90000c12:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90000c16:	aaaab537          	lui	a0,0xaaaab
90000c1a:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000c1e:	8d2d                	xor	a0,a0,a1
90000c20:	26a0aa23          	sw	a0,628(ra)

90000c24 <inst_158>:

inst_158:
// rs1_val==-1431655766 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x1, -0x55555556, -0x55555555, x1, 632, x2)
90000c24:	aaaab5b7          	lui	a1,0xaaaab
90000c28:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90000c2c:	aaaab537          	lui	a0,0xaaaab
90000c30:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000c34:	8d2d                	xor	a0,a0,a1
90000c36:	26a0ac23          	sw	a0,632(ra)

90000c3a <inst_159>:

inst_159:
// rs1_val==-1431655766 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaac, -0x55555556, 0x6, x1, 636, x2)
90000c3a:	00600593          	li	a1,6
90000c3e:	aaaab537          	lui	a0,0xaaaab
90000c42:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000c46:	8d2d                	xor	a0,a0,a1
90000c48:	26a0ae23          	sw	a0,636(ra)

90000c4c <inst_160>:

inst_160:
// rs1_val==-1431655766 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x9999999e, -0x55555556, 0x33333334, x1, 640, x2)
90000c4c:	333335b7          	lui	a1,0x33333
90000c50:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90000c54:	aaaab537          	lui	a0,0xaaaab
90000c58:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000c5c:	8d2d                	xor	a0,a0,a1
90000c5e:	28a0a023          	sw	a0,640(ra)

90000c62 <inst_161>:

inst_161:
// rs1_val==-1431655766 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0xcccccccd, -0x55555556, 0x66666667, x1, 644, x2)
90000c62:	666665b7          	lui	a1,0x66666
90000c66:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90000c6a:	aaaab537          	lui	a0,0xaaaab
90000c6e:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000c72:	8d2d                	xor	a0,a0,a1
90000c74:	28a0a223          	sw	a0,644(ra)

90000c78 <inst_162>:

inst_162:
// rs1_val==-1431655766 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0x5555e057, -0x55555556, -0xb503, x1, 648, x2)
90000c78:	ffff55b7          	lui	a1,0xffff5
90000c7c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90000c80:	aaaab537          	lui	a0,0xaaaab
90000c84:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000c88:	8d2d                	xor	a0,a0,a1
90000c8a:	28a0a423          	sw	a0,648(ra)

90000c8e <inst_163>:

inst_163:
// rs1_val==-1431655766 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555556; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1faf, -0x55555556, 0xb505, x1, 652, x2)
90000c8e:	0000b5b7          	lui	a1,0xb
90000c92:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
90000c96:	aaaab537          	lui	a0,0xaaaab
90000c9a:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000c9e:	8d2d                	xor	a0,a0,a1
90000ca0:	28a0a623          	sw	a0,652(ra)

90000ca4 <inst_164>:

inst_164:
// rs1_val==5 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x6, 0x5, 0x3, x1, 656, x2)
90000ca4:	00300593          	li	a1,3
90000ca8:	00500513          	li	a0,5
90000cac:	8d2d                	xor	a0,a0,a1
90000cae:	28a0a823          	sw	a0,656(ra)

90000cb2 <inst_165>:

inst_165:
// rs1_val==5 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x55555550, 0x5, 0x55555555, x1, 660, x2)
90000cb2:	555555b7          	lui	a1,0x55555
90000cb6:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90000cba:	00500513          	li	a0,5
90000cbe:	8d2d                	xor	a0,a0,a1
90000cc0:	28a0aa23          	sw	a0,660(ra)

90000cc4 <inst_166>:

inst_166:
// rs1_val==5 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaaf, 0x5, -0x55555556, x1, 664, x2)
90000cc4:	aaaab5b7          	lui	a1,0xaaaab
90000cc8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000ccc:	00500513          	li	a0,5
90000cd0:	8d2d                	xor	a0,a0,a1
90000cd2:	28a0ac23          	sw	a0,664(ra)

90000cd6 <inst_167>:

inst_167:
// rs1_val==5 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x5, 0x5, x1, 668, x2)
90000cd6:	00500593          	li	a1,5
90000cda:	00500513          	li	a0,5
90000cde:	8d2d                	xor	a0,a0,a1
90000ce0:	28a0ae23          	sw	a0,668(ra)

90000ce4 <inst_168>:

inst_168:
// rs1_val==5 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x33333336, 0x5, 0x33333333, x1, 672, x2)
90000ce4:	333335b7          	lui	a1,0x33333
90000ce8:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90000cec:	00500513          	li	a0,5
90000cf0:	8d2d                	xor	a0,a0,a1
90000cf2:	2aa0a023          	sw	a0,672(ra)

90000cf6 <inst_169>:

inst_169:
// rs1_val==5 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x66666663, 0x5, 0x66666666, x1, 676, x2)
90000cf6:	666665b7          	lui	a1,0x66666
90000cfa:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90000cfe:	00500513          	li	a0,5
90000d02:	8d2d                	xor	a0,a0,a1
90000d04:	2aa0a223          	sw	a0,676(ra)

90000d08 <inst_170>:

inst_170:
// rs1_val==5 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xffff4af9, 0x5, -0xb504, x1, 680, x2)
90000d08:	ffff55b7          	lui	a1,0xffff5
90000d0c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90000d10:	00500513          	li	a0,5
90000d14:	8d2d                	xor	a0,a0,a1
90000d16:	2aa0a423          	sw	a0,680(ra)

90000d1a <inst_171>:

inst_171:
// rs1_val==5 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0xb501, 0x5, 0xb504, x1, 684, x2)
90000d1a:	0000b5b7          	lui	a1,0xb
90000d1e:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90000d22:	00500513          	li	a0,5
90000d26:	8d2d                	xor	a0,a0,a1
90000d28:	2aa0a623          	sw	a0,684(ra)

90000d2c <inst_172>:

inst_172:
// rs1_val==5 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x7, 0x5, 0x2, x1, 688, x2)
90000d2c:	00200593          	li	a1,2
90000d30:	00500513          	li	a0,5
90000d34:	8d2d                	xor	a0,a0,a1
90000d36:	2aa0a823          	sw	a0,688(ra)

90000d3a <inst_173>:

inst_173:
// rs1_val==5 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x55555551, 0x5, 0x55555554, x1, 692, x2)
90000d3a:	555555b7          	lui	a1,0x55555
90000d3e:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
90000d42:	00500513          	li	a0,5
90000d46:	8d2d                	xor	a0,a0,a1
90000d48:	2aa0aa23          	sw	a0,692(ra)

90000d4c <inst_174>:

inst_174:
// rs1_val==5 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x5, 0x5, 0x0, x1, 696, x2)
90000d4c:	00000593          	li	a1,0
90000d50:	00500513          	li	a0,5
90000d54:	8d2d                	xor	a0,a0,a1
90000d56:	2aa0ac23          	sw	a0,696(ra)

90000d5a <inst_175>:

inst_175:
// rs1_val==5 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x1, 0x5, 0x4, x1, 700, x2)
90000d5a:	00400593          	li	a1,4
90000d5e:	00500513          	li	a0,5
90000d62:	8d2d                	xor	a0,a0,a1
90000d64:	2aa0ae23          	sw	a0,700(ra)

90000d68 <inst_176>:

inst_176:
// rs1_val==5 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x33333337, 0x5, 0x33333332, x1, 704, x2)
90000d68:	333335b7          	lui	a1,0x33333
90000d6c:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90000d70:	00500513          	li	a0,5
90000d74:	8d2d                	xor	a0,a0,a1
90000d76:	2ca0a023          	sw	a0,704(ra)

90000d7a <inst_177>:

inst_177:
// rs1_val==5 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x66666660, 0x5, 0x66666665, x1, 708, x2)
90000d7a:	666665b7          	lui	a1,0x66666
90000d7e:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90000d82:	00500513          	li	a0,5
90000d86:	8d2d                	xor	a0,a0,a1
90000d88:	2ca0a223          	sw	a0,708(ra)

90000d8c <inst_178>:

inst_178:
// rs1_val==5 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0xb506, 0x5, 0xb503, x1, 712, x2)
90000d8c:	0000b5b7          	lui	a1,0xb
90000d90:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90000d94:	00500513          	li	a0,5
90000d98:	8d2d                	xor	a0,a0,a1
90000d9a:	2ca0a423          	sw	a0,712(ra)

90000d9e <inst_179>:

inst_179:
// rs1_val==5 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x55555553, 0x5, 0x55555556, x1, 716, x2)
90000d9e:	555555b7          	lui	a1,0x55555
90000da2:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90000da6:	00500513          	li	a0,5
90000daa:	8d2d                	xor	a0,a0,a1
90000dac:	2ca0a623          	sw	a0,716(ra)

90000db0 <inst_180>:

inst_180:
// rs1_val==5 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaae, 0x5, -0x55555555, x1, 720, x2)
90000db0:	aaaab5b7          	lui	a1,0xaaaab
90000db4:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90000db8:	00500513          	li	a0,5
90000dbc:	8d2d                	xor	a0,a0,a1
90000dbe:	2ca0a823          	sw	a0,720(ra)

90000dc2 <inst_181>:

inst_181:
// rs1_val==5 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x3, 0x5, 0x6, x1, 724, x2)
90000dc2:	00600593          	li	a1,6
90000dc6:	00500513          	li	a0,5
90000dca:	8d2d                	xor	a0,a0,a1
90000dcc:	2ca0aa23          	sw	a0,724(ra)

90000dd0 <inst_182>:

inst_182:
// rs1_val==5 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x33333331, 0x5, 0x33333334, x1, 728, x2)
90000dd0:	333335b7          	lui	a1,0x33333
90000dd4:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90000dd8:	00500513          	li	a0,5
90000ddc:	8d2d                	xor	a0,a0,a1
90000dde:	2ca0ac23          	sw	a0,728(ra)

90000de2 <inst_183>:

inst_183:
// rs1_val==5 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x66666662, 0x5, 0x66666667, x1, 732, x2)
90000de2:	666665b7          	lui	a1,0x66666
90000de6:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90000dea:	00500513          	li	a0,5
90000dee:	8d2d                	xor	a0,a0,a1
90000df0:	2ca0ae23          	sw	a0,732(ra)

90000df4 <inst_184>:

inst_184:
// rs1_val==5 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xffff4af8, 0x5, -0xb503, x1, 736, x2)
90000df4:	ffff55b7          	lui	a1,0xffff5
90000df8:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90000dfc:	00500513          	li	a0,5
90000e00:	8d2d                	xor	a0,a0,a1
90000e02:	2ea0a023          	sw	a0,736(ra)

90000e06 <inst_185>:

inst_185:
// rs1_val==5 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x5; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0xb500, 0x5, 0xb505, x1, 740, x2)
90000e06:	0000b5b7          	lui	a1,0xb
90000e0a:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
90000e0e:	00500513          	li	a0,5
90000e12:	8d2d                	xor	a0,a0,a1
90000e14:	2ea0a223          	sw	a0,740(ra)

90000e18 <inst_186>:

inst_186:
// rs1_val==858993459 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x33333330, 0x33333333, 0x3, x1, 744, x2)
90000e18:	00300593          	li	a1,3
90000e1c:	33333537          	lui	a0,0x33333
90000e20:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000e24:	8d2d                	xor	a0,a0,a1
90000e26:	2ea0a423          	sw	a0,744(ra)

90000e2a <inst_187>:

inst_187:
// rs1_val==858993459 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x66666666, 0x33333333, 0x55555555, x1, 748, x2)
90000e2a:	555555b7          	lui	a1,0x55555
90000e2e:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90000e32:	33333537          	lui	a0,0x33333
90000e36:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000e3a:	8d2d                	xor	a0,a0,a1
90000e3c:	2ea0a623          	sw	a0,748(ra)

90000e40 <inst_188>:

inst_188:
// rs1_val==858993459 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x99999999, 0x33333333, -0x55555556, x1, 752, x2)
90000e40:	aaaab5b7          	lui	a1,0xaaaab
90000e44:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90000e48:	33333537          	lui	a0,0x33333
90000e4c:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000e50:	8d2d                	xor	a0,a0,a1
90000e52:	2ea0a823          	sw	a0,752(ra)

90000e56 <inst_189>:

inst_189:
// rs1_val==858993459 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x33333336, 0x33333333, 0x5, x1, 756, x2)
90000e56:	00500593          	li	a1,5
90000e5a:	33333537          	lui	a0,0x33333
90000e5e:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000e62:	8d2d                	xor	a0,a0,a1
90000e64:	2ea0aa23          	sw	a0,756(ra)

90000e68 <inst_190>:

inst_190:
// rs1_val==858993459 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x33333333, 0x33333333, x1, 760, x2)
90000e68:	333335b7          	lui	a1,0x33333
90000e6c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90000e70:	33333537          	lui	a0,0x33333
90000e74:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000e78:	8d2d                	xor	a0,a0,a1
90000e7a:	2ea0ac23          	sw	a0,760(ra)

90000e7e <inst_191>:

inst_191:
// rs1_val==858993459 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x55555555, 0x33333333, 0x66666666, x1, 764, x2)
90000e7e:	666665b7          	lui	a1,0x66666
90000e82:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90000e86:	33333537          	lui	a0,0x33333
90000e8a:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000e8e:	8d2d                	xor	a0,a0,a1
90000e90:	2ea0ae23          	sw	a0,764(ra)

90000e94 <inst_192>:

inst_192:
// rs1_val==858993459 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xcccc79cf, 0x33333333, -0xb504, x1, 768, x2)
90000e94:	ffff55b7          	lui	a1,0xffff5
90000e98:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90000e9c:	33333537          	lui	a0,0x33333
90000ea0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000ea4:	8d2d                	xor	a0,a0,a1
90000ea6:	30a0a023          	sw	a0,768(ra)

90000eaa <inst_193>:

inst_193:
// rs1_val==858993459 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x33338637, 0x33333333, 0xb504, x1, 772, x2)
90000eaa:	0000b5b7          	lui	a1,0xb
90000eae:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90000eb2:	33333537          	lui	a0,0x33333
90000eb6:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000eba:	8d2d                	xor	a0,a0,a1
90000ebc:	30a0a223          	sw	a0,772(ra)

90000ec0 <inst_194>:

inst_194:
// rs1_val==858993459 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x33333331, 0x33333333, 0x2, x1, 776, x2)
90000ec0:	00200593          	li	a1,2
90000ec4:	33333537          	lui	a0,0x33333
90000ec8:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000ecc:	8d2d                	xor	a0,a0,a1
90000ece:	30a0a423          	sw	a0,776(ra)

90000ed2 <inst_195>:

inst_195:
// rs1_val==858993459 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x66666667, 0x33333333, 0x55555554, x1, 780, x2)
90000ed2:	555555b7          	lui	a1,0x55555
90000ed6:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
90000eda:	33333537          	lui	a0,0x33333
90000ede:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000ee2:	8d2d                	xor	a0,a0,a1
90000ee4:	30a0a623          	sw	a0,780(ra)

90000ee8 <inst_196>:

inst_196:
// rs1_val==858993459 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x33333333, 0x33333333, 0x0, x1, 784, x2)
90000ee8:	00000593          	li	a1,0
90000eec:	33333537          	lui	a0,0x33333
90000ef0:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000ef4:	8d2d                	xor	a0,a0,a1
90000ef6:	30a0a823          	sw	a0,784(ra)

90000efa <inst_197>:

inst_197:
// rs1_val==858993459 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x33333337, 0x33333333, 0x4, x1, 788, x2)
90000efa:	00400593          	li	a1,4
90000efe:	33333537          	lui	a0,0x33333
90000f02:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000f06:	8d2d                	xor	a0,a0,a1
90000f08:	30a0aa23          	sw	a0,788(ra)

90000f0c <inst_198>:

inst_198:
// rs1_val==858993459 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x1, 0x33333333, 0x33333332, x1, 792, x2)
90000f0c:	333335b7          	lui	a1,0x33333
90000f10:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90000f14:	33333537          	lui	a0,0x33333
90000f18:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000f1c:	8d2d                	xor	a0,a0,a1
90000f1e:	30a0ac23          	sw	a0,792(ra)

90000f22 <inst_199>:

inst_199:
// rs1_val==858993459 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x55555556, 0x33333333, 0x66666665, x1, 796, x2)
90000f22:	666665b7          	lui	a1,0x66666
90000f26:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90000f2a:	33333537          	lui	a0,0x33333
90000f2e:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000f32:	8d2d                	xor	a0,a0,a1
90000f34:	30a0ae23          	sw	a0,796(ra)

90000f38 <inst_200>:

inst_200:
// rs1_val==858993459 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x33338630, 0x33333333, 0xb503, x1, 800, x2)
90000f38:	0000b5b7          	lui	a1,0xb
90000f3c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90000f40:	33333537          	lui	a0,0x33333
90000f44:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000f48:	8d2d                	xor	a0,a0,a1
90000f4a:	32a0a023          	sw	a0,800(ra)

90000f4e <inst_201>:

inst_201:
// rs1_val==858993459 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x66666665, 0x33333333, 0x55555556, x1, 804, x2)
90000f4e:	555555b7          	lui	a1,0x55555
90000f52:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90000f56:	33333537          	lui	a0,0x33333
90000f5a:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000f5e:	8d2d                	xor	a0,a0,a1
90000f60:	32a0a223          	sw	a0,804(ra)

90000f64 <inst_202>:

inst_202:
// rs1_val==858993459 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x99999998, 0x33333333, -0x55555555, x1, 808, x2)
90000f64:	aaaab5b7          	lui	a1,0xaaaab
90000f68:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90000f6c:	33333537          	lui	a0,0x33333
90000f70:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000f74:	8d2d                	xor	a0,a0,a1
90000f76:	32a0a423          	sw	a0,808(ra)

90000f7a <inst_203>:

inst_203:
// rs1_val==858993459 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x33333335, 0x33333333, 0x6, x1, 812, x2)
90000f7a:	00600593          	li	a1,6
90000f7e:	33333537          	lui	a0,0x33333
90000f82:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000f86:	8d2d                	xor	a0,a0,a1
90000f88:	32a0a623          	sw	a0,812(ra)

90000f8c <inst_204>:

inst_204:
// rs1_val==858993459 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x7, 0x33333333, 0x33333334, x1, 816, x2)
90000f8c:	333335b7          	lui	a1,0x33333
90000f90:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90000f94:	33333537          	lui	a0,0x33333
90000f98:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000f9c:	8d2d                	xor	a0,a0,a1
90000f9e:	32a0a823          	sw	a0,816(ra)

90000fa2 <inst_205>:

inst_205:
// rs1_val==858993459 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x55555554, 0x33333333, 0x66666667, x1, 820, x2)
90000fa2:	666665b7          	lui	a1,0x66666
90000fa6:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90000faa:	33333537          	lui	a0,0x33333
90000fae:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000fb2:	8d2d                	xor	a0,a0,a1
90000fb4:	32a0aa23          	sw	a0,820(ra)

90000fb8 <inst_206>:

inst_206:
// rs1_val==858993459 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xcccc79ce, 0x33333333, -0xb503, x1, 824, x2)
90000fb8:	ffff55b7          	lui	a1,0xffff5
90000fbc:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90000fc0:	33333537          	lui	a0,0x33333
90000fc4:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000fc8:	8d2d                	xor	a0,a0,a1
90000fca:	32a0ac23          	sw	a0,824(ra)

90000fce <inst_207>:

inst_207:
// rs1_val==858993459 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333333; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x33338636, 0x33333333, 0xb505, x1, 828, x2)
90000fce:	0000b5b7          	lui	a1,0xb
90000fd2:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
90000fd6:	33333537          	lui	a0,0x33333
90000fda:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x33333217>
90000fde:	8d2d                	xor	a0,a0,a1
90000fe0:	32a0ae23          	sw	a0,828(ra)

90000fe4 <inst_208>:

inst_208:
// rs1_val==1717986918 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x66666665, 0x66666666, 0x3, x1, 832, x2)
90000fe4:	00300593          	li	a1,3
90000fe8:	66666537          	lui	a0,0x66666
90000fec:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
90000ff0:	8d2d                	xor	a0,a0,a1
90000ff2:	34a0a023          	sw	a0,832(ra)

90000ff6 <inst_209>:

inst_209:
// rs1_val==1717986918 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x33333333, 0x66666666, 0x55555555, x1, 836, x2)
90000ff6:	555555b7          	lui	a1,0x55555
90000ffa:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90000ffe:	66666537          	lui	a0,0x66666
90001002:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
90001006:	8d2d                	xor	a0,a0,a1
90001008:	34a0a223          	sw	a0,836(ra)

9000100c <inst_210>:

inst_210:
// rs1_val==1717986918 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xcccccccc, 0x66666666, -0x55555556, x1, 840, x2)
9000100c:	aaaab5b7          	lui	a1,0xaaaab
90001010:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90001014:	66666537          	lui	a0,0x66666
90001018:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
9000101c:	8d2d                	xor	a0,a0,a1
9000101e:	34a0a423          	sw	a0,840(ra)

90001022 <inst_211>:

inst_211:
// rs1_val==1717986918 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x66666663, 0x66666666, 0x5, x1, 844, x2)
90001022:	00500593          	li	a1,5
90001026:	66666537          	lui	a0,0x66666
9000102a:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
9000102e:	8d2d                	xor	a0,a0,a1
90001030:	34a0a623          	sw	a0,844(ra)

90001034 <inst_212>:

inst_212:
// rs1_val==1717986918 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x55555555, 0x66666666, 0x33333333, x1, 848, x2)
90001034:	333335b7          	lui	a1,0x33333
90001038:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
9000103c:	66666537          	lui	a0,0x66666
90001040:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
90001044:	8d2d                	xor	a0,a0,a1
90001046:	34a0a823          	sw	a0,848(ra)

9000104a <inst_213>:

inst_213:
// rs1_val==1717986918 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x66666666, 0x66666666, x1, 852, x2)
9000104a:	666665b7          	lui	a1,0x66666
9000104e:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90001052:	66666537          	lui	a0,0x66666
90001056:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
9000105a:	8d2d                	xor	a0,a0,a1
9000105c:	34a0aa23          	sw	a0,852(ra)

90001060 <inst_214>:

inst_214:
// rs1_val==1717986918 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0x99992c9a, 0x66666666, -0xb504, x1, 856, x2)
90001060:	ffff55b7          	lui	a1,0xffff5
90001064:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90001068:	66666537          	lui	a0,0x66666
9000106c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
90001070:	8d2d                	xor	a0,a0,a1
90001072:	34a0ac23          	sw	a0,856(ra)

90001076 <inst_215>:

inst_215:
// rs1_val==1717986918 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x6666d362, 0x66666666, 0xb504, x1, 860, x2)
90001076:	0000b5b7          	lui	a1,0xb
9000107a:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
9000107e:	66666537          	lui	a0,0x66666
90001082:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
90001086:	8d2d                	xor	a0,a0,a1
90001088:	34a0ae23          	sw	a0,860(ra)

9000108c <inst_216>:

inst_216:
// rs1_val==1717986918 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x66666664, 0x66666666, 0x2, x1, 864, x2)
9000108c:	00200593          	li	a1,2
90001090:	66666537          	lui	a0,0x66666
90001094:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
90001098:	8d2d                	xor	a0,a0,a1
9000109a:	36a0a023          	sw	a0,864(ra)

9000109e <inst_217>:

inst_217:
// rs1_val==1717986918 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x33333332, 0x66666666, 0x55555554, x1, 868, x2)
9000109e:	555555b7          	lui	a1,0x55555
900010a2:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
900010a6:	66666537          	lui	a0,0x66666
900010aa:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
900010ae:	8d2d                	xor	a0,a0,a1
900010b0:	36a0a223          	sw	a0,868(ra)

900010b4 <inst_218>:

inst_218:
// rs1_val==1717986918 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x66666666, 0x66666666, 0x0, x1, 872, x2)
900010b4:	00000593          	li	a1,0
900010b8:	66666537          	lui	a0,0x66666
900010bc:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
900010c0:	8d2d                	xor	a0,a0,a1
900010c2:	36a0a423          	sw	a0,872(ra)

900010c6 <inst_219>:

inst_219:
// rs1_val==1717986918 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x66666662, 0x66666666, 0x4, x1, 876, x2)
900010c6:	00400593          	li	a1,4
900010ca:	66666537          	lui	a0,0x66666
900010ce:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
900010d2:	8d2d                	xor	a0,a0,a1
900010d4:	36a0a623          	sw	a0,876(ra)

900010d8 <inst_220>:

inst_220:
// rs1_val==1717986918 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x55555554, 0x66666666, 0x33333332, x1, 880, x2)
900010d8:	333335b7          	lui	a1,0x33333
900010dc:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
900010e0:	66666537          	lui	a0,0x66666
900010e4:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
900010e8:	8d2d                	xor	a0,a0,a1
900010ea:	36a0a823          	sw	a0,880(ra)

900010ee <inst_221>:

inst_221:
// rs1_val==1717986918 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x3, 0x66666666, 0x66666665, x1, 884, x2)
900010ee:	666665b7          	lui	a1,0x66666
900010f2:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
900010f6:	66666537          	lui	a0,0x66666
900010fa:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
900010fe:	8d2d                	xor	a0,a0,a1
90001100:	36a0aa23          	sw	a0,884(ra)

90001104 <inst_222>:

inst_222:
// rs1_val==1717986918 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x6666d365, 0x66666666, 0xb503, x1, 888, x2)
90001104:	0000b5b7          	lui	a1,0xb
90001108:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
9000110c:	66666537          	lui	a0,0x66666
90001110:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
90001114:	8d2d                	xor	a0,a0,a1
90001116:	36a0ac23          	sw	a0,888(ra)

9000111a <inst_223>:

inst_223:
// rs1_val==1717986918 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x33333330, 0x66666666, 0x55555556, x1, 892, x2)
9000111a:	555555b7          	lui	a1,0x55555
9000111e:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90001122:	66666537          	lui	a0,0x66666
90001126:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
9000112a:	8d2d                	xor	a0,a0,a1
9000112c:	36a0ae23          	sw	a0,892(ra)

90001130 <inst_224>:

inst_224:
// rs1_val==1717986918 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xcccccccd, 0x66666666, -0x55555555, x1, 896, x2)
90001130:	aaaab5b7          	lui	a1,0xaaaab
90001134:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90001138:	66666537          	lui	a0,0x66666
9000113c:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
90001140:	8d2d                	xor	a0,a0,a1
90001142:	38a0a023          	sw	a0,896(ra)

90001146 <inst_225>:

inst_225:
// rs1_val==1717986918 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x66666660, 0x66666666, 0x6, x1, 900, x2)
90001146:	00600593          	li	a1,6
9000114a:	66666537          	lui	a0,0x66666
9000114e:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
90001152:	8d2d                	xor	a0,a0,a1
90001154:	38a0a223          	sw	a0,900(ra)

90001158 <inst_226>:

inst_226:
// rs1_val==1717986918 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x55555552, 0x66666666, 0x33333334, x1, 904, x2)
90001158:	333335b7          	lui	a1,0x33333
9000115c:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90001160:	66666537          	lui	a0,0x66666
90001164:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
90001168:	8d2d                	xor	a0,a0,a1
9000116a:	38a0a423          	sw	a0,904(ra)

9000116e <inst_227>:

inst_227:
// rs1_val==1717986918 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x1, 0x66666666, 0x66666667, x1, 908, x2)
9000116e:	666665b7          	lui	a1,0x66666
90001172:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90001176:	66666537          	lui	a0,0x66666
9000117a:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
9000117e:	8d2d                	xor	a0,a0,a1
90001180:	38a0a623          	sw	a0,908(ra)

90001184 <inst_228>:

inst_228:
// rs1_val==1717986918 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0x99992c9b, 0x66666666, -0xb503, x1, 912, x2)
90001184:	ffff55b7          	lui	a1,0xffff5
90001188:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
9000118c:	66666537          	lui	a0,0x66666
90001190:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
90001194:	8d2d                	xor	a0,a0,a1
90001196:	38a0a823          	sw	a0,912(ra)

9000119a <inst_229>:

inst_229:
// rs1_val==1717986918 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666666; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x6666d363, 0x66666666, 0xb505, x1, 916, x2)
9000119a:	0000b5b7          	lui	a1,0xb
9000119e:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
900011a2:	66666537          	lui	a0,0x66666
900011a6:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666654a>
900011aa:	8d2d                	xor	a0,a0,a1
900011ac:	38a0aa23          	sw	a0,916(ra)

900011b0 <inst_230>:

inst_230:
// rs1_val==-46340 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0xffff4aff, -0xb504, 0x3, x1, 920, x2)
900011b0:	00300593          	li	a1,3
900011b4:	ffff5537          	lui	a0,0xffff5
900011b8:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
900011bc:	8d2d                	xor	a0,a0,a1
900011be:	38a0ac23          	sw	a0,920(ra)

900011c2 <inst_231>:

inst_231:
// rs1_val==-46340 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa9, -0xb504, 0x55555555, x1, 924, x2)
900011c2:	555555b7          	lui	a1,0x55555
900011c6:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
900011ca:	ffff5537          	lui	a0,0xffff5
900011ce:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
900011d2:	8d2d                	xor	a0,a0,a1
900011d4:	38a0ae23          	sw	a0,924(ra)

900011d8 <inst_232>:

inst_232:
// rs1_val==-46340 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x5555e056, -0xb504, -0x55555556, x1, 928, x2)
900011d8:	aaaab5b7          	lui	a1,0xaaaab
900011dc:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
900011e0:	ffff5537          	lui	a0,0xffff5
900011e4:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
900011e8:	8d2d                	xor	a0,a0,a1
900011ea:	3aa0a023          	sw	a0,928(ra)

900011ee <inst_233>:

inst_233:
// rs1_val==-46340 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0xffff4af9, -0xb504, 0x5, x1, 932, x2)
900011ee:	00500593          	li	a1,5
900011f2:	ffff5537          	lui	a0,0xffff5
900011f6:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
900011fa:	8d2d                	xor	a0,a0,a1
900011fc:	3aa0a223          	sw	a0,932(ra)

90001200 <inst_234>:

inst_234:
// rs1_val==-46340 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0xcccc79cf, -0xb504, 0x33333333, x1, 936, x2)
90001200:	333335b7          	lui	a1,0x33333
90001204:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90001208:	ffff5537          	lui	a0,0xffff5
9000120c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
90001210:	8d2d                	xor	a0,a0,a1
90001212:	3aa0a423          	sw	a0,936(ra)

90001216 <inst_235>:

inst_235:
// rs1_val==-46340 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x99992c9a, -0xb504, 0x66666666, x1, 940, x2)
90001216:	666665b7          	lui	a1,0x66666
9000121a:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
9000121e:	ffff5537          	lui	a0,0xffff5
90001222:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
90001226:	8d2d                	xor	a0,a0,a1
90001228:	3aa0a623          	sw	a0,940(ra)

9000122c <inst_236>:

inst_236:
// rs1_val==-46340 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0x0, -0xb504, -0xb504, x1, 944, x2)
9000122c:	ffff55b7          	lui	a1,0xffff5
90001230:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90001234:	ffff5537          	lui	a0,0xffff5
90001238:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
9000123c:	8d2d                	xor	a0,a0,a1
9000123e:	3aa0a823          	sw	a0,944(ra)

90001242 <inst_237>:

inst_237:
// rs1_val==-46340 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0xfffffff8, -0xb504, 0xb504, x1, 948, x2)
90001242:	0000b5b7          	lui	a1,0xb
90001246:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
9000124a:	ffff5537          	lui	a0,0xffff5
9000124e:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
90001252:	8d2d                	xor	a0,a0,a1
90001254:	3aa0aa23          	sw	a0,948(ra)

90001258 <inst_238>:

inst_238:
// rs1_val==-46340 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0xffff4afe, -0xb504, 0x2, x1, 952, x2)
90001258:	00200593          	li	a1,2
9000125c:	ffff5537          	lui	a0,0xffff5
90001260:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
90001264:	8d2d                	xor	a0,a0,a1
90001266:	3aa0ac23          	sw	a0,952(ra)

9000126a <inst_239>:

inst_239:
// rs1_val==-46340 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa8, -0xb504, 0x55555554, x1, 956, x2)
9000126a:	555555b7          	lui	a1,0x55555
9000126e:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
90001272:	ffff5537          	lui	a0,0xffff5
90001276:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
9000127a:	8d2d                	xor	a0,a0,a1
9000127c:	3aa0ae23          	sw	a0,956(ra)

90001280 <inst_240>:

inst_240:
// rs1_val==-46340 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0xffff4afc, -0xb504, 0x0, x1, 960, x2)
90001280:	00000593          	li	a1,0
90001284:	ffff5537          	lui	a0,0xffff5
90001288:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
9000128c:	8d2d                	xor	a0,a0,a1
9000128e:	3ca0a023          	sw	a0,960(ra)

90001292 <inst_241>:

inst_241:
// rs1_val==-46340 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0xffff4af8, -0xb504, 0x4, x1, 964, x2)
90001292:	00400593          	li	a1,4
90001296:	ffff5537          	lui	a0,0xffff5
9000129a:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
9000129e:	8d2d                	xor	a0,a0,a1
900012a0:	3ca0a223          	sw	a0,964(ra)

900012a4 <inst_242>:

inst_242:
// rs1_val==-46340 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0xcccc79ce, -0xb504, 0x33333332, x1, 968, x2)
900012a4:	333335b7          	lui	a1,0x33333
900012a8:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
900012ac:	ffff5537          	lui	a0,0xffff5
900012b0:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
900012b4:	8d2d                	xor	a0,a0,a1
900012b6:	3ca0a423          	sw	a0,968(ra)

900012ba <inst_243>:

inst_243:
// rs1_val==-46340 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x99992c99, -0xb504, 0x66666665, x1, 972, x2)
900012ba:	666665b7          	lui	a1,0x66666
900012be:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
900012c2:	ffff5537          	lui	a0,0xffff5
900012c6:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
900012ca:	8d2d                	xor	a0,a0,a1
900012cc:	3ca0a623          	sw	a0,972(ra)

900012d0 <inst_244>:

inst_244:
// rs1_val==-46340 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0xffffffff, -0xb504, 0xb503, x1, 976, x2)
900012d0:	0000b5b7          	lui	a1,0xb
900012d4:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
900012d8:	ffff5537          	lui	a0,0xffff5
900012dc:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
900012e0:	8d2d                	xor	a0,a0,a1
900012e2:	3ca0a823          	sw	a0,976(ra)

900012e6 <inst_245>:

inst_245:
// rs1_val==-46340 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1faa, -0xb504, 0x55555556, x1, 980, x2)
900012e6:	555555b7          	lui	a1,0x55555
900012ea:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
900012ee:	ffff5537          	lui	a0,0xffff5
900012f2:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
900012f6:	8d2d                	xor	a0,a0,a1
900012f8:	3ca0aa23          	sw	a0,980(ra)

900012fc <inst_246>:

inst_246:
// rs1_val==-46340 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x5555e057, -0xb504, -0x55555555, x1, 984, x2)
900012fc:	aaaab5b7          	lui	a1,0xaaaab
90001300:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90001304:	ffff5537          	lui	a0,0xffff5
90001308:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
9000130c:	8d2d                	xor	a0,a0,a1
9000130e:	3ca0ac23          	sw	a0,984(ra)

90001312 <inst_247>:

inst_247:
// rs1_val==-46340 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0xffff4afa, -0xb504, 0x6, x1, 988, x2)
90001312:	00600593          	li	a1,6
90001316:	ffff5537          	lui	a0,0xffff5
9000131a:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
9000131e:	8d2d                	xor	a0,a0,a1
90001320:	3ca0ae23          	sw	a0,988(ra)

90001324 <inst_248>:

inst_248:
// rs1_val==-46340 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0xcccc79c8, -0xb504, 0x33333334, x1, 992, x2)
90001324:	333335b7          	lui	a1,0x33333
90001328:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
9000132c:	ffff5537          	lui	a0,0xffff5
90001330:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
90001334:	8d2d                	xor	a0,a0,a1
90001336:	3ea0a023          	sw	a0,992(ra)

9000133a <inst_249>:

inst_249:
// rs1_val==-46340 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x99992c9b, -0xb504, 0x66666667, x1, 996, x2)
9000133a:	666665b7          	lui	a1,0x66666
9000133e:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90001342:	ffff5537          	lui	a0,0xffff5
90001346:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
9000134a:	8d2d                	xor	a0,a0,a1
9000134c:	3ea0a223          	sw	a0,996(ra)

90001350 <inst_250>:

inst_250:
// rs1_val==-46340 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0x1, -0xb504, -0xb503, x1, 1000, x2)
90001350:	ffff55b7          	lui	a1,0xffff5
90001354:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90001358:	ffff5537          	lui	a0,0xffff5
9000135c:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
90001360:	8d2d                	xor	a0,a0,a1
90001362:	3ea0a423          	sw	a0,1000(ra)

90001366 <inst_251>:

inst_251:
// rs1_val==-46340 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb504; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0xfffffff9, -0xb504, 0xb505, x1, 1004, x2)
90001366:	0000b5b7          	lui	a1,0xb
9000136a:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
9000136e:	ffff5537          	lui	a0,0xffff5
90001372:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6ffefff8>
90001376:	8d2d                	xor	a0,a0,a1
90001378:	3ea0a623          	sw	a0,1004(ra)

9000137c <inst_252>:

inst_252:
// rs1_val==46340 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0xb507, 0xb504, 0x3, x1, 1008, x2)
9000137c:	00300593          	li	a1,3
90001380:	0000b537          	lui	a0,0xb
90001384:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
90001388:	8d2d                	xor	a0,a0,a1
9000138a:	3ea0a823          	sw	a0,1008(ra)

9000138e <inst_253>:

inst_253:
// rs1_val==46340 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x5555e051, 0xb504, 0x55555555, x1, 1012, x2)
9000138e:	555555b7          	lui	a1,0x55555
90001392:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90001396:	0000b537          	lui	a0,0xb
9000139a:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
9000139e:	8d2d                	xor	a0,a0,a1
900013a0:	3ea0aa23          	sw	a0,1012(ra)

900013a4 <inst_254>:

inst_254:
// rs1_val==46340 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fae, 0xb504, -0x55555556, x1, 1016, x2)
900013a4:	aaaab5b7          	lui	a1,0xaaaab
900013a8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
900013ac:	0000b537          	lui	a0,0xb
900013b0:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
900013b4:	8d2d                	xor	a0,a0,a1
900013b6:	3ea0ac23          	sw	a0,1016(ra)

900013ba <inst_255>:

inst_255:
// rs1_val==46340 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0xb501, 0xb504, 0x5, x1, 1020, x2)
900013ba:	00500593          	li	a1,5
900013be:	0000b537          	lui	a0,0xb
900013c2:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
900013c6:	8d2d                	xor	a0,a0,a1
900013c8:	3ea0ae23          	sw	a0,1020(ra)

900013cc <inst_256>:

inst_256:
// rs1_val==46340 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x33338637, 0xb504, 0x33333333, x1, 1024, x2)
900013cc:	333335b7          	lui	a1,0x33333
900013d0:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
900013d4:	0000b537          	lui	a0,0xb
900013d8:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
900013dc:	8d2d                	xor	a0,a0,a1
900013de:	40a0a023          	sw	a0,1024(ra)

900013e2 <inst_257>:

inst_257:
// rs1_val==46340 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x6666d362, 0xb504, 0x66666666, x1, 1028, x2)
900013e2:	666665b7          	lui	a1,0x66666
900013e6:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
900013ea:	0000b537          	lui	a0,0xb
900013ee:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
900013f2:	8d2d                	xor	a0,a0,a1
900013f4:	40a0a223          	sw	a0,1028(ra)

900013f8 <inst_258>:

inst_258:
// rs1_val==46340 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xfffffff8, 0xb504, -0xb504, x1, 1032, x2)
900013f8:	ffff55b7          	lui	a1,0xffff5
900013fc:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90001400:	0000b537          	lui	a0,0xb
90001404:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
90001408:	8d2d                	xor	a0,a0,a1
9000140a:	40a0a423          	sw	a0,1032(ra)

9000140e <inst_259>:

inst_259:
// rs1_val==46340 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x0, 0xb504, 0xb504, x1, 1036, x2)
9000140e:	0000b5b7          	lui	a1,0xb
90001412:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90001416:	0000b537          	lui	a0,0xb
9000141a:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
9000141e:	8d2d                	xor	a0,a0,a1
90001420:	40a0a623          	sw	a0,1036(ra)

90001424 <inst_260>:

inst_260:
// rs1_val==46340 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0xb506, 0xb504, 0x2, x1, 1040, x2)
90001424:	00200593          	li	a1,2
90001428:	0000b537          	lui	a0,0xb
9000142c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
90001430:	8d2d                	xor	a0,a0,a1
90001432:	40a0a823          	sw	a0,1040(ra)

90001436 <inst_261>:

inst_261:
// rs1_val==46340 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x5555e050, 0xb504, 0x55555554, x1, 1044, x2)
90001436:	555555b7          	lui	a1,0x55555
9000143a:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
9000143e:	0000b537          	lui	a0,0xb
90001442:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
90001446:	8d2d                	xor	a0,a0,a1
90001448:	40a0aa23          	sw	a0,1044(ra)

9000144c <inst_262>:

inst_262:
// rs1_val==46340 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0xb504, 0xb504, 0x0, x1, 1048, x2)
9000144c:	00000593          	li	a1,0
90001450:	0000b537          	lui	a0,0xb
90001454:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
90001458:	8d2d                	xor	a0,a0,a1
9000145a:	40a0ac23          	sw	a0,1048(ra)

9000145e <inst_263>:

inst_263:
// rs1_val==46340 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0xb500, 0xb504, 0x4, x1, 1052, x2)
9000145e:	00400593          	li	a1,4
90001462:	0000b537          	lui	a0,0xb
90001466:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
9000146a:	8d2d                	xor	a0,a0,a1
9000146c:	40a0ae23          	sw	a0,1052(ra)

90001470 <inst_264>:

inst_264:
// rs1_val==46340 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x33338636, 0xb504, 0x33333332, x1, 1056, x2)
90001470:	333335b7          	lui	a1,0x33333
90001474:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90001478:	0000b537          	lui	a0,0xb
9000147c:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
90001480:	8d2d                	xor	a0,a0,a1
90001482:	42a0a023          	sw	a0,1056(ra)

90001486 <inst_265>:

inst_265:
// rs1_val==46340 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x6666d361, 0xb504, 0x66666665, x1, 1060, x2)
90001486:	666665b7          	lui	a1,0x66666
9000148a:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
9000148e:	0000b537          	lui	a0,0xb
90001492:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
90001496:	8d2d                	xor	a0,a0,a1
90001498:	42a0a223          	sw	a0,1060(ra)

9000149c <inst_266>:

inst_266:
// rs1_val==46340 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x7, 0xb504, 0xb503, x1, 1064, x2)
9000149c:	0000b5b7          	lui	a1,0xb
900014a0:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
900014a4:	0000b537          	lui	a0,0xb
900014a8:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
900014ac:	8d2d                	xor	a0,a0,a1
900014ae:	42a0a423          	sw	a0,1064(ra)

900014b2 <inst_267>:

inst_267:
// rs1_val==46340 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x5555e052, 0xb504, 0x55555556, x1, 1068, x2)
900014b2:	555555b7          	lui	a1,0x55555
900014b6:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
900014ba:	0000b537          	lui	a0,0xb
900014be:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
900014c2:	8d2d                	xor	a0,a0,a1
900014c4:	42a0a623          	sw	a0,1068(ra)

900014c8 <inst_268>:

inst_268:
// rs1_val==46340 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1faf, 0xb504, -0x55555555, x1, 1072, x2)
900014c8:	aaaab5b7          	lui	a1,0xaaaab
900014cc:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
900014d0:	0000b537          	lui	a0,0xb
900014d4:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
900014d8:	8d2d                	xor	a0,a0,a1
900014da:	42a0a823          	sw	a0,1072(ra)

900014de <inst_269>:

inst_269:
// rs1_val==46340 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0xb502, 0xb504, 0x6, x1, 1076, x2)
900014de:	00600593          	li	a1,6
900014e2:	0000b537          	lui	a0,0xb
900014e6:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
900014ea:	8d2d                	xor	a0,a0,a1
900014ec:	42a0aa23          	sw	a0,1076(ra)

900014f0 <inst_270>:

inst_270:
// rs1_val==46340 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x33338630, 0xb504, 0x33333334, x1, 1080, x2)
900014f0:	333335b7          	lui	a1,0x33333
900014f4:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
900014f8:	0000b537          	lui	a0,0xb
900014fc:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
90001500:	8d2d                	xor	a0,a0,a1
90001502:	42a0ac23          	sw	a0,1080(ra)

90001506 <inst_271>:

inst_271:
// rs1_val==46340 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x6666d363, 0xb504, 0x66666667, x1, 1084, x2)
90001506:	666665b7          	lui	a1,0x66666
9000150a:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
9000150e:	0000b537          	lui	a0,0xb
90001512:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
90001516:	8d2d                	xor	a0,a0,a1
90001518:	42a0ae23          	sw	a0,1084(ra)

9000151c <inst_272>:

inst_272:
// rs1_val==46340 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xfffffff9, 0xb504, -0xb503, x1, 1088, x2)
9000151c:	ffff55b7          	lui	a1,0xffff5
90001520:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90001524:	0000b537          	lui	a0,0xb
90001528:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
9000152c:	8d2d                	xor	a0,a0,a1
9000152e:	44a0a023          	sw	a0,1088(ra)

90001532 <inst_273>:

inst_273:
// rs1_val==46340 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb504; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x1, 0xb504, 0xb505, x1, 1092, x2)
90001532:	0000b5b7          	lui	a1,0xb
90001536:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
9000153a:	0000b537          	lui	a0,0xb
9000153e:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3e8>
90001542:	8d2d                	xor	a0,a0,a1
90001544:	44a0a223          	sw	a0,1092(ra)

90001548 <inst_274>:

inst_274:
// rs1_val==2 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x1, 0x2, 0x3, x1, 1096, x2)
90001548:	00300593          	li	a1,3
9000154c:	00200513          	li	a0,2
90001550:	8d2d                	xor	a0,a0,a1
90001552:	44a0a423          	sw	a0,1096(ra)

90001556 <inst_275>:

inst_275:
// rs1_val==2 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x55555557, 0x2, 0x55555555, x1, 1100, x2)
90001556:	555555b7          	lui	a1,0x55555
9000155a:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
9000155e:	00200513          	li	a0,2
90001562:	8d2d                	xor	a0,a0,a1
90001564:	44a0a623          	sw	a0,1100(ra)

90001568 <inst_276>:

inst_276:
// rs1_val==2 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaa8, 0x2, -0x55555556, x1, 1104, x2)
90001568:	aaaab5b7          	lui	a1,0xaaaab
9000156c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90001570:	00200513          	li	a0,2
90001574:	8d2d                	xor	a0,a0,a1
90001576:	44a0a823          	sw	a0,1104(ra)

9000157a <inst_277>:

inst_277:
// rs1_val==2 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x7, 0x2, 0x5, x1, 1108, x2)
9000157a:	00500593          	li	a1,5
9000157e:	00200513          	li	a0,2
90001582:	8d2d                	xor	a0,a0,a1
90001584:	44a0aa23          	sw	a0,1108(ra)

90001588 <inst_278>:

inst_278:
// rs1_val==2 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x33333331, 0x2, 0x33333333, x1, 1112, x2)
90001588:	333335b7          	lui	a1,0x33333
9000158c:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90001590:	00200513          	li	a0,2
90001594:	8d2d                	xor	a0,a0,a1
90001596:	44a0ac23          	sw	a0,1112(ra)

9000159a <inst_279>:

inst_279:
// rs1_val==2 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x66666664, 0x2, 0x66666666, x1, 1116, x2)
9000159a:	666665b7          	lui	a1,0x66666
9000159e:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
900015a2:	00200513          	li	a0,2
900015a6:	8d2d                	xor	a0,a0,a1
900015a8:	44a0ae23          	sw	a0,1116(ra)

900015ac <inst_280>:

inst_280:
// rs1_val==2 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xffff4afe, 0x2, -0xb504, x1, 1120, x2)
900015ac:	ffff55b7          	lui	a1,0xffff5
900015b0:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
900015b4:	00200513          	li	a0,2
900015b8:	8d2d                	xor	a0,a0,a1
900015ba:	46a0a023          	sw	a0,1120(ra)

900015be <inst_281>:

inst_281:
// rs1_val==2 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0xb506, 0x2, 0xb504, x1, 1124, x2)
900015be:	0000b5b7          	lui	a1,0xb
900015c2:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
900015c6:	00200513          	li	a0,2
900015ca:	8d2d                	xor	a0,a0,a1
900015cc:	46a0a223          	sw	a0,1124(ra)

900015d0 <inst_282>:

inst_282:
// rs1_val==2 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x2, 0x2, x1, 1128, x2)
900015d0:	00200593          	li	a1,2
900015d4:	00200513          	li	a0,2
900015d8:	8d2d                	xor	a0,a0,a1
900015da:	46a0a423          	sw	a0,1128(ra)

900015de <inst_283>:

inst_283:
// rs1_val==2 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x55555556, 0x2, 0x55555554, x1, 1132, x2)
900015de:	555555b7          	lui	a1,0x55555
900015e2:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
900015e6:	00200513          	li	a0,2
900015ea:	8d2d                	xor	a0,a0,a1
900015ec:	46a0a623          	sw	a0,1132(ra)

900015f0 <inst_284>:

inst_284:
// rs1_val==2 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x2, 0x2, 0x0, x1, 1136, x2)
900015f0:	00000593          	li	a1,0
900015f4:	00200513          	li	a0,2
900015f8:	8d2d                	xor	a0,a0,a1
900015fa:	46a0a823          	sw	a0,1136(ra)

900015fe <inst_285>:

inst_285:
// rs1_val==2 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x6, 0x2, 0x4, x1, 1140, x2)
900015fe:	00400593          	li	a1,4
90001602:	00200513          	li	a0,2
90001606:	8d2d                	xor	a0,a0,a1
90001608:	46a0aa23          	sw	a0,1140(ra)

9000160c <inst_286>:

inst_286:
// rs1_val==2 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x33333330, 0x2, 0x33333332, x1, 1144, x2)
9000160c:	333335b7          	lui	a1,0x33333
90001610:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90001614:	00200513          	li	a0,2
90001618:	8d2d                	xor	a0,a0,a1
9000161a:	46a0ac23          	sw	a0,1144(ra)

9000161e <inst_287>:

inst_287:
// rs1_val==2 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x66666667, 0x2, 0x66666665, x1, 1148, x2)
9000161e:	666665b7          	lui	a1,0x66666
90001622:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90001626:	00200513          	li	a0,2
9000162a:	8d2d                	xor	a0,a0,a1
9000162c:	46a0ae23          	sw	a0,1148(ra)

90001630 <inst_288>:

inst_288:
// rs1_val==2 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0xb501, 0x2, 0xb503, x1, 1152, x2)
90001630:	0000b5b7          	lui	a1,0xb
90001634:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90001638:	00200513          	li	a0,2
9000163c:	8d2d                	xor	a0,a0,a1
9000163e:	48a0a023          	sw	a0,1152(ra)

90001642 <inst_289>:

inst_289:
// rs1_val==2 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x55555554, 0x2, 0x55555556, x1, 1156, x2)
90001642:	555555b7          	lui	a1,0x55555
90001646:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
9000164a:	00200513          	li	a0,2
9000164e:	8d2d                	xor	a0,a0,a1
90001650:	48a0a223          	sw	a0,1156(ra)

90001654 <inst_290>:

inst_290:
// rs1_val==2 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaa9, 0x2, -0x55555555, x1, 1160, x2)
90001654:	aaaab5b7          	lui	a1,0xaaaab
90001658:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
9000165c:	00200513          	li	a0,2
90001660:	8d2d                	xor	a0,a0,a1
90001662:	48a0a423          	sw	a0,1160(ra)

90001666 <inst_291>:

inst_291:
// rs1_val==2 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x4, 0x2, 0x6, x1, 1164, x2)
90001666:	00600593          	li	a1,6
9000166a:	00200513          	li	a0,2
9000166e:	8d2d                	xor	a0,a0,a1
90001670:	48a0a623          	sw	a0,1164(ra)

90001674 <inst_292>:

inst_292:
// rs1_val==2 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x33333336, 0x2, 0x33333334, x1, 1168, x2)
90001674:	333335b7          	lui	a1,0x33333
90001678:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
9000167c:	00200513          	li	a0,2
90001680:	8d2d                	xor	a0,a0,a1
90001682:	48a0a823          	sw	a0,1168(ra)

90001686 <inst_293>:

inst_293:
// rs1_val==2 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x66666665, 0x2, 0x66666667, x1, 1172, x2)
90001686:	666665b7          	lui	a1,0x66666
9000168a:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
9000168e:	00200513          	li	a0,2
90001692:	8d2d                	xor	a0,a0,a1
90001694:	48a0aa23          	sw	a0,1172(ra)

90001698 <inst_294>:

inst_294:
// rs1_val==2 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xffff4aff, 0x2, -0xb503, x1, 1176, x2)
90001698:	ffff55b7          	lui	a1,0xffff5
9000169c:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
900016a0:	00200513          	li	a0,2
900016a4:	8d2d                	xor	a0,a0,a1
900016a6:	48a0ac23          	sw	a0,1176(ra)

900016aa <inst_295>:

inst_295:
// rs1_val==2 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x2; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0xb507, 0x2, 0xb505, x1, 1180, x2)
900016aa:	0000b5b7          	lui	a1,0xb
900016ae:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
900016b2:	00200513          	li	a0,2
900016b6:	8d2d                	xor	a0,a0,a1
900016b8:	48a0ae23          	sw	a0,1180(ra)

900016bc <inst_296>:

inst_296:
// rs1_val==1431655764 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x55555557, 0x55555554, 0x3, x1, 1184, x2)
900016bc:	00300593          	li	a1,3
900016c0:	55555537          	lui	a0,0x55555
900016c4:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
900016c8:	8d2d                	xor	a0,a0,a1
900016ca:	4aa0a023          	sw	a0,1184(ra)

900016ce <inst_297>:

inst_297:
// rs1_val==1431655764 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x1, 0x55555554, 0x55555555, x1, 1188, x2)
900016ce:	555555b7          	lui	a1,0x55555
900016d2:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
900016d6:	55555537          	lui	a0,0x55555
900016da:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
900016de:	8d2d                	xor	a0,a0,a1
900016e0:	4aa0a223          	sw	a0,1188(ra)

900016e4 <inst_298>:

inst_298:
// rs1_val==1431655764 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xfffffffe, 0x55555554, -0x55555556, x1, 1192, x2)
900016e4:	aaaab5b7          	lui	a1,0xaaaab
900016e8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
900016ec:	55555537          	lui	a0,0x55555
900016f0:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
900016f4:	8d2d                	xor	a0,a0,a1
900016f6:	4aa0a423          	sw	a0,1192(ra)

900016fa <inst_299>:

inst_299:
// rs1_val==1431655764 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x55555551, 0x55555554, 0x5, x1, 1196, x2)
900016fa:	00500593          	li	a1,5
900016fe:	55555537          	lui	a0,0x55555
90001702:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
90001706:	8d2d                	xor	a0,a0,a1
90001708:	4aa0a623          	sw	a0,1196(ra)

9000170c <inst_300>:

inst_300:
// rs1_val==1431655764 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x66666667, 0x55555554, 0x33333333, x1, 1200, x2)
9000170c:	333335b7          	lui	a1,0x33333
90001710:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90001714:	55555537          	lui	a0,0x55555
90001718:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
9000171c:	8d2d                	xor	a0,a0,a1
9000171e:	4aa0a823          	sw	a0,1200(ra)

90001722 <inst_301>:

inst_301:
// rs1_val==1431655764 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x33333332, 0x55555554, 0x66666666, x1, 1204, x2)
90001722:	666665b7          	lui	a1,0x66666
90001726:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
9000172a:	55555537          	lui	a0,0x55555
9000172e:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
90001732:	8d2d                	xor	a0,a0,a1
90001734:	4aa0aa23          	sw	a0,1204(ra)

90001738 <inst_302>:

inst_302:
// rs1_val==1431655764 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa8, 0x55555554, -0xb504, x1, 1208, x2)
90001738:	ffff55b7          	lui	a1,0xffff5
9000173c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90001740:	55555537          	lui	a0,0x55555
90001744:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
90001748:	8d2d                	xor	a0,a0,a1
9000174a:	4aa0ac23          	sw	a0,1208(ra)

9000174e <inst_303>:

inst_303:
// rs1_val==1431655764 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x5555e050, 0x55555554, 0xb504, x1, 1212, x2)
9000174e:	0000b5b7          	lui	a1,0xb
90001752:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90001756:	55555537          	lui	a0,0x55555
9000175a:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
9000175e:	8d2d                	xor	a0,a0,a1
90001760:	4aa0ae23          	sw	a0,1212(ra)

90001764 <inst_304>:

inst_304:
// rs1_val==1431655764 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x55555556, 0x55555554, 0x2, x1, 1216, x2)
90001764:	00200593          	li	a1,2
90001768:	55555537          	lui	a0,0x55555
9000176c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
90001770:	8d2d                	xor	a0,a0,a1
90001772:	4ca0a023          	sw	a0,1216(ra)

90001776 <inst_305>:

inst_305:
// rs1_val==1431655764 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x55555554, 0x55555554, x1, 1220, x2)
90001776:	555555b7          	lui	a1,0x55555
9000177a:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
9000177e:	55555537          	lui	a0,0x55555
90001782:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
90001786:	8d2d                	xor	a0,a0,a1
90001788:	4ca0a223          	sw	a0,1220(ra)

9000178c <inst_306>:

inst_306:
// rs1_val==1431655764 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x55555554, 0x55555554, 0x0, x1, 1224, x2)
9000178c:	00000593          	li	a1,0
90001790:	55555537          	lui	a0,0x55555
90001794:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
90001798:	8d2d                	xor	a0,a0,a1
9000179a:	4ca0a423          	sw	a0,1224(ra)

9000179e <inst_307>:

inst_307:
// rs1_val==1431655764 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x55555550, 0x55555554, 0x4, x1, 1228, x2)
9000179e:	00400593          	li	a1,4
900017a2:	55555537          	lui	a0,0x55555
900017a6:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
900017aa:	8d2d                	xor	a0,a0,a1
900017ac:	4ca0a623          	sw	a0,1228(ra)

900017b0 <inst_308>:

inst_308:
// rs1_val==1431655764 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x66666666, 0x55555554, 0x33333332, x1, 1232, x2)
900017b0:	333335b7          	lui	a1,0x33333
900017b4:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
900017b8:	55555537          	lui	a0,0x55555
900017bc:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
900017c0:	8d2d                	xor	a0,a0,a1
900017c2:	4ca0a823          	sw	a0,1232(ra)

900017c6 <inst_309>:

inst_309:
// rs1_val==1431655764 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x33333331, 0x55555554, 0x66666665, x1, 1236, x2)
900017c6:	666665b7          	lui	a1,0x66666
900017ca:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
900017ce:	55555537          	lui	a0,0x55555
900017d2:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
900017d6:	8d2d                	xor	a0,a0,a1
900017d8:	4ca0aa23          	sw	a0,1236(ra)

900017dc <inst_310>:

inst_310:
// rs1_val==1431655764 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x5555e057, 0x55555554, 0xb503, x1, 1240, x2)
900017dc:	0000b5b7          	lui	a1,0xb
900017e0:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
900017e4:	55555537          	lui	a0,0x55555
900017e8:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
900017ec:	8d2d                	xor	a0,a0,a1
900017ee:	4ca0ac23          	sw	a0,1240(ra)

900017f2 <inst_311>:

inst_311:
// rs1_val==1431655764 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x2, 0x55555554, 0x55555556, x1, 1244, x2)
900017f2:	555555b7          	lui	a1,0x55555
900017f6:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
900017fa:	55555537          	lui	a0,0x55555
900017fe:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
90001802:	8d2d                	xor	a0,a0,a1
90001804:	4ca0ae23          	sw	a0,1244(ra)

90001808 <inst_312>:

inst_312:
// rs1_val==1431655764 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xffffffff, 0x55555554, -0x55555555, x1, 1248, x2)
90001808:	aaaab5b7          	lui	a1,0xaaaab
9000180c:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90001810:	55555537          	lui	a0,0x55555
90001814:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
90001818:	8d2d                	xor	a0,a0,a1
9000181a:	4ea0a023          	sw	a0,1248(ra)

9000181e <inst_313>:

inst_313:
// rs1_val==1431655764 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x55555552, 0x55555554, 0x6, x1, 1252, x2)
9000181e:	00600593          	li	a1,6
90001822:	55555537          	lui	a0,0x55555
90001826:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
9000182a:	8d2d                	xor	a0,a0,a1
9000182c:	4ea0a223          	sw	a0,1252(ra)

90001830 <inst_314>:

inst_314:
// rs1_val==1431655764 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x66666660, 0x55555554, 0x33333334, x1, 1256, x2)
90001830:	333335b7          	lui	a1,0x33333
90001834:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90001838:	55555537          	lui	a0,0x55555
9000183c:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
90001840:	8d2d                	xor	a0,a0,a1
90001842:	4ea0a423          	sw	a0,1256(ra)

90001846 <inst_315>:

inst_315:
// rs1_val==1431655764 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x33333333, 0x55555554, 0x66666667, x1, 1260, x2)
90001846:	666665b7          	lui	a1,0x66666
9000184a:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
9000184e:	55555537          	lui	a0,0x55555
90001852:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
90001856:	8d2d                	xor	a0,a0,a1
90001858:	4ea0a623          	sw	a0,1260(ra)

9000185c <inst_316>:

inst_316:
// rs1_val==1431655764 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa9, 0x55555554, -0xb503, x1, 1264, x2)
9000185c:	ffff55b7          	lui	a1,0xffff5
90001860:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90001864:	55555537          	lui	a0,0x55555
90001868:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
9000186c:	8d2d                	xor	a0,a0,a1
9000186e:	4ea0a823          	sw	a0,1264(ra)

90001872 <inst_317>:

inst_317:
// rs1_val==1431655764 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555554; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x5555e051, 0x55555554, 0xb505, x1, 1268, x2)
90001872:	0000b5b7          	lui	a1,0xb
90001876:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
9000187a:	55555537          	lui	a0,0x55555
9000187e:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x55555438>
90001882:	8d2d                	xor	a0,a0,a1
90001884:	4ea0aa23          	sw	a0,1268(ra)

90001888 <inst_318>:

inst_318:
// rs1_val==0 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x3, 0x0, 0x3, x1, 1272, x2)
90001888:	00300593          	li	a1,3
9000188c:	00000513          	li	a0,0
90001890:	8d2d                	xor	a0,a0,a1
90001892:	4ea0ac23          	sw	a0,1272(ra)

90001896 <inst_319>:

inst_319:
// rs1_val==0 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x55555555, 0x0, 0x55555555, x1, 1276, x2)
90001896:	555555b7          	lui	a1,0x55555
9000189a:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
9000189e:	00000513          	li	a0,0
900018a2:	8d2d                	xor	a0,a0,a1
900018a4:	4ea0ae23          	sw	a0,1276(ra)

900018a8 <inst_320>:

inst_320:
// rs1_val==0 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaaa, 0x0, -0x55555556, x1, 1280, x2)
900018a8:	aaaab5b7          	lui	a1,0xaaaab
900018ac:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
900018b0:	00000513          	li	a0,0
900018b4:	8d2d                	xor	a0,a0,a1
900018b6:	50a0a023          	sw	a0,1280(ra)

900018ba <inst_321>:

inst_321:
// rs1_val==0 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x5, 0x0, 0x5, x1, 1284, x2)
900018ba:	00500593          	li	a1,5
900018be:	00000513          	li	a0,0
900018c2:	8d2d                	xor	a0,a0,a1
900018c4:	50a0a223          	sw	a0,1284(ra)

900018c8 <inst_322>:

inst_322:
// rs1_val==0 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x33333333, 0x0, 0x33333333, x1, 1288, x2)
900018c8:	333335b7          	lui	a1,0x33333
900018cc:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
900018d0:	00000513          	li	a0,0
900018d4:	8d2d                	xor	a0,a0,a1
900018d6:	50a0a423          	sw	a0,1288(ra)

900018da <inst_323>:

inst_323:
// rs1_val==0 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x66666666, 0x0, 0x66666666, x1, 1292, x2)
900018da:	666665b7          	lui	a1,0x66666
900018de:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
900018e2:	00000513          	li	a0,0
900018e6:	8d2d                	xor	a0,a0,a1
900018e8:	50a0a623          	sw	a0,1292(ra)

900018ec <inst_324>:

inst_324:
// rs1_val==0 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xffff4afc, 0x0, -0xb504, x1, 1296, x2)
900018ec:	ffff55b7          	lui	a1,0xffff5
900018f0:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
900018f4:	00000513          	li	a0,0
900018f8:	8d2d                	xor	a0,a0,a1
900018fa:	50a0a823          	sw	a0,1296(ra)

900018fe <inst_325>:

inst_325:
// rs1_val==0 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0xb504, 0x0, 0xb504, x1, 1300, x2)
900018fe:	0000b5b7          	lui	a1,0xb
90001902:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90001906:	00000513          	li	a0,0
9000190a:	8d2d                	xor	a0,a0,a1
9000190c:	50a0aa23          	sw	a0,1300(ra)

90001910 <inst_326>:

inst_326:
// rs1_val==0 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x2, 0x0, 0x2, x1, 1304, x2)
90001910:	00200593          	li	a1,2
90001914:	00000513          	li	a0,0
90001918:	8d2d                	xor	a0,a0,a1
9000191a:	50a0ac23          	sw	a0,1304(ra)

9000191e <inst_327>:

inst_327:
// rs1_val==-1431655765 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0x5555e056, -0x55555555, -0xb503, x1, 1308, x2)
9000191e:	ffff55b7          	lui	a1,0xffff5
90001922:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90001926:	aaaab537          	lui	a0,0xaaaab
9000192a:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
9000192e:	8d2d                	xor	a0,a0,a1
90001930:	50a0ae23          	sw	a0,1308(ra)

90001934 <inst_328>:

inst_328:
// rs1_val==-1431655765 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fae, -0x55555555, 0xb505, x1, 1312, x2)
90001934:	0000b5b7          	lui	a1,0xb
90001938:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
9000193c:	aaaab537          	lui	a0,0xaaaab
90001940:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90001944:	8d2d                	xor	a0,a0,a1
90001946:	52a0a023          	sw	a0,1312(ra)

9000194a <inst_329>:

inst_329:
// rs1_val==6 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x5, 0x6, 0x3, x1, 1316, x2)
9000194a:	00300593          	li	a1,3
9000194e:	00600513          	li	a0,6
90001952:	8d2d                	xor	a0,a0,a1
90001954:	52a0a223          	sw	a0,1316(ra)

90001958 <inst_330>:

inst_330:
// rs1_val==6 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x55555553, 0x6, 0x55555555, x1, 1320, x2)
90001958:	555555b7          	lui	a1,0x55555
9000195c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90001960:	00600513          	li	a0,6
90001964:	8d2d                	xor	a0,a0,a1
90001966:	52a0a423          	sw	a0,1320(ra)

9000196a <inst_331>:

inst_331:
// rs1_val==6 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaac, 0x6, -0x55555556, x1, 1324, x2)
9000196a:	aaaab5b7          	lui	a1,0xaaaab
9000196e:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90001972:	00600513          	li	a0,6
90001976:	8d2d                	xor	a0,a0,a1
90001978:	52a0a623          	sw	a0,1324(ra)

9000197c <inst_332>:

inst_332:
// rs1_val==6 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x3, 0x6, 0x5, x1, 1328, x2)
9000197c:	00500593          	li	a1,5
90001980:	00600513          	li	a0,6
90001984:	8d2d                	xor	a0,a0,a1
90001986:	52a0a823          	sw	a0,1328(ra)

9000198a <inst_333>:

inst_333:
// rs1_val==6 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x33333335, 0x6, 0x33333333, x1, 1332, x2)
9000198a:	333335b7          	lui	a1,0x33333
9000198e:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90001992:	00600513          	li	a0,6
90001996:	8d2d                	xor	a0,a0,a1
90001998:	52a0aa23          	sw	a0,1332(ra)

9000199c <inst_334>:

inst_334:
// rs1_val==6 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x66666660, 0x6, 0x66666666, x1, 1336, x2)
9000199c:	666665b7          	lui	a1,0x66666
900019a0:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
900019a4:	00600513          	li	a0,6
900019a8:	8d2d                	xor	a0,a0,a1
900019aa:	52a0ac23          	sw	a0,1336(ra)

900019ae <inst_335>:

inst_335:
// rs1_val==6 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xffff4afa, 0x6, -0xb504, x1, 1340, x2)
900019ae:	ffff55b7          	lui	a1,0xffff5
900019b2:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
900019b6:	00600513          	li	a0,6
900019ba:	8d2d                	xor	a0,a0,a1
900019bc:	52a0ae23          	sw	a0,1340(ra)

900019c0 <inst_336>:

inst_336:
// rs1_val==6 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0xb502, 0x6, 0xb504, x1, 1344, x2)
900019c0:	0000b5b7          	lui	a1,0xb
900019c4:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
900019c8:	00600513          	li	a0,6
900019cc:	8d2d                	xor	a0,a0,a1
900019ce:	54a0a023          	sw	a0,1344(ra)

900019d2 <inst_337>:

inst_337:
// rs1_val==6 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x4, 0x6, 0x2, x1, 1348, x2)
900019d2:	00200593          	li	a1,2
900019d6:	00600513          	li	a0,6
900019da:	8d2d                	xor	a0,a0,a1
900019dc:	54a0a223          	sw	a0,1348(ra)

900019e0 <inst_338>:

inst_338:
// rs1_val==6 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x55555552, 0x6, 0x55555554, x1, 1352, x2)
900019e0:	555555b7          	lui	a1,0x55555
900019e4:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
900019e8:	00600513          	li	a0,6
900019ec:	8d2d                	xor	a0,a0,a1
900019ee:	54a0a423          	sw	a0,1352(ra)

900019f2 <inst_339>:

inst_339:
// rs1_val==6 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x6, 0x6, 0x0, x1, 1356, x2)
900019f2:	00000593          	li	a1,0
900019f6:	00600513          	li	a0,6
900019fa:	8d2d                	xor	a0,a0,a1
900019fc:	54a0a623          	sw	a0,1356(ra)

90001a00 <inst_340>:

inst_340:
// rs1_val==6 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x2, 0x6, 0x4, x1, 1360, x2)
90001a00:	00400593          	li	a1,4
90001a04:	00600513          	li	a0,6
90001a08:	8d2d                	xor	a0,a0,a1
90001a0a:	54a0a823          	sw	a0,1360(ra)

90001a0e <inst_341>:

inst_341:
// rs1_val==6 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x33333334, 0x6, 0x33333332, x1, 1364, x2)
90001a0e:	333335b7          	lui	a1,0x33333
90001a12:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90001a16:	00600513          	li	a0,6
90001a1a:	8d2d                	xor	a0,a0,a1
90001a1c:	54a0aa23          	sw	a0,1364(ra)

90001a20 <inst_342>:

inst_342:
// rs1_val==6 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x66666663, 0x6, 0x66666665, x1, 1368, x2)
90001a20:	666665b7          	lui	a1,0x66666
90001a24:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90001a28:	00600513          	li	a0,6
90001a2c:	8d2d                	xor	a0,a0,a1
90001a2e:	54a0ac23          	sw	a0,1368(ra)

90001a32 <inst_343>:

inst_343:
// rs1_val==6 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0xb505, 0x6, 0xb503, x1, 1372, x2)
90001a32:	0000b5b7          	lui	a1,0xb
90001a36:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90001a3a:	00600513          	li	a0,6
90001a3e:	8d2d                	xor	a0,a0,a1
90001a40:	54a0ae23          	sw	a0,1372(ra)

90001a44 <inst_344>:

inst_344:
// rs1_val==6 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x55555550, 0x6, 0x55555556, x1, 1376, x2)
90001a44:	555555b7          	lui	a1,0x55555
90001a48:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90001a4c:	00600513          	li	a0,6
90001a50:	8d2d                	xor	a0,a0,a1
90001a52:	56a0a023          	sw	a0,1376(ra)

90001a56 <inst_345>:

inst_345:
// rs1_val==6 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaad, 0x6, -0x55555555, x1, 1380, x2)
90001a56:	aaaab5b7          	lui	a1,0xaaaab
90001a5a:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90001a5e:	00600513          	li	a0,6
90001a62:	8d2d                	xor	a0,a0,a1
90001a64:	56a0a223          	sw	a0,1380(ra)

90001a68 <inst_346>:

inst_346:
// rs1_val==6 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x6, 0x6, x1, 1384, x2)
90001a68:	00600593          	li	a1,6
90001a6c:	00600513          	li	a0,6
90001a70:	8d2d                	xor	a0,a0,a1
90001a72:	56a0a423          	sw	a0,1384(ra)

90001a76 <inst_347>:

inst_347:
// rs1_val==6 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x33333332, 0x6, 0x33333334, x1, 1388, x2)
90001a76:	333335b7          	lui	a1,0x33333
90001a7a:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90001a7e:	00600513          	li	a0,6
90001a82:	8d2d                	xor	a0,a0,a1
90001a84:	56a0a623          	sw	a0,1388(ra)

90001a88 <inst_348>:

inst_348:
// rs1_val==6 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x66666661, 0x6, 0x66666667, x1, 1392, x2)
90001a88:	666665b7          	lui	a1,0x66666
90001a8c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90001a90:	00600513          	li	a0,6
90001a94:	8d2d                	xor	a0,a0,a1
90001a96:	56a0a823          	sw	a0,1392(ra)

90001a9a <inst_349>:

inst_349:
// rs1_val==6 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xffff4afb, 0x6, -0xb503, x1, 1396, x2)
90001a9a:	ffff55b7          	lui	a1,0xffff5
90001a9e:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90001aa2:	00600513          	li	a0,6
90001aa6:	8d2d                	xor	a0,a0,a1
90001aa8:	56a0aa23          	sw	a0,1396(ra)

90001aac <inst_350>:

inst_350:
// rs1_val==6 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x6; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0xb503, 0x6, 0xb505, x1, 1400, x2)
90001aac:	0000b5b7          	lui	a1,0xb
90001ab0:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
90001ab4:	00600513          	li	a0,6
90001ab8:	8d2d                	xor	a0,a0,a1
90001aba:	56a0ac23          	sw	a0,1400(ra)

90001abe <inst_351>:

inst_351:
// rs1_val==858993460 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x33333337, 0x33333334, 0x3, x1, 1404, x2)
90001abe:	00300593          	li	a1,3
90001ac2:	33333537          	lui	a0,0x33333
90001ac6:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001aca:	8d2d                	xor	a0,a0,a1
90001acc:	56a0ae23          	sw	a0,1404(ra)

90001ad0 <inst_352>:

inst_352:
// rs1_val==858993460 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x66666661, 0x33333334, 0x55555555, x1, 1408, x2)
90001ad0:	555555b7          	lui	a1,0x55555
90001ad4:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90001ad8:	33333537          	lui	a0,0x33333
90001adc:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001ae0:	8d2d                	xor	a0,a0,a1
90001ae2:	58a0a023          	sw	a0,1408(ra)

90001ae6 <inst_353>:

inst_353:
// rs1_val==858993460 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x9999999e, 0x33333334, -0x55555556, x1, 1412, x2)
90001ae6:	aaaab5b7          	lui	a1,0xaaaab
90001aea:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90001aee:	33333537          	lui	a0,0x33333
90001af2:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001af6:	8d2d                	xor	a0,a0,a1
90001af8:	58a0a223          	sw	a0,1412(ra)

90001afc <inst_354>:

inst_354:
// rs1_val==858993460 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x33333331, 0x33333334, 0x5, x1, 1416, x2)
90001afc:	00500593          	li	a1,5
90001b00:	33333537          	lui	a0,0x33333
90001b04:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001b08:	8d2d                	xor	a0,a0,a1
90001b0a:	58a0a423          	sw	a0,1416(ra)

90001b0e <inst_355>:

inst_355:
// rs1_val==858993460 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x7, 0x33333334, 0x33333333, x1, 1420, x2)
90001b0e:	333335b7          	lui	a1,0x33333
90001b12:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90001b16:	33333537          	lui	a0,0x33333
90001b1a:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001b1e:	8d2d                	xor	a0,a0,a1
90001b20:	58a0a623          	sw	a0,1420(ra)

90001b24 <inst_356>:

inst_356:
// rs1_val==858993460 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x55555552, 0x33333334, 0x66666666, x1, 1424, x2)
90001b24:	666665b7          	lui	a1,0x66666
90001b28:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90001b2c:	33333537          	lui	a0,0x33333
90001b30:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001b34:	8d2d                	xor	a0,a0,a1
90001b36:	58a0a823          	sw	a0,1424(ra)

90001b3a <inst_357>:

inst_357:
// rs1_val==858993460 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xcccc79c8, 0x33333334, -0xb504, x1, 1428, x2)
90001b3a:	ffff55b7          	lui	a1,0xffff5
90001b3e:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90001b42:	33333537          	lui	a0,0x33333
90001b46:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001b4a:	8d2d                	xor	a0,a0,a1
90001b4c:	58a0aa23          	sw	a0,1428(ra)

90001b50 <inst_358>:

inst_358:
// rs1_val==858993460 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x33338630, 0x33333334, 0xb504, x1, 1432, x2)
90001b50:	0000b5b7          	lui	a1,0xb
90001b54:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90001b58:	33333537          	lui	a0,0x33333
90001b5c:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001b60:	8d2d                	xor	a0,a0,a1
90001b62:	58a0ac23          	sw	a0,1432(ra)

90001b66 <inst_359>:

inst_359:
// rs1_val==858993460 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x33333336, 0x33333334, 0x2, x1, 1436, x2)
90001b66:	00200593          	li	a1,2
90001b6a:	33333537          	lui	a0,0x33333
90001b6e:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001b72:	8d2d                	xor	a0,a0,a1
90001b74:	58a0ae23          	sw	a0,1436(ra)

90001b78 <inst_360>:

inst_360:
// rs1_val==858993460 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x66666660, 0x33333334, 0x55555554, x1, 1440, x2)
90001b78:	555555b7          	lui	a1,0x55555
90001b7c:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
90001b80:	33333537          	lui	a0,0x33333
90001b84:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001b88:	8d2d                	xor	a0,a0,a1
90001b8a:	5aa0a023          	sw	a0,1440(ra)

90001b8e <inst_361>:

inst_361:
// rs1_val==858993460 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x33333334, 0x33333334, 0x0, x1, 1444, x2)
90001b8e:	00000593          	li	a1,0
90001b92:	33333537          	lui	a0,0x33333
90001b96:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001b9a:	8d2d                	xor	a0,a0,a1
90001b9c:	5aa0a223          	sw	a0,1444(ra)

90001ba0 <inst_362>:

inst_362:
// rs1_val==858993460 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x33333330, 0x33333334, 0x4, x1, 1448, x2)
90001ba0:	00400593          	li	a1,4
90001ba4:	33333537          	lui	a0,0x33333
90001ba8:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001bac:	8d2d                	xor	a0,a0,a1
90001bae:	5aa0a423          	sw	a0,1448(ra)

90001bb2 <inst_363>:

inst_363:
// rs1_val==858993460 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x6, 0x33333334, 0x33333332, x1, 1452, x2)
90001bb2:	333335b7          	lui	a1,0x33333
90001bb6:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90001bba:	33333537          	lui	a0,0x33333
90001bbe:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001bc2:	8d2d                	xor	a0,a0,a1
90001bc4:	5aa0a623          	sw	a0,1452(ra)

90001bc8 <inst_364>:

inst_364:
// rs1_val==858993460 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x55555551, 0x33333334, 0x66666665, x1, 1456, x2)
90001bc8:	666665b7          	lui	a1,0x66666
90001bcc:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90001bd0:	33333537          	lui	a0,0x33333
90001bd4:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001bd8:	8d2d                	xor	a0,a0,a1
90001bda:	5aa0a823          	sw	a0,1456(ra)

90001bde <inst_365>:

inst_365:
// rs1_val==858993460 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x33338637, 0x33333334, 0xb503, x1, 1460, x2)
90001bde:	0000b5b7          	lui	a1,0xb
90001be2:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90001be6:	33333537          	lui	a0,0x33333
90001bea:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001bee:	8d2d                	xor	a0,a0,a1
90001bf0:	5aa0aa23          	sw	a0,1460(ra)

90001bf4 <inst_366>:

inst_366:
// rs1_val==858993460 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x66666662, 0x33333334, 0x55555556, x1, 1464, x2)
90001bf4:	555555b7          	lui	a1,0x55555
90001bf8:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90001bfc:	33333537          	lui	a0,0x33333
90001c00:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001c04:	8d2d                	xor	a0,a0,a1
90001c06:	5aa0ac23          	sw	a0,1464(ra)

90001c0a <inst_367>:

inst_367:
// rs1_val==858993460 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x9999999f, 0x33333334, -0x55555555, x1, 1468, x2)
90001c0a:	aaaab5b7          	lui	a1,0xaaaab
90001c0e:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90001c12:	33333537          	lui	a0,0x33333
90001c16:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001c1a:	8d2d                	xor	a0,a0,a1
90001c1c:	5aa0ae23          	sw	a0,1468(ra)

90001c20 <inst_368>:

inst_368:
// rs1_val==858993460 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x33333332, 0x33333334, 0x6, x1, 1472, x2)
90001c20:	00600593          	li	a1,6
90001c24:	33333537          	lui	a0,0x33333
90001c28:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001c2c:	8d2d                	xor	a0,a0,a1
90001c2e:	5ca0a023          	sw	a0,1472(ra)

90001c32 <inst_369>:

inst_369:
// rs1_val==858993460 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x33333334, 0x33333334, x1, 1476, x2)
90001c32:	333335b7          	lui	a1,0x33333
90001c36:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90001c3a:	33333537          	lui	a0,0x33333
90001c3e:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001c42:	8d2d                	xor	a0,a0,a1
90001c44:	5ca0a223          	sw	a0,1476(ra)

90001c48 <inst_370>:

inst_370:
// rs1_val==858993460 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x55555553, 0x33333334, 0x66666667, x1, 1480, x2)
90001c48:	666665b7          	lui	a1,0x66666
90001c4c:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90001c50:	33333537          	lui	a0,0x33333
90001c54:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001c58:	8d2d                	xor	a0,a0,a1
90001c5a:	5ca0a423          	sw	a0,1480(ra)

90001c5e <inst_371>:

inst_371:
// rs1_val==858993460 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xcccc79c9, 0x33333334, -0xb503, x1, 1484, x2)
90001c5e:	ffff55b7          	lui	a1,0xffff5
90001c62:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90001c66:	33333537          	lui	a0,0x33333
90001c6a:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001c6e:	8d2d                	xor	a0,a0,a1
90001c70:	5ca0a623          	sw	a0,1484(ra)

90001c74 <inst_372>:

inst_372:
// rs1_val==858993460 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333334; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x33338631, 0x33333334, 0xb505, x1, 1488, x2)
90001c74:	0000b5b7          	lui	a1,0xb
90001c78:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
90001c7c:	33333537          	lui	a0,0x33333
90001c80:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x33333218>
90001c84:	8d2d                	xor	a0,a0,a1
90001c86:	5ca0a823          	sw	a0,1488(ra)

90001c8a <inst_373>:

inst_373:
// rs1_val==1717986919 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x66666664, 0x66666667, 0x3, x1, 1492, x2)
90001c8a:	00300593          	li	a1,3
90001c8e:	66666537          	lui	a0,0x66666
90001c92:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001c96:	8d2d                	xor	a0,a0,a1
90001c98:	5ca0aa23          	sw	a0,1492(ra)

90001c9c <inst_374>:

inst_374:
// rs1_val==1717986919 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x33333332, 0x66666667, 0x55555555, x1, 1496, x2)
90001c9c:	555555b7          	lui	a1,0x55555
90001ca0:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90001ca4:	66666537          	lui	a0,0x66666
90001ca8:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001cac:	8d2d                	xor	a0,a0,a1
90001cae:	5ca0ac23          	sw	a0,1496(ra)

90001cb2 <inst_375>:

inst_375:
// rs1_val==1717986919 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xcccccccd, 0x66666667, -0x55555556, x1, 1500, x2)
90001cb2:	aaaab5b7          	lui	a1,0xaaaab
90001cb6:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90001cba:	66666537          	lui	a0,0x66666
90001cbe:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001cc2:	8d2d                	xor	a0,a0,a1
90001cc4:	5ca0ae23          	sw	a0,1500(ra)

90001cc8 <inst_376>:

inst_376:
// rs1_val==1717986919 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x66666662, 0x66666667, 0x5, x1, 1504, x2)
90001cc8:	00500593          	li	a1,5
90001ccc:	66666537          	lui	a0,0x66666
90001cd0:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001cd4:	8d2d                	xor	a0,a0,a1
90001cd6:	5ea0a023          	sw	a0,1504(ra)

90001cda <inst_377>:

inst_377:
// rs1_val==1717986919 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x55555554, 0x66666667, 0x33333333, x1, 1508, x2)
90001cda:	333335b7          	lui	a1,0x33333
90001cde:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90001ce2:	66666537          	lui	a0,0x66666
90001ce6:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001cea:	8d2d                	xor	a0,a0,a1
90001cec:	5ea0a223          	sw	a0,1508(ra)

90001cf0 <inst_378>:

inst_378:
// rs1_val==1717986919 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x1, 0x66666667, 0x66666666, x1, 1512, x2)
90001cf0:	666665b7          	lui	a1,0x66666
90001cf4:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90001cf8:	66666537          	lui	a0,0x66666
90001cfc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001d00:	8d2d                	xor	a0,a0,a1
90001d02:	5ea0a423          	sw	a0,1512(ra)

90001d06 <inst_379>:

inst_379:
// rs1_val==1717986919 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0x99992c9b, 0x66666667, -0xb504, x1, 1516, x2)
90001d06:	ffff55b7          	lui	a1,0xffff5
90001d0a:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90001d0e:	66666537          	lui	a0,0x66666
90001d12:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001d16:	8d2d                	xor	a0,a0,a1
90001d18:	5ea0a623          	sw	a0,1516(ra)

90001d1c <inst_380>:

inst_380:
// rs1_val==1717986919 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x6666d363, 0x66666667, 0xb504, x1, 1520, x2)
90001d1c:	0000b5b7          	lui	a1,0xb
90001d20:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90001d24:	66666537          	lui	a0,0x66666
90001d28:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001d2c:	8d2d                	xor	a0,a0,a1
90001d2e:	5ea0a823          	sw	a0,1520(ra)

90001d32 <inst_381>:

inst_381:
// rs1_val==1717986919 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x66666665, 0x66666667, 0x2, x1, 1524, x2)
90001d32:	00200593          	li	a1,2
90001d36:	66666537          	lui	a0,0x66666
90001d3a:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001d3e:	8d2d                	xor	a0,a0,a1
90001d40:	5ea0aa23          	sw	a0,1524(ra)

90001d44 <inst_382>:

inst_382:
// rs1_val==1717986919 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x33333333, 0x66666667, 0x55555554, x1, 1528, x2)
90001d44:	555555b7          	lui	a1,0x55555
90001d48:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
90001d4c:	66666537          	lui	a0,0x66666
90001d50:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001d54:	8d2d                	xor	a0,a0,a1
90001d56:	5ea0ac23          	sw	a0,1528(ra)

90001d5a <inst_383>:

inst_383:
// rs1_val==1717986919 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x66666667, 0x66666667, 0x0, x1, 1532, x2)
90001d5a:	00000593          	li	a1,0
90001d5e:	66666537          	lui	a0,0x66666
90001d62:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001d66:	8d2d                	xor	a0,a0,a1
90001d68:	5ea0ae23          	sw	a0,1532(ra)

90001d6c <inst_384>:

inst_384:
// rs1_val==1717986919 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x66666663, 0x66666667, 0x4, x1, 1536, x2)
90001d6c:	00400593          	li	a1,4
90001d70:	66666537          	lui	a0,0x66666
90001d74:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001d78:	8d2d                	xor	a0,a0,a1
90001d7a:	60a0a023          	sw	a0,1536(ra)

90001d7e <inst_385>:

inst_385:
// rs1_val==1717986919 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x55555555, 0x66666667, 0x33333332, x1, 1540, x2)
90001d7e:	333335b7          	lui	a1,0x33333
90001d82:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90001d86:	66666537          	lui	a0,0x66666
90001d8a:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001d8e:	8d2d                	xor	a0,a0,a1
90001d90:	60a0a223          	sw	a0,1540(ra)

90001d94 <inst_386>:

inst_386:
// rs1_val==1717986919 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x2, 0x66666667, 0x66666665, x1, 1544, x2)
90001d94:	666665b7          	lui	a1,0x66666
90001d98:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90001d9c:	66666537          	lui	a0,0x66666
90001da0:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001da4:	8d2d                	xor	a0,a0,a1
90001da6:	60a0a423          	sw	a0,1544(ra)

90001daa <inst_387>:

inst_387:
// rs1_val==1717986919 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x6666d364, 0x66666667, 0xb503, x1, 1548, x2)
90001daa:	0000b5b7          	lui	a1,0xb
90001dae:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90001db2:	66666537          	lui	a0,0x66666
90001db6:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001dba:	8d2d                	xor	a0,a0,a1
90001dbc:	60a0a623          	sw	a0,1548(ra)

90001dc0 <inst_388>:

inst_388:
// rs1_val==1717986919 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x33333331, 0x66666667, 0x55555556, x1, 1552, x2)
90001dc0:	555555b7          	lui	a1,0x55555
90001dc4:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90001dc8:	66666537          	lui	a0,0x66666
90001dcc:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001dd0:	8d2d                	xor	a0,a0,a1
90001dd2:	60a0a823          	sw	a0,1552(ra)

90001dd6 <inst_389>:

inst_389:
// rs1_val==1717986919 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xcccccccc, 0x66666667, -0x55555555, x1, 1556, x2)
90001dd6:	aaaab5b7          	lui	a1,0xaaaab
90001dda:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90001dde:	66666537          	lui	a0,0x66666
90001de2:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001de6:	8d2d                	xor	a0,a0,a1
90001de8:	60a0aa23          	sw	a0,1556(ra)

90001dec <inst_390>:

inst_390:
// rs1_val==1717986919 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x66666661, 0x66666667, 0x6, x1, 1560, x2)
90001dec:	00600593          	li	a1,6
90001df0:	66666537          	lui	a0,0x66666
90001df4:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001df8:	8d2d                	xor	a0,a0,a1
90001dfa:	60a0ac23          	sw	a0,1560(ra)

90001dfe <inst_391>:

inst_391:
// rs1_val==1717986919 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x55555553, 0x66666667, 0x33333334, x1, 1564, x2)
90001dfe:	333335b7          	lui	a1,0x33333
90001e02:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90001e06:	66666537          	lui	a0,0x66666
90001e0a:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001e0e:	8d2d                	xor	a0,a0,a1
90001e10:	60a0ae23          	sw	a0,1564(ra)

90001e14 <inst_392>:

inst_392:
// rs1_val==1717986919 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x66666667, 0x66666667, x1, 1568, x2)
90001e14:	666665b7          	lui	a1,0x66666
90001e18:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90001e1c:	66666537          	lui	a0,0x66666
90001e20:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001e24:	8d2d                	xor	a0,a0,a1
90001e26:	62a0a023          	sw	a0,1568(ra)

90001e2a <inst_393>:

inst_393:
// rs1_val==1717986919 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0x99992c9a, 0x66666667, -0xb503, x1, 1572, x2)
90001e2a:	ffff55b7          	lui	a1,0xffff5
90001e2e:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90001e32:	66666537          	lui	a0,0x66666
90001e36:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001e3a:	8d2d                	xor	a0,a0,a1
90001e3c:	62a0a223          	sw	a0,1572(ra)

90001e40 <inst_394>:

inst_394:
// rs1_val==1717986919 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666667; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x6666d362, 0x66666667, 0xb505, x1, 1576, x2)
90001e40:	0000b5b7          	lui	a1,0xb
90001e44:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
90001e48:	66666537          	lui	a0,0x66666
90001e4c:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666654b>
90001e50:	8d2d                	xor	a0,a0,a1
90001e52:	62a0a423          	sw	a0,1576(ra)

90001e56 <inst_395>:

inst_395:
// rs1_val==-46339 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0xffff4afe, -0xb503, 0x3, x1, 1580, x2)
90001e56:	00300593          	li	a1,3
90001e5a:	ffff5537          	lui	a0,0xffff5
90001e5e:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001e62:	8d2d                	xor	a0,a0,a1
90001e64:	62a0a623          	sw	a0,1580(ra)

90001e68 <inst_396>:

inst_396:
// rs1_val==-46339 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa8, -0xb503, 0x55555555, x1, 1584, x2)
90001e68:	555555b7          	lui	a1,0x55555
90001e6c:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90001e70:	ffff5537          	lui	a0,0xffff5
90001e74:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001e78:	8d2d                	xor	a0,a0,a1
90001e7a:	62a0a823          	sw	a0,1584(ra)

90001e7e <inst_397>:

inst_397:
// rs1_val==-46339 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x5555e057, -0xb503, -0x55555556, x1, 1588, x2)
90001e7e:	aaaab5b7          	lui	a1,0xaaaab
90001e82:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90001e86:	ffff5537          	lui	a0,0xffff5
90001e8a:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001e8e:	8d2d                	xor	a0,a0,a1
90001e90:	62a0aa23          	sw	a0,1588(ra)

90001e94 <inst_398>:

inst_398:
// rs1_val==-46339 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0xffff4af8, -0xb503, 0x5, x1, 1592, x2)
90001e94:	00500593          	li	a1,5
90001e98:	ffff5537          	lui	a0,0xffff5
90001e9c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001ea0:	8d2d                	xor	a0,a0,a1
90001ea2:	62a0ac23          	sw	a0,1592(ra)

90001ea6 <inst_399>:

inst_399:
// rs1_val==-46339 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0xcccc79ce, -0xb503, 0x33333333, x1, 1596, x2)
90001ea6:	333335b7          	lui	a1,0x33333
90001eaa:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90001eae:	ffff5537          	lui	a0,0xffff5
90001eb2:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001eb6:	8d2d                	xor	a0,a0,a1
90001eb8:	62a0ae23          	sw	a0,1596(ra)

90001ebc <inst_400>:

inst_400:
// rs1_val==-46339 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x99992c9b, -0xb503, 0x66666666, x1, 1600, x2)
90001ebc:	666665b7          	lui	a1,0x66666
90001ec0:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90001ec4:	ffff5537          	lui	a0,0xffff5
90001ec8:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001ecc:	8d2d                	xor	a0,a0,a1
90001ece:	64a0a023          	sw	a0,1600(ra)

90001ed2 <inst_401>:

inst_401:
// rs1_val==-46339 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0x1, -0xb503, -0xb504, x1, 1604, x2)
90001ed2:	ffff55b7          	lui	a1,0xffff5
90001ed6:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90001eda:	ffff5537          	lui	a0,0xffff5
90001ede:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001ee2:	8d2d                	xor	a0,a0,a1
90001ee4:	64a0a223          	sw	a0,1604(ra)

90001ee8 <inst_402>:

inst_402:
// rs1_val==-46339 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0xfffffff9, -0xb503, 0xb504, x1, 1608, x2)
90001ee8:	0000b5b7          	lui	a1,0xb
90001eec:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90001ef0:	ffff5537          	lui	a0,0xffff5
90001ef4:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001ef8:	8d2d                	xor	a0,a0,a1
90001efa:	64a0a423          	sw	a0,1608(ra)

90001efe <inst_403>:

inst_403:
// rs1_val==-46339 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0xffff4aff, -0xb503, 0x2, x1, 1612, x2)
90001efe:	00200593          	li	a1,2
90001f02:	ffff5537          	lui	a0,0xffff5
90001f06:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001f0a:	8d2d                	xor	a0,a0,a1
90001f0c:	64a0a623          	sw	a0,1612(ra)

90001f10 <inst_404>:

inst_404:
// rs1_val==-46339 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa9, -0xb503, 0x55555554, x1, 1616, x2)
90001f10:	555555b7          	lui	a1,0x55555
90001f14:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
90001f18:	ffff5537          	lui	a0,0xffff5
90001f1c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001f20:	8d2d                	xor	a0,a0,a1
90001f22:	64a0a823          	sw	a0,1616(ra)

90001f26 <inst_405>:

inst_405:
// rs1_val==-46339 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0xffff4afd, -0xb503, 0x0, x1, 1620, x2)
90001f26:	00000593          	li	a1,0
90001f2a:	ffff5537          	lui	a0,0xffff5
90001f2e:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001f32:	8d2d                	xor	a0,a0,a1
90001f34:	64a0aa23          	sw	a0,1620(ra)

90001f38 <inst_406>:

inst_406:
// rs1_val==-46339 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0xffff4af9, -0xb503, 0x4, x1, 1624, x2)
90001f38:	00400593          	li	a1,4
90001f3c:	ffff5537          	lui	a0,0xffff5
90001f40:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001f44:	8d2d                	xor	a0,a0,a1
90001f46:	64a0ac23          	sw	a0,1624(ra)

90001f4a <inst_407>:

inst_407:
// rs1_val==-46339 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0xcccc79cf, -0xb503, 0x33333332, x1, 1628, x2)
90001f4a:	333335b7          	lui	a1,0x33333
90001f4e:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90001f52:	ffff5537          	lui	a0,0xffff5
90001f56:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001f5a:	8d2d                	xor	a0,a0,a1
90001f5c:	64a0ae23          	sw	a0,1628(ra)

90001f60 <inst_408>:

inst_408:
// rs1_val==-46339 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x99992c98, -0xb503, 0x66666665, x1, 1632, x2)
90001f60:	666665b7          	lui	a1,0x66666
90001f64:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90001f68:	ffff5537          	lui	a0,0xffff5
90001f6c:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001f70:	8d2d                	xor	a0,a0,a1
90001f72:	66a0a023          	sw	a0,1632(ra)

90001f76 <inst_409>:

inst_409:
// rs1_val==-46339 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0xfffffffe, -0xb503, 0xb503, x1, 1636, x2)
90001f76:	0000b5b7          	lui	a1,0xb
90001f7a:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90001f7e:	ffff5537          	lui	a0,0xffff5
90001f82:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001f86:	8d2d                	xor	a0,a0,a1
90001f88:	66a0a223          	sw	a0,1636(ra)

90001f8c <inst_410>:

inst_410:
// rs1_val==-46339 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fab, -0xb503, 0x55555556, x1, 1640, x2)
90001f8c:	555555b7          	lui	a1,0x55555
90001f90:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90001f94:	ffff5537          	lui	a0,0xffff5
90001f98:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001f9c:	8d2d                	xor	a0,a0,a1
90001f9e:	66a0a423          	sw	a0,1640(ra)

90001fa2 <inst_411>:

inst_411:
// rs1_val==-46339 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x5555e056, -0xb503, -0x55555555, x1, 1644, x2)
90001fa2:	aaaab5b7          	lui	a1,0xaaaab
90001fa6:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90001faa:	ffff5537          	lui	a0,0xffff5
90001fae:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001fb2:	8d2d                	xor	a0,a0,a1
90001fb4:	66a0a623          	sw	a0,1644(ra)

90001fb8 <inst_412>:

inst_412:
// rs1_val==-46339 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0xffff4afb, -0xb503, 0x6, x1, 1648, x2)
90001fb8:	00600593          	li	a1,6
90001fbc:	ffff5537          	lui	a0,0xffff5
90001fc0:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001fc4:	8d2d                	xor	a0,a0,a1
90001fc6:	66a0a823          	sw	a0,1648(ra)

90001fca <inst_413>:

inst_413:
// rs1_val==-46339 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0xcccc79c9, -0xb503, 0x33333334, x1, 1652, x2)
90001fca:	333335b7          	lui	a1,0x33333
90001fce:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90001fd2:	ffff5537          	lui	a0,0xffff5
90001fd6:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001fda:	8d2d                	xor	a0,a0,a1
90001fdc:	66a0aa23          	sw	a0,1652(ra)

90001fe0 <inst_414>:

inst_414:
// rs1_val==-46339 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x99992c9a, -0xb503, 0x66666667, x1, 1656, x2)
90001fe0:	666665b7          	lui	a1,0x66666
90001fe4:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90001fe8:	ffff5537          	lui	a0,0xffff5
90001fec:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90001ff0:	8d2d                	xor	a0,a0,a1
90001ff2:	66a0ac23          	sw	a0,1656(ra)

90001ff6 <inst_415>:

inst_415:
// rs1_val==-46339 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0x0, -0xb503, -0xb503, x1, 1660, x2)
90001ff6:	ffff55b7          	lui	a1,0xffff5
90001ffa:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90001ffe:	ffff5537          	lui	a0,0xffff5
90002002:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
90002006:	8d2d                	xor	a0,a0,a1
90002008:	66a0ae23          	sw	a0,1660(ra)

9000200c <inst_416>:

inst_416:
// rs1_val==-46339 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0xb503; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0xfffffff8, -0xb503, 0xb505, x1, 1664, x2)
9000200c:	0000b5b7          	lui	a1,0xb
90002010:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
90002014:	ffff5537          	lui	a0,0xffff5
90002018:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6ffefff9>
9000201c:	8d2d                	xor	a0,a0,a1
9000201e:	68a0a023          	sw	a0,1664(ra)

90002022 <inst_417>:

inst_417:
// rs1_val==46341 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0xb506, 0xb505, 0x3, x1, 1668, x2)
90002022:	00300593          	li	a1,3
90002026:	0000b537          	lui	a0,0xb
9000202a:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
9000202e:	8d2d                	xor	a0,a0,a1
90002030:	68a0a223          	sw	a0,1668(ra)

90002034 <inst_418>:

inst_418:
// rs1_val==46341 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x5555e050, 0xb505, 0x55555555, x1, 1672, x2)
90002034:	555555b7          	lui	a1,0x55555
90002038:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
9000203c:	0000b537          	lui	a0,0xb
90002040:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
90002044:	8d2d                	xor	a0,a0,a1
90002046:	68a0a423          	sw	a0,1672(ra)

9000204a <inst_419>:

inst_419:
// rs1_val==46341 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1faf, 0xb505, -0x55555556, x1, 1676, x2)
9000204a:	aaaab5b7          	lui	a1,0xaaaab
9000204e:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90002052:	0000b537          	lui	a0,0xb
90002056:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
9000205a:	8d2d                	xor	a0,a0,a1
9000205c:	68a0a623          	sw	a0,1676(ra)

90002060 <inst_420>:

inst_420:
// rs1_val==46341 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0xb500, 0xb505, 0x5, x1, 1680, x2)
90002060:	00500593          	li	a1,5
90002064:	0000b537          	lui	a0,0xb
90002068:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
9000206c:	8d2d                	xor	a0,a0,a1
9000206e:	68a0a823          	sw	a0,1680(ra)

90002072 <inst_421>:

inst_421:
// rs1_val==46341 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x33338636, 0xb505, 0x33333333, x1, 1684, x2)
90002072:	333335b7          	lui	a1,0x33333
90002076:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
9000207a:	0000b537          	lui	a0,0xb
9000207e:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
90002082:	8d2d                	xor	a0,a0,a1
90002084:	68a0aa23          	sw	a0,1684(ra)

90002088 <inst_422>:

inst_422:
// rs1_val==46341 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x6666d363, 0xb505, 0x66666666, x1, 1688, x2)
90002088:	666665b7          	lui	a1,0x66666
9000208c:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90002090:	0000b537          	lui	a0,0xb
90002094:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
90002098:	8d2d                	xor	a0,a0,a1
9000209a:	68a0ac23          	sw	a0,1688(ra)

9000209e <inst_423>:

inst_423:
// rs1_val==46341 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xfffffff9, 0xb505, -0xb504, x1, 1692, x2)
9000209e:	ffff55b7          	lui	a1,0xffff5
900020a2:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
900020a6:	0000b537          	lui	a0,0xb
900020aa:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
900020ae:	8d2d                	xor	a0,a0,a1
900020b0:	68a0ae23          	sw	a0,1692(ra)

900020b4 <inst_424>:

inst_424:
// rs1_val==46341 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x1, 0xb505, 0xb504, x1, 1696, x2)
900020b4:	0000b5b7          	lui	a1,0xb
900020b8:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
900020bc:	0000b537          	lui	a0,0xb
900020c0:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
900020c4:	8d2d                	xor	a0,a0,a1
900020c6:	6aa0a023          	sw	a0,1696(ra)

900020ca <inst_425>:

inst_425:
// rs1_val==46341 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0xb507, 0xb505, 0x2, x1, 1700, x2)
900020ca:	00200593          	li	a1,2
900020ce:	0000b537          	lui	a0,0xb
900020d2:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
900020d6:	8d2d                	xor	a0,a0,a1
900020d8:	6aa0a223          	sw	a0,1700(ra)

900020dc <inst_426>:

inst_426:
// rs1_val==46341 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x5555e051, 0xb505, 0x55555554, x1, 1704, x2)
900020dc:	555555b7          	lui	a1,0x55555
900020e0:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
900020e4:	0000b537          	lui	a0,0xb
900020e8:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
900020ec:	8d2d                	xor	a0,a0,a1
900020ee:	6aa0a423          	sw	a0,1704(ra)

900020f2 <inst_427>:

inst_427:
// rs1_val==46341 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0xb505, 0xb505, 0x0, x1, 1708, x2)
900020f2:	00000593          	li	a1,0
900020f6:	0000b537          	lui	a0,0xb
900020fa:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
900020fe:	8d2d                	xor	a0,a0,a1
90002100:	6aa0a623          	sw	a0,1708(ra)

90002104 <inst_428>:

inst_428:
// rs1_val==46341 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0xb501, 0xb505, 0x4, x1, 1712, x2)
90002104:	00400593          	li	a1,4
90002108:	0000b537          	lui	a0,0xb
9000210c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
90002110:	8d2d                	xor	a0,a0,a1
90002112:	6aa0a823          	sw	a0,1712(ra)

90002116 <inst_429>:

inst_429:
// rs1_val==46341 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x33338637, 0xb505, 0x33333332, x1, 1716, x2)
90002116:	333335b7          	lui	a1,0x33333
9000211a:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
9000211e:	0000b537          	lui	a0,0xb
90002122:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
90002126:	8d2d                	xor	a0,a0,a1
90002128:	6aa0aa23          	sw	a0,1716(ra)

9000212c <inst_430>:

inst_430:
// rs1_val==46341 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x6666d360, 0xb505, 0x66666665, x1, 1720, x2)
9000212c:	666665b7          	lui	a1,0x66666
90002130:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90002134:	0000b537          	lui	a0,0xb
90002138:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
9000213c:	8d2d                	xor	a0,a0,a1
9000213e:	6aa0ac23          	sw	a0,1720(ra)

90002142 <inst_431>:

inst_431:
// rs1_val==46341 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x6, 0xb505, 0xb503, x1, 1724, x2)
90002142:	0000b5b7          	lui	a1,0xb
90002146:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
9000214a:	0000b537          	lui	a0,0xb
9000214e:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
90002152:	8d2d                	xor	a0,a0,a1
90002154:	6aa0ae23          	sw	a0,1724(ra)

90002158 <inst_432>:

inst_432:
// rs1_val==46341 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x5555e053, 0xb505, 0x55555556, x1, 1728, x2)
90002158:	555555b7          	lui	a1,0x55555
9000215c:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90002160:	0000b537          	lui	a0,0xb
90002164:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
90002168:	8d2d                	xor	a0,a0,a1
9000216a:	6ca0a023          	sw	a0,1728(ra)

9000216e <inst_433>:

inst_433:
// rs1_val==46341 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fae, 0xb505, -0x55555555, x1, 1732, x2)
9000216e:	aaaab5b7          	lui	a1,0xaaaab
90002172:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002176:	0000b537          	lui	a0,0xb
9000217a:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
9000217e:	8d2d                	xor	a0,a0,a1
90002180:	6ca0a223          	sw	a0,1732(ra)

90002184 <inst_434>:

inst_434:
// rs1_val==46341 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0xb503, 0xb505, 0x6, x1, 1736, x2)
90002184:	00600593          	li	a1,6
90002188:	0000b537          	lui	a0,0xb
9000218c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
90002190:	8d2d                	xor	a0,a0,a1
90002192:	6ca0a423          	sw	a0,1736(ra)

90002196 <inst_435>:

inst_435:
// rs1_val==46341 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x33338631, 0xb505, 0x33333334, x1, 1740, x2)
90002196:	333335b7          	lui	a1,0x33333
9000219a:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
9000219e:	0000b537          	lui	a0,0xb
900021a2:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
900021a6:	8d2d                	xor	a0,a0,a1
900021a8:	6ca0a623          	sw	a0,1740(ra)

900021ac <inst_436>:

inst_436:
// rs1_val==46341 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x6666d362, 0xb505, 0x66666667, x1, 1744, x2)
900021ac:	666665b7          	lui	a1,0x66666
900021b0:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
900021b4:	0000b537          	lui	a0,0xb
900021b8:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
900021bc:	8d2d                	xor	a0,a0,a1
900021be:	6ca0a823          	sw	a0,1744(ra)

900021c2 <inst_437>:

inst_437:
// rs1_val==46341 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xfffffff8, 0xb505, -0xb503, x1, 1748, x2)
900021c2:	ffff55b7          	lui	a1,0xffff5
900021c6:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
900021ca:	0000b537          	lui	a0,0xb
900021ce:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
900021d2:	8d2d                	xor	a0,a0,a1
900021d4:	6ca0aa23          	sw	a0,1748(ra)

900021d8 <inst_438>:

inst_438:
// rs1_val==46341 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb505; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x0, 0xb505, 0xb505, x1, 1752, x2)
900021d8:	0000b5b7          	lui	a1,0xb
900021dc:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
900021e0:	0000b537          	lui	a0,0xb
900021e4:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3e9>
900021e8:	8d2d                	xor	a0,a0,a1
900021ea:	6ca0ac23          	sw	a0,1752(ra)

900021ee <inst_439>:

inst_439:
// rs1_val==0 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x55555554, 0x0, 0x55555554, x1, 1756, x2)
900021ee:	555555b7          	lui	a1,0x55555
900021f2:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
900021f6:	00000513          	li	a0,0
900021fa:	8d2d                	xor	a0,a0,a1
900021fc:	6ca0ae23          	sw	a0,1756(ra)

90002200 <inst_440>:

inst_440:
// rs1_val==0 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x0, 0x0, x1, 1760, x2)
90002200:	00000593          	li	a1,0
90002204:	00000513          	li	a0,0
90002208:	8d2d                	xor	a0,a0,a1
9000220a:	6ea0a023          	sw	a0,1760(ra)

9000220e <inst_441>:

inst_441:
// rs1_val==0 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x4, 0x0, 0x4, x1, 1764, x2)
9000220e:	00400593          	li	a1,4
90002212:	00000513          	li	a0,0
90002216:	8d2d                	xor	a0,a0,a1
90002218:	6ea0a223          	sw	a0,1764(ra)

9000221c <inst_442>:

inst_442:
// rs1_val==0 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x33333332, 0x0, 0x33333332, x1, 1768, x2)
9000221c:	333335b7          	lui	a1,0x33333
90002220:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90002224:	00000513          	li	a0,0
90002228:	8d2d                	xor	a0,a0,a1
9000222a:	6ea0a423          	sw	a0,1768(ra)

9000222e <inst_443>:

inst_443:
// rs1_val==0 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x66666665, 0x0, 0x66666665, x1, 1772, x2)
9000222e:	666665b7          	lui	a1,0x66666
90002232:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90002236:	00000513          	li	a0,0
9000223a:	8d2d                	xor	a0,a0,a1
9000223c:	6ea0a623          	sw	a0,1772(ra)

90002240 <inst_444>:

inst_444:
// rs1_val==0 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0xb503, 0x0, 0xb503, x1, 1776, x2)
90002240:	0000b5b7          	lui	a1,0xb
90002244:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90002248:	00000513          	li	a0,0
9000224c:	8d2d                	xor	a0,a0,a1
9000224e:	6ea0a823          	sw	a0,1776(ra)

90002252 <inst_445>:

inst_445:
// rs1_val==0 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x55555556, 0x0, 0x55555556, x1, 1780, x2)
90002252:	555555b7          	lui	a1,0x55555
90002256:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
9000225a:	00000513          	li	a0,0
9000225e:	8d2d                	xor	a0,a0,a1
90002260:	6ea0aa23          	sw	a0,1780(ra)

90002264 <inst_446>:

inst_446:
// rs1_val==0 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaab, 0x0, -0x55555555, x1, 1784, x2)
90002264:	aaaab5b7          	lui	a1,0xaaaab
90002268:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
9000226c:	00000513          	li	a0,0
90002270:	8d2d                	xor	a0,a0,a1
90002272:	6ea0ac23          	sw	a0,1784(ra)

90002276 <inst_447>:

inst_447:
// rs1_val==0 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x6, 0x0, 0x6, x1, 1788, x2)
90002276:	00600593          	li	a1,6
9000227a:	00000513          	li	a0,0
9000227e:	8d2d                	xor	a0,a0,a1
90002280:	6ea0ae23          	sw	a0,1788(ra)

90002284 <inst_448>:

inst_448:
// rs1_val==0 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x33333334, 0x0, 0x33333334, x1, 1792, x2)
90002284:	333335b7          	lui	a1,0x33333
90002288:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
9000228c:	00000513          	li	a0,0
90002290:	8d2d                	xor	a0,a0,a1
90002292:	70a0a023          	sw	a0,1792(ra)

90002296 <inst_449>:

inst_449:
// rs1_val==0 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x66666667, 0x0, 0x66666667, x1, 1796, x2)
90002296:	666665b7          	lui	a1,0x66666
9000229a:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
9000229e:	00000513          	li	a0,0
900022a2:	8d2d                	xor	a0,a0,a1
900022a4:	70a0a223          	sw	a0,1796(ra)

900022a8 <inst_450>:

inst_450:
// rs1_val==0 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xffff4afd, 0x0, -0xb503, x1, 1800, x2)
900022a8:	ffff55b7          	lui	a1,0xffff5
900022ac:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
900022b0:	00000513          	li	a0,0
900022b4:	8d2d                	xor	a0,a0,a1
900022b6:	70a0a423          	sw	a0,1800(ra)

900022ba <inst_451>:

inst_451:
// rs1_val==0 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x0; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0xb505, 0x0, 0xb505, x1, 1804, x2)
900022ba:	0000b5b7          	lui	a1,0xb
900022be:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
900022c2:	00000513          	li	a0,0
900022c6:	8d2d                	xor	a0,a0,a1
900022c8:	70a0a623          	sw	a0,1804(ra)

900022cc <inst_452>:

inst_452:
// rs1_val==4 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x7, 0x4, 0x3, x1, 1808, x2)
900022cc:	00300593          	li	a1,3
900022d0:	00400513          	li	a0,4
900022d4:	8d2d                	xor	a0,a0,a1
900022d6:	70a0a823          	sw	a0,1808(ra)

900022da <inst_453>:

inst_453:
// rs1_val==4 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x55555551, 0x4, 0x55555555, x1, 1812, x2)
900022da:	555555b7          	lui	a1,0x55555
900022de:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
900022e2:	00400513          	li	a0,4
900022e6:	8d2d                	xor	a0,a0,a1
900022e8:	70a0aa23          	sw	a0,1812(ra)

900022ec <inst_454>:

inst_454:
// rs1_val==4 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaae, 0x4, -0x55555556, x1, 1816, x2)
900022ec:	aaaab5b7          	lui	a1,0xaaaab
900022f0:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
900022f4:	00400513          	li	a0,4
900022f8:	8d2d                	xor	a0,a0,a1
900022fa:	70a0ac23          	sw	a0,1816(ra)

900022fe <inst_455>:

inst_455:
// rs1_val==4 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x1, 0x4, 0x5, x1, 1820, x2)
900022fe:	00500593          	li	a1,5
90002302:	00400513          	li	a0,4
90002306:	8d2d                	xor	a0,a0,a1
90002308:	70a0ae23          	sw	a0,1820(ra)

9000230c <inst_456>:

inst_456:
// rs1_val==4 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x33333337, 0x4, 0x33333333, x1, 1824, x2)
9000230c:	333335b7          	lui	a1,0x33333
90002310:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90002314:	00400513          	li	a0,4
90002318:	8d2d                	xor	a0,a0,a1
9000231a:	72a0a023          	sw	a0,1824(ra)

9000231e <inst_457>:

inst_457:
// rs1_val==4 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x66666662, 0x4, 0x66666666, x1, 1828, x2)
9000231e:	666665b7          	lui	a1,0x66666
90002322:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90002326:	00400513          	li	a0,4
9000232a:	8d2d                	xor	a0,a0,a1
9000232c:	72a0a223          	sw	a0,1828(ra)

90002330 <inst_458>:

inst_458:
// rs1_val==4 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xffff4af8, 0x4, -0xb504, x1, 1832, x2)
90002330:	ffff55b7          	lui	a1,0xffff5
90002334:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90002338:	00400513          	li	a0,4
9000233c:	8d2d                	xor	a0,a0,a1
9000233e:	72a0a423          	sw	a0,1832(ra)

90002342 <inst_459>:

inst_459:
// rs1_val==4 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0xb500, 0x4, 0xb504, x1, 1836, x2)
90002342:	0000b5b7          	lui	a1,0xb
90002346:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
9000234a:	00400513          	li	a0,4
9000234e:	8d2d                	xor	a0,a0,a1
90002350:	72a0a623          	sw	a0,1836(ra)

90002354 <inst_460>:

inst_460:
// rs1_val==4 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x6, 0x4, 0x2, x1, 1840, x2)
90002354:	00200593          	li	a1,2
90002358:	00400513          	li	a0,4
9000235c:	8d2d                	xor	a0,a0,a1
9000235e:	72a0a823          	sw	a0,1840(ra)

90002362 <inst_461>:

inst_461:
// rs1_val==4 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x55555550, 0x4, 0x55555554, x1, 1844, x2)
90002362:	555555b7          	lui	a1,0x55555
90002366:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
9000236a:	00400513          	li	a0,4
9000236e:	8d2d                	xor	a0,a0,a1
90002370:	72a0aa23          	sw	a0,1844(ra)

90002374 <inst_462>:

inst_462:
// rs1_val==4 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x4, 0x4, 0x0, x1, 1848, x2)
90002374:	00000593          	li	a1,0
90002378:	00400513          	li	a0,4
9000237c:	8d2d                	xor	a0,a0,a1
9000237e:	72a0ac23          	sw	a0,1848(ra)

90002382 <inst_463>:

inst_463:
// rs1_val==4 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x4, 0x4, x1, 1852, x2)
90002382:	00400593          	li	a1,4
90002386:	00400513          	li	a0,4
9000238a:	8d2d                	xor	a0,a0,a1
9000238c:	72a0ae23          	sw	a0,1852(ra)

90002390 <inst_464>:

inst_464:
// rs1_val==4 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x33333336, 0x4, 0x33333332, x1, 1856, x2)
90002390:	333335b7          	lui	a1,0x33333
90002394:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90002398:	00400513          	li	a0,4
9000239c:	8d2d                	xor	a0,a0,a1
9000239e:	74a0a023          	sw	a0,1856(ra)

900023a2 <inst_465>:

inst_465:
// rs1_val==4 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x66666661, 0x4, 0x66666665, x1, 1860, x2)
900023a2:	666665b7          	lui	a1,0x66666
900023a6:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
900023aa:	00400513          	li	a0,4
900023ae:	8d2d                	xor	a0,a0,a1
900023b0:	74a0a223          	sw	a0,1860(ra)

900023b4 <inst_466>:

inst_466:
// rs1_val==4 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0xb507, 0x4, 0xb503, x1, 1864, x2)
900023b4:	0000b5b7          	lui	a1,0xb
900023b8:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
900023bc:	00400513          	li	a0,4
900023c0:	8d2d                	xor	a0,a0,a1
900023c2:	74a0a423          	sw	a0,1864(ra)

900023c6 <inst_467>:

inst_467:
// rs1_val==4 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x55555552, 0x4, 0x55555556, x1, 1868, x2)
900023c6:	555555b7          	lui	a1,0x55555
900023ca:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
900023ce:	00400513          	li	a0,4
900023d2:	8d2d                	xor	a0,a0,a1
900023d4:	74a0a623          	sw	a0,1868(ra)

900023d8 <inst_468>:

inst_468:
// rs1_val==4 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaaf, 0x4, -0x55555555, x1, 1872, x2)
900023d8:	aaaab5b7          	lui	a1,0xaaaab
900023dc:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
900023e0:	00400513          	li	a0,4
900023e4:	8d2d                	xor	a0,a0,a1
900023e6:	74a0a823          	sw	a0,1872(ra)

900023ea <inst_469>:

inst_469:
// rs1_val==4 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x2, 0x4, 0x6, x1, 1876, x2)
900023ea:	00600593          	li	a1,6
900023ee:	00400513          	li	a0,4
900023f2:	8d2d                	xor	a0,a0,a1
900023f4:	74a0aa23          	sw	a0,1876(ra)

900023f8 <inst_470>:

inst_470:
// rs1_val==4 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x33333330, 0x4, 0x33333334, x1, 1880, x2)
900023f8:	333335b7          	lui	a1,0x33333
900023fc:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90002400:	00400513          	li	a0,4
90002404:	8d2d                	xor	a0,a0,a1
90002406:	74a0ac23          	sw	a0,1880(ra)

9000240a <inst_471>:

inst_471:
// rs1_val==4 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x66666663, 0x4, 0x66666667, x1, 1884, x2)
9000240a:	666665b7          	lui	a1,0x66666
9000240e:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90002412:	00400513          	li	a0,4
90002416:	8d2d                	xor	a0,a0,a1
90002418:	74a0ae23          	sw	a0,1884(ra)

9000241c <inst_472>:

inst_472:
// rs1_val==4 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xffff4af9, 0x4, -0xb503, x1, 1888, x2)
9000241c:	ffff55b7          	lui	a1,0xffff5
90002420:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90002424:	00400513          	li	a0,4
90002428:	8d2d                	xor	a0,a0,a1
9000242a:	76a0a023          	sw	a0,1888(ra)

9000242e <inst_473>:

inst_473:
// rs1_val==4 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x4; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0xb501, 0x4, 0xb505, x1, 1892, x2)
9000242e:	0000b5b7          	lui	a1,0xb
90002432:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
90002436:	00400513          	li	a0,4
9000243a:	8d2d                	xor	a0,a0,a1
9000243c:	76a0a223          	sw	a0,1892(ra)

90002440 <inst_474>:

inst_474:
// rs1_val==858993458 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x33333331, 0x33333332, 0x3, x1, 1896, x2)
90002440:	00300593          	li	a1,3
90002444:	33333537          	lui	a0,0x33333
90002448:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
9000244c:	8d2d                	xor	a0,a0,a1
9000244e:	76a0a423          	sw	a0,1896(ra)

90002452 <inst_475>:

inst_475:
// rs1_val==858993458 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x66666667, 0x33333332, 0x55555555, x1, 1900, x2)
90002452:	555555b7          	lui	a1,0x55555
90002456:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
9000245a:	33333537          	lui	a0,0x33333
9000245e:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
90002462:	8d2d                	xor	a0,a0,a1
90002464:	76a0a623          	sw	a0,1900(ra)

90002468 <inst_476>:

inst_476:
// rs1_val==858993458 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x99999998, 0x33333332, -0x55555556, x1, 1904, x2)
90002468:	aaaab5b7          	lui	a1,0xaaaab
9000246c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90002470:	33333537          	lui	a0,0x33333
90002474:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
90002478:	8d2d                	xor	a0,a0,a1
9000247a:	76a0a823          	sw	a0,1904(ra)

9000247e <inst_477>:

inst_477:
// rs1_val==858993458 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x33333337, 0x33333332, 0x5, x1, 1908, x2)
9000247e:	00500593          	li	a1,5
90002482:	33333537          	lui	a0,0x33333
90002486:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
9000248a:	8d2d                	xor	a0,a0,a1
9000248c:	76a0aa23          	sw	a0,1908(ra)

90002490 <inst_478>:

inst_478:
// rs1_val==858993458 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x1, 0x33333332, 0x33333333, x1, 1912, x2)
90002490:	333335b7          	lui	a1,0x33333
90002494:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90002498:	33333537          	lui	a0,0x33333
9000249c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
900024a0:	8d2d                	xor	a0,a0,a1
900024a2:	76a0ac23          	sw	a0,1912(ra)

900024a6 <inst_479>:

inst_479:
// rs1_val==858993458 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x55555554, 0x33333332, 0x66666666, x1, 1916, x2)
900024a6:	666665b7          	lui	a1,0x66666
900024aa:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
900024ae:	33333537          	lui	a0,0x33333
900024b2:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
900024b6:	8d2d                	xor	a0,a0,a1
900024b8:	76a0ae23          	sw	a0,1916(ra)

900024bc <inst_480>:

inst_480:
// rs1_val==858993458 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xcccc79ce, 0x33333332, -0xb504, x1, 1920, x2)
900024bc:	ffff55b7          	lui	a1,0xffff5
900024c0:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
900024c4:	33333537          	lui	a0,0x33333
900024c8:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
900024cc:	8d2d                	xor	a0,a0,a1
900024ce:	78a0a023          	sw	a0,1920(ra)

900024d2 <inst_481>:

inst_481:
// rs1_val==858993458 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x33338636, 0x33333332, 0xb504, x1, 1924, x2)
900024d2:	0000b5b7          	lui	a1,0xb
900024d6:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
900024da:	33333537          	lui	a0,0x33333
900024de:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
900024e2:	8d2d                	xor	a0,a0,a1
900024e4:	78a0a223          	sw	a0,1924(ra)

900024e8 <inst_482>:

inst_482:
// rs1_val==858993458 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x33333330, 0x33333332, 0x2, x1, 1928, x2)
900024e8:	00200593          	li	a1,2
900024ec:	33333537          	lui	a0,0x33333
900024f0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
900024f4:	8d2d                	xor	a0,a0,a1
900024f6:	78a0a423          	sw	a0,1928(ra)

900024fa <inst_483>:

inst_483:
// rs1_val==858993458 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x66666666, 0x33333332, 0x55555554, x1, 1932, x2)
900024fa:	555555b7          	lui	a1,0x55555
900024fe:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
90002502:	33333537          	lui	a0,0x33333
90002506:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
9000250a:	8d2d                	xor	a0,a0,a1
9000250c:	78a0a623          	sw	a0,1932(ra)

90002510 <inst_484>:

inst_484:
// rs1_val==858993458 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x33333332, 0x33333332, 0x0, x1, 1936, x2)
90002510:	00000593          	li	a1,0
90002514:	33333537          	lui	a0,0x33333
90002518:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
9000251c:	8d2d                	xor	a0,a0,a1
9000251e:	78a0a823          	sw	a0,1936(ra)

90002522 <inst_485>:

inst_485:
// rs1_val==858993458 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x33333336, 0x33333332, 0x4, x1, 1940, x2)
90002522:	00400593          	li	a1,4
90002526:	33333537          	lui	a0,0x33333
9000252a:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
9000252e:	8d2d                	xor	a0,a0,a1
90002530:	78a0aa23          	sw	a0,1940(ra)

90002534 <inst_486>:

inst_486:
// rs1_val==858993458 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x33333332, 0x33333332, x1, 1944, x2)
90002534:	333335b7          	lui	a1,0x33333
90002538:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
9000253c:	33333537          	lui	a0,0x33333
90002540:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
90002544:	8d2d                	xor	a0,a0,a1
90002546:	78a0ac23          	sw	a0,1944(ra)

9000254a <inst_487>:

inst_487:
// rs1_val==858993458 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x55555557, 0x33333332, 0x66666665, x1, 1948, x2)
9000254a:	666665b7          	lui	a1,0x66666
9000254e:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90002552:	33333537          	lui	a0,0x33333
90002556:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
9000255a:	8d2d                	xor	a0,a0,a1
9000255c:	78a0ae23          	sw	a0,1948(ra)

90002560 <inst_488>:

inst_488:
// rs1_val==858993458 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x33338631, 0x33333332, 0xb503, x1, 1952, x2)
90002560:	0000b5b7          	lui	a1,0xb
90002564:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90002568:	33333537          	lui	a0,0x33333
9000256c:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
90002570:	8d2d                	xor	a0,a0,a1
90002572:	7aa0a023          	sw	a0,1952(ra)

90002576 <inst_489>:

inst_489:
// rs1_val==858993458 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x66666664, 0x33333332, 0x55555556, x1, 1956, x2)
90002576:	555555b7          	lui	a1,0x55555
9000257a:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
9000257e:	33333537          	lui	a0,0x33333
90002582:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
90002586:	8d2d                	xor	a0,a0,a1
90002588:	7aa0a223          	sw	a0,1956(ra)

9000258c <inst_490>:

inst_490:
// rs1_val==858993458 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x99999999, 0x33333332, -0x55555555, x1, 1960, x2)
9000258c:	aaaab5b7          	lui	a1,0xaaaab
90002590:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002594:	33333537          	lui	a0,0x33333
90002598:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
9000259c:	8d2d                	xor	a0,a0,a1
9000259e:	7aa0a423          	sw	a0,1960(ra)

900025a2 <inst_491>:

inst_491:
// rs1_val==858993458 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x33333334, 0x33333332, 0x6, x1, 1964, x2)
900025a2:	00600593          	li	a1,6
900025a6:	33333537          	lui	a0,0x33333
900025aa:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
900025ae:	8d2d                	xor	a0,a0,a1
900025b0:	7aa0a623          	sw	a0,1964(ra)

900025b4 <inst_492>:

inst_492:
// rs1_val==858993458 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x6, 0x33333332, 0x33333334, x1, 1968, x2)
900025b4:	333335b7          	lui	a1,0x33333
900025b8:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
900025bc:	33333537          	lui	a0,0x33333
900025c0:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
900025c4:	8d2d                	xor	a0,a0,a1
900025c6:	7aa0a823          	sw	a0,1968(ra)

900025ca <inst_493>:

inst_493:
// rs1_val==858993458 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x55555555, 0x33333332, 0x66666667, x1, 1972, x2)
900025ca:	666665b7          	lui	a1,0x66666
900025ce:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
900025d2:	33333537          	lui	a0,0x33333
900025d6:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
900025da:	8d2d                	xor	a0,a0,a1
900025dc:	7aa0aa23          	sw	a0,1972(ra)

900025e0 <inst_494>:

inst_494:
// rs1_val==858993458 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xcccc79cf, 0x33333332, -0xb503, x1, 1976, x2)
900025e0:	ffff55b7          	lui	a1,0xffff5
900025e4:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
900025e8:	33333537          	lui	a0,0x33333
900025ec:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
900025f0:	8d2d                	xor	a0,a0,a1
900025f2:	7aa0ac23          	sw	a0,1976(ra)

900025f6 <inst_495>:

inst_495:
// rs1_val==858993458 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x33333332; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x33338637, 0x33333332, 0xb505, x1, 1980, x2)
900025f6:	0000b5b7          	lui	a1,0xb
900025fa:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
900025fe:	33333537          	lui	a0,0x33333
90002602:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x33333216>
90002606:	8d2d                	xor	a0,a0,a1
90002608:	7aa0ae23          	sw	a0,1980(ra)

9000260c <inst_496>:

inst_496:
// rs1_val==1717986917 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x66666666, 0x66666665, 0x3, x1, 1984, x2)
9000260c:	00300593          	li	a1,3
90002610:	66666537          	lui	a0,0x66666
90002614:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
90002618:	8d2d                	xor	a0,a0,a1
9000261a:	7ca0a023          	sw	a0,1984(ra)

9000261e <inst_497>:

inst_497:
// rs1_val==1717986917 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x33333330, 0x66666665, 0x55555555, x1, 1988, x2)
9000261e:	555555b7          	lui	a1,0x55555
90002622:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90002626:	66666537          	lui	a0,0x66666
9000262a:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
9000262e:	8d2d                	xor	a0,a0,a1
90002630:	7ca0a223          	sw	a0,1988(ra)

90002634 <inst_498>:

inst_498:
// rs1_val==1717986917 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xcccccccf, 0x66666665, -0x55555556, x1, 1992, x2)
90002634:	aaaab5b7          	lui	a1,0xaaaab
90002638:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
9000263c:	66666537          	lui	a0,0x66666
90002640:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
90002644:	8d2d                	xor	a0,a0,a1
90002646:	7ca0a423          	sw	a0,1992(ra)

9000264a <inst_499>:

inst_499:
// rs1_val==1717986917 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x66666660, 0x66666665, 0x5, x1, 1996, x2)
9000264a:	00500593          	li	a1,5
9000264e:	66666537          	lui	a0,0x66666
90002652:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
90002656:	8d2d                	xor	a0,a0,a1
90002658:	7ca0a623          	sw	a0,1996(ra)

9000265c <inst_500>:

inst_500:
// rs1_val==1717986917 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x55555556, 0x66666665, 0x33333333, x1, 2000, x2)
9000265c:	333335b7          	lui	a1,0x33333
90002660:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90002664:	66666537          	lui	a0,0x66666
90002668:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
9000266c:	8d2d                	xor	a0,a0,a1
9000266e:	7ca0a823          	sw	a0,2000(ra)

90002672 <inst_501>:

inst_501:
// rs1_val==1717986917 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x3, 0x66666665, 0x66666666, x1, 2004, x2)
90002672:	666665b7          	lui	a1,0x66666
90002676:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
9000267a:	66666537          	lui	a0,0x66666
9000267e:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
90002682:	8d2d                	xor	a0,a0,a1
90002684:	7ca0aa23          	sw	a0,2004(ra)

90002688 <inst_502>:

inst_502:
// rs1_val==1717986917 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0x99992c99, 0x66666665, -0xb504, x1, 2008, x2)
90002688:	ffff55b7          	lui	a1,0xffff5
9000268c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90002690:	66666537          	lui	a0,0x66666
90002694:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
90002698:	8d2d                	xor	a0,a0,a1
9000269a:	7ca0ac23          	sw	a0,2008(ra)

9000269e <inst_503>:

inst_503:
// rs1_val==1717986917 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x6666d361, 0x66666665, 0xb504, x1, 2012, x2)
9000269e:	0000b5b7          	lui	a1,0xb
900026a2:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
900026a6:	66666537          	lui	a0,0x66666
900026aa:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
900026ae:	8d2d                	xor	a0,a0,a1
900026b0:	7ca0ae23          	sw	a0,2012(ra)

900026b4 <inst_504>:

inst_504:
// rs1_val==1717986917 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x66666667, 0x66666665, 0x2, x1, 2016, x2)
900026b4:	00200593          	li	a1,2
900026b8:	66666537          	lui	a0,0x66666
900026bc:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
900026c0:	8d2d                	xor	a0,a0,a1
900026c2:	7ea0a023          	sw	a0,2016(ra)

900026c6 <inst_505>:

inst_505:
// rs1_val==1717986917 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x33333331, 0x66666665, 0x55555554, x1, 2020, x2)
900026c6:	555555b7          	lui	a1,0x55555
900026ca:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
900026ce:	66666537          	lui	a0,0x66666
900026d2:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
900026d6:	8d2d                	xor	a0,a0,a1
900026d8:	7ea0a223          	sw	a0,2020(ra)

900026dc <inst_506>:

inst_506:
// rs1_val==1717986917 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x66666665, 0x66666665, 0x0, x1, 2024, x2)
900026dc:	00000593          	li	a1,0
900026e0:	66666537          	lui	a0,0x66666
900026e4:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
900026e8:	8d2d                	xor	a0,a0,a1
900026ea:	7ea0a423          	sw	a0,2024(ra)

900026ee <inst_507>:

inst_507:
// rs1_val==1717986917 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x66666661, 0x66666665, 0x4, x1, 2028, x2)
900026ee:	00400593          	li	a1,4
900026f2:	66666537          	lui	a0,0x66666
900026f6:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
900026fa:	8d2d                	xor	a0,a0,a1
900026fc:	7ea0a623          	sw	a0,2028(ra)

90002700 <inst_508>:

inst_508:
// rs1_val==1717986917 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x55555557, 0x66666665, 0x33333332, x1, 2032, x2)
90002700:	333335b7          	lui	a1,0x33333
90002704:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90002708:	66666537          	lui	a0,0x66666
9000270c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
90002710:	8d2d                	xor	a0,a0,a1
90002712:	7ea0a823          	sw	a0,2032(ra)

90002716 <inst_509>:

inst_509:
// rs1_val==1717986917 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x66666665, 0x66666665, x1, 2036, x2)
90002716:	666665b7          	lui	a1,0x66666
9000271a:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
9000271e:	66666537          	lui	a0,0x66666
90002722:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
90002726:	8d2d                	xor	a0,a0,a1
90002728:	7ea0aa23          	sw	a0,2036(ra)

9000272c <inst_510>:

inst_510:
// rs1_val==1717986917 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x6666d366, 0x66666665, 0xb503, x1, 2040, x2)
9000272c:	0000b5b7          	lui	a1,0xb
90002730:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90002734:	66666537          	lui	a0,0x66666
90002738:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
9000273c:	8d2d                	xor	a0,a0,a1
9000273e:	7ea0ac23          	sw	a0,2040(ra)

90002742 <inst_511>:

inst_511:
// rs1_val==1717986917 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x33333333, 0x66666665, 0x55555556, x1, 2044, x2)
90002742:	555555b7          	lui	a1,0x55555
90002746:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
9000274a:	66666537          	lui	a0,0x66666
9000274e:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
90002752:	8d2d                	xor	a0,a0,a1
90002754:	7ea0ae23          	sw	a0,2044(ra)
RVTEST_SIGBASE( x1,signature_x1_2)
90002758:	00002097          	auipc	ra,0x2
9000275c:	0b808093          	addi	ra,ra,184 # 90004810 <signature_x1_2>

90002760 <inst_512>:

inst_512:
// rs1_val==1717986917 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xccccccce, 0x66666665, -0x55555555, x1, 0, x2)
90002760:	aaaab5b7          	lui	a1,0xaaaab
90002764:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002768:	66666537          	lui	a0,0x66666
9000276c:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
90002770:	8d2d                	xor	a0,a0,a1
90002772:	00a0a023          	sw	a0,0(ra)

90002776 <inst_513>:

inst_513:
// rs1_val==1717986917 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x66666663, 0x66666665, 0x6, x1, 4, x2)
90002776:	00600593          	li	a1,6
9000277a:	66666537          	lui	a0,0x66666
9000277e:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
90002782:	8d2d                	xor	a0,a0,a1
90002784:	00a0a223          	sw	a0,4(ra)

90002788 <inst_514>:

inst_514:
// rs1_val==1717986917 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x55555551, 0x66666665, 0x33333334, x1, 8, x2)
90002788:	333335b7          	lui	a1,0x33333
9000278c:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90002790:	66666537          	lui	a0,0x66666
90002794:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
90002798:	8d2d                	xor	a0,a0,a1
9000279a:	00a0a423          	sw	a0,8(ra)

9000279e <inst_515>:

inst_515:
// rs1_val==1717986917 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x2, 0x66666665, 0x66666667, x1, 12, x2)
9000279e:	666665b7          	lui	a1,0x66666
900027a2:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
900027a6:	66666537          	lui	a0,0x66666
900027aa:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
900027ae:	8d2d                	xor	a0,a0,a1
900027b0:	00a0a623          	sw	a0,12(ra)

900027b4 <inst_516>:

inst_516:
// rs1_val==1717986917 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0x99992c98, 0x66666665, -0xb503, x1, 16, x2)
900027b4:	ffff55b7          	lui	a1,0xffff5
900027b8:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
900027bc:	66666537          	lui	a0,0x66666
900027c0:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
900027c4:	8d2d                	xor	a0,a0,a1
900027c6:	00a0a823          	sw	a0,16(ra)

900027ca <inst_517>:

inst_517:
// rs1_val==1717986917 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x66666665; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x6666d360, 0x66666665, 0xb505, x1, 20, x2)
900027ca:	0000b5b7          	lui	a1,0xb
900027ce:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
900027d2:	66666537          	lui	a0,0x66666
900027d6:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x66666549>
900027da:	8d2d                	xor	a0,a0,a1
900027dc:	00a0aa23          	sw	a0,20(ra)

900027e0 <inst_518>:

inst_518:
// rs1_val==46339 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0xb500, 0xb503, 0x3, x1, 24, x2)
900027e0:	00300593          	li	a1,3
900027e4:	0000b537          	lui	a0,0xb
900027e8:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
900027ec:	8d2d                	xor	a0,a0,a1
900027ee:	00a0ac23          	sw	a0,24(ra)

900027f2 <inst_519>:

inst_519:
// rs1_val==46339 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x5555e056, 0xb503, 0x55555555, x1, 28, x2)
900027f2:	555555b7          	lui	a1,0x55555
900027f6:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
900027fa:	0000b537          	lui	a0,0xb
900027fe:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
90002802:	8d2d                	xor	a0,a0,a1
90002804:	00a0ae23          	sw	a0,28(ra)

90002808 <inst_520>:

inst_520:
// rs1_val==46339 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa9, 0xb503, -0x55555556, x1, 32, x2)
90002808:	aaaab5b7          	lui	a1,0xaaaab
9000280c:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90002810:	0000b537          	lui	a0,0xb
90002814:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
90002818:	8d2d                	xor	a0,a0,a1
9000281a:	02a0a023          	sw	a0,32(ra)

9000281e <inst_521>:

inst_521:
// rs1_val==46339 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0xb506, 0xb503, 0x5, x1, 36, x2)
9000281e:	00500593          	li	a1,5
90002822:	0000b537          	lui	a0,0xb
90002826:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
9000282a:	8d2d                	xor	a0,a0,a1
9000282c:	02a0a223          	sw	a0,36(ra)

90002830 <inst_522>:

inst_522:
// rs1_val==46339 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x33338630, 0xb503, 0x33333333, x1, 40, x2)
90002830:	333335b7          	lui	a1,0x33333
90002834:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90002838:	0000b537          	lui	a0,0xb
9000283c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
90002840:	8d2d                	xor	a0,a0,a1
90002842:	02a0a423          	sw	a0,40(ra)

90002846 <inst_523>:

inst_523:
// rs1_val==46339 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x6666d365, 0xb503, 0x66666666, x1, 44, x2)
90002846:	666665b7          	lui	a1,0x66666
9000284a:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
9000284e:	0000b537          	lui	a0,0xb
90002852:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
90002856:	8d2d                	xor	a0,a0,a1
90002858:	02a0a623          	sw	a0,44(ra)

9000285c <inst_524>:

inst_524:
// rs1_val==46339 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xffffffff, 0xb503, -0xb504, x1, 48, x2)
9000285c:	ffff55b7          	lui	a1,0xffff5
90002860:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90002864:	0000b537          	lui	a0,0xb
90002868:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
9000286c:	8d2d                	xor	a0,a0,a1
9000286e:	02a0a823          	sw	a0,48(ra)

90002872 <inst_525>:

inst_525:
// rs1_val==46339 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x7, 0xb503, 0xb504, x1, 52, x2)
90002872:	0000b5b7          	lui	a1,0xb
90002876:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
9000287a:	0000b537          	lui	a0,0xb
9000287e:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
90002882:	8d2d                	xor	a0,a0,a1
90002884:	02a0aa23          	sw	a0,52(ra)

90002888 <inst_526>:

inst_526:
// rs1_val==46339 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0xb501, 0xb503, 0x2, x1, 56, x2)
90002888:	00200593          	li	a1,2
9000288c:	0000b537          	lui	a0,0xb
90002890:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
90002894:	8d2d                	xor	a0,a0,a1
90002896:	02a0ac23          	sw	a0,56(ra)

9000289a <inst_527>:

inst_527:
// rs1_val==46339 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x5555e057, 0xb503, 0x55555554, x1, 60, x2)
9000289a:	555555b7          	lui	a1,0x55555
9000289e:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
900028a2:	0000b537          	lui	a0,0xb
900028a6:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
900028aa:	8d2d                	xor	a0,a0,a1
900028ac:	02a0ae23          	sw	a0,60(ra)

900028b0 <inst_528>:

inst_528:
// rs1_val==46339 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0xb503, 0xb503, 0x0, x1, 64, x2)
900028b0:	00000593          	li	a1,0
900028b4:	0000b537          	lui	a0,0xb
900028b8:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
900028bc:	8d2d                	xor	a0,a0,a1
900028be:	04a0a023          	sw	a0,64(ra)

900028c2 <inst_529>:

inst_529:
// rs1_val==46339 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0xb507, 0xb503, 0x4, x1, 68, x2)
900028c2:	00400593          	li	a1,4
900028c6:	0000b537          	lui	a0,0xb
900028ca:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
900028ce:	8d2d                	xor	a0,a0,a1
900028d0:	04a0a223          	sw	a0,68(ra)

900028d4 <inst_530>:

inst_530:
// rs1_val==46339 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x33338631, 0xb503, 0x33333332, x1, 72, x2)
900028d4:	333335b7          	lui	a1,0x33333
900028d8:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
900028dc:	0000b537          	lui	a0,0xb
900028e0:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
900028e4:	8d2d                	xor	a0,a0,a1
900028e6:	04a0a423          	sw	a0,72(ra)

900028ea <inst_531>:

inst_531:
// rs1_val==46339 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x6666d366, 0xb503, 0x66666665, x1, 76, x2)
900028ea:	666665b7          	lui	a1,0x66666
900028ee:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
900028f2:	0000b537          	lui	a0,0xb
900028f6:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
900028fa:	8d2d                	xor	a0,a0,a1
900028fc:	04a0a623          	sw	a0,76(ra)

90002900 <inst_532>:

inst_532:
// rs1_val==46339 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x0, 0xb503, 0xb503, x1, 80, x2)
90002900:	0000b5b7          	lui	a1,0xb
90002904:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90002908:	0000b537          	lui	a0,0xb
9000290c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
90002910:	8d2d                	xor	a0,a0,a1
90002912:	04a0a823          	sw	a0,80(ra)

90002916 <inst_533>:

inst_533:
// rs1_val==46339 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x5555e055, 0xb503, 0x55555556, x1, 84, x2)
90002916:	555555b7          	lui	a1,0x55555
9000291a:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
9000291e:	0000b537          	lui	a0,0xb
90002922:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
90002926:	8d2d                	xor	a0,a0,a1
90002928:	04a0aa23          	sw	a0,84(ra)

9000292c <inst_534>:

inst_534:
// rs1_val==46339 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa8, 0xb503, -0x55555555, x1, 88, x2)
9000292c:	aaaab5b7          	lui	a1,0xaaaab
90002930:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002934:	0000b537          	lui	a0,0xb
90002938:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
9000293c:	8d2d                	xor	a0,a0,a1
9000293e:	04a0ac23          	sw	a0,88(ra)

90002942 <inst_535>:

inst_535:
// rs1_val==46339 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0xb505, 0xb503, 0x6, x1, 92, x2)
90002942:	00600593          	li	a1,6
90002946:	0000b537          	lui	a0,0xb
9000294a:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
9000294e:	8d2d                	xor	a0,a0,a1
90002950:	04a0ae23          	sw	a0,92(ra)

90002954 <inst_536>:

inst_536:
// rs1_val==46339 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x33338637, 0xb503, 0x33333334, x1, 96, x2)
90002954:	333335b7          	lui	a1,0x33333
90002958:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
9000295c:	0000b537          	lui	a0,0xb
90002960:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
90002964:	8d2d                	xor	a0,a0,a1
90002966:	06a0a023          	sw	a0,96(ra)

9000296a <inst_537>:

inst_537:
// rs1_val==46339 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x6666d364, 0xb503, 0x66666667, x1, 100, x2)
9000296a:	666665b7          	lui	a1,0x66666
9000296e:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90002972:	0000b537          	lui	a0,0xb
90002976:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
9000297a:	8d2d                	xor	a0,a0,a1
9000297c:	06a0a223          	sw	a0,100(ra)

90002980 <inst_538>:

inst_538:
// rs1_val==46339 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xfffffffe, 0xb503, -0xb503, x1, 104, x2)
90002980:	ffff55b7          	lui	a1,0xffff5
90002984:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90002988:	0000b537          	lui	a0,0xb
9000298c:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
90002990:	8d2d                	xor	a0,a0,a1
90002992:	06a0a423          	sw	a0,104(ra)

90002996 <inst_539>:

inst_539:
// rs1_val==46339 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0xb503; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x6, 0xb503, 0xb505, x1, 108, x2)
90002996:	0000b5b7          	lui	a1,0xb
9000299a:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
9000299e:	0000b537          	lui	a0,0xb
900029a2:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3e7>
900029a6:	8d2d                	xor	a0,a0,a1
900029a8:	06a0a623          	sw	a0,108(ra)

900029ac <inst_540>:

inst_540:
// rs1_val==1431655766 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0x55555555, 0x55555556, 0x3, x1, 112, x2)
900029ac:	00300593          	li	a1,3
900029b0:	55555537          	lui	a0,0x55555
900029b4:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
900029b8:	8d2d                	xor	a0,a0,a1
900029ba:	06a0a823          	sw	a0,112(ra)

900029be <inst_541>:

inst_541:
// rs1_val==1431655766 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x3, 0x55555556, 0x55555555, x1, 116, x2)
900029be:	555555b7          	lui	a1,0x55555
900029c2:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
900029c6:	55555537          	lui	a0,0x55555
900029ca:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
900029ce:	8d2d                	xor	a0,a0,a1
900029d0:	06a0aa23          	sw	a0,116(ra)

900029d4 <inst_542>:

inst_542:
// rs1_val==1431655766 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xfffffffc, 0x55555556, -0x55555556, x1, 120, x2)
900029d4:	aaaab5b7          	lui	a1,0xaaaab
900029d8:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
900029dc:	55555537          	lui	a0,0x55555
900029e0:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
900029e4:	8d2d                	xor	a0,a0,a1
900029e6:	06a0ac23          	sw	a0,120(ra)

900029ea <inst_543>:

inst_543:
// rs1_val==1431655766 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0x55555553, 0x55555556, 0x5, x1, 124, x2)
900029ea:	00500593          	li	a1,5
900029ee:	55555537          	lui	a0,0x55555
900029f2:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
900029f6:	8d2d                	xor	a0,a0,a1
900029f8:	06a0ae23          	sw	a0,124(ra)

900029fc <inst_544>:

inst_544:
// rs1_val==1431655766 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x66666665, 0x55555556, 0x33333333, x1, 128, x2)
900029fc:	333335b7          	lui	a1,0x33333
90002a00:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90002a04:	55555537          	lui	a0,0x55555
90002a08:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002a0c:	8d2d                	xor	a0,a0,a1
90002a0e:	08a0a023          	sw	a0,128(ra)

90002a12 <inst_545>:

inst_545:
// rs1_val==1431655766 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0x33333330, 0x55555556, 0x66666666, x1, 132, x2)
90002a12:	666665b7          	lui	a1,0x66666
90002a16:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90002a1a:	55555537          	lui	a0,0x55555
90002a1e:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002a22:	8d2d                	xor	a0,a0,a1
90002a24:	08a0a223          	sw	a0,132(ra)

90002a28 <inst_546>:

inst_546:
// rs1_val==1431655766 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1faa, 0x55555556, -0xb504, x1, 136, x2)
90002a28:	ffff55b7          	lui	a1,0xffff5
90002a2c:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90002a30:	55555537          	lui	a0,0x55555
90002a34:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002a38:	8d2d                	xor	a0,a0,a1
90002a3a:	08a0a423          	sw	a0,136(ra)

90002a3e <inst_547>:

inst_547:
// rs1_val==1431655766 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0x5555e052, 0x55555556, 0xb504, x1, 140, x2)
90002a3e:	0000b5b7          	lui	a1,0xb
90002a42:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90002a46:	55555537          	lui	a0,0x55555
90002a4a:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002a4e:	8d2d                	xor	a0,a0,a1
90002a50:	08a0a623          	sw	a0,140(ra)

90002a54 <inst_548>:

inst_548:
// rs1_val==1431655766 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0x55555554, 0x55555556, 0x2, x1, 144, x2)
90002a54:	00200593          	li	a1,2
90002a58:	55555537          	lui	a0,0x55555
90002a5c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002a60:	8d2d                	xor	a0,a0,a1
90002a62:	08a0a823          	sw	a0,144(ra)

90002a66 <inst_549>:

inst_549:
// rs1_val==1431655766 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0x2, 0x55555556, 0x55555554, x1, 148, x2)
90002a66:	555555b7          	lui	a1,0x55555
90002a6a:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
90002a6e:	55555537          	lui	a0,0x55555
90002a72:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002a76:	8d2d                	xor	a0,a0,a1
90002a78:	08a0aa23          	sw	a0,148(ra)

90002a7c <inst_550>:

inst_550:
// rs1_val==1431655766 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x55555556, 0x55555556, 0x0, x1, 152, x2)
90002a7c:	00000593          	li	a1,0
90002a80:	55555537          	lui	a0,0x55555
90002a84:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002a88:	8d2d                	xor	a0,a0,a1
90002a8a:	08a0ac23          	sw	a0,152(ra)

90002a8e <inst_551>:

inst_551:
// rs1_val==1431655766 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0x55555552, 0x55555556, 0x4, x1, 156, x2)
90002a8e:	00400593          	li	a1,4
90002a92:	55555537          	lui	a0,0x55555
90002a96:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002a9a:	8d2d                	xor	a0,a0,a1
90002a9c:	08a0ae23          	sw	a0,156(ra)

90002aa0 <inst_552>:

inst_552:
// rs1_val==1431655766 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x66666664, 0x55555556, 0x33333332, x1, 160, x2)
90002aa0:	333335b7          	lui	a1,0x33333
90002aa4:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90002aa8:	55555537          	lui	a0,0x55555
90002aac:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002ab0:	8d2d                	xor	a0,a0,a1
90002ab2:	0aa0a023          	sw	a0,160(ra)

90002ab6 <inst_553>:

inst_553:
// rs1_val==1431655766 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0x33333333, 0x55555556, 0x66666665, x1, 164, x2)
90002ab6:	666665b7          	lui	a1,0x66666
90002aba:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90002abe:	55555537          	lui	a0,0x55555
90002ac2:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002ac6:	8d2d                	xor	a0,a0,a1
90002ac8:	0aa0a223          	sw	a0,164(ra)

90002acc <inst_554>:

inst_554:
// rs1_val==1431655766 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0x5555e055, 0x55555556, 0xb503, x1, 168, x2)
90002acc:	0000b5b7          	lui	a1,0xb
90002ad0:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90002ad4:	55555537          	lui	a0,0x55555
90002ad8:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002adc:	8d2d                	xor	a0,a0,a1
90002ade:	0aa0a423          	sw	a0,168(ra)

90002ae2 <inst_555>:

inst_555:
// rs1_val==1431655766 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x0, 0x55555556, 0x55555556, x1, 172, x2)
90002ae2:	555555b7          	lui	a1,0x55555
90002ae6:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90002aea:	55555537          	lui	a0,0x55555
90002aee:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002af2:	8d2d                	xor	a0,a0,a1
90002af4:	0aa0a623          	sw	a0,172(ra)

90002af8 <inst_556>:

inst_556:
// rs1_val==1431655766 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xfffffffd, 0x55555556, -0x55555555, x1, 176, x2)
90002af8:	aaaab5b7          	lui	a1,0xaaaab
90002afc:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002b00:	55555537          	lui	a0,0x55555
90002b04:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002b08:	8d2d                	xor	a0,a0,a1
90002b0a:	0aa0a823          	sw	a0,176(ra)

90002b0e <inst_557>:

inst_557:
// rs1_val==1431655766 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0x55555550, 0x55555556, 0x6, x1, 180, x2)
90002b0e:	00600593          	li	a1,6
90002b12:	55555537          	lui	a0,0x55555
90002b16:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002b1a:	8d2d                	xor	a0,a0,a1
90002b1c:	0aa0aa23          	sw	a0,180(ra)

90002b20 <inst_558>:

inst_558:
// rs1_val==1431655766 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x66666662, 0x55555556, 0x33333334, x1, 184, x2)
90002b20:	333335b7          	lui	a1,0x33333
90002b24:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90002b28:	55555537          	lui	a0,0x55555
90002b2c:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002b30:	8d2d                	xor	a0,a0,a1
90002b32:	0aa0ac23          	sw	a0,184(ra)

90002b36 <inst_559>:

inst_559:
// rs1_val==1431655766 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0x33333331, 0x55555556, 0x66666667, x1, 188, x2)
90002b36:	666665b7          	lui	a1,0x66666
90002b3a:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90002b3e:	55555537          	lui	a0,0x55555
90002b42:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002b46:	8d2d                	xor	a0,a0,a1
90002b48:	0aa0ae23          	sw	a0,188(ra)

90002b4c <inst_560>:

inst_560:
// rs1_val==1431655766 and rs2_val==-46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:-0xb503
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fab, 0x55555556, -0xb503, x1, 192, x2)
90002b4c:	ffff55b7          	lui	a1,0xffff5
90002b50:	afd58593          	addi	a1,a1,-1283 # ffff4afd <_end+0x6ffefff9>
90002b54:	55555537          	lui	a0,0x55555
90002b58:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002b5c:	8d2d                	xor	a0,a0,a1
90002b5e:	0ca0a023          	sw	a0,192(ra)

90002b62 <inst_561>:

inst_561:
// rs1_val==1431655766 and rs2_val==46341, 
// opcode: c.xor; op1:x10; op2:x11; op1val:0x55555556; op2val:0xb505
TEST_CR_OP( c.xor, x10, x11, 0x5555e053, 0x55555556, 0xb505, x1, 196, x2)
90002b62:	0000b5b7          	lui	a1,0xb
90002b66:	50558593          	addi	a1,a1,1285 # b505 <offset+0xb3e9>
90002b6a:	55555537          	lui	a0,0x55555
90002b6e:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x5555543a>
90002b72:	8d2d                	xor	a0,a0,a1
90002b74:	0ca0a223          	sw	a0,196(ra)

90002b78 <inst_562>:

inst_562:
// rs1_val==-1431655765 and rs2_val==3, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x3
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaa8, -0x55555555, 0x3, x1, 200, x2)
90002b78:	00300593          	li	a1,3
90002b7c:	aaaab537          	lui	a0,0xaaaab
90002b80:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002b84:	8d2d                	xor	a0,a0,a1
90002b86:	0ca0a423          	sw	a0,200(ra)

90002b8a <inst_563>:

inst_563:
// rs1_val==-1431655765 and rs2_val==1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x55555555
TEST_CR_OP( c.xor, x10, x11, 0xfffffffe, -0x55555555, 0x55555555, x1, 204, x2)
90002b8a:	555555b7          	lui	a1,0x55555
90002b8e:	55558593          	addi	a1,a1,1365 # 55555555 <offset+0x55555439>
90002b92:	aaaab537          	lui	a0,0xaaaab
90002b96:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002b9a:	8d2d                	xor	a0,a0,a1
90002b9c:	0ca0a623          	sw	a0,204(ra)

90002ba0 <inst_564>:

inst_564:
// rs1_val==-1431655765 and rs2_val==-1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:-0x55555556
TEST_CR_OP( c.xor, x10, x11, 0x1, -0x55555555, -0x55555556, x1, 208, x2)
90002ba0:	aaaab5b7          	lui	a1,0xaaaab
90002ba4:	aaa58593          	addi	a1,a1,-1366 # aaaaaaaa <_end+0x1aaa5fa6>
90002ba8:	aaaab537          	lui	a0,0xaaaab
90002bac:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002bb0:	8d2d                	xor	a0,a0,a1
90002bb2:	0ca0a823          	sw	a0,208(ra)

90002bb6 <inst_565>:

inst_565:
// rs1_val==-1431655765 and rs2_val==5, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x5
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaae, -0x55555555, 0x5, x1, 212, x2)
90002bb6:	00500593          	li	a1,5
90002bba:	aaaab537          	lui	a0,0xaaaab
90002bbe:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002bc2:	8d2d                	xor	a0,a0,a1
90002bc4:	0ca0aa23          	sw	a0,212(ra)

90002bc8 <inst_566>:

inst_566:
// rs1_val==-1431655765 and rs2_val==858993459, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x33333333
TEST_CR_OP( c.xor, x10, x11, 0x99999998, -0x55555555, 0x33333333, x1, 216, x2)
90002bc8:	333335b7          	lui	a1,0x33333
90002bcc:	33358593          	addi	a1,a1,819 # 33333333 <offset+0x33333217>
90002bd0:	aaaab537          	lui	a0,0xaaaab
90002bd4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002bd8:	8d2d                	xor	a0,a0,a1
90002bda:	0ca0ac23          	sw	a0,216(ra)

90002bde <inst_567>:

inst_567:
// rs1_val==-1431655765 and rs2_val==1717986918, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x66666666
TEST_CR_OP( c.xor, x10, x11, 0xcccccccd, -0x55555555, 0x66666666, x1, 220, x2)
90002bde:	666665b7          	lui	a1,0x66666
90002be2:	66658593          	addi	a1,a1,1638 # 66666666 <offset+0x6666654a>
90002be6:	aaaab537          	lui	a0,0xaaaab
90002bea:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002bee:	8d2d                	xor	a0,a0,a1
90002bf0:	0ca0ae23          	sw	a0,220(ra)

90002bf4 <inst_568>:

inst_568:
// rs1_val==-1431655765 and rs2_val==-46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:-0xb504
TEST_CR_OP( c.xor, x10, x11, 0x5555e057, -0x55555555, -0xb504, x1, 224, x2)
90002bf4:	ffff55b7          	lui	a1,0xffff5
90002bf8:	afc58593          	addi	a1,a1,-1284 # ffff4afc <_end+0x6ffefff8>
90002bfc:	aaaab537          	lui	a0,0xaaaab
90002c00:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002c04:	8d2d                	xor	a0,a0,a1
90002c06:	0ea0a023          	sw	a0,224(ra)

90002c0a <inst_569>:

inst_569:
// rs1_val==-1431655765 and rs2_val==46340, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0xb504
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1faf, -0x55555555, 0xb504, x1, 228, x2)
90002c0a:	0000b5b7          	lui	a1,0xb
90002c0e:	50458593          	addi	a1,a1,1284 # b504 <offset+0xb3e8>
90002c12:	aaaab537          	lui	a0,0xaaaab
90002c16:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002c1a:	8d2d                	xor	a0,a0,a1
90002c1c:	0ea0a223          	sw	a0,228(ra)

90002c20 <inst_570>:

inst_570:
// rs1_val==-1431655765 and rs2_val==2, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x2
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaa9, -0x55555555, 0x2, x1, 232, x2)
90002c20:	00200593          	li	a1,2
90002c24:	aaaab537          	lui	a0,0xaaaab
90002c28:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002c2c:	8d2d                	xor	a0,a0,a1
90002c2e:	0ea0a423          	sw	a0,232(ra)

90002c32 <inst_571>:

inst_571:
// rs1_val==-1431655765 and rs2_val==1431655764, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x55555554
TEST_CR_OP( c.xor, x10, x11, 0xffffffff, -0x55555555, 0x55555554, x1, 236, x2)
90002c32:	555555b7          	lui	a1,0x55555
90002c36:	55458593          	addi	a1,a1,1364 # 55555554 <offset+0x55555438>
90002c3a:	aaaab537          	lui	a0,0xaaaab
90002c3e:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002c42:	8d2d                	xor	a0,a0,a1
90002c44:	0ea0a623          	sw	a0,236(ra)

90002c48 <inst_572>:

inst_572:
// rs1_val==-1431655765 and rs2_val==0, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaab, -0x55555555, 0x0, x1, 240, x2)
90002c48:	00000593          	li	a1,0
90002c4c:	aaaab537          	lui	a0,0xaaaab
90002c50:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002c54:	8d2d                	xor	a0,a0,a1
90002c56:	0ea0a823          	sw	a0,240(ra)

90002c5a <inst_573>:

inst_573:
// rs1_val==-1431655765 and rs2_val==4, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x4
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaaf, -0x55555555, 0x4, x1, 244, x2)
90002c5a:	00400593          	li	a1,4
90002c5e:	aaaab537          	lui	a0,0xaaaab
90002c62:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002c66:	8d2d                	xor	a0,a0,a1
90002c68:	0ea0aa23          	sw	a0,244(ra)

90002c6c <inst_574>:

inst_574:
// rs1_val==-1431655765 and rs2_val==858993458, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x33333332
TEST_CR_OP( c.xor, x10, x11, 0x99999999, -0x55555555, 0x33333332, x1, 248, x2)
90002c6c:	333335b7          	lui	a1,0x33333
90002c70:	33258593          	addi	a1,a1,818 # 33333332 <offset+0x33333216>
90002c74:	aaaab537          	lui	a0,0xaaaab
90002c78:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002c7c:	8d2d                	xor	a0,a0,a1
90002c7e:	0ea0ac23          	sw	a0,248(ra)

90002c82 <inst_575>:

inst_575:
// rs1_val==-1431655765 and rs2_val==1717986917, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x66666665
TEST_CR_OP( c.xor, x10, x11, 0xccccccce, -0x55555555, 0x66666665, x1, 252, x2)
90002c82:	666665b7          	lui	a1,0x66666
90002c86:	66558593          	addi	a1,a1,1637 # 66666665 <offset+0x66666549>
90002c8a:	aaaab537          	lui	a0,0xaaaab
90002c8e:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002c92:	8d2d                	xor	a0,a0,a1
90002c94:	0ea0ae23          	sw	a0,252(ra)

90002c98 <inst_576>:

inst_576:
// rs1_val==-1431655765 and rs2_val==46339, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0xb503
TEST_CR_OP( c.xor, x10, x11, 0xaaaa1fa8, -0x55555555, 0xb503, x1, 256, x2)
90002c98:	0000b5b7          	lui	a1,0xb
90002c9c:	50358593          	addi	a1,a1,1283 # b503 <offset+0xb3e7>
90002ca0:	aaaab537          	lui	a0,0xaaaab
90002ca4:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002ca8:	8d2d                	xor	a0,a0,a1
90002caa:	10a0a023          	sw	a0,256(ra)

90002cae <inst_577>:

inst_577:
// rs1_val==-1431655765 and rs2_val==1431655766, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x55555556
TEST_CR_OP( c.xor, x10, x11, 0xfffffffd, -0x55555555, 0x55555556, x1, 260, x2)
90002cae:	555555b7          	lui	a1,0x55555
90002cb2:	55658593          	addi	a1,a1,1366 # 55555556 <offset+0x5555543a>
90002cb6:	aaaab537          	lui	a0,0xaaaab
90002cba:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002cbe:	8d2d                	xor	a0,a0,a1
90002cc0:	10a0a223          	sw	a0,260(ra)

90002cc4 <inst_578>:

inst_578:
// rs1_val==-1431655765 and rs2_val==-1431655765, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:-0x55555555
TEST_CR_OP( c.xor, x10, x11, 0x0, -0x55555555, -0x55555555, x1, 264, x2)
90002cc4:	aaaab5b7          	lui	a1,0xaaaab
90002cc8:	aab58593          	addi	a1,a1,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002ccc:	aaaab537          	lui	a0,0xaaaab
90002cd0:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002cd4:	8d2d                	xor	a0,a0,a1
90002cd6:	10a0a423          	sw	a0,264(ra)

90002cda <inst_579>:

inst_579:
// rs1_val==-1431655765 and rs2_val==6, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x6
TEST_CR_OP( c.xor, x10, x11, 0xaaaaaaad, -0x55555555, 0x6, x1, 268, x2)
90002cda:	00600593          	li	a1,6
90002cde:	aaaab537          	lui	a0,0xaaaab
90002ce2:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002ce6:	8d2d                	xor	a0,a0,a1
90002ce8:	10a0a623          	sw	a0,268(ra)

90002cec <inst_580>:

inst_580:
// rs1_val==-1431655765 and rs2_val==858993460, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x33333334
TEST_CR_OP( c.xor, x10, x11, 0x9999999f, -0x55555555, 0x33333334, x1, 272, x2)
90002cec:	333335b7          	lui	a1,0x33333
90002cf0:	33458593          	addi	a1,a1,820 # 33333334 <offset+0x33333218>
90002cf4:	aaaab537          	lui	a0,0xaaaab
90002cf8:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002cfc:	8d2d                	xor	a0,a0,a1
90002cfe:	10a0a823          	sw	a0,272(ra)

90002d02 <inst_581>:

inst_581:
// rs1_val==-1431655765 and rs2_val==1717986919, 
// opcode: c.xor; op1:x10; op2:x11; op1val:-0x55555555; op2val:0x66666667
TEST_CR_OP( c.xor, x10, x11, 0xcccccccc, -0x55555555, 0x66666667, x1, 276, x2)
90002d02:	666665b7          	lui	a1,0x66666
90002d06:	66758593          	addi	a1,a1,1639 # 66666667 <offset+0x6666654b>
90002d0a:	aaaab537          	lui	a0,0xaaaab
90002d0e:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa5fa7>
90002d12:	8d2d                	xor	a0,a0,a1
90002d14:	10a0aa23          	sw	a0,276(ra)

90002d18 <inst_582>:

inst_582:
// rs2_val == 0, rs1_val == 32768
// opcode: c.xor; op1:x10; op2:x11; op1val:0x8000; op2val:0x0
TEST_CR_OP( c.xor, x10, x11, 0x8000, 0x8000, 0x0, x1, 280, x2)
90002d18:	00000593          	li	a1,0
90002d1c:	00008537          	lui	a0,0x8
90002d20:	8d2d                	xor	a0,a0,a1
90002d22:	10a0ac23          	sw	a0,280(ra)
90002d26:	00000013          	nop
90002d2a:	00000013          	nop
90002d2e:	0001                	nop

90002d30 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
90002d30:	0091                	addi	ra,ra,4
90002d32:	4085                	li	ra,1

90002d34 <write_tohost>:
90002d34:	00000f17          	auipc	t5,0x0
90002d38:	2c1f2623          	sw	ra,716(t5) # 90003000 <tohost>

90002d3c <self_loop>:
90002d3c:	a001                	j	90002d3c <self_loop>
