
/home/taka/RISCV/mmRISC/simulation/modelsim/riscv-arch-test/riscv-arch-test/work/rv32i_m/C/cslli-01.elf:     file format elf32-littleriscv


Disassembly of section .text.init:

90000000 <rvtest_entry_point>:

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN
90000000:	feedc0b7          	lui	ra,0xfeedc
90000004:	ead08093          	addi	ra,ra,-339 # feedbead <_end+0x6eed9ba9>
90000008:	ff76e137          	lui	sp,0xff76e
9000000c:	f5610113          	addi	sp,sp,-170 # ff76df56 <_end+0x6f76bc52>
90000010:	7fbb71b7          	lui	gp,0x7fbb7
90000014:	fab18193          	addi	gp,gp,-85 # 7fbb6fab <offset+0x7fbb6e53>
90000018:	bfddb237          	lui	tp,0xbfddb
9000001c:	7d520213          	addi	tp,tp,2005 # bfddb7d5 <_end+0x2fdd94d1>
90000020:	00000297          	auipc	t0,0x0
90000024:	0d828293          	addi	t0,t0,216 # 900000f8 <rvtest_code_begin>
90000028:	00002317          	auipc	t1,0x2
9000002c:	fd830313          	addi	t1,t1,-40 # 90002000 <rvtest_data_begin>
90000030:	b7fbb3b7          	lui	t2,0xb7fbb
90000034:	6fa38393          	addi	t2,t2,1786 # b7fbb6fa <_end+0x27fb93f6>
90000038:	5bfde437          	lui	s0,0x5bfde
9000003c:	b7d40413          	addi	s0,s0,-1155 # 5bfddb7d <offset+0x5bfdda25>
90000040:	adfef4b7          	lui	s1,0xadfef
90000044:	dbe48493          	addi	s1,s1,-578 # adfeedbe <_end+0x1dfecaba>
90000048:	56ff7537          	lui	a0,0x56ff7
9000004c:	6df50513          	addi	a0,a0,1759 # 56ff76df <offset+0x56ff7587>
90000050:	ab7fc5b7          	lui	a1,0xab7fc
90000054:	b6f58593          	addi	a1,a1,-1169 # ab7fbb6f <_end+0x1b7f986b>
90000058:	d5bfe637          	lui	a2,0xd5bfe
9000005c:	db760613          	addi	a2,a2,-585 # d5bfddb7 <_end+0x45bfbab3>
90000060:	eadff6b7          	lui	a3,0xeadff
90000064:	edb68693          	addi	a3,a3,-293 # eadfeedb <_end+0x5adfcbd7>
90000068:	f56ff737          	lui	a4,0xf56ff
9000006c:	76d70713          	addi	a4,a4,1901 # f56ff76d <_end+0x656fd469>
90000070:	fab807b7          	lui	a5,0xfab80
90000074:	bb678793          	addi	a5,a5,-1098 # fab7fbb6 <_end+0x6ab7d8b2>
90000078:	7d5c0837          	lui	a6,0x7d5c0
9000007c:	ddb80813          	addi	a6,a6,-549 # 7d5bfddb <offset+0x7d5bfc83>
90000080:	beae08b7          	lui	a7,0xbeae0
90000084:	eed88893          	addi	a7,a7,-275 # beadfeed <_end+0x2eaddbe9>
90000088:	df570937          	lui	s2,0xdf570
9000008c:	f7690913          	addi	s2,s2,-138 # df56ff76 <_end+0x4f56dc72>
90000090:	6fab89b7          	lui	s3,0x6fab8
90000094:	fbb98993          	addi	s3,s3,-69 # 6fab7fbb <offset+0x6fab7e63>
90000098:	b7d5ca37          	lui	s4,0xb7d5c
9000009c:	fdda0a13          	addi	s4,s4,-35 # b7d5bfdd <_end+0x27d59cd9>
900000a0:	dbeaeab7          	lui	s5,0xdbeae
900000a4:	feea8a93          	addi	s5,s5,-18 # dbeadfee <_end+0x4beabcea>
900000a8:	6df57b37          	lui	s6,0x6df57
900000ac:	ff7b0b13          	addi	s6,s6,-9 # 6df56ff7 <offset+0x6df56e9f>
900000b0:	b6fabbb7          	lui	s7,0xb6fab
900000b4:	7fbb8b93          	addi	s7,s7,2043 # b6fab7fb <_end+0x26fa94f7>
900000b8:	db7d6c37          	lui	s8,0xdb7d6
900000bc:	bfdc0c13          	addi	s8,s8,-1027 # db7d5bfd <_end+0x4b7d38f9>
900000c0:	edbebcb7          	lui	s9,0xedbeb
900000c4:	dfec8c93          	addi	s9,s9,-514 # edbeadfe <_end+0x5dbe8afa>
900000c8:	76df5d37          	lui	s10,0x76df5
900000cc:	6ffd0d13          	addi	s10,s10,1791 # 76df56ff <offset+0x76df55a7>
900000d0:	bb6fbdb7          	lui	s11,0xbb6fb
900000d4:	b7fd8d93          	addi	s11,s11,-1153 # bb6fab7f <_end+0x2b6f887b>
900000d8:	ddb7de37          	lui	t3,0xddb7d
900000dc:	5bfe0e13          	addi	t3,t3,1471 # ddb7d5bf <_end+0x4db7b2bb>
900000e0:	eedbfeb7          	lui	t4,0xeedbf
900000e4:	adfe8e93          	addi	t4,t4,-1313 # eedbeadf <_end+0x5edbc7db>
900000e8:	f76dff37          	lui	t5,0xf76df
900000ec:	56ff0f13          	addi	t5,t5,1391 # f76df56f <_end+0x676dd26b>
900000f0:	fbb70fb7          	lui	t6,0xfbb70
900000f4:	ab7f8f93          	addi	t6,t6,-1353 # fbb6fab7 <_end+0x6bb6d7b3>

900000f8 <rvtest_code_begin>:

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*);def TEST_CASE_1=True;",cslli)

RVTEST_SIGBASE( x1,signature_x1_1)
900000f8:	00002097          	auipc	ra,0x2
900000fc:	f1808093          	addi	ra,ra,-232 # 90002010 <begin_signature>

90000100 <inst_0>:

inst_0:
// rd==x11, rs1_val < 0 and imm_val < xlen, 
// opcode:c.slli; op1:x11; dest:x11 op1val:-0xa; immval:0x12
TEST_CI_OP( c.slli, x11, 0xffd80000, -0xa, 0x12, x1, 0, x2)
90000100:	ff600593          	li	a1,-10
90000104:	05ca                	slli	a1,a1,0x12
90000106:	00b0a023          	sw	a1,0(ra)

9000010a <inst_1>:

inst_1:
// rd==x9, rs1_val > 0 and imm_val < xlen, imm_val == 23, rs1_val == 1 and imm_val != 0 and imm_val < xlen, rs1_val == 1
// opcode:c.slli; op1:x9; dest:x9 op1val:0x1; immval:0x17
TEST_CI_OP( c.slli, x9, 0x800000, 0x1, 0x17, x1, 4, x2)
9000010a:	00100493          	li	s1,1
9000010e:	04de                	slli	s1,s1,0x17
90000110:	0090a223          	sw	s1,4(ra)

90000114 <inst_2>:

inst_2:
// rd==x10, rs1_val == imm_val and imm_val != 0  and imm_val < xlen, rs1_val == 4, rs1_val==4, imm_val == 4
// opcode:c.slli; op1:x10; dest:x10 op1val:0x4; immval:0x4
TEST_CI_OP( c.slli, x10, 0x40, 0x4, 0x4, x1, 8, x2)
90000114:	00400513          	li	a0,4
90000118:	0512                	slli	a0,a0,0x4
9000011a:	00a0a423          	sw	a0,8(ra)

9000011e <inst_3>:

inst_3:
// rd==x12, rs1_val == (-2**(xlen-1)) and imm_val != 0 and imm_val < xlen, rs1_val == -2147483648
// opcode:c.slli; op1:x12; dest:x12 op1val:-0x80000000; immval:0x11
TEST_CI_OP( c.slli, x12, 0x0, -0x80000000, 0x11, x1, 12, x2)
9000011e:	80000637          	lui	a2,0x80000
90000122:	0646                	slli	a2,a2,0x11
90000124:	00c0a623          	sw	a2,12(ra)

90000128 <inst_4>:

inst_4:
// rd==x13, rs1_val == 0 and imm_val != 0 and imm_val < xlen, imm_val == 21, rs1_val==0
// opcode:c.slli; op1:x13; dest:x13 op1val:0x0; immval:0x15
TEST_CI_OP( c.slli, x13, 0x0, 0x0, 0x15, x1, 16, x2)
90000128:	00000693          	li	a3,0
9000012c:	06d6                	slli	a3,a3,0x15
9000012e:	00d0a823          	sw	a3,16(ra)

90000132 <inst_5>:

inst_5:
// rd==x14, rs1_val == (2**(xlen-1)-1) and imm_val != 0 and imm_val < xlen, imm_val == 29, rs1_val == 2147483647
// opcode:c.slli; op1:x14; dest:x14 op1val:0x7fffffff; immval:0x1d
TEST_CI_OP( c.slli, x14, 0xe0000000, 0x7fffffff, 0x1d, x1, 20, x2)
90000132:	80000737          	lui	a4,0x80000
90000136:	fff70713          	addi	a4,a4,-1 # 7fffffff <_end+0xefffdcfb>
9000013a:	0776                	slli	a4,a4,0x1d
9000013c:	00e0aa23          	sw	a4,20(ra)

90000140 <inst_6>:

inst_6:
// rd==x8, rs1_val == 2, rs1_val==2
// opcode:c.slli; op1:x8; dest:x8 op1val:0x2; immval:0xc
TEST_CI_OP( c.slli, x8, 0x2000, 0x2, 0xc, x1, 24, x2)
90000140:	00200413          	li	s0,2
90000144:	0432                	slli	s0,s0,0xc
90000146:	0080ac23          	sw	s0,24(ra)

9000014a <inst_7>:

inst_7:
// rd==x15, rs1_val == 8, 
// opcode:c.slli; op1:x15; dest:x15 op1val:0x8; immval:0x5
TEST_CI_OP( c.slli, x15, 0x100, 0x8, 0x5, x1, 28, x2)
9000014a:	00800793          	li	a5,8
9000014e:	0796                	slli	a5,a5,0x5
90000150:	00f0ae23          	sw	a5,28(ra)

90000154 <inst_8>:

inst_8:
// rs1_val == 16, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x10; immval:0x1f
TEST_CI_OP( c.slli, x10, 0x0, 0x10, 0x1f, x1, 32, x2)
90000154:	01000513          	li	a0,16
90000158:	057e                	slli	a0,a0,0x1f
9000015a:	02a0a023          	sw	a0,32(ra)

9000015e <inst_9>:

inst_9:
// rs1_val == 32, imm_val == 10
// opcode:c.slli; op1:x10; dest:x10 op1val:0x20; immval:0xa
TEST_CI_OP( c.slli, x10, 0x8000, 0x20, 0xa, x1, 36, x2)
9000015e:	02000513          	li	a0,32
90000162:	052a                	slli	a0,a0,0xa
90000164:	02a0a223          	sw	a0,36(ra)

90000168 <inst_10>:

inst_10:
// rs1_val == 64, imm_val == 27
// opcode:c.slli; op1:x10; dest:x10 op1val:0x40; immval:0x1b
TEST_CI_OP( c.slli, x10, 0x0, 0x40, 0x1b, x1, 40, x2)
90000168:	04000513          	li	a0,64
9000016c:	056e                	slli	a0,a0,0x1b
9000016e:	02a0a423          	sw	a0,40(ra)

90000172 <inst_11>:

inst_11:
// rs1_val == 128, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x80; immval:0x12
TEST_CI_OP( c.slli, x10, 0x2000000, 0x80, 0x12, x1, 44, x2)
90000172:	08000513          	li	a0,128
90000176:	054a                	slli	a0,a0,0x12
90000178:	02a0a623          	sw	a0,44(ra)

9000017c <inst_12>:

inst_12:
// rs1_val == 256, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x100; immval:0x4
TEST_CI_OP( c.slli, x10, 0x1000, 0x100, 0x4, x1, 48, x2)
9000017c:	10000513          	li	a0,256
90000180:	0512                	slli	a0,a0,0x4
90000182:	02a0a823          	sw	a0,48(ra)

90000186 <inst_13>:

inst_13:
// rs1_val == 512, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x200; immval:0xc
TEST_CI_OP( c.slli, x10, 0x200000, 0x200, 0xc, x1, 52, x2)
90000186:	20000513          	li	a0,512
9000018a:	0532                	slli	a0,a0,0xc
9000018c:	02a0aa23          	sw	a0,52(ra)

90000190 <inst_14>:

inst_14:
// rs1_val == 1024, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x400; immval:0xb
TEST_CI_OP( c.slli, x10, 0x200000, 0x400, 0xb, x1, 56, x2)
90000190:	40000513          	li	a0,1024
90000194:	052e                	slli	a0,a0,0xb
90000196:	02a0ac23          	sw	a0,56(ra)

9000019a <inst_15>:

inst_15:
// rs1_val == 2048, imm_val == 8
// opcode:c.slli; op1:x10; dest:x10 op1val:0x800; immval:0x8
TEST_CI_OP( c.slli, x10, 0x80000, 0x800, 0x8, x1, 60, x2)
9000019a:	00001537          	lui	a0,0x1
9000019e:	80050513          	addi	a0,a0,-2048 # 800 <offset+0x6a8>
900001a2:	0522                	slli	a0,a0,0x8
900001a4:	02a0ae23          	sw	a0,60(ra)

900001a8 <inst_16>:

inst_16:
// rs1_val == 4096, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x1000; immval:0x6
TEST_CI_OP( c.slli, x10, 0x40000, 0x1000, 0x6, x1, 64, x2)
900001a8:	00001537          	lui	a0,0x1
900001ac:	051a                	slli	a0,a0,0x6
900001ae:	04a0a023          	sw	a0,64(ra)

900001b2 <inst_17>:

inst_17:
// rs1_val == 8192, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x2000; immval:0xd
TEST_CI_OP( c.slli, x10, 0x4000000, 0x2000, 0xd, x1, 68, x2)
900001b2:	00002537          	lui	a0,0x2
900001b6:	0536                	slli	a0,a0,0xd
900001b8:	04a0a223          	sw	a0,68(ra)

900001bc <inst_18>:

inst_18:
// rs1_val == 16384, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x4000; immval:0x7
TEST_CI_OP( c.slli, x10, 0x200000, 0x4000, 0x7, x1, 72, x2)
900001bc:	00004537          	lui	a0,0x4
900001c0:	051e                	slli	a0,a0,0x7
900001c2:	04a0a423          	sw	a0,72(ra)

900001c6 <inst_19>:

inst_19:
// rs1_val == 32768, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x8000; immval:0xc
TEST_CI_OP( c.slli, x10, 0x8000000, 0x8000, 0xc, x1, 76, x2)
900001c6:	00008537          	lui	a0,0x8
900001ca:	0532                	slli	a0,a0,0xc
900001cc:	04a0a623          	sw	a0,76(ra)

900001d0 <inst_20>:

inst_20:
// rs1_val == 65536, imm_val == 2
// opcode:c.slli; op1:x10; dest:x10 op1val:0x10000; immval:0x2
TEST_CI_OP( c.slli, x10, 0x40000, 0x10000, 0x2, x1, 80, x2)
900001d0:	00010537          	lui	a0,0x10
900001d4:	050a                	slli	a0,a0,0x2
900001d6:	04a0a823          	sw	a0,80(ra)

900001da <inst_21>:

inst_21:
// rs1_val == 131072, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x20000; immval:0x12
TEST_CI_OP( c.slli, x10, 0x0, 0x20000, 0x12, x1, 84, x2)
900001da:	00020537          	lui	a0,0x20
900001de:	054a                	slli	a0,a0,0x12
900001e0:	04a0aa23          	sw	a0,84(ra)

900001e4 <inst_22>:

inst_22:
// rs1_val == 262144, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x40000; immval:0x3
TEST_CI_OP( c.slli, x10, 0x200000, 0x40000, 0x3, x1, 88, x2)
900001e4:	00040537          	lui	a0,0x40
900001e8:	050e                	slli	a0,a0,0x3
900001ea:	04a0ac23          	sw	a0,88(ra)

900001ee <inst_23>:

inst_23:
// rs1_val == 524288, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x80000; immval:0xa
TEST_CI_OP( c.slli, x10, 0x20000000, 0x80000, 0xa, x1, 92, x2)
900001ee:	00080537          	lui	a0,0x80
900001f2:	052a                	slli	a0,a0,0xa
900001f4:	04a0ae23          	sw	a0,92(ra)

900001f8 <inst_24>:

inst_24:
// rs1_val == 1048576, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x100000; immval:0x5
TEST_CI_OP( c.slli, x10, 0x2000000, 0x100000, 0x5, x1, 96, x2)
900001f8:	00100537          	lui	a0,0x100
900001fc:	0516                	slli	a0,a0,0x5
900001fe:	06a0a023          	sw	a0,96(ra)

90000202 <inst_25>:

inst_25:
// rs1_val == 2097152, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x200000; immval:0x12
TEST_CI_OP( c.slli, x10, 0x0, 0x200000, 0x12, x1, 100, x2)
90000202:	00200537          	lui	a0,0x200
90000206:	054a                	slli	a0,a0,0x12
90000208:	06a0a223          	sw	a0,100(ra)

9000020c <inst_26>:

inst_26:
// rs1_val == 4194304, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x400000; immval:0x1d
TEST_CI_OP( c.slli, x10, 0x0, 0x400000, 0x1d, x1, 104, x2)
9000020c:	00400537          	lui	a0,0x400
90000210:	0576                	slli	a0,a0,0x1d
90000212:	06a0a423          	sw	a0,104(ra)

90000216 <inst_27>:

inst_27:
// rs1_val == 8388608, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x800000; immval:0x8
TEST_CI_OP( c.slli, x10, 0x80000000, 0x800000, 0x8, x1, 108, x2)
90000216:	00800537          	lui	a0,0x800
9000021a:	0522                	slli	a0,a0,0x8
9000021c:	06a0a623          	sw	a0,108(ra)

90000220 <inst_28>:

inst_28:
// rs1_val == 16777216, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x1000000; immval:0x5
TEST_CI_OP( c.slli, x10, 0x20000000, 0x1000000, 0x5, x1, 112, x2)
90000220:	01000537          	lui	a0,0x1000
90000224:	0516                	slli	a0,a0,0x5
90000226:	06a0a823          	sw	a0,112(ra)

9000022a <inst_29>:

inst_29:
// rs1_val == 33554432, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x2000000; immval:0xb
TEST_CI_OP( c.slli, x10, 0x0, 0x2000000, 0xb, x1, 116, x2)
9000022a:	02000537          	lui	a0,0x2000
9000022e:	052e                	slli	a0,a0,0xb
90000230:	06a0aa23          	sw	a0,116(ra)

90000234 <inst_30>:

inst_30:
// rs1_val == 67108864, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x4000000; immval:0xc
TEST_CI_OP( c.slli, x10, 0x0, 0x4000000, 0xc, x1, 120, x2)
90000234:	04000537          	lui	a0,0x4000
90000238:	0532                	slli	a0,a0,0xc
9000023a:	06a0ac23          	sw	a0,120(ra)

9000023e <inst_31>:

inst_31:
// rs1_val == 134217728, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x8000000; immval:0x7
TEST_CI_OP( c.slli, x10, 0x0, 0x8000000, 0x7, x1, 124, x2)
9000023e:	08000537          	lui	a0,0x8000
90000242:	051e                	slli	a0,a0,0x7
90000244:	06a0ae23          	sw	a0,124(ra)

90000248 <inst_32>:

inst_32:
// rs1_val == 268435456, imm_val == 16
// opcode:c.slli; op1:x10; dest:x10 op1val:0x10000000; immval:0x10
TEST_CI_OP( c.slli, x10, 0x0, 0x10000000, 0x10, x1, 128, x2)
90000248:	10000537          	lui	a0,0x10000
9000024c:	0542                	slli	a0,a0,0x10
9000024e:	08a0a023          	sw	a0,128(ra)

90000252 <inst_33>:

inst_33:
// rs1_val == 536870912, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x20000000; immval:0x11
TEST_CI_OP( c.slli, x10, 0x0, 0x20000000, 0x11, x1, 132, x2)
90000252:	20000537          	lui	a0,0x20000
90000256:	0546                	slli	a0,a0,0x11
90000258:	08a0a223          	sw	a0,132(ra)

9000025c <inst_34>:

inst_34:
// rs1_val == 1073741824, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x40000000; immval:0xd
TEST_CI_OP( c.slli, x10, 0x0, 0x40000000, 0xd, x1, 136, x2)
9000025c:	40000537          	lui	a0,0x40000
90000260:	0536                	slli	a0,a0,0xd
90000262:	08a0a423          	sw	a0,136(ra)

90000266 <inst_35>:

inst_35:
// rs1_val == -2, imm_val == 15
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x2; immval:0xf
TEST_CI_OP( c.slli, x10, 0xffff0000, -0x2, 0xf, x1, 140, x2)
90000266:	ffe00513          	li	a0,-2
9000026a:	053e                	slli	a0,a0,0xf
9000026c:	08a0a623          	sw	a0,140(ra)

90000270 <inst_36>:

inst_36:
// rs1_val == -3, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x3; immval:0x7
TEST_CI_OP( c.slli, x10, 0xfffffe80, -0x3, 0x7, x1, 144, x2)
90000270:	ffd00513          	li	a0,-3
90000274:	051e                	slli	a0,a0,0x7
90000276:	08a0a823          	sw	a0,144(ra)

9000027a <inst_37>:

inst_37:
// rs1_val == -5, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x5; immval:0x11
TEST_CI_OP( c.slli, x10, 0xfff60000, -0x5, 0x11, x1, 148, x2)
9000027a:	ffb00513          	li	a0,-5
9000027e:	0546                	slli	a0,a0,0x11
90000280:	08a0aa23          	sw	a0,148(ra)

90000284 <inst_38>:

inst_38:
// rs1_val == -9, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x9; immval:0xb
TEST_CI_OP( c.slli, x10, 0xffffb800, -0x9, 0xb, x1, 152, x2)
90000284:	ff700513          	li	a0,-9
90000288:	052e                	slli	a0,a0,0xb
9000028a:	08a0ac23          	sw	a0,152(ra)

9000028e <inst_39>:

inst_39:
// rs1_val == -17, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x11; immval:0xf
TEST_CI_OP( c.slli, x10, 0xfff78000, -0x11, 0xf, x1, 156, x2)
9000028e:	fef00513          	li	a0,-17
90000292:	053e                	slli	a0,a0,0xf
90000294:	08a0ae23          	sw	a0,156(ra)

90000298 <inst_40>:

inst_40:
// rs1_val == -33, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x21; immval:0x1f
TEST_CI_OP( c.slli, x10, 0x80000000, -0x21, 0x1f, x1, 160, x2)
90000298:	fdf00513          	li	a0,-33
9000029c:	057e                	slli	a0,a0,0x1f
9000029e:	0aa0a023          	sw	a0,160(ra)

900002a2 <inst_41>:

inst_41:
// rs1_val == -65, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x41; immval:0x10
TEST_CI_OP( c.slli, x10, 0xffbf0000, -0x41, 0x10, x1, 164, x2)
900002a2:	fbf00513          	li	a0,-65
900002a6:	0542                	slli	a0,a0,0x10
900002a8:	0aa0a223          	sw	a0,164(ra)

900002ac <inst_42>:

inst_42:
// rs1_val == -129, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x81; immval:0xc
TEST_CI_OP( c.slli, x10, 0xfff7f000, -0x81, 0xc, x1, 168, x2)
900002ac:	f7f00513          	li	a0,-129
900002b0:	0532                	slli	a0,a0,0xc
900002b2:	0aa0a423          	sw	a0,168(ra)

900002b6 <inst_43>:

inst_43:
// rs1_val == -257, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x101; immval:0x12
TEST_CI_OP( c.slli, x10, 0xfbfc0000, -0x101, 0x12, x1, 172, x2)
900002b6:	eff00513          	li	a0,-257
900002ba:	054a                	slli	a0,a0,0x12
900002bc:	0aa0a623          	sw	a0,172(ra)

900002c0 <inst_44>:

inst_44:
// rs1_val == -513, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x201; immval:0x4
TEST_CI_OP( c.slli, x10, 0xffffdff0, -0x201, 0x4, x1, 176, x2)
900002c0:	dff00513          	li	a0,-513
900002c4:	0512                	slli	a0,a0,0x4
900002c6:	0aa0a823          	sw	a0,176(ra)

900002ca <inst_45>:

inst_45:
// rs1_val == -1025, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x401; immval:0x17
TEST_CI_OP( c.slli, x10, 0xff800000, -0x401, 0x17, x1, 180, x2)
900002ca:	bff00513          	li	a0,-1025
900002ce:	055e                	slli	a0,a0,0x17
900002d0:	0aa0aa23          	sw	a0,180(ra)

900002d4 <inst_46>:

inst_46:
// rs1_val == -2049, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x801; immval:0xd
TEST_CI_OP( c.slli, x10, 0xfeffe000, -0x801, 0xd, x1, 184, x2)
900002d4:	fffff537          	lui	a0,0xfffff
900002d8:	7ff50513          	addi	a0,a0,2047 # fffff7ff <_end+0x6fffd4fb>
900002dc:	0536                	slli	a0,a0,0xd
900002de:	0aa0ac23          	sw	a0,184(ra)

900002e2 <inst_47>:

inst_47:
// rs1_val == -4097, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x1001; immval:0xc
TEST_CI_OP( c.slli, x10, 0xfefff000, -0x1001, 0xc, x1, 188, x2)
900002e2:	fffff537          	lui	a0,0xfffff
900002e6:	fff50513          	addi	a0,a0,-1 # ffffefff <_end+0x6fffccfb>
900002ea:	0532                	slli	a0,a0,0xc
900002ec:	0aa0ae23          	sw	a0,188(ra)

900002f0 <inst_48>:

inst_48:
// rs1_val == -8193, imm_val == 1
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x2001; immval:0x1
TEST_CI_OP( c.slli, x10, 0xffffbffe, -0x2001, 0x1, x1, 192, x2)
900002f0:	ffffe537          	lui	a0,0xffffe
900002f4:	fff50513          	addi	a0,a0,-1 # ffffdfff <_end+0x6fffbcfb>
900002f8:	0506                	slli	a0,a0,0x1
900002fa:	0ca0a023          	sw	a0,192(ra)

900002fe <inst_49>:

inst_49:
// rs1_val == -16385, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x4001; immval:0xd
TEST_CI_OP( c.slli, x10, 0xf7ffe000, -0x4001, 0xd, x1, 196, x2)
900002fe:	ffffc537          	lui	a0,0xffffc
90000302:	fff50513          	addi	a0,a0,-1 # ffffbfff <_end+0x6fff9cfb>
90000306:	0536                	slli	a0,a0,0xd
90000308:	0ca0a223          	sw	a0,196(ra)

9000030c <inst_50>:

inst_50:
// rs1_val == -32769, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x8001; immval:0xf
TEST_CI_OP( c.slli, x10, 0xbfff8000, -0x8001, 0xf, x1, 200, x2)
9000030c:	ffff8537          	lui	a0,0xffff8
90000310:	fff50513          	addi	a0,a0,-1 # ffff7fff <_end+0x6fff5cfb>
90000314:	053e                	slli	a0,a0,0xf
90000316:	0ca0a423          	sw	a0,200(ra)

9000031a <inst_51>:

inst_51:
// rs1_val == -65537, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x10001; immval:0x7
TEST_CI_OP( c.slli, x10, 0xff7fff80, -0x10001, 0x7, x1, 204, x2)
9000031a:	ffff0537          	lui	a0,0xffff0
9000031e:	fff50513          	addi	a0,a0,-1 # fffeffff <_end+0x6ffedcfb>
90000322:	051e                	slli	a0,a0,0x7
90000324:	0ca0a623          	sw	a0,204(ra)

90000328 <inst_52>:

inst_52:
// rs1_val == -131073, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x20001; immval:0x2
TEST_CI_OP( c.slli, x10, 0xfff7fffc, -0x20001, 0x2, x1, 208, x2)
90000328:	fffe0537          	lui	a0,0xfffe0
9000032c:	fff50513          	addi	a0,a0,-1 # fffdffff <_end+0x6ffddcfb>
90000330:	050a                	slli	a0,a0,0x2
90000332:	0ca0a823          	sw	a0,208(ra)

90000336 <inst_53>:

inst_53:
// rs1_val == -262145, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x40001; immval:0x1f
TEST_CI_OP( c.slli, x10, 0x80000000, -0x40001, 0x1f, x1, 212, x2)
90000336:	fffc0537          	lui	a0,0xfffc0
9000033a:	fff50513          	addi	a0,a0,-1 # fffbffff <_end+0x6ffbdcfb>
9000033e:	057e                	slli	a0,a0,0x1f
90000340:	0ca0aa23          	sw	a0,212(ra)

90000344 <inst_54>:

inst_54:
// rs1_val == -524289, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x80001; immval:0x15
TEST_CI_OP( c.slli, x10, 0xffe00000, -0x80001, 0x15, x1, 216, x2)
90000344:	fff80537          	lui	a0,0xfff80
90000348:	fff50513          	addi	a0,a0,-1 # fff7ffff <_end+0x6ff7dcfb>
9000034c:	0556                	slli	a0,a0,0x15
9000034e:	0ca0ac23          	sw	a0,216(ra)

90000352 <inst_55>:

inst_55:
// rs1_val == -1048577, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x100001; immval:0x9
TEST_CI_OP( c.slli, x10, 0xdffffe00, -0x100001, 0x9, x1, 220, x2)
90000352:	fff00537          	lui	a0,0xfff00
90000356:	fff50513          	addi	a0,a0,-1 # ffefffff <_end+0x6fefdcfb>
9000035a:	0526                	slli	a0,a0,0x9
9000035c:	0ca0ae23          	sw	a0,220(ra)

90000360 <inst_56>:

inst_56:
// rs1_val == -2097153, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x200001; immval:0xd
TEST_CI_OP( c.slli, x10, 0xffffe000, -0x200001, 0xd, x1, 224, x2)
90000360:	ffe00537          	lui	a0,0xffe00
90000364:	fff50513          	addi	a0,a0,-1 # ffdfffff <_end+0x6fdfdcfb>
90000368:	0536                	slli	a0,a0,0xd
9000036a:	0ea0a023          	sw	a0,224(ra)

9000036e <inst_57>:

inst_57:
// rs1_val == -33554433, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x2000001; immval:0x8
TEST_CI_OP( c.slli, x10, 0xffffff00, -0x2000001, 0x8, x1, 228, x2)
9000036e:	fe000537          	lui	a0,0xfe000
90000372:	fff50513          	addi	a0,a0,-1 # fdffffff <_end+0x6dffdcfb>
90000376:	0522                	slli	a0,a0,0x8
90000378:	0ea0a223          	sw	a0,228(ra)

9000037c <inst_58>:

inst_58:
// rs1_val == -67108865, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x4000001; immval:0x15
TEST_CI_OP( c.slli, x10, 0xffe00000, -0x4000001, 0x15, x1, 232, x2)
9000037c:	fc000537          	lui	a0,0xfc000
90000380:	fff50513          	addi	a0,a0,-1 # fbffffff <_end+0x6bffdcfb>
90000384:	0556                	slli	a0,a0,0x15
90000386:	0ea0a423          	sw	a0,232(ra)

9000038a <inst_59>:

inst_59:
// rs1_val == -134217729, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x8000001; immval:0xf
TEST_CI_OP( c.slli, x10, 0xffff8000, -0x8000001, 0xf, x1, 236, x2)
9000038a:	f8000537          	lui	a0,0xf8000
9000038e:	fff50513          	addi	a0,a0,-1 # f7ffffff <_end+0x67ffdcfb>
90000392:	053e                	slli	a0,a0,0xf
90000394:	0ea0a623          	sw	a0,236(ra)

90000398 <inst_60>:

inst_60:
// rs1_val == -268435457, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x10000001; immval:0x8
TEST_CI_OP( c.slli, x10, 0xffffff00, -0x10000001, 0x8, x1, 240, x2)
90000398:	f0000537          	lui	a0,0xf0000
9000039c:	fff50513          	addi	a0,a0,-1 # efffffff <_end+0x5fffdcfb>
900003a0:	0522                	slli	a0,a0,0x8
900003a2:	0ea0a823          	sw	a0,240(ra)

900003a6 <inst_61>:

inst_61:
// rs1_val == -536870913, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x20000001; immval:0x13
TEST_CI_OP( c.slli, x10, 0xfff80000, -0x20000001, 0x13, x1, 244, x2)
900003a6:	e0000537          	lui	a0,0xe0000
900003aa:	fff50513          	addi	a0,a0,-1 # dfffffff <_end+0x4fffdcfb>
900003ae:	054e                	slli	a0,a0,0x13
900003b0:	0ea0aa23          	sw	a0,244(ra)

900003b4 <inst_62>:

inst_62:
// rs1_val == -1073741825, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x40000001; immval:0xa
TEST_CI_OP( c.slli, x10, 0xfffffc00, -0x40000001, 0xa, x1, 248, x2)
900003b4:	c0000537          	lui	a0,0xc0000
900003b8:	fff50513          	addi	a0,a0,-1 # bfffffff <_end+0x2fffdcfb>
900003bc:	052a                	slli	a0,a0,0xa
900003be:	0ea0ac23          	sw	a0,248(ra)

900003c2 <inst_63>:

inst_63:
// rs1_val == 1431655765, rs1_val==1431655765
// opcode:c.slli; op1:x10; dest:x10 op1val:0x55555555; immval:0x2
TEST_CI_OP( c.slli, x10, 0x55555554, 0x55555555, 0x2, x1, 252, x2)
900003c2:	55555537          	lui	a0,0x55555
900003c6:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555553fd>
900003ca:	050a                	slli	a0,a0,0x2
900003cc:	0ea0ae23          	sw	a0,252(ra)

900003d0 <inst_64>:

inst_64:
// rs1_val == -1431655766, rs1_val==-1431655766
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x55555556; immval:0x1
TEST_CI_OP( c.slli, x10, 0x55555554, -0x55555556, 0x1, x1, 256, x2)
900003d0:	aaaab537          	lui	a0,0xaaaab
900003d4:	aaa50513          	addi	a0,a0,-1366 # aaaaaaaa <_end+0x1aaa87a6>
900003d8:	0506                	slli	a0,a0,0x1
900003da:	10a0a023          	sw	a0,256(ra)

900003de <inst_65>:

inst_65:
// rs1_val==3, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x3; immval:0x7
TEST_CI_OP( c.slli, x10, 0x180, 0x3, 0x7, x1, 260, x2)
900003de:	00300513          	li	a0,3
900003e2:	051e                	slli	a0,a0,0x7
900003e4:	10a0a223          	sw	a0,260(ra)

900003e8 <inst_66>:

inst_66:
// rs1_val==5, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x5; immval:0xd
TEST_CI_OP( c.slli, x10, 0xa000, 0x5, 0xd, x1, 264, x2)
900003e8:	00500513          	li	a0,5
900003ec:	0536                	slli	a0,a0,0xd
900003ee:	10a0a423          	sw	a0,264(ra)

900003f2 <inst_67>:

inst_67:
// rs1_val==858993459, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x33333333; immval:0x8
TEST_CI_OP( c.slli, x10, 0x33333300, 0x33333333, 0x8, x1, 268, x2)
900003f2:	33333537          	lui	a0,0x33333
900003f6:	33350513          	addi	a0,a0,819 # 33333333 <offset+0x333331db>
900003fa:	0522                	slli	a0,a0,0x8
900003fc:	10a0a623          	sw	a0,268(ra)

90000400 <inst_68>:

inst_68:
// rs1_val==1717986918, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x66666666; immval:0x3
TEST_CI_OP( c.slli, x10, 0x33333330, 0x66666666, 0x3, x1, 272, x2)
90000400:	66666537          	lui	a0,0x66666
90000404:	66650513          	addi	a0,a0,1638 # 66666666 <offset+0x6666650e>
90000408:	050e                	slli	a0,a0,0x3
9000040a:	10a0a823          	sw	a0,272(ra)

9000040e <inst_69>:

inst_69:
// rs1_val==-46340, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0xb504; immval:0x1
TEST_CI_OP( c.slli, x10, 0xfffe95f8, -0xb504, 0x1, x1, 276, x2)
9000040e:	ffff5537          	lui	a0,0xffff5
90000412:	afc50513          	addi	a0,a0,-1284 # ffff4afc <_end+0x6fff27f8>
90000416:	0506                	slli	a0,a0,0x1
90000418:	10a0aa23          	sw	a0,276(ra)

9000041c <inst_70>:

inst_70:
// rs1_val==46340, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0xb504; immval:0x1
TEST_CI_OP( c.slli, x10, 0x16a08, 0xb504, 0x1, x1, 280, x2)
9000041c:	0000b537          	lui	a0,0xb
90000420:	50450513          	addi	a0,a0,1284 # b504 <offset+0xb3ac>
90000424:	0506                	slli	a0,a0,0x1
90000426:	10a0ac23          	sw	a0,280(ra)

9000042a <inst_71>:

inst_71:
// imm_val == 30, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x55555555; immval:0x1e
TEST_CI_OP( c.slli, x10, 0x40000000, 0x55555555, 0x1e, x1, 284, x2)
9000042a:	55555537          	lui	a0,0x55555
9000042e:	55550513          	addi	a0,a0,1365 # 55555555 <offset+0x555553fd>
90000432:	057a                	slli	a0,a0,0x1e
90000434:	10a0ae23          	sw	a0,284(ra)

90000438 <inst_72>:

inst_72:
// rs1_val==46341, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0xb505; immval:0xd
TEST_CI_OP( c.slli, x10, 0x16a0a000, 0xb505, 0xd, x1, 288, x2)
90000438:	0000b537          	lui	a0,0xb
9000043c:	50550513          	addi	a0,a0,1285 # b505 <offset+0xb3ad>
90000440:	0536                	slli	a0,a0,0xd
90000442:	12a0a023          	sw	a0,288(ra)

90000446 <inst_73>:

inst_73:
// rs1_val==1431655764, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x55555554; immval:0x5
TEST_CI_OP( c.slli, x10, 0xaaaaaa80, 0x55555554, 0x5, x1, 292, x2)
90000446:	55555537          	lui	a0,0x55555
9000044a:	55450513          	addi	a0,a0,1364 # 55555554 <offset+0x555553fc>
9000044e:	0516                	slli	a0,a0,0x5
90000450:	12a0a223          	sw	a0,292(ra)

90000454 <inst_74>:

inst_74:
// rs1_val==-46339, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0xb503; immval:0x8
TEST_CI_OP( c.slli, x10, 0xff4afd00, -0xb503, 0x8, x1, 296, x2)
90000454:	ffff5537          	lui	a0,0xffff5
90000458:	afd50513          	addi	a0,a0,-1283 # ffff4afd <_end+0x6fff27f9>
9000045c:	0522                	slli	a0,a0,0x8
9000045e:	12a0a423          	sw	a0,296(ra)

90000462 <inst_75>:

inst_75:
// rs1_val==858993458, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x33333332; immval:0x12
TEST_CI_OP( c.slli, x10, 0xccc80000, 0x33333332, 0x12, x1, 300, x2)
90000462:	33333537          	lui	a0,0x33333
90000466:	33250513          	addi	a0,a0,818 # 33333332 <offset+0x333331da>
9000046a:	054a                	slli	a0,a0,0x12
9000046c:	12a0a623          	sw	a0,300(ra)

90000470 <inst_76>:

inst_76:
// rs1_val==1717986917, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x66666665; immval:0xf
TEST_CI_OP( c.slli, x10, 0x33328000, 0x66666665, 0xf, x1, 304, x2)
90000470:	66666537          	lui	a0,0x66666
90000474:	66550513          	addi	a0,a0,1637 # 66666665 <offset+0x6666650d>
90000478:	053e                	slli	a0,a0,0xf
9000047a:	12a0a823          	sw	a0,304(ra)

9000047e <inst_77>:

inst_77:
// rs1_val==46339, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0xb503; immval:0x1e
TEST_CI_OP( c.slli, x10, 0xc0000000, 0xb503, 0x1e, x1, 308, x2)
9000047e:	0000b537          	lui	a0,0xb
90000482:	50350513          	addi	a0,a0,1283 # b503 <offset+0xb3ab>
90000486:	057a                	slli	a0,a0,0x1e
90000488:	12a0aa23          	sw	a0,308(ra)

9000048c <inst_78>:

inst_78:
// rs1_val==1431655766, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x55555556; immval:0x1e
TEST_CI_OP( c.slli, x10, 0x80000000, 0x55555556, 0x1e, x1, 312, x2)
9000048c:	55555537          	lui	a0,0x55555
90000490:	55650513          	addi	a0,a0,1366 # 55555556 <offset+0x555553fe>
90000494:	057a                	slli	a0,a0,0x1e
90000496:	12a0ac23          	sw	a0,312(ra)

9000049a <inst_79>:

inst_79:
// rs1_val==-1431655765, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x55555555; immval:0x15
TEST_CI_OP( c.slli, x10, 0x55600000, -0x55555555, 0x15, x1, 316, x2)
9000049a:	aaaab537          	lui	a0,0xaaaab
9000049e:	aab50513          	addi	a0,a0,-1365 # aaaaaaab <_end+0x1aaa87a7>
900004a2:	0556                	slli	a0,a0,0x15
900004a4:	12a0ae23          	sw	a0,316(ra)

900004a8 <inst_80>:

inst_80:
// rs1_val==6, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x6; immval:0x11
TEST_CI_OP( c.slli, x10, 0xc0000, 0x6, 0x11, x1, 320, x2)
900004a8:	00600513          	li	a0,6
900004ac:	0546                	slli	a0,a0,0x11
900004ae:	14a0a023          	sw	a0,320(ra)

900004b2 <inst_81>:

inst_81:
// rs1_val==858993460, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x33333334; immval:0x3
TEST_CI_OP( c.slli, x10, 0x999999a0, 0x33333334, 0x3, x1, 324, x2)
900004b2:	33333537          	lui	a0,0x33333
900004b6:	33450513          	addi	a0,a0,820 # 33333334 <offset+0x333331dc>
900004ba:	050e                	slli	a0,a0,0x3
900004bc:	14a0a223          	sw	a0,324(ra)

900004c0 <inst_82>:

inst_82:
// rs1_val==1717986919, 
// opcode:c.slli; op1:x10; dest:x10 op1val:0x66666667; immval:0x10
TEST_CI_OP( c.slli, x10, 0x66670000, 0x66666667, 0x10, x1, 328, x2)
900004c0:	66666537          	lui	a0,0x66666
900004c4:	66750513          	addi	a0,a0,1639 # 66666667 <offset+0x6666650f>
900004c8:	0542                	slli	a0,a0,0x10
900004ca:	14a0a423          	sw	a0,328(ra)

900004ce <inst_83>:

inst_83:
// rs1_val == -4194305, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x400001; immval:0x10
TEST_CI_OP( c.slli, x10, 0xffff0000, -0x400001, 0x10, x1, 332, x2)
900004ce:	ffc00537          	lui	a0,0xffc00
900004d2:	fff50513          	addi	a0,a0,-1 # ffbfffff <_end+0x6fbfdcfb>
900004d6:	0542                	slli	a0,a0,0x10
900004d8:	14a0a623          	sw	a0,332(ra)

900004dc <inst_84>:

inst_84:
// rs1_val == -8388609, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x800001; immval:0x10
TEST_CI_OP( c.slli, x10, 0xffff0000, -0x800001, 0x10, x1, 336, x2)
900004dc:	ff800537          	lui	a0,0xff800
900004e0:	fff50513          	addi	a0,a0,-1 # ff7fffff <_end+0x6f7fdcfb>
900004e4:	0542                	slli	a0,a0,0x10
900004e6:	14a0a823          	sw	a0,336(ra)

900004ea <inst_85>:

inst_85:
// rs1_val == -16777217, 
// opcode:c.slli; op1:x10; dest:x10 op1val:-0x1000001; immval:0x15
TEST_CI_OP( c.slli, x10, 0xffe00000, -0x1000001, 0x15, x1, 340, x2)
900004ea:	ff000537          	lui	a0,0xff000
900004ee:	fff50513          	addi	a0,a0,-1 # feffffff <_end+0x6effdcfb>
900004f2:	0556                	slli	a0,a0,0x15
900004f4:	14a0aa23          	sw	a0,340(ra)
900004f8:	00000013          	nop
900004fc:	00000013          	nop

90000500 <rvtest_code_end>:
#endif


RVTEST_CODE_END
RVMODEL_HALT
90000500:	0091                	addi	ra,ra,4
90000502:	4085                	li	ra,1

90000504 <write_tohost>:
90000504:	00001f17          	auipc	t5,0x1
90000508:	ae1f2e23          	sw	ra,-1284(t5) # 90001000 <tohost>

9000050c <self_loop>:
9000050c:	a001                	j	9000050c <self_loop>
	...
